is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,270," @version $Id: Enum.java,v 1.23 2003/11/29 15:03:54 scolebourne Exp $"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,270,"* @version $Id: Enum.java,v 1.24 2004/02/12 00:45:09 ggregory Exp $"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,570,"/ shouldn't happen, but..."
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,570,// Ok to do a class cast to Enum here since the test above
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,571,// guarantee both
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,572,// classes are in the same class loader.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,572, else if (((Enum) other).getEnumClass().getName().equals(getEnumClass().getName())) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,573,/ different classloaders
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,574,} else {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,575,"// This and other are in different class loaders, we must use reflection."
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,575,/ try to avoid reflection
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,576,eturn iName.equals(((Enum) other).iName);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,578, catch (ClassCastException ex) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,579,/ use reflection
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,580,ry {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,581,"ethod mth = other.getClass().getMethod(""getName"", null);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,582,"tring name = (String) mth.invoke(other, null);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,583,eturn iName.equals(name);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,584, catch (NoSuchMethodException ex2) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,585,/ ignore - should never happen
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,586, catch (IllegalAccessException ex2) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,587,/ ignore - should never happen
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,588, catch (InvocationTargetException ex2) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,589,/ ignore - should never happen
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,591,eturn false;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,577,"Method mth = other.getClass().getMethod(""getName"", null);"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,578,"String name = (String) mth.invoke(other, null);"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,579,return iName.equals(name);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,580,} catch (NoSuchMethodException ex2) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,581,// ignore - should never happen
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,582,} catch (IllegalAccessException ex2) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,583,// ignore - should never happen
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,584,} catch (InvocationTargetException ex2) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,585,// ignore - should never happen
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,593, else {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,56,import java.lang.reflect.InvocationTargetException;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,57,import java.lang.reflect.Method;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,58,import java.net.URL;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,59,import java.net.URLClassLoader;
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,72," @version $Id: EnumTest.java,v 1.12 2003/11/29 15:03:54 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,75,"* @version $Id: EnumTest.java,v 1.13 2004/02/12 00:45:09 ggregory Exp $"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,471,"public void testEqualsWithDifferentClassLoaders() throws ClassNotFoundException, SecurityException, NoSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,472,// Sanity check:
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,473,ColorEnum.RED.equals(ColorEnum.RED);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,474,assertNotNull(ColorEnum.class.getClassLoader());
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,475,// set up:
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,476,ClassLoader scl = ClassLoader.getSystemClassLoader();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,477,if (!(scl instanceof URLClassLoader)) {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,478,"fail(""Need a better test set up."");"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,480,URLClassLoader urlScl = (URLClassLoader)scl;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,481,"ClassLoader classLoader = URLClassLoader.newInstance(urlScl.getURLs(), null);"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,482,assertNotNull(classLoader);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,483,assertFalse(classLoader.equals(ColorEnum.class.getClassLoader()));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,484,"Class otherColorEnumClass = classLoader.loadClass(""org.apache.commons.lang.enum.ColorEnum"");"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,485,assertNotNull(otherColorEnumClass);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,486,assertNotNull(otherColorEnumClass.getClassLoader());
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,487,assertTrue(classLoader.equals(otherColorEnumClass.getClassLoader()));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,488,assertFalse(otherColorEnumClass.getClassLoader().equals(ColorEnum.class.getClassLoader()));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,489,"Method method = otherColorEnumClass.getMethod(""getEnum"", new Class[]{String.class});"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,490,"Object enumObject = method.invoke(otherColorEnumClass, new Object[]{""Red""});"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,491,assertNotNull(enumObject);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,492,"// the real test, part 1."
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,493,try {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,494,ColorEnum testCase = (ColorEnum)enumObject;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,495,"fail(""Should have thrown a ClassCastException"");"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,496,} catch (ClassCastException e) {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,497,// normal.
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,499,"// the real test, part 2."
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,500,"assertEquals(""The two objects should match even though they are from different class loaders"", ColorEnum.RED, enumObject);"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,503,public void testEqualsToWrongInstance() {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,504,"ColorEnum.RED.equals(""test"");"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,505,ColorEnum.RED.equals(new Integer(1));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,506,ColorEnum.RED.equals(new Boolean(true));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,507,"ColorEnum.RED.equals(new StringBuffer(""test""));"
