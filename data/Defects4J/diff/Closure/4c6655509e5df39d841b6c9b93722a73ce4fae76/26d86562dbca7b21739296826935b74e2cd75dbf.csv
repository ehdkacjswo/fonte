is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/graph/Graph.java,src/com/google/javascript/jscomp/graph/Graph.java,173,* Retrieves any edge from the graph.
True,src/com/google/javascript/jscomp/graph/Graph.java,src/com/google/javascript/jscomp/graph/Graph.java,175,* @param n1 Node one.
True,src/com/google/javascript/jscomp/graph/Graph.java,src/com/google/javascript/jscomp/graph/Graph.java,176,* @param n2 Node two.
True,src/com/google/javascript/jscomp/graph/Graph.java,src/com/google/javascript/jscomp/graph/Graph.java,177,* @return The first edges between those two values in the graph. null if
True,src/com/google/javascript/jscomp/graph/Graph.java,src/com/google/javascript/jscomp/graph/Graph.java,178,*    there are none.
True,src/com/google/javascript/jscomp/graph/Graph.java,src/com/google/javascript/jscomp/graph/Graph.java,180,"public abstract GraphEdge<N, E> getFirstEdge(N n1, N n2);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,24,import com.google.javascript.jscomp.graph.Graph.GraphEdge;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,158,@Override
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,159,"public GraphEdge<N, E> getFirstEdge(N n1, N n2) {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,160,"DiGraphNode<N, E> dNode1 = getNodeOrFail(n1);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,161,"DiGraphNode<N, E> dNode2 = getNodeOrFail(n2);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,162,"for (DiGraphEdge<N, E> outEdge : dNode1.getOutEdges()) {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,163,if (outEdge.getDestination() == dNode2) {
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,164,return outEdge;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,167,"for (DiGraphEdge<N, E> outEdge : dNode2.getOutEdges()) {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,168,if (outEdge.getDestination() == dNode1) {
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,169,return outEdge;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,172,return null;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,24,import com.google.javascript.jscomp.graph.Graph.GraphEdge;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,170,@Override
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,171,"public GraphEdge<N, E> getFirstEdge(N n1, N n2) {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,172,"UndiGraphNode<N, E> dNode1 = getNodeOrFail(n1);"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,173,"UndiGraphNode<N, E> dNode2 = getNodeOrFail(n2);"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,174,"for (UndiGraphEdge<N, E> outEdge : dNode1.getNeighborEdges()) {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,175,if (outEdge.getNodeA() == dNode2 || outEdge.getNodeB() == dNode2) {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,176,return outEdge;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,179,return null;
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,206,public void testDirectedGetFirstEdge() {
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,207,"DiGraph<String, String> graph ="
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,208,LinkedDirectedGraph.create();
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,209,"graph.createNode(""a"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,210,"graph.createNode(""b"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,211,"graph.createNode(""c"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,212,"graph.connect(""a"", ""-"", ""b"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,213,"assertEquals(graph.getFirstEdge(""a"", ""b"").getValue(), ""-"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,214,"assertEquals(graph.getFirstEdge(""b"", ""a"").getValue(), ""-"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,215,"assertNull(graph.getFirstEdge(""a"", ""c""));"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,218,public void testUndirectedGetFirstEdge() {
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,219,"UndiGraph<String, String> graph ="
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,220,LinkedUndirectedGraph.create();
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,221,"graph.createNode(""a"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,222,"graph.createNode(""b"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,223,"graph.createNode(""c"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,224,"graph.connect(""a"", ""-"", ""b"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,225,"assertEquals(graph.getFirstEdge(""a"", ""b"").getValue(), ""-"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,226,"assertEquals(graph.getFirstEdge(""b"", ""a"").getValue(), ""-"");"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,227,"assertNull(graph.getFirstEdge(""a"", ""c""));"
