is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1277,"hildType + "" has no properties"", getNativeType(OBJECT_TYPE))) {"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1277,"""No properties on this expression"", getNativeType(OBJECT_TYPE))) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,136,setPrettyPrint(true);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,159,setPrettyPrint(true);
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,817,f (this == registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE)) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,821,if (!isPrettyPrint() ||
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,822,this == registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE)) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,826,setPrettyPrint(false);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,864,setPrettyPrint(true);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,311,eturn false;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,311,return toMaybeRecordType() != null;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,315,"* Downcasts this to a RecordType, or returns null if this is not"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,316,* a RecordType.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,318,RecordType toMaybeRecordType() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,319,return null;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,693,f (that.isRecordType()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,694,/ Record types have their own implementation of getGreatestSubtype.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,695,eturn that.getGreatestSubtype(this);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,724,} else if (thisType.isRecordType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,725,return thisType.toMaybeRecordType().getGreatestSubtypeHelper(thatType);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,726,} else if (thatType.isRecordType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,727,return thatType.toMaybeRecordType().getGreatestSubtypeHelper(thisType);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,404,boolean isPrettyPrint() {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,405,return prettyPrint;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,455,f (that instanceof RecordType) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,456,"eturn RecordType.isSubtype(this, (RecordType) that);"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,459,if (that.isRecordType()) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,460,"return RecordType.isSubtype(this, that.toMaybeRecordType());"
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,196,@Override
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,197,RecordType toMaybeRecordType() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,198,return referencedType.toMaybeRecordType();
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,64,ublic class RecordType extends PrototypeObjectType {
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,64,class RecordType extends PrototypeObjectType {
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,80,setPrettyPrint(true);
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,96,f (!(other instanceof RecordType)) {
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,97,if (!other.isRecordType()) {
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,101,ecordType otherRecord = (RecordType) other;
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,102,RecordType otherRecord = other.toMaybeRecordType();
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,103,if (otherRecord == this) {
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,104,return true;
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,141,ecordType thatRecord = (RecordType) that;
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,146,RecordType thatRecord = that.toMaybeRecordType();
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,159,Override
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,160,ublic JSType getGreatestSubtype(JSType that) {
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,164,JSType getGreatestSubtypeHelper(JSType that) {
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,189,SType greatestSubtype = super.getGreatestSubtype(that);
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,190,f (greatestSubtype.isNoObjectType() && !that.isNoObjectType()) {
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,193,JSType greatestSubtype = registry.getNativeType(
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,194,JSTypeNative.NO_OBJECT_TYPE);
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,195,JSType thatRestrictedToObj =
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,196,registry.getNativeType(JSTypeNative.OBJECT_TYPE)
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,197,.getGreatestSubtype(that);
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,198,if (!thatRestrictedToObj.isEmptyType()) {
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,207,ltPropType.isEquivalentTo(propType))) {
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,215,altPropType.isEquivalentTo(propType))) {
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,218,ublic boolean isRecordType() {
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,219,eturn true;
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,226,RecordType toMaybeRecordType() {
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,227,return this;
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,241,"eturn RecordType.isSubtype(this, (RecordType) that);"
True,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,249,"return RecordType.isSubtype(this, that.toMaybeRecordType());"
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,286,Override
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,287,ublic String toString() {
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,288,tringBuilder sb = new StringBuilder();
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,289,"b.append(""{"");"
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,291,nt i = 0;
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,293,or (String property : properties.keySet()) {
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,294,f (i > 0) {
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,295,"b.append("", "");"
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,298,b.append(property);
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,299,"b.append("": "");"
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,300,b.append(properties.get(property).toString());
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,302,+i;
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,305,"b.append(""}"");"
False,src/com/google/javascript/rhino/jstype/RecordType.java,src/com/google/javascript/rhino/jstype/RecordType.java,306,eturn sb.toString();
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,114,"* For the given equivalent types, run all type operations that"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,115,"* should have trivial solutions (getGreatestSubtype, isEquivalentTo, etc)"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,117,"public static void assertEquivalenceOperations(JSType a, JSType b) {"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,118,Assert.assertTrue(a.isEquivalentTo(b));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,119,Assert.assertTrue(a.isEquivalentTo(a));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,120,Assert.assertTrue(b.isEquivalentTo(b));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,121,Assert.assertTrue(b.isEquivalentTo(a));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,123,Assert.assertTrue(a.isSubtype(b));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,124,Assert.assertTrue(a.isSubtype(a));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,125,Assert.assertTrue(b.isSubtype(b));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,126,Assert.assertTrue(b.isSubtype(a));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,128,"assertTypeEquals(a, a.getGreatestSubtype(b));"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,129,"assertTypeEquals(a, a.getGreatestSubtype(a));"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,130,"assertTypeEquals(a, b.getGreatestSubtype(b));"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,131,"assertTypeEquals(a, b.getGreatestSubtype(a));"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,133,"assertTypeEquals(a, a.getLeastSupertype(b));"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,134,"assertTypeEquals(a, a.getLeastSupertype(a));"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,135,"assertTypeEquals(a, b.getLeastSupertype(b));"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,136,"assertTypeEquals(a, b.getLeastSupertype(a));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3068,"undefined has no properties\n"" +"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3068,"""No properties on this expression\n"" +"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3133,"undefined has no properties\n"" +"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3133,"""No properties on this expression\n"" +"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3142,"undefined has no properties\n"" +"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3142,"""No properties on this expression\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3608,"undefined has no properties\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3608,"""No properties on this expression\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3615,"null has no properties\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3615,"""No properties on this expression\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3698,"undefined has no properties\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3698,"""No properties on this expression\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3707,"undefined has no properties\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3707,"""No properties on this expression\n"" +"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,45,import com.google.javascript.rhino.testing.Asserts;
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,245,public void testRecursiveFunction() {
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,246,"ProxyObjectType loop = new ProxyObjectType(registry, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,247,FunctionType fn = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,248,.withParamsNode(registry.createParameters(loop))
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,249,.withReturnType(loop).build();
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,251,loop.setReferencedType(fn);
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,252,"assertEquals(""function (Function): Function"", fn.toString());"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,254,"Asserts.assertEquivalenceOperations(fn, loop);"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,41,import com.google.javascript.rhino.testing.Asserts;
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,42,import com.google.javascript.rhino.testing.BaseJSTypeTestCase;
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,44,public class RecordTypeTest extends BaseJSTypeTestCase {
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,46,public void testRecursiveRecord() {
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,47,"ProxyObjectType loop = new ProxyObjectType(registry, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,48,JSType record = new RecordTypeBuilder(registry)
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,49,".addProperty(""loop"", loop, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,50,".addProperty(""number"", NUMBER_TYPE, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,51,".addProperty(""string"", STRING_TYPE, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,52,.build();
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,53,"assertEquals(""{loop: number, number: number, string: string}"","
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,54,record.toString());
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,56,loop.setReferencedType(record);
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,57,"assertEquals(""{loop: {...}, number: number, string: string}"","
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,58,record.toString());
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,60,"Asserts.assertEquivalenceOperations(record, loop);"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,63,public void testLongToString() {
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,64,JSType record = new RecordTypeBuilder(registry)
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,65,".addProperty(""a1"", NUMBER_TYPE, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,66,".addProperty(""a2"", NUMBER_TYPE, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,67,".addProperty(""a3"", NUMBER_TYPE, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,68,".addProperty(""a4"", NUMBER_TYPE, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,69,".addProperty(""a5"", NUMBER_TYPE, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,70,".addProperty(""a6"", NUMBER_TYPE, null)"
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,71,.build();
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,72,"assertEquals(""{a1: number, a2: number, a3: number, a4: number, ...}"","
True,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,test/com/google/javascript/rhino/jstype/RecordTypeTest.java,73,record.toString());
