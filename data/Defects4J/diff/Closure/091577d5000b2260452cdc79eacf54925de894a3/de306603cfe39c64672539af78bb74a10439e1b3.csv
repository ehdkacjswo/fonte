is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,50,"lass CheckAccessControls implements ScopedCallback, CompilerPass {"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,50,"class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,122,@Override
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,127,@Override
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,128,"public void hotSwapScript(Node scriptRoot, Scope globalScope) {"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,129,"NodeTraversal.traverse(compiler, scriptRoot, this);"
False,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,250,/ LinkedHashSet. Consider creating a new work set if we plan to repeatly
True,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,250,// LinkedHashSet. Consider creating a new work set if we plan to repeatedly
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1108,rivate final PassFactory checkAccessControls =
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1109,"ew PassFactory(""checkAccessControls"", true) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1108,private final HotSwapPassFactory checkAccessControls =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1109,"new HotSwapPassFactory(""checkAccessControls"", true) {"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1111,rotected CompilerPass createInternal(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1111,protected HotSwapCompilerPass createInternal(AbstractCompiler compiler) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,233,"roperties.put(name, new Property(type, inferred, inExterns, propertyNode));"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,233,"Property newProp = new Property(type, inferred, inExterns, propertyNode);"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,234,Property oldProp = properties.get(name);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,235,if (oldProp != null) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,236,"// This is to keep previously inferred jsdoc info, e.g., in a"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,237,// replaceScript scenario.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,238,newProp.docInfo = oldProp.docInfo;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,240,"properties.put(name, newProp);"
