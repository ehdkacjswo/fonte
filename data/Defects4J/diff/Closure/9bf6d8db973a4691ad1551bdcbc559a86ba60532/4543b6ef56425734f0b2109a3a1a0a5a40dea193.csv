is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,97,* @param compiler The current compiler.
False,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,82,"isitScriptNode(t, n);"
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,82,visitScriptNode();
False,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,109,"rivate void visitScriptNode(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,109,private void visitScriptNode() {
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,124,Node n = ctorEntry.getValue();
False,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,125,".makeError(ctorEntry.getValue(), checkLevel,"
False,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,126,"ISSING_PROVIDE_WARNING, ctorEntry.getKey()));"
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,126,"JSError.make(n.getSourceFileName(), n,"
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,127,"checkLevel, MISSING_PROVIDE_WARNING, ctorEntry.getKey()));"
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,409,* @param call The asserting call
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,241,"odeTraversal t, Node callNode, String fnName, Node fnNode,"
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,242,nliningMode mode) {
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,241,"Node callNode, String fnName, Node fnNode, InliningMode mode) {"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,480,"heckNameUsage(t, n, parent);"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,480,"checkNameUsage(n, parent);"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,549,"rivate void checkNameUsage(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,549,"private void checkNameUsage(Node n, Node parent) {"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,642,"njector.inline(t, callNode, fnName, fnNode, mode);"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,642,"injector.inline(callNode, fnName, fnNode, mode);"
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,271,"ar v, ReferenceCollection referenceInfo) {"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,271,ReferenceCollection referenceInfo) {
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,402,"ap<String, String> varmap = computeVarList(v, referenceInfo);"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,402,"Map<String, String> varmap = computeVarList(referenceInfo);"
False,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,103,"nlineEmptyMethod(t, parent, callNode);"
True,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,103,"inlineEmptyMethod(parent, callNode);"
False,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,252,"rivate void inlineEmptyMethod(NodeTraversal t, Node parent, Node call) {"
True,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,252,"private void inlineEmptyMethod(Node parent, Node call) {"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,141,"ecordPrototypePropDefinition(t, parent.getFirstChild(), type,"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,142,arent));
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,141,"recordPrototypePropDefinition(parent.getFirstChild(), type, parent));"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,146,", name, type, root, root.getLastChild()));"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,145,"name, type, root, root.getLastChild()));"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,186,"ecordPrototypePropUse(t, n, parent);"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,185,"recordPrototypePropUse(n, parent);"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,188,"ecordStaticNameUse(t, n, parent);"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,187,"recordStaticNameUse(n, parent);"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,190,"ecordUnknownUse(t, n, parent);"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,189,"recordUnknownUse(n, parent);"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,206,", lhs, getType(rhs), n);"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,205,"lhs, getType(rhs), n);"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,373,"rivate Name recordStaticNameDefinition(NodeTraversal t, String name,"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,374,"SType type, Node n, Node rValue) {"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,372,"private Name recordStaticNameDefinition(String name, JSType type,"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,373,"Node n, Node rValue) {"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,401,"odeTraversal t, Node qName, JSType type,"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,402,Nullable Node assign) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,400,"Node qName, JSType type, @Nullable Node assign) {"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,434,"odeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,432,"Node n, Node parent) {"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,447,rivate void recordPrototypePropUse(
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,448,"odeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,445,"private void recordPrototypePropUse(Node n, Node parent) {"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,473,"ecordUnknownUse(t, n, parent);"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,470,"recordUnknownUse(n, parent);"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,514,"rivate void recordUnknownUse(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,511,"private void recordUnknownUse(Node n, Node parent) {"
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,102,"bstractCompiler compiler, String code, String prefix) {"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,102,"AbstractCompiler compiler, String code) {"
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,375,"oStatementNormalizations(t, n);"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,375,doStatementNormalizations(n);
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,502,rivate void doStatementNormalizations(
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,503,"odeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,502,private void doStatementNormalizations(Node n) {
False,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,157,"ddReference(t, v, new Reference(n, t, blockStack.peek()));"
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,157,"addReference(v, new Reference(n, t, blockStack.peek()));"
False,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,239,"rivate void addReference(NodeTraversal t, Var v, Reference reference) {"
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,239,"private void addReference(Var v, Reference reference) {"
False,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,248,"eferenceInfo.add(reference, t, v);"
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,248,referenceInfo.add(reference);
False,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,297,"oid add(Reference reference, NodeTraversal t, Var v) {"
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,297,void add(Reference reference) {
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,344,"ecordReplacement(expr, key, replacementString);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,344,"recordReplacement(expr, key);"
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,369,"rivate void recordReplacement(Node n, String key, String replacement) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,369,"private void recordReplacement(Node n, String key) {"
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,111,"isitFunction(t, n);"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,111,visitFunction(n);
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,115,"rivate void visitFunction(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,115,private void visitFunction(Node n) {
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,221,"isitFunction(t, n);"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,221,visitFunction(n);
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,230,"rivate void visitFunction(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,230,private void visitFunction(Node n) {
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,221,* @param node node to check.
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,372,"hild, child.getFirstChild(),"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,373,odeUtil.getBestJSDocInfo(child));
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,372,"child, NodeUtil.getBestJSDocInfo(child));"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,380,"irstChild.getFirstChild(), firstChild.getLastChild(),"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,381,irstChild.getJSDocInfo());
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,379,"firstChild.getFirstChild(), firstChild.getJSDocInfo());"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,384,"irstChild, null, firstChild.getJSDocInfo());"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,382,"firstChild, firstChild.getJSDocInfo());"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,391,"ode nameNode, Node valueNode, JSDocInfo info) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,389,"Node nameNode, JSDocInfo info) {"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,514,"ttachLiteralTypes(t, n);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,512,attachLiteralTypes(n);
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,570,"rivate void attachLiteralTypes(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,568,private void attachLiteralTypes(Node n) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,677,SType valueType =
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,678,"etDeclaredType(keyNode.getSourceFileName(), info, keyNode, value);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,675,"JSType valueType = getDeclaredType(info, keyNode, value);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,737,"ourceName, catchName.getJSDocInfo(), catchName, null));"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,734,"catchName.getJSDocInfo(), catchName, null));"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,797,"SType type = getDeclaredType(sourceName, info, name, value);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,794,"JSType type = getDeclaredType(info, name, value);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1274,"rivate JSType getDeclaredType(String sourceName, JSDocInfo info,"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1275,"ode lValue, @Nullable Node rValue) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1270,"private JSType getDeclaredType(JSDocInfo info, Node lValue,"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1271,@Nullable Node rValue) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1495,"SType valueType = getDeclaredType(t.getSourceName(), info, n, rhsValue);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1491,"JSType valueType = getDeclaredType(info, n, rhsValue);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1738,"aybeCollectMember(t, child.getFirstChild(), child,"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1734,"maybeCollectMember(child.getFirstChild(), child,"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1742,"aybeCollectMember(t, child, child, null);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1738,"maybeCollectMember(child, child, null);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1748,"rivate void maybeCollectMember(NodeTraversal t,"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1749,"ode member, Node nodeWithJsDocInfo, @Nullable Node value) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1744,"private void maybeCollectMember(Node member,"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1745,"Node nodeWithJsDocInfo, @Nullable Node value) {"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1762,"SType jsType = getDeclaredType(t.getSourceName(), info, member, value);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1758,"JSType jsType = getDeclaredType(info, member, value);"
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,94,"heckVar(t, v, referenceMap.getReferences(v).references);"
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,94,"checkVar(v, referenceMap.getReferences(v).references);"
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,104,"rivate void checkVar(NodeTraversal t, Var v, List<Reference> references) {"
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,104,"private void checkVar(Var v, List<Reference> references) {"
False,src/com/google/javascript/jscomp/XtbMessageBundle.java,src/com/google/javascript/jscomp/XtbMessageBundle.java,54,"nputStream xtb, @Nullable String projectId, boolean unused) {"
True,src/com/google/javascript/jscomp/XtbMessageBundle.java,src/com/google/javascript/jscomp/XtbMessageBundle.java,54,"InputStream xtb, @Nullable String projectId,"
True,src/com/google/javascript/jscomp/XtbMessageBundle.java,src/com/google/javascript/jscomp/XtbMessageBundle.java,55,"@SuppressWarnings(""unused"") boolean unused) {"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,112,"ndiGraphNode<N, E> uNode = getUndirectedGraphNode(value);"
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,281,"alidateTypeAnnotations(info, node, irNode);"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,281,"validateTypeAnnotations(info, node);"
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,289,rivate void validateTypeAnnotations(
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,290,"SDocInfo info, AstNode node, Node irNode) {"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,289,"private void validateTypeAnnotations(JSDocInfo info, AstNode node) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,885,** Can only be called when <tt>getType() == TokenStream.NUMBER</tt> */
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,886,ublic void setDouble(double s) throws UnsupportedOperationException {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,886,* Can only be called when <tt>getType() == Token.NUMBER</tt>
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,887,* @param value value to set.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,889,public void setDouble(double value) throws UnsupportedOperationException {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,905,** Can only be called when node has String context. */
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,906,ublic void setString(String s) throws UnsupportedOperationException {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,907,f (this.getType() == Token.STRING) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,909,* Can only be called for a Token.STRING or Token.NAME.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,910,* @param value the value to set.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,912,public void setString(String value) throws UnsupportedOperationException {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,913,if (this.getType() == Token.STRING || this.getType() == Token.NAME) {
False,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,60,arnings.add(formatDetailedMessage(
False,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,61,"essage, sourceName, line, lineOffset));"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,60,"warnings.add(formatDetailedMessage(message, sourceName, line));"
False,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,70,rrors.add(formatDetailedMessage(
False,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,71,"essage, sourceName, line, lineOffset));"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,69,"errors.add(formatDetailedMessage(message, sourceName, line));"
False,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,89,"tring message, String sourceName, int lineNumber, int lineOffset) {"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,87,"String message, String sourceName, int lineNumber) {"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,183,** Checks whether the property pname is present on the object. */
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,184,* Checks whether the property is present on the object.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,185,* @param pname The property name.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1524,* @param constraint
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,189,"oolean resolved = resolveViaRegistry(t, enclosing);"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,189,boolean resolved = resolveViaRegistry(t);
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,218,rivate boolean resolveViaRegistry(
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,219,"rrorReporter t, StaticScope<JSType> enclosing) {"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,218,private boolean resolveViaRegistry(ErrorReporter reporter) {
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,222,"etReferencedAndResolvedType(type, t, enclosing);"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,221,"setReferencedAndResolvedType(type, reporter);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,233,"rivate void resolveViaProperties(ErrorReporter t,"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,232,"private void resolveViaProperties(ErrorReporter reporter,"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,235,"SType value = lookupViaProperties(t, enclosing);"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,234,"JSType value = lookupViaProperties(reporter, enclosing);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,240,etReferencedAndResolvedType(
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,241,"unctionType.getInstanceType(), t, enclosing);"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,239,"setReferencedAndResolvedType(functionType.getInstanceType(), reporter);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,245,"STypeNative.NO_OBJECT_TYPE).getInstanceType(), t, enclosing);"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,243,"JSTypeNative.NO_OBJECT_TYPE).getInstanceType(), reporter);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,248,"(EnumType) value).getElementsType(), t, enclosing);"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,246,"((EnumType) value).getElementsType(), reporter);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,256,"andleUnresolvedType(t, value == null || value.isUnknownType());"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,254,"handleUnresolvedType(reporter, value == null || value.isUnknownType());"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,266,"rivate JSType lookupViaProperties( ErrorReporter t,"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,264,"private JSType lookupViaProperties(ErrorReporter reporter,"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,283,"SType value = getTypedefType(t, slot, componentNames[0]);"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,281,"JSType value = getTypedefType(reporter, slot);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,302,"rivate void setReferencedAndResolvedType(JSType type, ErrorReporter t,"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,303,taticScope<JSType> enclosing) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,300,private void setReferencedAndResolvedType(
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,301,"JSType type, ErrorReporter reporter) {"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,308,heckEnumElementCycle(t);
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,309,heckProtoCycle(t);
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,306,checkEnumElementCycle(reporter);
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,307,checkProtoCycle(reporter);
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,363,"SType getTypedefType(ErrorReporter t, StaticSlot<JSType> slot, String name) {"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,361,"private JSType getTypedefType(ErrorReporter t, StaticSlot<JSType> slot) {"
False,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,228,SType alternateTypeParameter = parameterizedAlternate.getParameterType();
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1088,"unction functionA = callgraph.getUniqueFunctionWithName(""A"");"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1093,nsupportedOperationException caughtException = null;
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,24,mport com.google.javascript.jscomp.graph.DiGraph.DiGraphNode;
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,71,"heckPathsBetweenNodes<String, String> test = null;"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,117,"iGraphNode<String, String> d = g.createDirectedGraphNode(""d"");"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,113,"g.createDirectedGraphNode(""d"");"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,32,ublic void testCodeBuilderColumnAfterResetDummy() {
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,33,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,34,"ode n = compiler.parseTestCode("""");"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,35,ompiler.CodeBuilder cb = new Compiler.CodeBuilder();
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1244,"ode root = new Node(Token.BLOCK, script1, script2);"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1244,// Create a parent node for the scripts
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1245,"new Node(Token.BLOCK, script1, script2);"
False,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,663,"or (DiGraphEdge<Instruction, Branch> _ : outEdges) {"
True,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,663,for (int i = 0; i < outEdges.size(); i++) {
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,367,"tring output = """""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,368," ""function Foo(){}"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,369," ""Foo.prototype.Bar_prototype$a=0;"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,370," ""Foo.prototype.Bar_prototype$b=0;"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,371," ""function Bar(){}"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,372," ""Bar.prototype.Bar_prototype$a=0;"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,373," ""Bar.prototype.Bar_prototype$b=0;"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,374," ""var B=new Bar;"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,375," ""B.Bar_prototype$a=0;"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,376," ""B.Bar_prototype$b=0;"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,377," ""function Baz(){}"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,378," ""Baz.prototype.a$Baz_prototype=0;"""
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,379," ""Baz.prototype.b$Baz_prototype=0;"";"
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,23,mport com.google.javascript.rhino.Token;
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,480,ode mainRoot = tree;
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,510,ode mainRoot = tree;
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,560,ode externsRoot = new Node(Token.EMPTY);
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,561,ode mainRoot = tree;
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,606,ode externsRoot = new Node(Token.EMPTY);
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,607,ode mainRoot = tree;
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,671,"ode n = Normalize.parseAndNormalizeTestCode(compiler, js, """");"
True,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,661,"Node n = Normalize.parseAndNormalizeTestCode(compiler, js);"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,26,mport com.google.javascript.rhino.Token;
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1380,ode externsRoot = new Node(Token.EMPTY);
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1381,ode mainRoot = tree;
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1480,xpressionDecomposer decomposer = new ExpressionDecomposer(
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1481,"ompiler, compiler.getUniqueNameIdSupplier(), knownConstants);"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1490,ode result = injector.inline(
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1491,", n, fnName, fnNode, mode);"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1483,"Node result = injector.inline(n, fnName, fnNode, mode);"
False,test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java,test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java,28,mport java.util.Set;
False,test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java,test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java,224,inal Set<String> unsafe =
False,test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java,test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java,225,unctionArgumentInjector.findModifiedParameters(fnNode);
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1446,"/ This is the result we would expect if we could handle ""foo = function"""
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1447,tring result =
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1448,"foo=function(stylesString,opt_element){"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1449,"var styleSheet=null;"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1450,"if(goog$userAgent$IE){"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1451,"styleSheet=0"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1452,"}else{"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1453,"var head=0"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1455,"{var JSCompiler_inline_element_0=styleSheet;"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1456,"var JSCompiler_inline_stylesString_1=stylesString;"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1457,"if(goog$userAgent$IE){"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1458,"JSCompiler_inline_element_0.cssText="" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1459,"JSCompiler_inline_stylesString_1"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1460,"}else{"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1461,"var propToSet=goog$userAgent$WEBKIT?\""innerText\"":\""innerHTML\"";"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1462,"JSCompiler_inline_element_0[propToSet]="" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1463,"JSCompiler_inline_stylesString_1"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1465,"return styleSheet"" +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1669,"ompiler compiler = compile(options, code);"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,288,ist<CompilerInput> actualInputs = module.getInputs();
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,111,assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,112,"ImmutableList.of(d, b, c, a, e, f),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,113,"ImmutableList.of(a, b, c, d, e, f));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,114,assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,115,"ImmutableList.of(e, f, d, b, c, a),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,116,"ImmutableList.of(e, f, a, b, c, d));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,117,assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,118,"ImmutableList.of(e, d, b, c, a, f),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,119,"ImmutableList.of(a, b, c, e, d, f));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,120,assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,121,"ImmutableList.of(e, f, d, b, c, a),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,122,"ImmutableList.of(e, a, f, b, c, d));"
False,test/com/google/javascript/jscomp/JsMessageVisitorTest.java,test/com/google/javascript/jscomp/JsMessageVisitorTest.java,547,SError[] errors = compiler.getErrors();
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6220,cope s = ns.scope;
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6956,"ode n = parseAndTypeCheck(externs, js);"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6955,"parseAndTypeCheck(externs, js);"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,7042,"ode externAndJsRoot = new Node(Token.BLOCK, externsNode, n);"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,7041,// create a common parent for the externs and source roots
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,7042,"new Node(Token.BLOCK, externsNode, n);"
False,test/com/google/javascript/jscomp/MustBeReachingVariableDefTest.java,test/com/google/javascript/jscomp/MustBeReachingVariableDefTest.java,172,ode externs = compiler.parseTestCode(EXTERNS);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,678,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,755,ode tryBlock = tryNode.getFirstChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,756,ode catchBlocks = tryNode.getFirstChild().getNext();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,773,ode catchBlocks = tryNode.getFirstChild().getNext();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,788,ode tryBlock = tryNode.getFirstChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,791,ode finallyBlock = tryNode.getLastChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,806,ode tryBlock = tryNode.getFirstChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,808,ode catchBlock = catchBlocks.getFirstChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,809,ode finallyBlock = tryNode.getLastChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,823,ode tryBlock = tryNode.getFirstChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,826,ode finallyBlock = tryNode.getLastChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,837,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,894,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,926,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,989,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1004,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1016,ompiler compiler = new Compiler();
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,137,// TODO(johnlenz): Support multiple valid definitions.
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,143,"tring expected = ""var goog = {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,144,"goog.foo = function (p1) { var p2 };"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,145,"goog.foo = function (q1) { var q2 };"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,146,"goog.foo = function (r1) { var r2 };"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,147,"goog.foo(1); goog.foo(2); goog.foo()"";"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,148,/ TODO(johnlenz): Support multiple valid definitions.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,147,// TODO(johnlenz): Support multiple valid definitions.
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,159,"tring expected = ""var goog = {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,160,"goog.foo = function(p1, p2) { var p4; var p3};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,161,"goog.foo = function(q1, q2) { var q4; var q3};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,162,"goog.foo = function(r1, r2) { var r4; var r3};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,163,"goog.foo(1,0); goog.foo(2,1); goog.foo()"";"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,164,/ TODO(johnlenz): Support multiple valid definitions.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,169,// TODO(johnlenz): Support multiple definitions.
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,188,"tring expected = ""var goog1 = {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,189,"goog1.foo = function () { };"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,190,"var goog2 = {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,191,"goog2.foo = function () { var p1 };"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,192,"var x = getGoog();"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,193,"x.foo()"";"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,194,/ TODO(johnlenz): Support multiple definitions.
False,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,1252,tring resultB = process(exprB);  // TODO: why is nothing done with this?
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,184,oolean regExpHaveSideEffects = true;
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,184,regExpHaveSideEffects = true;
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,1232,/ Ensure that debug report computation works.
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,1233,tring debugReport = passUnderTest.getDebugReport();
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,1232,// Ensure that debug report computation doesn't crash.
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,1233,passUnderTest.getDebugReport();
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,331,"ymbol obj = getGlobalVar(table, ""Object"");"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9378,cope s = ns.scope;
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11472,"ode n = parseAndTypeCheck(externs, js);"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11471,"parseAndTypeCheck(externs, js);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11560,"ode externAndJsRoot = new Node(Token.BLOCK, externsNode, n);"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11559,// create a parent node for the extern and source blocks
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11560,"new Node(Token.BLOCK, externsNode, n);"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,383,ode rootOriginal = root.cloneTree();
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,44,impleDependencyInfo f = new SimpleDependencyInfo(
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,45,"f"", ""f"", provides(""f""), requires());"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,422,"/assertNodePosition(4, 0, incrClause);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,422,"assertNodePosition(-1, -1, incrClause); // should be 4"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,944,"ode root = newParse(string, new TestErrorReporter(errors, null));"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,944,"newParse(string, new TestErrorReporter(errors, null));"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2163,SDocInfo jsdoc = parseFileOverview(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2163,parseFileOverview(
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2873,"taticSourceFile file = new SimpleSourceFile(script.getSourceName(), false);"
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,831,oolean isIdeMode = false;
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,860,oolean isIdeMode = false;
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,144,"estErrorReporter testErrorReporter = new TestErrorReporter(null, null);"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,145,STypeRegistry registry = new JSTypeRegistry(testErrorReporter);
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,200,/ TODO(johnlenz): reenable this test.
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,201,ublic void disable_testIsQualifiedName() {
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,202,"ssertTrue(getNode(""a"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,203,"ssertTrue(getNode(""$"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,204,"ssertTrue(getNode(""_"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,205,"ssertTrue(getNode(""a.b"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,206,"ssertTrue(getNode(""a_b.cccccc$d4.x.y.zA$"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,207,"ssertTrue(getNode(""this.foo"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,208,"ssertFalse(getNode(""0"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,209,"ssertFalse(getNode(""[]"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,210,"ssertFalse(getNode(""{}"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,211,"ssertFalse(getNode(""''"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,212,"ssertFalse(getNode(""a[b]"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,213,"ssertFalse(getNode(""a[b].c"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,214,"ssertFalse(getNode(""c.a[b]"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,215,"ssertFalse(getNode(""a()"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,216,"ssertFalse(getNode(""a().b"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,217,"ssertFalse(getNode(""b.a()"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,218,"ssertFalse(getNode(""'a'"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,219,"ssertFalse(getNode(""/x/"").isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,220,"ssertFalse(getNode(""++x"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,198,public void testIsQualifiedName() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,199,"assertTrue(IR.name(""a"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,200,"assertTrue(IR.name(""$"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,201,"assertTrue(IR.name(""_"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,202,"assertTrue(IR.getprop(IR.name(""a""),IR.string(""b"")).isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,203,"assertTrue(IR.getprop(IR.thisNode(),IR.string(""b"")).isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,204,assertFalse(IR.number(0).isQualifiedName());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,205,assertFalse(IR.arraylit().isQualifiedName());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,206,assertFalse(IR.objectlit().isQualifiedName());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,207,"assertFalse(IR.string("""").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,208,"assertFalse(IR.getelem(IR.name(""a""),IR.string(""b"")).isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,209,assertFalse( // a[b].c
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,210,IR.getprop(
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,211,"IR.getelem(IR.name(""a""),IR.string(""b"")),"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,212,"IR.string(""c""))"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,213,.isQualifiedName());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,214,assertFalse( // a.b[c]
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,215,IR.getelem(
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,216,"IR.getprop(IR.name(""a""),IR.string(""b"")),"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,217,"IR.string(""c""))"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,218,.isQualifiedName());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,219,"assertFalse(IR.call(IR.name(""a"")).isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,220,assertFalse( // a().b
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,221,IR.getprop(
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,222,"IR.call(IR.name(""a"")),"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,223,"IR.string(""b""))"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,224,.isQualifiedName());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,225,assertFalse( // (a.b)()
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,226,IR.call(
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,227,"IR.getprop(IR.name(""a""),IR.string(""b"")))"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,228,.isQualifiedName());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,229,"assertFalse(IR.string(""a"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,230,"assertFalse(IR.regexp(IR.string(""x"")).isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,231,"assertFalse(new Node(Token.INC, IR.name(""x"")).isQualifiedName());"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,404,rivate static Node getNode(String js) {
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,406,"ode root = parse(""var a=("" + js + "");"");"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,407,ode expr = root.getFirstChild();
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,408,ode var = expr.getFirstChild();
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,409,eturn var.getFirstChild();
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,411,eturn null;
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,414,rivate static Node parse(String string) {
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,416,ompilerEnvirons environment = new CompilerEnvirons();
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,417,"estErrorReporter testErrorReporter = new TestErrorReporter(null, null);"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,418,nvironment.setErrorReporter(testErrorReporter);
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,419,nvironment.setParseJSDoc(true);
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,420,"arser p = new Parser(environment, testErrorReporter);"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,421,"eturn p.parse(string, null, 0);"
False,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,423,eturn null;
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5300,SType arrayOfUnknown = createParameterizedType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5301,"RRAY_TYPE, UNKNOWN_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6154,SType templatizedInstance = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6152,registry.createTemplatizedType(
