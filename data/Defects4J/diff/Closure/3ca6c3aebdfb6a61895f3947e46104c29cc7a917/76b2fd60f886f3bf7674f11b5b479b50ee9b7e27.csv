is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,953,"/ Merge the properties of ""Foo.prototype"" and ""new Foo()"" together."
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,954,nstanceType = instanceType.getOwnerFunction().getInstanceType();
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,955,et<String> set = Sets.newHashSet(propNames);
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,956,"terables.addAll(set, instanceType.getOwnPropertyNames());"
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,957,ropNames = set;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,953,// Guard against modifying foo.prototype when foo is a regular (non-constructor) function.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,954,if (instanceType.getOwnerFunction().hasInstanceType()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,955,"// Merge the properties of ""Foo.prototype"" and ""new Foo()"" together."
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,956,instanceType = instanceType.getOwnerFunction().getInstanceType();
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,957,Set<String> set = Sets.newHashSet(propNames);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,958,"Iterables.addAll(set, instanceType.getOwnPropertyNames());"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,959,propNames = set;
