is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,87,rivate String templateTypeName = null;
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,87,private ImmutableList<String> templateTypeNames = ImmutableList.of();
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,312,f (templateTypeName != null &&
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,312,if (!templateTypeNames.isEmpty() &&
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,470,f (templateTypeName != null &&
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,470,if (!templateTypeNames.isEmpty() &&
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,495,f (templateTypeName != null && !foundTemplateType) {
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,495,if (!templateTypeNames.isEmpty() && !foundTemplateType) {
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,541,emplateTypeName = info.getTemplateTypeName();
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,542,ypeRegistry.setTemplateTypeName(templateTypeName);
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,541,templateTypeNames = info.getTemplateTypeNames();
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,542,typeRegistry.setTemplateTypeNames(templateTypeNames);
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,638,withTemplateName(templateTypeName)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,638,.withTemplateNames(templateTypeNames)
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,651,ypeRegistry.clearTemplateTypeName();
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,651,typeRegistry.clearTemplateTypeNames();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,950,f (fnType.getTemplateTypeName() == null) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,950,if (fnType.getTemplateTypeNames().isEmpty()) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,20,import com.google.common.base.Splitter;
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,777,tring templateTypeName = templateInfo.string;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,778,List<String> names = Lists.newArrayList(
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,779,"Splitter.on(',')"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,780,.trimResults()
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,781,.split(templateInfo.string));
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,779,f (templateTypeName.length() == 0) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,783,if (names.size() == 0 || names.get(0).length() == 0) {
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,782, else if (!jsdocBuilder.recordTemplateTypeName(
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,783,emplateTypeName)) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,786,} else if (!jsdocBuilder.recordTemplateTypeNames(names)) {
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,96,tring templateTypeName = null;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,96,ImmutableList<String> templateTypeNames = null;
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,906, @param templateTypeName the template type name.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,906,* @param templateTypeNames the template type name.
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,908,oolean declareTemplateTypeName(String templateTypeName) {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,908,boolean declareTemplateTypeNames(List<String> templateTypeNames) {
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,911,f (info.templateTypeName != null) {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,911,if (info.templateTypeNames != null) {
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,915,nfo.templateTypeName = templateTypeName;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,915,info.templateTypeNames = ImmutableList.copyOf(templateTypeNames);
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1428,ublic String getTemplateTypeName() {
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1429,f (info == null) {
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1430,eturn null;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1428,public ImmutableList<String> getTemplateTypeNames() {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1429,if (info == null || info.templateTypeNames == null) {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1430,return ImmutableList.of();
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1432,eturn info.templateTypeName;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1432,return info.templateTypeNames;
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,43,mport com.google.javascript.rhino.Token;
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,45,import java.util.List;
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,298,ublic boolean recordTemplateTypeName(String name) {
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,299,f (currentInfo.declareTemplateTypeName(name)) {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,298,public boolean recordTemplateTypeNames(List<String> names) {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,299,if (currentInfo.declareTemplateTypeNames(names)) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,42,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,59,rivate String templateTypeName = null;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,60,private ImmutableList<String> templateTypeNames = ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,121,ublic FunctionBuilder withTemplateName(String templateTypeName) {
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,122,his.templateTypeName = templateTypeName;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,122,public FunctionBuilder withTemplateNames(
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,123,ImmutableList<String> templateTypeNames) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,124,this.templateTypeNames = templateTypeNames;
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,151,his.templateTypeName = otherType.getTemplateTypeName();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,153,this.templateTypeNames = otherType.getTemplateTypeNames();
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,161,"ypeOfThis, templateTypeName, isConstructor, isNativeType);"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,163,"typeOfThis, templateTypeNames, isConstructor, isNativeType);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,127,rivate String templateTypeName;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,128,private final ImmutableList<String> templateTypeNames;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,132,"tring templateTypeName,  boolean isConstructor, boolean nativeType) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,133,"ImmutableList<String> templateTypeNames,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,134,"boolean isConstructor, boolean nativeType) {"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,152,his.templateTypeName = templateTypeName;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,154,this.templateTypeNames = templateTypeNames != null
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,155,? templateTypeNames : ImmutableList.<String>of();
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,171,this.templateTypeNames = ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1095,ublic String getTemplateTypeName() {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1096,eturn templateTypeName;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1099,public ImmutableList<String> getTemplateTypeNames() {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1100,return templateTypeNames;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,158,rivate String templateTypeName;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,160,/ The template type.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,161,rivate TemplateType templateType;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,158,"private Map<String, TemplateType> templateTypes = Maps.newHashMap();"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,876,f (jsTypeName.equals(templateTypeName)) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,873,TemplateType templateType = templateTypes.get(jsTypeName);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,874,if (templateType != null) {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1678,ublic void setTemplateTypeName(String name) {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1679,emplateTypeName = name;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1680,"emplateType = new TemplateType(this, name);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1676,public void setTemplateTypeNames(List<String> names) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1677,Preconditions.checkNotNull(names);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1678,for (String name : names) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1679,"templateTypes.put(name, new TemplateType(this, name));"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1686,ublic void clearTemplateTypeName() {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1687,emplateTypeName = null;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1688,emplateType = null;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1686,public void clearTemplateTypeNames() {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1687,templateTypes.clear();
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2429,public void testParserWithTwoTemplates() {
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2430,"parse(""@template T,V */"");"
