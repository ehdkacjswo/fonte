is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,58,eturn new SourcelessMessageFormatter();
True,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,58,LightweightMessageFormatter formatter =
True,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,59,LightweightMessageFormatter.withoutSource();
True,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,60,formatter.setColorize(colorize);
True,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,61,return formatter;
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,68,/ A message formatter that does not know how to get source information.
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,69,rivate static class SourcelessMessageFormatter
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,70,xtends AbstractMessageFormatter {
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,72,rivate SourcelessMessageFormatter() {
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,73,uper(null);
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,76,Override
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,77,ublic String formatError(JSError error) {
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,78,"eturn format(error, false);"
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,81,Override
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,82,ublic String formatWarning(JSError warning) {
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,83,"eturn format(warning, true);"
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,86,"rivate String format(JSError error, boolean warning) {"
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,87,/ formatting the message
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,88,tringBuilder b = new StringBuilder();
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,89,f (error.sourceName != null) {
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,90,.append(error.sourceName);
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,91,f (error.lineNumber > 0) {
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,92,.append(':');
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,93,.append(error.lineNumber);
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,95,".append("": "");"
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,98,.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,99,".append("" - "");"
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,101,.append(error.description);
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,102,.append('\n');
False,src/com/google/javascript/jscomp/ErrorFormat.java,src/com/google/javascript/jscomp/ErrorFormat.java,103,eturn b.toString();
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,20,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,37,* A constructor for when the client doesn't care about source information.
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,39,private LightweightMessageFormatter() {
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,40,super(null);
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,41,this.excerpt = LINE;
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,51,Preconditions.checkNotNull(source);
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,55,static LightweightMessageFormatter withoutSource() {
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,56,return new LightweightMessageFormatter();
False,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,56,tring sourceExcerpt = excerpt.get(
False,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,57,"ource, error.sourceName, error.lineNumber, excerptFormatter);"
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,70,String sourceExcerpt = source == null ? null :
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,71,excerpt.get(
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,72,"source, error.sourceName, error.lineNumber, excerptFormatter);"
