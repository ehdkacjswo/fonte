is_addition,old_file_path,new_file_path,line_num,content
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1044,protected void testExternChanges(
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1045,"String input, String expectedExtern) {"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1046,"testExternChanges("""", input, expectedExtern);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1049,protected void testExternChanges(
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1050,"String extern, String input, String expectedExtern) {"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1051,Compiler compiler = createCompiler();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1052,CompilerOptions options = getOptions();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1053,compiler.init(
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1054,"ImmutableList.of(SourceFile.fromCode(""extern"", extern)),"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1055,"ImmutableList.of(SourceFile.fromCode(""input"", input)),"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1056,options);
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1057,compiler.parseInputs();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1058,assertFalse(compiler.hasErrors());
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1060,Node externsAndJs = compiler.getRoot();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1061,Node root = externsAndJs.getLastChild();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1063,Node externs = externsAndJs.getFirstChild();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1065,Node expected = compiler.parseTestCode(expectedExtern);
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1066,assertFalse(compiler.hasErrors());
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1068,"(getProcessor(compiler)).process(externs, root);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1070,String externsCode = compiler.toSource(externs);
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1071,String expectedCode = compiler.toSource(expected);
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1073,"assertEquals(expectedCode, externsCode);"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,19,mport com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,20,mport com.google.javascript.rhino.Node;
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,153,"heckSynthesizedExtern(code, ""Object.prototype.A;"");"
True,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,150,"testExternChanges(code, ""Object.prototype.A;"");"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,160,"heckSynthesizedExtern(code, ""Object.prototype.foo;"");"
True,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,157,"testExternChanges(code, ""Object.prototype.foo;"");"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,167,"heckSynthesizedExtern(code, ""Object.prototype.foo;"");"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,170,ublic void checkSynthesizedExtern(
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,171,"tring input, String expectedExtern) {"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,172,"heckSynthesizedExtern("""", input, expectedExtern);"
True,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,164,"testExternChanges(code, ""Object.prototype.foo;"");"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,176,/ TODO(johnlenz): make this common code and unify with the VarCheckTest
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,177,ublic void checkSynthesizedExtern(
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,178,"tring extern, String input, String expectedExtern) {"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,179,ompiler compiler = createCompiler();
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,180,ompilerOptions options = getOptions();
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,181,ompiler.init(
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,182,"mmutableList.of(SourceFile.fromCode(""extern"", extern)),"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,183,"mmutableList.of(SourceFile.fromCode(""input"", input)),"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,184,ptions);
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,185,ompiler.parseInputs();
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,186,ssertFalse(compiler.hasErrors());
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,188,ode externsAndJs = compiler.getRoot();
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,189,ode root = externsAndJs.getLastChild();
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,191,ode externs = externsAndJs.getFirstChild();
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,193,ode expected = compiler.parseTestCode(expectedExtern);
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,194,ssertFalse(compiler.hasErrors());
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,196,getProcessor(compiler))
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,197,"process(externs, root);"
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,199,tring externsCode = compiler.toSource(externs);
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,200,tring expectedCode = compiler.toSource(expected);
False,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,202,"ssertEquals(expectedCode, externsCode);"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,19,mport com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,32,rivate CompilerPass testSetupPass;
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,31,private boolean declarationCheck;
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,47,estSetupPass = null;
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,46,declarationCheck = false;
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,64,f (!sanityCheck) {
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,65,eturn new CompilerPass() {
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,66,"Override public void process(Node externs, Node root) {"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,67,f (testSetupPass != null) {
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,68,"estSetupPass.process(externs, root);"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,70,"ew VarCheck(compiler, false).process(externs, root);"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,71,f (!compiler.hasErrors()) {
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,72,"ew VarCheck(compiler, true).process(externs, root);"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,63,return new CompilerPass() {
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,64,"@Override public void process(Node externs, Node root) {"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,65,"new VarCheck(compiler, sanityCheck).process(externs, root);"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,66,if (sanityCheck == false && !compiler.hasErrors()) {
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,67,"new VarCheck(compiler, true).process(externs, root);"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,77,"eturn new VarCheck(compiler, sanityCheck);"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,69,if (declarationCheck) {
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,70,"new VariableTestCheck(compiler).process(externs, root);"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,368,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,369,ompilerOptions options = new CompilerOptions();
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,370,ptions.setWarningLevel(
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,371,"iagnosticGroup.forType(VarCheck.UNDEFINED_VAR_ERROR),"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,372,heckLevel.OFF);
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,373,ompiler.init(
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,374,"mmutableList.of(SourceFile.fromCode(""extern"", extern)),"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,375,"mmutableList.of(SourceFile.fromCode(""input"", input)),"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,376,ptions);
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,377,ompiler.parseInputs();
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,378,ssertFalse(compiler.hasErrors());
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,380,ode externsAndJs = compiler.getRoot();
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,381,ode root = externsAndJs.getLastChild();
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,383,ode externs = externsAndJs.getFirstChild();
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,385,ode expected = compiler.parseTestCode(expectedExtern);
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,386,ssertFalse(compiler.hasErrors());
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,388,"new VarCheck(compiler, sanityCheck))"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,389,"process(externs, root);"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,390,f (!sanityCheck) {
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,391,"new VariableTestCheck(compiler)).process(externs, root);"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,394,tring externsCode = compiler.toSource(externs);
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,395,tring expectedCode = compiler.toSource(expected);
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,397,"ssertEquals(expectedCode, externsCode);"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,364,declarationCheck = !sanityCheck;
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,365,"testExternChanges(extern, input, expectedExtern);"
