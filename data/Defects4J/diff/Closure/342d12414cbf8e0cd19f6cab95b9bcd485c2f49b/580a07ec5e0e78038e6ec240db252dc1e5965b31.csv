is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,94,"ppendExtern(getExportedPath(), getFunctionValue(value));"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,94,"appendExtern(getExportedPath(), getValue(value));"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,113,"rotected void appendExtern(String path, Node functionToExport) {"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,113,"void appendExtern(String path, Node valueToExport) {"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,143,f (isCompletePathPrefix && functionToExport != null) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,144,nitializer = createExternFunction(functionToExport);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,143,if (isCompletePathPrefix && valueToExport != null) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,144,if (valueToExport.isFunction()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,145,initializer = createExternFunction(valueToExport);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,146,} else {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,147,Preconditions.checkState(valueToExport.isObjectLit());
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,148,initializer = createExternObjectLit(valueToExport);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,146,nitializer = IR.objectlit();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,151,initializer = IR.empty();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,180,"athDefinition = NodeUtil.newVarNode(path, initializer);"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,185,if (initializer.isEmpty()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,186,pathDefinition = IR.var(IR.name(path));
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,187,} else {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,188,"pathDefinition = NodeUtil.newVarNode(path, initializer);"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,184,athDefinition = NodeUtil.newExpr(
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,185,"R.assign(qualifiedPath, initializer));"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,193,if (initializer.isEmpty()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,194,pathDefinition = NodeUtil.newExpr(qualifiedPath);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,195,} else {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,196,pathDefinition = NodeUtil.newExpr(
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,197,"IR.assign(qualifiedPath, initializer));"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,227,"* Given an object literal to export, create an object lit with all its"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,228,* string properties. We don't care what the values of those properties
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,229,* are because they are not checked.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,231,private Node createExternObjectLit(Node exportedObjectLit) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,232,Node lit = IR.objectlit();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,233,lit.setJSType(exportedObjectLit.getJSType());
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,235,// This is an indirect way of telling the typed code generator
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,236,"// ""print the type of this"""
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,237,lit.setJSDocInfo(new JSDocInfo());
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,239,int index = 1;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,240,for (Node child = exportedObjectLit.getFirstChild();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,241,child != null;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,242,child = child.getNext()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,243,if (child.isString()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,244,lit.addChildToBack(
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,245,IR.propdef(
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,246,"IR.string(child.getString()),"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,247,IR.number(index++)));
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,250,return lit;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,282," a function, the function's node is returned. Otherwise,"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,322,"* a function or object literal, the node is returned. Otherwise,"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,285,rotected Node getFunctionValue(Node qualifiedNameNode) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,325,protected Node getValue(Node qualifiedNameNode) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,299,witch(definitionParent.getType()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,339,switch (definitionParent.getType()) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,310,f (!definition.isFunction()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,350,if (!definition.isFunction() && !definition.isObjectLit()) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,944,"// Do not validate object lit value types in externs. We don't really care,"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,945,// and it makes it easier to generate externs.
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,946,if (objlit.isFromExterns()) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,947,"ensureTyped(t, key);"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,948,return;
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,21,import com.google.javascript.rhino.JSDocInfo;
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,52,& n.getFirstChild().getFirstChild() != null
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,53,& n.getFirstChild().getFirstChild().isFunction()) {
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,54,dd(getFunctionAnnotation(n.getFirstChild().getFirstChild()));
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,52,&& n.getFirstChild().getFirstChild() != null) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,53,add(getTypeAnnotation(n.getFirstChild().getFirstChild()));
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,61,"// Only add annotations for things with JSDoc, or function literals."
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,62,JSDocInfo jsdoc = NodeUtil.getBestJSDocInfo(node);
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,63,if (jsdoc == null && !node.isFunction()) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,64,"return """";"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,72,} else if (type.isEnumType()) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,73,"return ""/** @enum {"" +"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,74,type.toMaybeEnumType().getElementsType().toAnnotationString() +
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,75,"""} */\n"";"
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,68,& !type.isEmptyType() && !type.isVoidType() &&
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,69,type.isFunctionPrototypeType()) {
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,70,"eturn ""/** @type {"" + node.getJSType() + ""} */\n"";"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,77,&& !type.isEmptyType()
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,78,&& !type.isVoidType()
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,79,&& !type.isFunctionPrototypeType()) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,80,"return ""/** @type {"" + node.getJSType().toAnnotationString() + ""} */\n"";"
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,107,"b.append("" * @param {"" + getParameterNodeJSDocType(n) + ""} "");"
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,108,b.append(paramNode.getString());
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,109,"b.append(""\n"");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,117,"sb.append("" * "");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,118,"appendAnnotation(sb, ""param"", getParameterNodeJSDocType(n));"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,119,"sb.append("" "")"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,120,.append(paramNode.getString())
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,121,".append(""\n"");"
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,117,"b.append("" * @return {"" + retType + ""}\n"");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,129,"sb.append("" * "");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,130,"appendAnnotation(sb, ""return"", retType.toAnnotationString());"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,131,"sb.append(""\n"");"
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,129,"b.append("" * @extends {""  + superInstance + ""}\n"");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,143,"sb.append("" * "");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,144,"appendAnnotation(sb, ""extends"", superInstance.toAnnotationString());"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,145,"sb.append(""\n"");"
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,135,"b.append("" * @extends {"" + interfaceType + ""}\n"");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,151,"sb.append("" * "");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,152,"appendAnnotation(sb, ""extends"", interfaceType.toAnnotationString());"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,153,"sb.append(""\n"");"
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,142,nterfaces.add(interfaze.toString());
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,160,interfaces.add(interfaze.toAnnotationString());
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,145,"b.append("" * @implements {""  + interfaze + ""}\n"");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,163,"sb.append("" * "");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,164,"appendAnnotation(sb, ""implements"", interfaze);"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,165,"sb.append(""\n"");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,183,"private void appendAnnotation(StringBuilder sb, String name, String type) {"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,184,"sb.append(""@"").append(name).append("" {"").append(type).append(""}"");"
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,179,"ypeString = parameterType.restrictByNotNullOrUndefined() + ""="";"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,203,typeString =
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,204,parameterType.restrictByNotNullOrUndefined().toAnnotationString() +
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,181,"ypeString = ""..."" + parameterType.restrictByNotNullOrUndefined();"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,207,"typeString = ""..."" +"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,208,parameterType.restrictByNotNullOrUndefined().toAnnotationString();
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,183,ypeString = parameterType.toString();
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,210,typeString = parameterType.toAnnotationString();
False,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,84,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,84,String toStringHelper(boolean forAnnotations) {
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,256,@Override
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,257,String toStringHelper(boolean forAnnotations) {
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,258,return super.toString();
False,src/com/google/javascript/rhino/jstype/BooleanType.java,src/com/google/javascript/rhino/jstype/BooleanType.java,102,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/BooleanType.java,src/com/google/javascript/rhino/jstype/BooleanType.java,102,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,163,ublic String toString() {
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,164,"eturn getReferenceName() + "".<"" + primitiveType + "">"";"
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,163,String toStringHelper(boolean forAnnotations) {
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,164,return forAnnotations ?
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,165,primitiveType.toString() :
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,166,"(getReferenceName() + "".<"" + primitiveType + "">"");"
False,src/com/google/javascript/rhino/jstype/EnumType.java,src/com/google/javascript/rhino/jstype/EnumType.java,144,ublic String toString() {
False,src/com/google/javascript/rhino/jstype/EnumType.java,src/com/google/javascript/rhino/jstype/EnumType.java,145,eturn getReferenceName();
True,src/com/google/javascript/rhino/jstype/EnumType.java,src/com/google/javascript/rhino/jstype/EnumType.java,144,String toStringHelper(boolean forAnnotations) {
True,src/com/google/javascript/rhino/jstype/EnumType.java,src/com/google/javascript/rhino/jstype/EnumType.java,145,"return forAnnotations ? ""Object"" : getReferenceName();"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,853,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,853,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,871,.append(typeOfThis.toString());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,871,b.append(typeOfThis.toStringHelper(forAnnotations));
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,878,"ppendArgString(b, p);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,878,"appendArgString(b, p, forAnnotations);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,883,"ppendArgString(b, p);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,883,"appendArgString(b, p, forAnnotations);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,888,.append(call.returnType);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,888,b.append(call.returnType.toStringHelper(forAnnotations));
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,894,"rivate void appendArgString(StringBuilder b, Node p) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,894,private void appendArgString(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,895,"StringBuilder b, Node p, boolean forAnnotations) {"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,896,"ppendVarArgsString(b, p.getJSType());"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,897,"appendVarArgsString(b, p.getJSType(), forAnnotations);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,898,"ppendOptionalArgString(b, p.getJSType());"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,899,"appendOptionalArgString(b, p.getJSType(), forAnnotations);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,900,.append(p.getJSType().toString());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,901,b.append(p.getJSType().toStringHelper(forAnnotations));
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,905,"rivate void appendVarArgsString(StringBuilder builder, JSType paramType) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,906,"private void appendVarArgsString(StringBuilder builder, JSType paramType,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,907,boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,911,"uilder.append(""...["").append(paramType.toString()).append(""]"");"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,913,"builder.append(""...["").append("
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,914,"paramType.toStringHelper(forAnnotations)).append(""]"");"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,916,"tringBuilder builder, JSType paramType) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,919,"StringBuilder builder, JSType paramType, boolean forAnnotations) {"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,922,"uilder.append(paramType).append(""="");"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,925,"builder.append(paramType.toStringHelper(forAnnotations)).append(""="");"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,96,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,96,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,100,eturn super.toString();
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,100,return super.toStringHelper(forAnnotations);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1144,"* A string representation of this type, suitable for printing"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1145,* in warnings.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1147,@Override
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1148,public String toString() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1149,return toStringHelper(false);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1161,"* A string representation of this type, suitable for printing"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1162,* in type annotations at code generation time.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1164,public final String toAnnotationString() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1165,return toStringHelper(true);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1169,* @param forAnnotations Whether this is for use in code generator
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1170,"*     annotations. Otherwise, it's for warnings."
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1172,abstract String toStringHelper(boolean forAnnotations);
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,156,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,156,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,180,ublic String toString() {
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,181,"eturn ""NoObject"";"
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,180,String toStringHelper(boolean forAnnotations) {
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,181,"return forAnnotations ? ""?"" : ""NoObject"";"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,87,ublic String toString() {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,88,"eturn ""NoResolvedType"";"
True,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,87,String toStringHelper(boolean forAnnotations) {
True,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,88,"return forAnnotations ? ""?"" : ""NoResolvedType"";"
False,src/com/google/javascript/rhino/jstype/NoType.java,src/com/google/javascript/rhino/jstype/NoType.java,114,ublic String toString() {
False,src/com/google/javascript/rhino/jstype/NoType.java,src/com/google/javascript/rhino/jstype/NoType.java,115,"eturn ""None"";"
True,src/com/google/javascript/rhino/jstype/NoType.java,src/com/google/javascript/rhino/jstype/NoType.java,114,String toStringHelper(boolean forAnnotations) {
True,src/com/google/javascript/rhino/jstype/NoType.java,src/com/google/javascript/rhino/jstype/NoType.java,115,"return forAnnotations ? ""?"" : ""None"";"
False,src/com/google/javascript/rhino/jstype/NullType.java,src/com/google/javascript/rhino/jstype/NullType.java,103,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/NullType.java,src/com/google/javascript/rhino/jstype/NullType.java,103,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/NumberType.java,src/com/google/javascript/rhino/jstype/NumberType.java,96,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/NumberType.java,src/com/google/javascript/rhino/jstype/NumberType.java,96,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,353,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,353,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,257,ublic String toString() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,258,eturn referencedType.toString();
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,257,String toStringHelper(boolean forAnnotations) {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,258,return referencedType.toStringHelper(forAnnotations);
False,src/com/google/javascript/rhino/jstype/StringType.java,src/com/google/javascript/rhino/jstype/StringType.java,91,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/StringType.java,src/com/google/javascript/rhino/jstype/StringType.java,91,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/TemplateType.java,src/com/google/javascript/rhino/jstype/TemplateType.java,64,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/TemplateType.java,src/com/google/javascript/rhino/jstype/TemplateType.java,64,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,404,Override public String toString() {
True,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,404,@Override String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,415,esult.append(t.toString());
True,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,415,result.append(t.toStringHelper(forAnnotations));
False,src/com/google/javascript/rhino/jstype/UnknownType.java,src/com/google/javascript/rhino/jstype/UnknownType.java,124,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/UnknownType.java,src/com/google/javascript/rhino/jstype/UnknownType.java,124,String toStringHelper(boolean forAnnotations) {
False,src/com/google/javascript/rhino/jstype/VoidType.java,src/com/google/javascript/rhino/jstype/VoidType.java,95,ublic String toString() {
True,src/com/google/javascript/rhino/jstype/VoidType.java,src/com/google/javascript/rhino/jstype/VoidType.java,95,String toStringHelper(boolean forAnnotations) {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,874,public void testEnumAnnotation1() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,875,assertTypeAnnotations(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,876,"""/** @enum {string} */ var Enum = {FOO: 'x', BAR: 'y'};"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,877,"""/** @enum {string} */\nvar Enum = {FOO:\""x\"", BAR:\""y\""};\n"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,880,public void testEnumAnnotation2() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,881,assertTypeAnnotations(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,882,"""var goog = goog || {};"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,883,"""/** @enum {string} */ goog.Enum = {FOO: 'x', BAR: 'y'};"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,884,"""/** @const */ goog.Enum2 = goog.x ? {} : goog.Enum;"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,885,"""var goog = goog || {};\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,886,"""/** @enum {string} */\ngoog.Enum = {FOO:\""x\"", BAR:\""y\""};\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,887,"""/** @type {(Object|{})} */\ngoog.Enum2 = goog.x ? {} : goog.Enum;\n"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,77,"var a = {};\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,78,"a.b = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,77,"""var a;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,78,"""a.b;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,96,"var a = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,96,"""var a;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,126,"""/** @type {{b: function (?): undefined}} */\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,127,"hello.b = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,128,"""hello.b;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,168,"var foobar = {};\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,169,"""var foobar;\n"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,174,"var foobar = {};\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,175,"""var foobar;\n"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,180,"var a = {};\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,181,"a.b = {};\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,182,"a.b.none = {};\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,181,"""var a;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,182,"""a.b;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,183,"""a.b.none;\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,294,// We don't care what the values of the object properties are.
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,295,"// They're ignored by the type checker, and even if they weren't, it'd"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,296,// be incomputable to get them correct in all cases
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,297,// (think complex objects).
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,294,"/** @enum {string}\n @export */ var E = {A:1, B:2};"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,299,"""/** @enum {string}\n @export */ var E = {A:8, B:9};"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,296,/ TODO(johnlenz): We would like this:
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,297,"/ ""/**\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,298,"/ "" * @enum {string}\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,299,"/"" */\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,300,"var E = {};\n"""
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,301,"""/** @enum {string} */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,302,"""var E = {A:1, B:2};\n"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,230,public void testTypeCheckCustomExterns2() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,231,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,232,"DEFAULT_EXTERNS + ""/** @enum {string} */ var Enum = {FOO: 1, BAR: 1};"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,233,"""/** @param {Enum} x */ function f(x) {} f(Enum.FOO); f(true);"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,234,"""actual parameter 1 of f does not match formal parameter\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,235,"""found   : boolean\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,236,"""required: Enum.<string>"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,237,false);
