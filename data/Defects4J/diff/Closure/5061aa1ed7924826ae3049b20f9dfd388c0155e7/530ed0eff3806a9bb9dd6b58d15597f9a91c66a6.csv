is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,20,* Represents possible error levels for JsonML errors.
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,22,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,24,public enum ErrorLevel {
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,25,"COMPILATION_ERROR,"
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,26,"COMPILATION_WARNING,"
True,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,src/com/google/javascript/jscomp/jsonml/ErrorLevel.java,27,"SYNTAX_ERROR,"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,19,import java.io.IOException;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,21,import java.util.ArrayList;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,22,import java.util.Arrays;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,23,import java.util.Collection;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,24,import java.util.Collections;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,25,import java.util.EnumMap;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,26,import java.util.List;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,27,import java.util.Map;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,28,import java.util.Map.Entry;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,31,* Class which represents JsonML element according to the specification at
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,32,"* ""http://code.google.com/p/es-lab/wiki/JsonMLASTFormat"""
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,34,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,36,public class JsonML {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,37,private final TagType type;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,38,"private Map<TagAttr, Object> attributes ="
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,39,"new EnumMap<TagAttr, Object>(TagAttr.class);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,40,private List<JsonML> children = new ArrayList<JsonML>();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,43,* Creates a new element with a given type.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,44,* @param type
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,46,public JsonML(TagType type) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,47,this.type = type;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,51,* Creates a new element.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,52,* @param type type of the element
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,53,* @param children children to append to the element
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,55,"public JsonML(TagType type, JsonML... children) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,56,"this(type, Arrays.asList(children));"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,59,"public JsonML(TagType type, List<? extends JsonML> children) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,60,"this(type, Collections.<TagAttr, Object>emptyMap(), children);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,63,"public JsonML(TagType type, Map<? extends TagAttr, ?> attributes) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,64,"this(type, attributes, Collections.<JsonML>emptyList());"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,67,"public JsonML(TagType type, Map<? extends TagAttr, ?> attributes,"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,68,List<? extends JsonML> children) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,69,this.type = type;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,70,this.attributes.putAll(attributes);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,71,appendChildren(children);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,75,* Inserts the given JsonML element at the given position in the
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,76,* list of children.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,77,* @param index index at which the given element is to be inserted
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,78,* @param element JsonML element to be inserted
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,80,"public void addChild(int index, JsonML element) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,81,"children.add(index, element);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,85,* Appends a given child element to the list of children.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,86,* @param element JsonML element to append
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,88,public void appendChild(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,89,children.add(element);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,93,* Appends a collection of children to the back of the list of children.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,94,* @param elements collection of JsonML elements to append
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,96,public void appendChildren(Collection<? extends JsonML> elements) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,97,children.addAll(elements);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,101,* Returns number of the children.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,103,public int childrenSize() {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,104,return children.size();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,108,* Removes all elements from the list of children.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,110,public void clearChildren() {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,111,setChildren();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,115,* Returns value associated with a given attribute.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,116,* @param name name of the attribute
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,117,* @return associated value or null if the attribute is not present
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,119,public Object getAttribute(TagAttr name) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,120,return attributes.get(name);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,124,* Returns a map with attributes and respective values.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,126,"public Map<TagAttr, Object> getAttributes() {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,127,return attributes;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,131,* Returns child at a given position.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,133,public JsonML getChild(int index) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,134,return children.get(index);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,138,* Returns a list of all children.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,140,public List<JsonML> getChildren() {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,141,return children;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,145,* Returns the portion of children list between the specified
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,146,"* fromIndex, inclusive, and toIndex, exclusive."
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,147,* @param fromIndex low endpoint (inclusive)
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,148,* @param toIndex high endpoint (exclusive)
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,150,"public List<JsonML> getChildren(int fromIndex, int toIndex) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,151,"return children.subList(fromIndex, toIndex);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,155,* Returns type of the JsonML element.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,157,public TagType getType() {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,158,return type;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,162,* Returns true if the JsonML element has at least one child.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,164,public boolean hasChildren() {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,165,return !children.isEmpty();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,169,* Sets value for a given attribute.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,170,* @param name name of the attribute
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,171,* @param value value to associate with the attribute
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,173,"public void setAttribute(TagAttr name, Object value) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,174,"attributes.put(name, value);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,178,* Sets attributes of the JsonML element.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,179,* @param attributes map with attributes and their values
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,181,"public void setAttributes(Map<TagAttr, Object> attributes) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,182,this.attributes = attributes;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,186,* Replaces the element at the given position in the list of children wit
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,187,* the given JsonML element.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,188,* @param index index of element to replace
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,189,* @param element JsonML element to append
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,191,"public void setChild(int index, JsonML element) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,192,"children.set(index, element);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,196,* Replaces all elements in the list of children with the given
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,197,* JsonML elements.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,198,* @param children a comma separated list of JsonML elements
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,200,public void setChildren(JsonML... children) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,201,this.children.clear();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,202,for (JsonML child : children) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,203,this.children.add(child);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,208,* Replaces all elements in the list of children with the given
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,209,* list of JsonML elements..
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,210,* @param children a list of JsonML elements.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,212,public void setChildren(List<JsonML> children) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,213,this.children = children;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,216,@Override
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,217,public String toString() {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,218,StringBuilder sb = new StringBuilder();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,219,"toString(sb, true, true);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,220,return sb.toString();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,223,"private void toString(StringBuilder sb, boolean printAttributes,"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,224,boolean printChildren) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,225,"sb.append(""[\"""");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,226,"escapeStringOnto(type.name(), sb);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,227,"sb.append('""');"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,229,if (printAttributes) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,230,"sb.append("", {"");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,231,boolean first = true;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,232,"for (Entry<TagAttr, Object> entry : attributes.entrySet()) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,233,if (first) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,234,first = false;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,235,} else {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,236,"sb.append("", "");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,238,"sb.append('""');"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,239,"escapeStringOnto(entry.getKey().toString(), sb);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,240,"sb.append(""\"": "");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,241,Object value = entry.getValue();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,242,if (value == null) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,243,"sb.append(""null"");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,244,} else if (value instanceof String) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,245,"sb.append('""');"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,246,"escapeStringOnto((String) value, sb);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,247,"sb.append('""');"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,248,} else {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,249,sb.append(value);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,252,"sb.append(""}"");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,255,if (printChildren) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,256,for (JsonML child : children) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,257,"sb.append("", "");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,258,sb.append(child.toString());
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,261,sb.append(']');
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,266,* Encodes the specified string and appends it to the given StringBuilder.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,268,"private static void escapeStringOnto(String s, StringBuilder sb) {"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,269,"int pos = 0, n = s.length();"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,270,for (int i = 0; i < n; ++i) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,271,char ch = s.charAt(i);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,272,switch (ch) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,273,"case '\r': case '\n': case '""': case '\\':"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,274,// these two characters are the exceptions to the general rule
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,275,// that JSON is a syntactic subset of JavaScript
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,276,"// From JSON's perspective they are considered to be whitespaces,"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,277,// while ES5 specifies them as line terminators.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,278,case '\u2028': case '\u2029':
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,279,"String hex = Integer.toString(ch, 16);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,280,"sb.append(s, pos, i)"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,281,".append(""\\u"").append(""0000"", hex.length(), 4).append(hex);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,282,pos = i + 1;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,283,break;
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,286,"sb.append(s, pos, n);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,290,* Prints a JsonML tree in a human readable format.
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,292,public String toStringTree() {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,293,try {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,294,StringBuilder s = new StringBuilder();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,295,"toStringTreeHelper(this, 0, s);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,296,return s.toString();
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,297,} catch (IOException e) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,298,"throw new RuntimeException(""Should not happen\n"" + e);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,302,"private static void toStringTreeHelper(JsonML element, int level,"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,303,StringBuilder sb) throws IOException {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,304,for (int i = 0; i < level; ++i) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,305,"sb.append(""    "");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,307,"element.toString(sb, true, false);"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,308,"sb.append(""\n"");"
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,309,for (JsonML child : element.getChildren()) {
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,310,"toStringTreeHelper(child, level + 1, sb);"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,20,import com.google.javascript.jscomp.AbstractCompiler;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,21,import com.google.javascript.jscomp.SourceAst;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,22,import com.google.javascript.jscomp.SourceFile;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,23,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,25,import java.util.ArrayDeque;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,26,import java.util.Deque;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,29,* Generates an AST from a JsonML source file.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,31,* JsonML format for representation of JavaScript is specified
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,32,"* <a href=""http://code.google.com/p/es-lab/wiki/JsonMLASTFormat"">here.</a>"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,34,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,37,public class JsonMLAst implements SourceAst {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,38,private static final long serialVersionUID = 1L;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,39,"private static final String DEFAULT_SOURCE_NAME = ""[[jsonmlsource]]"";"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,42,* Root element of JavaScript source which is represented by a JsonML tree.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,43,* See JsonML class for more details.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,45,private JsonML jsonml;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,48,* Root node of internal JS Compiler AST which represents the same source.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,49,"* In order to get the tree, getAstRoot() has to be called."
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,51,private Node root;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,53,public JsonMLAst(JsonML jsonml) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,54,this.jsonml = jsonml;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,57,@Override
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,58,public void clearAst() {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,59,root = null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,63,* Generates AST based on AST representation
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,64,* @see com.google.javascript.jscomp.SourceAst#getAstRoot(AbstractCompiler)
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,66,@Override
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,67,public Node getAstRoot(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,68,if (root == null) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,69,createAst(compiler);
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,71,return root;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,74,@Override
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,75,public SourceFile getSourceFile() {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,76,return null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,79,@Override
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,80,public void setSourceFile(SourceFile file) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,81,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,82,"""JsonMLAst cannot be associated with a SourceFile instance."");"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,85,public String getSourceName() {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,86,Object obj = jsonml.getAttribute(TagAttr.SOURCE);
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,87,if (obj instanceof String) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,88,return (String) obj;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,89,} else {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,90,return DEFAULT_SOURCE_NAME;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,94,private void createAst(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,95,Reader translator = new Reader();
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,96,translator.setRootElement(jsonml);
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,97,try {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,98,root = translator.parse(compiler);
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,99,} catch (JsonMLException e) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,100,// compiler should already have JSErrors
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,104,public JsonML convertToJsonML () {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,105,if (root != null) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,106,Writer converter = new Writer();
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,107,return converter.processAst(root);
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,109,return null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,113,* Returns a JsonML element with the specified number from the tree in
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,114,* pre-order walk.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,116,* @return n-th node or null if the node does not exists
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,118,public JsonML getElementPreOrder(int n) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,119,Preconditions.checkState(jsonml != null);
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,121,if (n == 0) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,122,return jsonml;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,125,Deque<WalkHelper> stack =
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,126,new ArrayDeque<WalkHelper>();
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,127,"stack.push(new WalkHelper(jsonml, 0));"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,128,int i = 0;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,129,while (i <= n && !stack.isEmpty()) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,130,WalkHelper current = stack.pop();
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,131,JsonML element = current.element;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,132,Integer childno = current.childno;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,134,// not all the children of this node have been visited
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,135,if (childno < element.childrenSize()) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,136,"stack.push(new WalkHelper(element, childno + 1));"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,137,// we visit the next child
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,138,i++;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,139,element = element.getChild(childno);
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,141,if (i == n) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,142,return element;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,145,// put the next child on the stack to preserve pre-order
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,146,"stack.push(new WalkHelper(element, 0));"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,149,return null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,153,* Represents a walk step while the JsonML tree is traversed.
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,155,private static class WalkHelper {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,156,// JsonML element that corresponds to this step
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,157,final JsonML element;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,159,// number of children of the element which has already been visited
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,160,final int childno;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,162,"WalkHelper(JsonML element, int childno) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,163,this.element = element;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,164,this.childno = childno;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,2,* Copyright 2009 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,19,import com.google.javascript.jscomp.CheckLevel;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,20,import com.google.javascript.jscomp.DiagnosticType;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,21,import com.google.javascript.jscomp.JSError;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,24,* Class used to represent errors which correspond to JsonML elements.
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,26,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,28,public class JsonMLError {
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,31,private final DiagnosticType type;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,33,/** Description of the error */
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,34,public final String description;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,36,/** Name of the source */
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,37,public final String sourceName;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,39,/** Node where the warning occurred. */
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,40,public final JsonML element;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,42,/** Line number of the source */
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,43,public final int lineNumber;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,45,/** Level */
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,46,public final ErrorLevel level;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,48,"private JsonMLError(DiagnosticType type, String sourceName, JsonML element,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,49,"int lineNumber, ErrorLevel level, String... arguments) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,50,this.type = type;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,51,this.description = type.format.format(arguments);
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,52,this.sourceName = sourceName;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,53,this.element = element;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,54,this.lineNumber = lineNumber;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,55,this.level = level;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,58,"private JsonMLError(String description, DiagnosticType type,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,59,"String sourceName, JsonML element, int lineNumber, ErrorLevel level) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,60,this.type = type;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,61,this.description = description;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,62,this.sourceName = sourceName;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,63,this.element = element;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,64,this.lineNumber = lineNumber;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,65,this.level = level;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,68,"public static JsonMLError make(DiagnosticType type, String sourceName,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,69,"JsonML element, int lineNumber, ErrorLevel level, String... arguments) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,70,"return new JsonMLError(type, sourceName, element, lineNumber, level,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,71,arguments);
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,74,"public static JsonMLError make(JSError error, JsonMLAst ast) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,75,// try to find the corresponding JsonML element
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,76,// it is stored as line number of the JSError
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,77,int n = error.lineNumber;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,78,JsonML element = ast.getElementPreOrder(n);
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,80,ErrorLevel level = error.level == CheckLevel.ERROR
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,81,? ErrorLevel.COMPILATION_ERROR
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,82,: ErrorLevel.COMPILATION_WARNING;
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,84,"return new JsonMLError(error.getType(), error.sourceName, element, 0,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,src/com/google/javascript/jscomp/jsonml/JsonMLError.java,85,"level, error.description);"
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,20,* Class used to report internal exceptions which concern JsonML.
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,22,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,25,class JsonMLException extends Exception {
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,26,private static final long serialVersionUID = 1L;
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,28,JsonMLException() {}
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,30,JsonMLException(String message) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,src/com/google/javascript/jscomp/jsonml/JsonMLException.java,31,super(message);
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,19,import org.json.JSONArray;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,20,import org.json.JSONObject;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,22,import java.util.Iterator;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,25,* JsonMLUtil contains utilities for the JsonML object.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,27,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,29,public class JsonMLUtil {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,32,* Checks if the specified JsonML element represents an expression.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,34,public static boolean isExpression(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,35,switch (element.getType()) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,36,case ArrayExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,37,case AssignExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,38,case BinaryExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,39,case CallExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,40,case ConditionalExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,41,case CountExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,42,case DeleteExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,43,case EvalExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,44,case FunctionExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,45,case IdExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,46,case InvokeExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,47,case LiteralExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,48,case LogicalAndExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,49,case LogicalOrExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,50,case MemberExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,51,case NewExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,52,case ObjectExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,53,case RegExpExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,54,case ThisExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,55,case TypeofExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,56,case UnaryExpr:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,57,return true;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,58,default:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,59,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,64,* Parses JSON string which contains serialized JsonML content.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,65,* @param jsonml string representation of JsonML
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,66,* @return root element of a JsonML tree
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,68,public static JsonML parseString(String jsonml) throws Exception {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,69,return parseElement(new JSONArray(jsonml));
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,72,private static JsonML parseElement(JSONArray element)
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,73,throws Exception {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,74,JsonML jsonMLElement = new JsonML(TagType.valueOf(element.getString(0)));
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,76,// set attributes for the JsonML element
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,77,JSONObject attrs = element.getJSONObject(1);
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,78,Iterator<?> it = attrs.keys();
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,79,while (it.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,80,String key = (String) it.next();
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,81,Object value = attrs.get(key);
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,82,TagAttr tag = TagAttr.get(key);
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,84,// an unsupported attribute
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,85,if (tag == null) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,86,continue;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,89,if (value instanceof Number) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,90,value = ((Number) value).doubleValue();
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,93,switch (tag) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,94,case NAME:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,95,case BODY:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,96,case FLAGS:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,97,case OP:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,98,case TYPE:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,99,case IS_PREFIX:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,100,case LABEL:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,101,"jsonMLElement.setAttribute(tag, value);"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,102,break;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,103,case VALUE:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,104,// we do not want to deal with JSONObject.NULL
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,105,if (value != null && value.equals(null)) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,106,value = null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,109,// we want all numbers to be stored as double values
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,110,if (value instanceof Number) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,111,"jsonMLElement.setAttribute(tag, ((Number) value).doubleValue());"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,112,} else {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,113,"jsonMLElement.setAttribute(tag, value);"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,115,break;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,116,default:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,120,// recursively set children for the JsonML element
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,121,for (int i = 2; i < element.length(); ++i) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,122,jsonMLElement.appendChild(parseElement(element.getJSONArray(i)));
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,125,return jsonMLElement;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,129,* Compares two specified JsonML trees.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,131,* Two JsonML nodes are considered to be equal when the following conditions
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,132,* are met:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,134,* - have the same type
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,135,* - have the same attributes from the list of attributes to compare
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,136,* - have the same number of children
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,137,* - nodes in each pair of corresponding children are equal
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,139,"* Two JsonML trees are equal, if their roots are equal."
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,141,"* When two nodes are compared, only the following attributes are taken"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,142,* into account:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,143,"* TagAttr.BODY, TagAttr.FLAGS, TagAttr.IS_PREFIX, TagAttr.LABEL,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,144,"* TagAttr.NAME, TagAttr.OP, TagAttr.TYPE, TagAttr.VALUE"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,145,"* Generally, the comparator does not care about debugging attributes."
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,147,* @return
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,148,* Returns string describing the inequality in the following format:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,150,* The trees are not equal:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,152,* Tree1:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,153,* -- string representation of Tree1
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,155,* Tree2:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,156,* -- string representation of Tree2
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,158,* Subtree1:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,159,* -- string representation of the subtree of the Tree1 which is not
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,160,* -- equal to the corresponding subtree of the Tree2
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,162,* Subtree2:
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,163,* -- see Subtree1
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,165,"* If the trees are equal, null is returned."
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,167,"public static String compare(JsonML tree1, JsonML tree2) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,168,"return (new JsonMLComparator(tree1, tree2)).compare();"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,172,"* Returns true if the trees are equal, false otherwise."
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,174,"static boolean compareSilent(JsonML tree1, JsonML tree2) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,175,"return (new JsonMLComparator(tree1, tree2)).compareSilent();"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,179,* Helper class which actually compares two given JsonML trees.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,182,private static class JsonMLComparator {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,183,private static final TagAttr[] ATTRS_TO_COMPARE = {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,184,"TagAttr.BODY, TagAttr.FLAGS, TagAttr.IS_PREFIX, TagAttr.LABEL,"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,185,"TagAttr.NAME, TagAttr.OP, TagAttr.TYPE, TagAttr.VALUE"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,187,private JsonML treeA;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,188,private JsonML treeB;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,189,private JsonML mismatchA;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,190,private JsonML mismatchB;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,192,"JsonMLComparator(JsonML treeA, JsonML treeB) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,193,this.treeA = treeA;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,194,this.treeB = treeB;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,195,"if (compareElements(treeA, treeB)) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,196,mismatchA = null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,197,mismatchB = null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,201,"private boolean setMismatch(JsonML a, JsonML b) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,202,mismatchA = a;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,203,mismatchB = b;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,204,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,208,* Check if two elements are equal (including comparing their children).
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,210,"private boolean compareElements(JsonML a, JsonML b) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,211,// the elements are considered to be equal if they are both null
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,212,if (a == null || b == null) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,213,if (a == null && b == null) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,214,return true;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,215,} else {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,216,"return setMismatch(a, b);"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,220,// the elements themselves have to be equivalent
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,221,"if (!areEquivalent(a, b)) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,222,"return setMismatch(a, b);"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,225,// they both have to have the same number of children
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,226,if (a.childrenSize() != b.childrenSize()) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,227,"return setMismatch(a, b);"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,230,// all the children has to be the same
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,231,Iterator<JsonML> itA = a.getChildren().listIterator();
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,232,Iterator<JsonML> itB = b.getChildren().listIterator();
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,233,while (itA.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,234,"if (!compareElements(itA.next(), itB.next())) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,235,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,239,return true;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,243,* Checks if two elements are semantically the same.
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,245,"private boolean areEquivalent(JsonML a, JsonML b) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,246,// both elements must have the same type
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,247,if (a.getType() != b.getType()) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,248,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,251,for (TagAttr attr : ATTRS_TO_COMPARE) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,252,"if (!compareAttribute(attr, a, b)) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,253,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,256,return true;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,259,"private boolean compareAttribute(TagAttr attr, JsonML a, JsonML b) {"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,260,Object valueA = a.getAttributes().get(attr);
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,261,Object valueB = b.getAttributes().get(attr);
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,263,// none of the elements have the attribute
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,264,if (valueA == null && valueB == null) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,265,return true;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,268,// only one of the elements has the attribute
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,269,if (valueA == null || valueB == null) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,270,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,273,// check if corresponding values are equal
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,274,if (!(valueA.equals(valueB))) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,275,"// there is still a chance that both attributes are numbers, but are"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,276,// represented by different classes
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,278,"Double doubleA = null, doubleB = null;"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,280,if (valueA instanceof Number) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,281,doubleA = ((Number) valueA).doubleValue();
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,282,} else if (valueA instanceof String) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,283,doubleA = Double.valueOf((String) valueA);
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,284,} else {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,285,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,288,if (valueB instanceof Number) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,289,doubleB = ((Number) valueB).doubleValue();
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,290,} else if (valueB instanceof String) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,291,doubleB = Double.valueOf((String) valueB);
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,292,} else {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,293,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,296,if (!doubleA.equals(doubleB)) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,297,return false;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,301,return true;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,304,private boolean compareSilent() {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,305,return mismatchA == null && mismatchB == null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,308,private String compare() {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,309,if (compareSilent()) {
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,310,return null;
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,312,"return ""The trees are not equal: "" +"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,313,"""\n\nTree1:\n "" + treeA.toStringTree() +"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,314,"""\n\nTree2:\n "" + treeB.toStringTree() +"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,315,"""\n\nSubtree1:\n "" + mismatchA.toStringTree() +"
True,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java,316,"""\n\nSubtree2:\n "" + mismatchB.toStringTree();"
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,20,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,21,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,24,* Non public methods copied from com.google.javascript.jscomp.NodeUtil class.
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,26,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,28,class NodeUtil {
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,31,* @return Whether the node represents a FOR-IN loop.
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,33,static boolean isForIn(Node n) {
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,34,return n.getType() == Token.FOR
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,35,&& n.getChildCount() == 3;
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,39,* @return Whether the node is used as a statement.
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,41,static boolean isStatement(Node n) {
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,42,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,43,// It is not possible to determine definitely if a node is a statement
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,44,// or not if it is not part of the AST.  A FUNCTION node can be
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,45,// either part of an expression or a statement.
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,46,Preconditions.checkState(parent != null);
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,47,switch (parent.getType()) {
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,48,case Token.SCRIPT:
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,49,case Token.BLOCK:
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,50,case Token.LABEL:
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,51,return true;
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,52,default:
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,53,return false;
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,58,* Is this node a function declaration? A function declaration is a function
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,59,* that has a name that is added to the current scope (i.e. a function that
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,60,* is not part of a expression; see {@link #isFunctionExpression}).
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,62,static boolean isFunctionDeclaration(Node n) {
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,63,return n.getType() == Token.FUNCTION && isStatement(n);
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,67,* Is this node a hoisted function declaration? A function declaration in the
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,68,* scope root is hoisted to the top of the scope.
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,69,* See {@link #isFunctionDeclaration}).
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,71,static boolean isHoistedFunctionDeclaration(Node n) {
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,72,return isFunctionDeclaration(n)
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,73,&& (n.getParent().getType() == Token.SCRIPT
True,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,src/com/google/javascript/jscomp/jsonml/NodeUtil.java,74,|| n.getParent().getParent().getType() == Token.FUNCTION);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,20,import com.google.common.collect.Maps;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,21,import com.google.common.collect.Sets;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,22,import com.google.javascript.jscomp.AbstractCompiler;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,23,import com.google.javascript.jscomp.DiagnosticType;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,24,import com.google.javascript.jscomp.JSError;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,25,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,26,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,28,import java.util.HashMap;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,29,import java.util.List;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,30,import java.util.Map;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,31,import java.util.Set;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,34,* Traverse JsonML source tree and generates AST.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,36,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,38,public class Reader {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,40,static final DiagnosticType JSONML_SYNTAX = DiagnosticType.error(
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,41,"""JSONML_SYNTAX"", ""Syntax error: {0}"");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,43,/** Root element of JsonML tree which contains JavaScript source. */
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,44,private JsonML rootElement;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,46,/** Name of JavaScript source file */
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,47,private String sourceName;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,49,/** Error reporter */
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,50,private ErrorReporter errorReporter;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,52,/** List of ES5 directives supported by JsonML */
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,53,"private final Set<String> ALLOWED_DIRECTIVES = Sets.newHashSet(""use strict"");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,55,/** Number of node in JsonML order which is currently processed */
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,56,private int nodeIndex;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,59,* Inner class which is responsible for passing reader errors
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,60,* to the JS compiler.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,62,private class ErrorReporter {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,63,private AbstractCompiler compiler;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,65,ErrorReporter(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,66,this.compiler = compiler;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,69,"private void report(JsonML element, String...arguments)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,70,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,71,"report(JSONML_SYNTAX, element, arguments);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,74,"private void report(DiagnosticType type, JsonML element,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,75,String... arguments) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,76,// nodeIndex is the number of the node in which the error occurred
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,77,// we will store it in line number
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,78,int lineno = nodeIndex;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,79,int charno = -1;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,81,"report(JSError.make(sourceName, lineno, charno, type, arguments));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,84,"private void report(DiagnosticType type, String... arguments)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,85,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,86,"report(JSError.make(type, arguments));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,90,* Reports a new parser error to the compiler and terminates the job.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,91,* @param error JSError instance to be passed to the compiler
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,93,private void report(JSError error) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,94,"report(error, true);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,98,* Reports a new parser error to the compiler and terminates the job
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,99,* if the error is fatal.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,100,* @param error JSError instance to be passed to the compiler
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,101,"* @param terminal if true, parsing is terminated by throwing exception"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,103,"private void report(JSError error, boolean terminal)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,104,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,105,compiler.report(error);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,106,if (terminal) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,107,throw new JsonMLException();
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,112,// TODO(dhans): Maybe this state can be replaced with a simpler check
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,114,* Stores state if EXPR_RESULT node should be inserted. The reason why
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,115,* we have to keep track on that is JsonML representation does not have this
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,116,* information.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,118,private boolean insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,120,public void setRootElement(JsonML rootElement) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,121,this.rootElement = rootElement;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,125,* Generates AST for a specified JsonML source file.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,126,* @return root node of the generated AST
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,127,* @throws JsonMLException if an error occurs
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,129,public Node parse(AbstractCompiler compiler) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,130,if (compiler == null) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,131,// TODO(dhans): Review error handling
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,132,// maybe throw an exception that compiler is required for errors.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,133,return null;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,136,errorReporter = this.new ErrorReporter(compiler);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,137,Node root = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,138,nodeIndex = -1;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,140,"transformElement(rootElement, root);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,141,return root;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,145,"* Retrieves value of an attribute, but does not throw an exception if"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,146,* the attribute is not present for a specified JsonML element.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,147,* @param type desired type of the attribute
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,148,* @return value of the attribute or null if it is not specified
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,149,* @throws JsonMLException i.e. when the value has a wrong type
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,151,"private <T> T getOptionalAttribute(JsonML element, TagAttr attr,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,152,Class<T> type) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,153,"return getAttribute(element, attr, type, true);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,157,* Retrieves value of an attribute and throws an exception if
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,158,* the attribute is not present for a specified JsonML element.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,159,* @param type desired type of the attribute
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,160,* @return value of the attribute
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,161,* @throws JsonMLException i.e. when the attribute does not exist
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,163,"private <T> T getAttribute(JsonML element, TagAttr attr, Class<T> type)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,164,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,165,"return getAttribute(element, attr, type, false);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,168,"private <T> T getAttribute(JsonML element, TagAttr attr, Class<T> type,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,169,boolean optional) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,170,Object value = element.getAttribute(attr);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,172,if (value == null) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,173,if (type == null || optional) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,174,return null;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,177,throw new JsonMLException(
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,178,"""Missing "" + attr.name() + "" attribute for """
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,179,"+ element.getType().name() + "" element."");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,182,"// Double type is a special case, as it might be represented by all"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,183,// Number types or even by certain strings which contain only digit chars
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,184,if (type.equals(Double.class)) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,185,if (value instanceof Number) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,186,return type.cast(((Number) value).doubleValue());
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,188,if (value instanceof String) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,189,return type.cast(Double.valueOf((String) value));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,192,throw new JsonMLException(
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,193,"""Wrong type of "" + attr.name() + "" attribute. """
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,194,"+ ""Received: "" + value.getClass() + "". Expected: "" + type.getName());"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,197,if (type.isInstance(value)) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,198,return type.cast(value);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,201,throw new JsonMLException(
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,202,"""Wrong type of "" + attr.name() + ""attribute. """
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,203,"+ ""Received: "" + value.getClass() + "". Expected: "" + type.getName());"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,207,* Retrieves an attribute whose type should be Object.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,209,"private Object getObjectAttribute(JsonML element, TagAttr attr)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,210,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,211,"return getAttribute(element, attr, Object.class);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,215,* Retrieves an attribute whose type should be String.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,217,"private String getStringAttribute(JsonML element, TagAttr attr)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,218,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,219,"return getAttribute(element, attr, String.class);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,222,private void validate(JsonML element) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,223,String errorMessage = Validator.validate(element);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,224,if (errorMessage != null) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,225,"errorReporter.report(element, errorMessage);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,230,* Recursively transforms JsonML tree into AST.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,232,* @param element JsonML element to transform
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,233,"* @param parent current parent AST node, i.e. when the element is"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,234,* transformed
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,235,"* to a new AST node, it should be added as a last child to the parent Node."
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,237,"private void transformElement(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,238,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,239,// next element is transformed
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,240,nodeIndex++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,242,// the element has to be validated
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,243,validate(element);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,245,// determine if EXPR_RESULT should be inserted
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,246,if (insertExprResultState && JsonMLUtil.isExpression(element)) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,247,"transformExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,248,return;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,251,switch (element.getType()) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,252,case ArrayExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,253,"transformArrayExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,254,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,255,case AssignExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,256,"transformAssignExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,257,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,258,case BinaryExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,259,"transformBinaryExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,260,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,261,case BlockStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,262,"transformBlock(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,263,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,264,case BreakStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,265,"transformBreakStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,266,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,267,case CallExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,268,"transformCallExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,269,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,270,case Case:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,271,"transformCase(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,272,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,273,case CatchClause:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,274,"transformCatchClause(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,275,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,276,case ConditionalExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,277,"transformConditionalExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,278,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,279,case ContinueStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,280,"transformContinueStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,281,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,282,case CountExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,283,"transformCountExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,284,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,285,case DataProp:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,286,"transformDataProp(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,287,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,288,case DefaultCase:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,289,"transformDefaultCase(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,290,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,291,case DeleteExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,292,"transformDeleteExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,293,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,294,case DoWhileStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,295,"transformDoWhileStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,296,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,297,case Empty:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,298,"transformEmpty(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,299,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,300,case EmptyStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,301,"transformEmptyStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,302,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,303,case EvalExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,304,"transformEvalExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,305,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,306,case ForInStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,307,"transformForInStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,308,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,309,case ForStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,310,"transformForStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,311,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,312,case FunctionDecl:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,313,"transformFunctionDecl(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,314,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,315,case FunctionExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,316,"transformFunctionExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,317,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,318,case IdExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,319,"transformIdExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,320,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,321,case IdPatt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,322,"transformIdPatt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,323,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,324,case IfStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,325,"transformIfStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,326,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,327,case InitPatt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,328,"transformInitPatt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,329,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,330,case InvokeExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,331,"transformInvokeExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,332,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,333,case LabelledStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,334,"transformLabelledStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,335,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,336,case LiteralExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,337,"transformLiteralExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,338,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,339,case LogicalAndExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,340,"transformLogicalAndExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,341,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,342,case LogicalOrExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,343,"transformLogicalOrExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,344,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,345,case MemberExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,346,"transformMemberExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,347,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,348,case NewExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,349,"transformNewExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,350,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,351,case ObjectExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,352,"transformObjectExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,353,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,354,case ParamDecl:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,355,"transformParamDecl(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,356,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,357,case Program:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,358,"transformProgram(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,359,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,360,case PrologueDecl:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,361,"transformPrologueDecl(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,362,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,363,case RegExpExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,364,"transformRegExpExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,365,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,366,case ReturnStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,367,"transformReturnStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,368,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,369,case SwitchStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,370,"transformSwitchStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,371,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,372,case ThisExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,373,"transformThisExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,374,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,375,case ThrowStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,376,"transformThrowStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,377,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,378,case TryStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,379,"transformTryStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,380,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,381,case TypeofExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,382,"transformTypeofExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,383,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,384,case UnaryExpr:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,385,"transformUnaryExpr(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,386,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,387,case VarDecl:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,388,"transformVarDecl(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,389,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,390,case WhileStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,391,"transformWhileStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,392,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,393,case WithStmt:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,394,"transformWithStmt(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,395,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,400,* Helper functions.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,401,* Usually called by functions which process particular JsonML elements.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,404,"private void transformAllChildren(JsonML element, Node parent,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,405,boolean newState) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,406,"transformElements(element.getChildren(), parent, newState);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,409,"private void transformAllChildren(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,410,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,411,"transformElements(element.getChildren(), parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,414,"private void transformAllChildrenFromIndex(JsonML element, Node parent,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,415,"int fromIndex, boolean newState) throws JsonMLException {"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,416,transformElements(element.getChildren().subList(
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,417,"fromIndex, element.childrenSize()), parent, newState);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,420,"private void transformAllChildrenFromIndex(JsonML element, Node parent,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,421,int fromIndex) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,422,transformElements(element.getChildren().subList(
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,423,"fromIndex, element.childrenSize()), parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,426,"private void transformElements(List<JsonML> elements, Node parent,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,427,boolean newState) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,428,boolean oldState = insertExprResultState;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,429,insertExprResultState = newState;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,430,"transformElements(elements, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,431,insertExprResultState = oldState;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,434,"private void transformElements(List<JsonML> elements, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,435,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,436,for (JsonML element : elements) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,437,"transformElement(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,442,* Responsible for inserting EXPR_RESULT nodes.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,444,"private boolean transformExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,445,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,446,boolean result = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,447,if (insertExprResultState) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,448,Node node = new Node(Token.EXPR_RESULT);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,449,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,450,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,451,nodeIndex--; // the same node will be transformed again
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,452,"transformElement(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,453,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,454,result = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,456,return result;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,460,* Generic function responsible for dealing with JsonML elements describing
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,461,* for loop (ForStmt and ForInStmt).
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,463,"private void transformForLoop(JsonML element, Node parent, int childno)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,464,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,465,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,466,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,468,"Node node = createNode(Token.FOR, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,469,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,471,JsonML child;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,472,for (int i = 0; i < childno; ++i) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,473,child = element.getChild(i);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,474,if (child.getType() == TagType.EmptyStmt ||
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,475,child.getType() == TagType.Empty) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,476,nodeIndex++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,477,node.addChildToBack(new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,478,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,479,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,483,"transformPotentiallyUnwrappedBlock(element.getChild(childno), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,484,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,488,* Generic function responsible for dealing with the following JsonML
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,489,* elements: BreakStmt and ContinueStmt.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,491,"private void transformJumpStmt(JsonML element, Node parent, int type)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,492,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,493,"Node node = createNode(type, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,494,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,496,"String label = getOptionalAttribute(element, TagAttr.LABEL, String.class);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,497,if (label != null) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,498,"node.addChildToBack(Node.newString(Token.LABEL_NAME, label));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,503,* Generic function responsible for dealing with JsonML elements describing
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,504,* logical two arguments expressions: LogicalAndExpr and LogicalOrExpr.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,506,"private void transformLogicalExpr(JsonML element, Node parent, int type)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,507,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,508,"transformTwoArgumentExpr(element, parent, type);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,512,* Generic function responsible for dealing with all kind of expressions
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,513,* which are passed exactly two arguments.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,515,"private void transformTwoArgumentExpr(JsonML element, Node parent,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,516,int type) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,517,"Node node = createNode(type, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,518,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,519,"transformAllChildren(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,523,"* Transforms an element which should be transformed into a BLOCK node, but"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,524,"* may not be represented by BlockStmt. In this case, additional BLOCK node"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,525,* is created.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,527,"private void transformPotentiallyUnwrappedBlock(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,528,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,530,"// in theory it should be always EmptyStmt, but due to possible"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,531,// compatibility issues Empty element is allowed as well
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,532,if (element.getType() == TagType.EmptyStmt ||
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,533,element.getType() == TagType.Empty) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,534,nodeIndex++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,535,// Empty elements are only replaced by BLOCK node
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,536,Node block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,537,parent.addChildToBack(block);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,538,"block.putBooleanProp(Node.EMPTY_BLOCK, true);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,539,} else if (element.getType() != TagType.BlockStmt) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,540,Node block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,541,parent.addChildToBack(block);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,542,boolean state = insertExprResultState;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,543,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,544,"transformElement(element, block);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,545,insertExprResultState = state;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,546,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,547,nodeIndex++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,548,"transformBlock(element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,553,* Main functions.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,554,* Functions responsible for handling particular JsonML elements. Depending
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,555,"* on type, transformElement function dispatches actual work to"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,556,* the corresponding function below.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,559,"private void transformArrayExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,560,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,562,"Node node = createNode(Token.ARRAYLIT, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,563,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,565,// iterate through all the children and look for empty elements
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,566,int skipCount = 0;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,567,for (JsonML child : element.getChildren()) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,568,if (child.getType() == TagType.Empty) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,569,skipCount++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,571,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,574,"// if at least one empty element occurs, set up SKIP_INDEXES_PROP"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,575,if (skipCount > 0) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,576,int [] skipIndexes = new int[skipCount];
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,577,int i = 0;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,578,int j = 0;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,579,for (JsonML child : element.getChildren()) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,580,if (child.getType() == TagType.Empty) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,581,skipIndexes[i] = j;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,582,++i;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,584,++j;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,586,"node.putProp(Node.SKIP_INDEXES_PROP, skipIndexes);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,590,"private void transformAssignExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,591,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,592,"String op = getStringAttribute(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,593,int type = Operator.getNodeTypeForAssignOp(op);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,594,"transformTwoArgumentExpr(element, parent, type);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,597,"private void transformBinaryExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,598,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,599,"String op = getStringAttribute(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,600,int type = Operator.getNodeTypeForBinaryOp(op);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,601,"transformTwoArgumentExpr(element, parent, type);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,604,"private void transformBlock(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,605,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,606,"transformBlock(element, parent, 0, element.childrenSize());"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,609,"private void transformBlock(JsonML element, Node parent, int start)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,610,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,611,"transformBlock(element, parent, start, element.childrenSize());"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,614,"private void transformBlock(JsonML element, Node parent, int start, int end)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,615,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,616,"Node node = createNode(Token.BLOCK, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,617,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,618,"transformElements(element.getChildren(start, end), node, true);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,621,"private void transformBreakStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,622,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,623,"transformJumpStmt(element, parent, Token.BREAK);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,626,"private void transformCallExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,627,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,629,"Node node = createNode(Token.CALL, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,630,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,632,"transformAllChildren(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,635,"private void transformCase(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,636,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,638,"Node node = createNode(Token.CASE, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,639,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,641,// the first element represents case id
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,642,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,643,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,645,// always insert an extra BLOCK node
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,646,Node block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,647,node.addChildToBack(block);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,649,"transformAllChildrenFromIndex(element, block, 1, true);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,652,"private void transformCatchClause(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,653,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,655,"Node node = createNode(Token.CATCH, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,656,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,658,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,659,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,661,// the second child represents actual block
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,662,child = element.getChild(1);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,663,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,666,"private void transformConditionalExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,667,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,668,"Node node = createNode(Token.HOOK, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,669,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,671,"transformAllChildren(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,674,"private void transformContinueStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,675,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,676,"transformJumpStmt(element, parent, Token.CONTINUE);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,680,"* CountExpr are both incrementing and decrementing expressions (++x, --x)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,682,"private void transformCountExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,683,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,684,"String op = getStringAttribute(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,686,int type = Operator.getNodeTypeForCountOp(op);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,688,"Boolean isPrefix = getAttribute(element, TagAttr.IS_PREFIX, Boolean.class);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,689,"Node node = createNode(type, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,690,"node.putIntProp(Node.INCRDECR_PROP, isPrefix ? 0 : 1);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,691,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,693,"transformElement(element.getChild(0), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,697,* DataProp is the name for an object property which is initialized
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,698,* when the object is created by object literal.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,699,"* For example, in {x: 1, y: 2} each property is represented by its own"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,700,* DataProp.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,702,"private void transformDataProp(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,703,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,704,"Object name = getObjectAttribute(element, TagAttr.NAME);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,706,Node node = null;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,707,if (name instanceof Number) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,708,node = Node.newNumber(((Number) name).doubleValue());
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,709,} else if (name instanceof String) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,710,"node = Node.newString(Token.STRING, (String) name);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,711,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,712,throw new IllegalStateException(
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,713,"""The name of the property has invalid type."");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,716,setPosition(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,717,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,719,"transformElement(element.getChild(0), parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,722,"private void transformDefaultCase(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,723,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,724,"Node node = createNode(Token.DEFAULT, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,725,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,727,// the first child represent body
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,728,Node block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,729,node.addChildToBack(block);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,731,"transformAllChildren(element, block, true);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,734,"private void transformDeleteExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,735,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,737,"Node node = createNode(Token.DELPROP, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,738,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,740,"transformElement(element.getChild(0), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,743,"private void transformDoWhileStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,744,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,745,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,746,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,748,"Node node = createNode(Token.DO, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,749,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,751,// the first child represents body
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,752,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,753,"transformPotentiallyUnwrappedBlock(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,755,// the second child represents condition
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,756,child = element.getChild(1);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,757,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,759,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,762,"private void transformEmpty(JsonML element, Node parent) {"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,763,switch (parent.getType()) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,764,case Token.ARRAYLIT:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,765,"// nothing happens, but we make sure that the elements are"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,766,// taken into account by nodeIndex
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,767,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,768,case Token.FUNCTION:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,769,"parent.addChildToBack(Node.newString(Token.NAME, """"));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,770,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,771,default:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,772,"throw new IllegalArgumentException(""Unexpected Empty element."");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,776,"private void transformEmptyStmt(JsonML element, Node parent) {"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,777,Preconditions.checkState(
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,778,parent.getType() == Token.BLOCK || parent.getType() == Token.SCRIPT);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,779,parent.addChildToBack(new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,782,"private void transformEvalExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,783,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,785,"Node node = createNode(Token.CALL, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,786,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,788,"Node child = Node.newString(Token.NAME, ""eval"");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,789,"child.putBooleanProp(Node.DIRECT_EVAL, true);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,790,node.addChildToBack(child);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,792,"transformAllChildren(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,795,"private void transformForInStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,796,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,797,"transformForLoop(element, parent, 2);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,800,"private void transformForStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,801,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,802,"transformForLoop(element, parent, 3);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,805,"private void transformFunction(JsonML element, Node parent,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,806,boolean needsName) throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,807,"Node node = createNode(Token.FUNCTION, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,808,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,810,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,811,"String name = """";"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,813,// it be already validated at this point that a non empty name exists
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,814,// if it is a function declaration
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,815,"transformElement(element.getChild(0), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,817,"transformElement(element.getChild(1), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,819,// other children represents function body which should be
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,820,// wrapped inside a block node
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,821,"transformBlock(element, node, 2);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,824,"private void transformFunctionDecl(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,825,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,826,"transformFunction(element, parent, true);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,829,"private void transformFunctionExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,830,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,831,"transformFunction(element, parent, false);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,834,"private void transformIdExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,835,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,836,"String name = getStringAttribute(element, TagAttr.NAME);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,837,"Node node = Node.newString(Token.NAME, name);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,838,setPosition(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,839,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,843,* InitPatt represents all variable declarations value initialization.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,844,* It has two children: name of the variable and the initial value.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,846,"private void transformInitPatt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,847,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,848,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,849,nodeIndex++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,850,"Node node = Node.newString(Token.NAME,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,851,"getAttribute(child, TagAttr.NAME, String.class));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,852,setPosition(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,853,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,855,child = element.getChild(1);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,856,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,859,"private void transformIdPatt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,860,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,861,"Node node = Node.newString(Token.NAME,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,862,"getStringAttribute(element, TagAttr.NAME));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,863,setPosition(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,864,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,867,"private void transformIfStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,868,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,869,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,870,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,872,"Node node = createNode(Token.IF, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,873,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,875,// the first child represents condition
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,876,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,877,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,879,// the second child is required
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,880,child = element.getChild(1);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,881,"transformPotentiallyUnwrappedBlock(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,883,// the third child represents else part and is not required by AST
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,884,child = element.getChild(2);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,885,if (child.getType() != TagType.EmptyStmt &&
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,886,child.getType() != TagType.Empty) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,887,"transformPotentiallyUnwrappedBlock(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,888,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,889,nodeIndex++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,891,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,894,"private void transformInvokeExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,895,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,896,"Node node = createNode(Token.CALL, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,897,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,899,"transformMemberExpr(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,901,"transformElements(element.getChildren(2, element.childrenSize()), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,904,"private void transformLabelledStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,905,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,906,"String label = getStringAttribute(element, TagAttr.LABEL);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,907,"Node node = createNode(Token.LABEL, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,908,"node.addChildToBack(Node.newString(Token.LABEL_NAME, label));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,909,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,911,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,912,if (child.getType() == TagType.EmptyStmt) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,913,nodeIndex++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,914,node.addChildToBack(new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,915,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,916,"transformElement(element.getChild(0), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,920,"private void transformLiteralExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,921,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,923,Node node = null;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,924,"Type type = Type.get(getStringAttribute(element, TagAttr.TYPE));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,925,switch (type) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,926,case BOOLEAN: {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,927,"Boolean value = getAttribute(element, TagAttr.VALUE, Boolean.class);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,928,if (value) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,929,node = new Node(Token.TRUE);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,930,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,931,node = new Node(Token.FALSE);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,933,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,936,case NULL: {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,937,// needed to throw an exception if value is not null
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,938,"getAttribute(element, TagAttr.VALUE, null);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,939,node = new Node(Token.NULL);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,940,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,943,case NUMBER: {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,944,"Double value = getAttribute(element, TagAttr.VALUE, Double.class);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,945,node = Node.newNumber(value);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,946,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,949,case STRING: {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,950,"String value = getStringAttribute(element, TagAttr.VALUE);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,951,node = Node.newString(value);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,952,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,955,default:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,956,"throw new JsonMLException(""Unrecognized type attribute."");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,959,setPosition(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,960,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,963,"private void transformLogicalAndExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,964,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,965,"transformLogicalExpr(element, parent, Token.AND);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,968,"private void transformLogicalOrExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,969,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,970,"transformLogicalExpr(element, parent, Token.OR);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,973,"private void transformMemberExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,974,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,976,"String op = getAttribute(element, TagAttr.OP, String.class);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,977,int type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,978,"if (op.equals(""."")) {"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,979,type = Token.GETPROP;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,980,"} else if (op.equals(""[]"")) {"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,981,type = Token.GETELEM;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,982,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,983,"throw new JsonMLException(""Invalid OP argument: "" + op);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,986,"Node node = createNode(type, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,987,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,989,"transformElement(element.getChild(0), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,990,"transformElement(element.getChild(1), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,993,"private void transformNewExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,994,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,995,"Node node = createNode(Token.NEW, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,996,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,997,"transformAllChildren(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1000,"private void transformObjectExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1001,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1002,"Node node = createNode(Token.OBJECTLIT, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1003,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1005,"transformAllChildren(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1008,"private void transformParamDecl(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1009,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1010,// formal arguments should be wrapped by LP node
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1011,"Node node = createNode(Token.LP, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1012,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1014,"transformAllChildren(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1017,"private void transformProgram(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1018,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1019,Preconditions.checkNotNull(parent);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1020,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1022,Node script = new Node(Token.SCRIPT);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1023,script.setIsSyntheticBlock(true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1024,parent.addChildToBack(script);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1026,for (JsonML child : element.getChildren()) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1027,"transformElement(child, script);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1031,"private void transformPrologueDecl(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1032,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1033,"String directive = getStringAttribute(element, TagAttr.DIRECTIVE);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1035,if (ALLOWED_DIRECTIVES.contains(directive)) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1036,Set<String> directives = parent.getDirectives();
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1037,if (directives == null) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1038,directives = Sets.newHashSet();
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1040,directives.add(directive);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1041,parent.setDirectives(directives);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1042,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1043,"// for a directive which is not supported, we create a regular node"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1044,Node node = new Node(Token.EXPR_RESULT);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1045,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1046,"node.addChildToBack(Node.newString(Token.STRING, directive));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1050,"private void transformRegExpExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1051,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1052,"Node node = createNode(Token.REGEXP, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1053,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1055,"String body = getStringAttribute(element, TagAttr.BODY);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1056,"node.addChildToBack(Node.newString(Token.STRING, body));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1058,"String flags = getStringAttribute(element, TagAttr.FLAGS);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1059,"if (!(flags.equals(""""))) {"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1060,"node.addChildToBack(Node.newString(Token.STRING, flags));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1064,"private void transformReturnStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1065,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1066,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1067,"Node node = createNode(Token.RETURN, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1068,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1070,if (element.hasChildren()) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1071,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1072,"transformElement(element.getChild(0), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1073,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1077,"private void transformSwitchStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1078,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1079,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1080,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1082,"Node node = createNode(Token.SWITCH, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1083,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1085,// make sure it has at least one child
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1086,// the first child represents switch param
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1087,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1088,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1090,// the rest of the children represent cases
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1091,for (int i = 1; i < element.childrenSize(); ++i) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1092,child = element.getChild(i);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1093,// make sure it is case or default
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1094,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1097,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1100,"private void transformThisExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1101,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1102,"parent.addChildToBack(createNode(Token.THIS, element));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1105,"private void transformThrowStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1106,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1107,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1108,"Node node = createNode(Token.THROW, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1109,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1111,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1112,"transformElement(element.getChild(0), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1113,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1116,"private void transformTryStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1117,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1118,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1119,"Node node = createNode(Token.TRY, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1120,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1122,// the first child represents try body
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1123,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1124,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1126,// the second child represents catch
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1127,Node block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1128,node.addChildToBack(block);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1129,child = element.getChild(1);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1131,if (child.getType() == TagType.CatchClause) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1132,"transformElement(child, block);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1133,} else {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1134,"// catch clause is not present, but the element has to be counted"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1135,nodeIndex++;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1138,"// if the third child is present, it represents finally"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1139,if (element.childrenSize() == 3) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1140,child = element.getChild(2);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1141,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1145,"private void transformTypeofExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1146,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1147,"Node node = createNode(Token.TYPEOF, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1148,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1149,"transformElement(element.getChild(0), node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1152,"private void transformUnaryExpr(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1153,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1154,"String op = getStringAttribute(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1155,int type = Operator.getNodeTypeForUnaryOp(op);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1157,"Node node = createNode(type, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1158,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1160,"transformAllChildren(element, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1163,"private void transformVarDecl(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1164,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1165,"Node node = createNode(Token.VAR, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1166,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1168,"transformAllChildren(element, node, false);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1171,"private void transformWhileStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1172,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1173,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1174,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1176,"Node node = createNode(Token.WHILE, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1177,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1179,// the first child represents loop condition
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1180,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1181,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1183,// the second child represents loop body
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1184,child = element.getChild(1);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1185,"transformPotentiallyUnwrappedBlock(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1187,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1190,"private void transformWithStmt(JsonML element, Node parent)"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1191,throws JsonMLException {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1192,Preconditions.checkState(insertExprResultState == true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1193,insertExprResultState = false;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1195,"Node node = createNode(Token.WITH, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1196,parent.addChildToBack(node);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1198,// the first child represents object
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1199,JsonML child = element.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1200,"transformElement(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1202,// the second child represents body
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1203,child = element.getChild(1);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1204,"transformPotentiallyUnwrappedBlock(child, node);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1206,insertExprResultState = true;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1210,* Creates a node which refers to a particular JsonML element.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1212,"private Node createNode(int type, JsonML element) {"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1213,"return new Node(type, nodeIndex, -1);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1217,* Sets position for a node which refers to a particular JsonML element.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1218,* The position says which number (in pre-order) has the corresponding
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1219,* JsonML element in the tree.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1221,private void setPosition(Node node) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1222,node.setLineno(nodeIndex);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1226,* Internal representation for operators which are used by JsonML as
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1227,* attributes for various elements.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1229,private enum Operator {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1230,// Assign Operators
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1231,"ASSIGN(""=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1232,"ASSIGN_BITOR(""|=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1233,"ASSIGN_BITXOR(""^=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1234,"ASSIGN_BITAND(""&=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1235,"ASSIGN_LSH(""<<=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1236,"ASSIGN_RSH("">>=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1237,"ASSIGN_URSH("">>>=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1238,"ASSIGN_ADD(""+=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1239,"ASSIGN_SUB(""-=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1240,"ASSIGN_MUL(""*=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1241,"ASSIGN_DIV(""/=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1242,"ASSIGN_MOD(""%=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1244,// Binary Operators
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1245,"BITOR(""|""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1246,"BITXOR(""^""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1247,"BITAND(""&""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1248,"EQ(""==""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1249,"NE(""!=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1250,"LT(""<""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1251,"LE(""<=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1252,"GT("">""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1253,"GE("">=""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1254,"LSH(""<<""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1255,"RSH("">>""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1256,"URSH("">>>""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1257,"ADD(""+""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1258,"SUB(""-""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1259,"MUL(""*""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1260,"DIV(""/""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1261,"MOD(""%""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1262,"SHEQ(""===""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1263,"SHNE(""!==""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1264,"COMMA("",""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1265,"INSTANCEOF(""instanceof""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1266,"IN(""in""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1268,// Count Operators
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1269,"DEC(""--""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1270,"INC(""++""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1272,// Unary Operators
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1273,"NOT(""!""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1274,"BITNOT(""~""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1275,"POS(""+_unary""), // ""+"" would be a duplicate with ADD"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1276,"NEG(""-_unary""), // ""-"" would be a duplicate with SUB"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1277,"VOID(""void"");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1279,private final String name;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1280,"private static Map<String, Operator> lookup = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1282,// Maps string representation of operators with corresponding enums
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1283,static {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1284,for (Operator op : Operator.values()) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1285,"lookup.put(op.getName(), op);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1289,private String getName() {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1290,return this.name;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1293,private Operator(String name) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1294,this.name = name;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1297,private static Operator get(String name) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1298,return lookup.get(name);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1302,* Returns assign operator associated with a specified name.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1304,private static int getNodeTypeForAssignOp(String name) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1305,Operator op = get(name);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1306,if (op == null) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1307,return Token.ERROR;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1310,int type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1311,switch (op) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1312,case ASSIGN:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1313,type = Token.ASSIGN;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1314,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1315,case ASSIGN_BITOR:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1316,type = Token.ASSIGN_BITOR;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1317,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1318,case ASSIGN_BITXOR:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1319,type = Token.ASSIGN_BITXOR;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1320,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1321,case ASSIGN_BITAND:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1322,type = Token.ASSIGN_BITAND;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1323,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1324,case ASSIGN_LSH:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1325,type = Token.ASSIGN_LSH;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1326,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1327,case ASSIGN_RSH:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1328,type = Token.ASSIGN_RSH;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1329,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1330,case ASSIGN_URSH:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1331,type = Token.ASSIGN_URSH;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1332,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1333,case ASSIGN_ADD:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1334,type = Token.ASSIGN_ADD;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1335,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1336,case ASSIGN_SUB:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1337,type = Token.ASSIGN_SUB;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1338,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1339,case ASSIGN_MUL:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1340,type = Token.ASSIGN_MUL;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1341,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1342,case ASSIGN_DIV:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1343,type = Token.ASSIGN_DIV;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1344,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1345,case ASSIGN_MOD:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1346,type = Token.ASSIGN_MOD;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1347,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1348,default:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1349,"throw new IllegalArgumentException("""""
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1350,"+ ""Invalid type of assign expression."");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1352,return type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1356,* Returns binary operator associated with a specified name.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1358,private static int getNodeTypeForBinaryOp(String name) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1359,Operator op = get(name);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1361,int type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1362,switch (op) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1363,case BITOR:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1364,type = Token.BITOR;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1365,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1366,case BITXOR:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1367,type = Token.BITXOR;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1368,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1369,case BITAND:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1370,type = Token.BITAND;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1371,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1372,case EQ:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1373,type = Token.EQ;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1374,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1375,case NE:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1376,type = Token.NE;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1377,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1378,case LT:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1379,type = Token.LT;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1380,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1381,case LE:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1382,type = Token.LE;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1383,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1384,case GT:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1385,type = Token.GT;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1386,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1387,case GE:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1388,type = Token.GE;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1389,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1390,case LSH:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1391,type = Token.LSH;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1392,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1393,case RSH:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1394,type = Token.RSH;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1395,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1396,case URSH:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1397,type = Token.URSH;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1398,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1399,case ADD:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1400,type = Token.ADD;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1401,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1402,case SUB:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1403,type = Token.SUB;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1404,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1405,case MUL:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1406,type = Token.MUL;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1407,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1408,case DIV:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1409,type = Token.DIV;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1410,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1411,case MOD:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1412,type = Token.MOD;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1413,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1414,case SHEQ:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1415,type = Token.SHEQ;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1416,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1417,case SHNE:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1418,type = Token.SHNE;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1419,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1420,case COMMA:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1421,type = Token.COMMA;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1422,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1423,case INSTANCEOF:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1424,type = Token.INSTANCEOF;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1425,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1426,case IN:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1427,type = Token.IN;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1428,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1429,default:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1430,"throw new IllegalArgumentException("""""
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1431,"+ ""Invalid type of binary expression."");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1433,return type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1437,"* Returns count operator(++, --)  associated with a specified name."
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1439,private static int getNodeTypeForCountOp(String name) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1440,Operator op = get(name);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1441,if (op == null) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1442,return Token.ERROR;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1445,int type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1446,switch (op) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1447,case DEC:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1448,type = Token.DEC;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1449,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1450,case INC:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1451,type = Token.INC;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1452,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1453,default:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1454,"throw new IllegalArgumentException("""""
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1455,"+ ""Invalid type of count expression."");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1457,return type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1461,* Returns assign operator associated with a specified name.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1463,private static int getNodeTypeForUnaryOp(String name) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1464,String realName = new String(name);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1465,"if (name.equals(""+"") || name.equals(""-"")) {"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1466,"realName += ""_unary"";"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1468,Operator op = get(realName);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1470,int type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1471,switch (op) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1472,case NOT:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1473,type = Token.NOT;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1474,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1475,case BITNOT:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1476,type = Token.BITNOT;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1477,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1478,case POS:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1479,type = Token.POS;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1480,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1481,case NEG:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1482,type = Token.NEG;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1483,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1484,case VOID:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1485,type = Token.VOID;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1486,break;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1487,default:
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1488,"throw new IllegalArgumentException("""""
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1489,"+ ""Invalid type of unary expression."");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1491,return type;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1496,* Internal representation of possible types of arguments of JsonML.
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1498,private enum Type {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1499,"BOOLEAN(""boolean""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1500,"NULL(""null""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1501,"NUMBER(""number""),"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1502,"STRING(""string"");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1504,private final String name;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1505,"private static Map<String, Type> lookup = new HashMap<String, Type>();"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1507,static {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1508,for (Type type : Type.values()) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1509,"lookup.put(type.getName(), type);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1513,private String getName() {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1514,return this.name;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1517,private Type(String name) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1518,this.name = name;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1521,private static Type get(String name) {
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1522,return lookup.get(name);
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,20,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,21,import com.google.javascript.jscomp.CheckLevel;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,22,import com.google.javascript.jscomp.Compiler;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,23,import com.google.javascript.jscomp.CompilerInput;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,24,import com.google.javascript.jscomp.CompilerOptions;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,25,import com.google.javascript.jscomp.JSError;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,26,import com.google.javascript.jscomp.JSModule;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,27,import com.google.javascript.jscomp.JSSourceFile;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,28,import com.google.javascript.jscomp.Result;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,29,import com.google.javascript.jscomp.VariableRenamingPolicy;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,31,import java.util.ArrayList;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,34,* Compilation of JavaScript code which guarantees that all security
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,35,"* capabilities are preserved after the process. In particular, it can be"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,36,* safely applied to cajoled source.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,38,* JS Compiler is used for code analysis and optimization. It runs a series
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,39,* of passes which try to improve the code.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,41,"* For safety reasons, only a subset of local passes, which are provided by"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,42,"* JS Compiler, are processed. Currently it includes:"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,43,* - elimination of temporary variables
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,45,* Using SecureCompiler is quite straightforward. A user just needs to create
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,46,* a new instance and call compile() method. Currently the only input which
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,47,* is supported is JsonML.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,49,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,51,public class SecureCompiler {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,53,private static final String COMPILATION_UNCOMPLETED_MSG =
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,54,"""No compilation has been completed yet."";"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,56,private static final String COMPILATION_UNSUCCESSFUL_MSG =
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,57,"""The last compilation was not successful."";"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,59,private static final String COMPILATION_ALREADY_COMPLETED_MSG =
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,60,"""This instance has already compiled one source."";"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,62,private Compiler compiler;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,63,private CompilerOptions options;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,64,private JsonMLAst sourceAst;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,66,/** Report from the last compilation */
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,67,private Report report;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,69,public SecureCompiler() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,70,compiler = new Compiler();
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,71,options = getSecureCompilerOptions();
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,75,* Returns compiled source in JsonML format.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,77,public JsonML getJsonML() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,78,"Preconditions.checkState(report != null, COMPILATION_UNCOMPLETED_MSG);"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,79,"Preconditions.checkState(report.success, COMPILATION_UNSUCCESSFUL_MSG);"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,80,return sourceAst.convertToJsonML();
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,84,* Returns compiled source as a JavaScript.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,86,public String getString() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,87,"Preconditions.checkState(report != null, COMPILATION_UNCOMPLETED_MSG);"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,88,"Preconditions.checkState(report.success, COMPILATION_UNSUCCESSFUL_MSG);"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,89,return compiler.toSource();
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,93,* Returns report from the last compilation.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,95,public Report getReport() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,96,"Preconditions.checkState(report != null, COMPILATION_UNCOMPLETED_MSG);"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,97,return report;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,100,public void compile(JsonML source) {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,101,if (report != null) {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,102,throw new IllegalStateException(COMPILATION_ALREADY_COMPLETED_MSG);
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,105,sourceAst = new JsonMLAst(source);
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,107,CompilerInput input = new CompilerInput(
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,108,"sourceAst, ""[[jsonmlsource]]"", false);"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,110,"JSModule module = new JSModule(""[[jsonmlmodule]]"");"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,111,module.add(input);
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,113,Result result = compiler.compile(
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,114,"new JSSourceFile[] {},"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,115,"new JSModule[] { module },"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,116,options);
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,118,report = generateReport(result);
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,122,* Returns compiler options which are safe for compilation of a cajoled
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,123,* module. The set of options is similar to the one which is used by
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,124,* CompilationLevel in simple mode. The main difference is that variable
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,125,* renaming and closurePass options are turned off.
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,127,private CompilerOptions getSecureCompilerOptions() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,128,CompilerOptions options = new CompilerOptions();
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,130,options.variableRenaming = VariableRenamingPolicy.OFF;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,131,options.inlineLocalVariables = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,132,options.inlineLocalFunctions = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,133,options.checkGlobalThisLevel = CheckLevel.OFF;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,134,options.coalesceVariableNames = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,135,options.deadAssignmentElimination = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,136,options.collapseVariableDeclarations = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,137,options.convertToDottedProperties = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,138,options.labelRenaming = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,139,options.removeDeadCode = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,140,options.optimizeArgumentsArray = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,141,options.removeUnusedVars = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,142,options.removeUnusedVarsInGlobalScope = false;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,144,return options;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,147,public void enableFoldConstant() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,148,options.foldConstants = true;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,151,Report generateReport(Result result) {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,152,// a report may be generated only after actual compilation is complete
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,153,if (result == null) {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,154,return null;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,157,ArrayList<JsonMLError> errors = Lists.newArrayList();
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,158,for (JSError error : result.errors) {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,159,"errors.add(JsonMLError.make(error, sourceAst));"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,162,ArrayList<JsonMLError> warnings = Lists.newArrayList();
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,163,for (JSError warning : result.warnings) {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,164,"warnings.add(JsonMLError.make(warning, sourceAst));"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,167,return new Report(
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,168,"errors.toArray(new JsonMLError[0]),"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,169,warnings.toArray(new JsonMLError[0]));
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,172,public class Report {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,173,private final boolean success;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,174,private final JsonMLError[] errors;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,175,private final JsonMLError[] warnings;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,177,"private Report(JsonMLError[] errors, JsonMLError[] warnings) {"
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,178,this.success = errors.length == 0;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,179,this.errors = errors;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,180,this.warnings = warnings;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,183,public boolean isSuccessful() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,184,return success;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,187,public JsonMLError[] getErrors() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,188,return errors;
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,191,public JsonMLError[] getWarnings() {
True,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,src/com/google/javascript/jscomp/jsonml/SecureCompiler.java,192,return warnings;
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,19,import java.util.HashMap;
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,20,import java.util.Map;
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,23,* List of attributes that a JsonML element may have.
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,25,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,27,public enum TagAttr {
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,28,"BODY(""body""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,29,"DIRECTIVE(""directive""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,30,"END_COLUMN(""endColumn""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,31,"END_LINE(""endLine""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,32,"FLAGS(""flags""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,33,"IS_PREFIX(""isPrefix""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,34,"LABEL(""label""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,35,"NAME(""name""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,36,"OP(""op""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,37,"OPAQUE_POSITION(""opaque_position""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,38,"SOURCE(""source""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,39,"START_COLUMN(""startColumn""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,40,"START_LINE(""startLine""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,41,"TYPE(""type""),"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,42,"VALUE(""value"");"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,44,private final String name;
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,45,"private static final Map<String, TagAttr> lookup ="
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,46,"new HashMap<String, TagAttr>();"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,48,static {
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,49,for (TagAttr t : TagAttr.values()) {
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,50,"lookup.put(t.getName(), t);"
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,54,private String getName() {
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,55,return name;
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,58,private TagAttr(String name) {
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,59,this.name = name;
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,62,public static TagAttr get(String name) {
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,63,return lookup.get(name);
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,66,@Override
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,67,public String toString() {
True,src/com/google/javascript/jscomp/jsonml/TagAttr.java,src/com/google/javascript/jscomp/jsonml/TagAttr.java,68,return name;
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,20,* List of types allowed for JsonML elements.
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,22,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,24,public enum TagType {
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,26,// *Expr types
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,27,"ArrayExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,28,"AssignExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,29,"BinaryExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,30,"CallExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,31,"ConditionalExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,32,"CountExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,33,"DeleteExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,34,"EvalExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,35,"FunctionExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,36,"IdExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,37,"InvokeExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,38,"LiteralExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,39,"LogicalAndExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,40,"LogicalOrExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,41,"MemberExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,42,"NewExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,43,"ObjectExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,44,"RegExpExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,45,"ThisExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,46,"TypeofExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,47,"UnaryExpr,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,49,// *Stmt types
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,50,"BlockStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,51,"BreakStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,52,"ContinueStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,53,"DebuggerStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,54,"DoWhileStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,55,"EmptyStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,56,"ForInStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,57,"ForStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,58,"IfStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,59,"LabelledStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,60,"ReturnStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,61,"SwitchStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,62,"ThrowStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,63,"TryStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,64,"WhileStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,65,"WithStmt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,67,// *Decl types
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,68,"FunctionDecl,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,69,"ParamDecl,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,70,"PrologueDecl,  // TODO"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,71,"VarDecl,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,73,// *Prop types
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,74,"DataProp,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,75,"GetterProp,         // not supported by Closure Compiler"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,76,"SetterProp,         // not supported by Closure Compiler"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,78,// *Patt types
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,79,"IdPatt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,80,"InitPatt,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,82,// *Case types
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,83,"Case,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,84,"DefaultCase,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,86,// CatchClause type
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,87,"CatchClause,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,89,// Empty type
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,90,"Empty,"
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,92,// Program type (root)
True,src/com/google/javascript/jscomp/jsonml/TagType.java,src/com/google/javascript/jscomp/jsonml/TagType.java,93,"Program,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,19,import java.util.Arrays;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,22,* Statically validates JsonML elements.
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,24,"* It is done in constant time: no subtree is traversed, but the element"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,25,"* is validated based only on its properties. Sometimes, also its children"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,26,* are taken into account.
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,28,"* Usually it checks if the specified element has a correct number of children,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,29,* and if all require attributes exist. It does not enforce all restrictions
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,30,* which are implied by ES3 or ES5 specification.
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,32,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,34,public class Validator {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,35,"public static final String MISSING_ARGUMENT = """" +"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,36,"""No %s attribute specified for %s."";"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,37,"public static final String NOT_ENOUGH_CHILDREN_FMT = """" +"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,38,"""Not enough children for %s. Expected: %d. Found: %d."";"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,39,"public static final String TOO_MANY_CHILDREN_FMT = """" +"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,40,"""Too many children for %s. Expected: %d. Found: %d."";"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,41,"public static final String WRONG_CHILD_TYPE_FMT = """" +"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,42,"""Wrong type of child number %d for %s. Expected: %s. Found: %s."";"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,44,// used to check if a JsonML element represents an expression
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,45,public static TagType[] exprTypes = {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,46,"TagType.ArrayExpr, TagType.AssignExpr, TagType.BinaryExpr,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,47,"TagType.CallExpr, TagType.ConditionalExpr, TagType.CountExpr,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,48,"TagType.DeleteExpr, TagType.EvalExpr, TagType.IdExpr, TagType.InvokeExpr,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,49,"TagType.LiteralExpr, TagType.LogicalAndExpr, TagType.LogicalOrExpr,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,50,"TagType.MemberExpr, TagType.NewExpr, TagType.ObjectExpr,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,51,"TagType.RegExpExpr, TagType.ThisExpr, TagType.TypeofExpr,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,52,"TagType.UnaryExpr, TagType.FunctionExpr"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,55,private final StringBuilder b;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,56,private boolean error;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,58,private Validator() {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,59,b = new StringBuilder();
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,60,error = false;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,64,* Validates the specified JsonML element.
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,65,* @param element JsonML element to validate
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,66,* @return error message if the element could not be
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,67,"* validated, an empty string otherwise"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,69,public static String validate(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,70,return (new Validator()).doValidate(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,74,* Validates the specified JsonML element.
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,76,private String doValidate(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,77,String message;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,78,switch (element.getType()) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,79,case AssignExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,80,validateAssignExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,81,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,82,case BinaryExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,83,validateBinaryExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,84,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,85,case BreakStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,86,case ContinueStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,87,validateJmpStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,88,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,89,case Case:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,90,validateCase(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,91,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,92,case CatchClause:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,93,validateCatchClause(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,94,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,95,case ConditionalExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,96,validateConditionalExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,97,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,98,case CountExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,99,validateCountExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,100,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,101,case DataProp:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,102,validateDataProp(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,103,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,104,case DeleteExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,105,validateDeleteExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,106,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,107,case DoWhileStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,108,validateDoWhileStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,109,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,110,case EmptyStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,111,validateEmptyStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,112,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,113,case ForInStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,114,validateForInStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,115,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,116,case ForStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,117,validateForStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,118,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,119,case FunctionDecl:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,120,validateFunctionDecl(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,121,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,122,case FunctionExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,123,validateFunctionExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,124,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,125,case IdExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,126,validateIdExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,127,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,128,case IdPatt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,129,validateIdPatt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,130,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,131,case IfStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,132,validateIfStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,133,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,134,case InvokeExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,135,validateInvokeExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,136,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,137,case LabelledStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,138,validateLabelledStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,139,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,140,case LiteralExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,141,validateLiteralExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,142,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,143,case LogicalAndExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,144,case LogicalOrExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,145,validateLogicalExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,146,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,147,case MemberExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,148,validateMemberExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,149,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,150,case NewExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,151,validateNewExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,152,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,153,case ObjectExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,154,validateObjectExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,155,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,156,case ParamDecl:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,157,validateParamDecl(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,158,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,159,case RegExpExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,160,validateRegExpExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,161,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,162,case ReturnStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,163,validateReturnStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,164,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,165,case SwitchStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,166,validateSwitchStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,167,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,168,case ThisExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,169,validateThisExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,170,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,171,case ThrowStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,172,validateThrowStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,173,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,174,case TryStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,175,validateTryStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,176,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,177,case TypeofExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,178,validateTypeofExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,179,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,180,case UnaryExpr:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,181,validateUnaryExpr(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,182,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,183,case VarDecl:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,184,validateVarDecl(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,185,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,186,case WhileStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,187,validateWhileStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,188,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,189,case WithStmt:
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,190,validateWithStmt(element);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,191,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,193,return b.length() != 0 ? b.toString() : null;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,196,private void validateAssignExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,197,"validateChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,198,"validateArgument(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,201,private void validateBinaryExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,202,"validateChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,203,"validateArgument(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,206,private void validateCase(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,207,"validateMinChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,208,if (!error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,209,"validateIsChildExpression(element, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,213,private void validateCatchClause(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,214,"validateChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,215,if (!error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,216,"validateChildType(element, TagType.IdPatt , 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,217,"validateChildType(element, TagType.BlockStmt, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,221,private void validateConditionalExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,222,"validateChildrenSize(element, 3);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,225,private void validateCountExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,226,"validateChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,227,"validateArgument(element, TagAttr.IS_PREFIX);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,228,"validateArgument(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,231,private void validateDataProp(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,232,"validateChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,233,if (!error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,234,"validateArgument(element, TagAttr.NAME);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,238,private void validateDeleteExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,239,"validateChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,240,// TODO(dhans): maybe add that it has to be expression
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,243,private void validateDoWhileStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,244,"validateChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,245,// TODO(dhans): maybe add that the second child has to be an exception
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,248,private void validateEmptyStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,249,"validateChildrenSize(element, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,252,private void validateForInStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,253,"validateChildrenSize(element, 3);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,256,private void validateForStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,257,"validateChildrenSize(element, 4);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,260,private void validateFunctionDecl(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,261,"validateFunction(element, true);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,264,private void validateFunctionExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,265,"validateFunction(element, false);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,268,private void validateIdExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,269,"validateChildrenSize(element, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,270,if  (!error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,271,"validateArgument(element, TagAttr.NAME);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,275,private void validateIdPatt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,276,"validateChildrenSize(element, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,277,"validateArgument(element, TagAttr.NAME);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,280,private void validateIfStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,281,"validateChildrenSize(element, 3);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,282,if (!error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,283,// TODO(dhans): check the first child is condition
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,287,private void validateInvokeExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,288,"validateMinChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,289,"validateArgument(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,292,private void validateJmpStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,293,// for both BreakStmt and ContinueStmt
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,294,"validateChildrenSize(element, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,297,private void validateLabelledStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,298,"validateChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,299,"validateArgument(element, TagAttr.LABEL);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,302,private void validateLiteralExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,303,"validateChildrenSize(element, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,304,"validateArgument(element, TagAttr.TYPE);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,305,"validateArgument(element, TagAttr.VALUE);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,308,private void validateLogicalExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,309,"validateChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,312,private void validateMemberExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,313,"validateChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,314,"validateArgument(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,317,private void validateNewExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,318,"validateMinChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,321,private void validateObjectExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,322,for (int i = 0; i < element.childrenSize(); ++i) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,323,"validateChildType(element, TagType.DataProp, i);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,327,private void validateParamDecl(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,328,for (int i = 0; i < element.childrenSize(); ++i) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,329,"validateChildType(element, TagType.IdPatt, i);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,333,private void validateRegExpExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,334,"validateChildrenSize(element, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,335,"validateArgument(element, TagAttr.BODY);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,336,"validateArgument(element, TagAttr.FLAGS);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,339,private void validateReturnStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,340,"validateMaxChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,343,private void validateSwitchStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,344,"validateMinChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,345,boolean defaultStmt = false;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,346,for (int i = 1; i < element.childrenSize(); ++i) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,347,if (!defaultStmt) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,348,"validateChildType(element,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,349,"new TagType[] {TagType.Case, TagType.DefaultCase}, i);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,350,} else {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,351,"validateChildType(element, TagType.Case, i);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,354,if (error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,355,break;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,358,if (element.getChild(i).getType() == TagType.DefaultCase) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,359,defaultStmt = true;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,364,private void validateThisExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,365,"validateChildrenSize(element, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,368,private void validateThrowStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,369,"validateChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,372,private void validateTryStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,373,"validateChildrenSize(element, 2, 3);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,375,if (error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,376,return;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,379,"validateChildType(element, TagType.BlockStmt, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,381,"TagType[] types = new TagType[] { TagType.CatchClause, TagType.Empty };"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,382,"validateChildType(element, types, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,384,if (element.childrenSize() > 2) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,385,"validateChildType(element, TagType.BlockStmt, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,389,"private void validateFunction(JsonML element, boolean needsName) {"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,390,"validateMinChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,392,if (error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,393,return;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,396,if (needsName) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,397,validateChildType(
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,398,"element, new TagType[] { TagType.IdPatt }, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,399,} else {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,400,validateChildType(
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,401,"element, new TagType[] { TagType.IdPatt, TagType.Empty }, 0);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,404,"validateChildType(element, TagType.ParamDecl, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,407,private void validateTypeofExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,408,"validateChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,411,private void validateUnaryExpr(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,412,"validateChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,413,if (!error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,414,"validateArgument(element, TagAttr.OP);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,418,private void validateVarDecl(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,419,"validateMinChildrenSize(element, 1);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,421,"TagType[] types = new TagType[] { TagType.InitPatt, TagType.IdPatt };"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,422,for (int i = 0; i < element.childrenSize(); ++i) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,423,"validateChildType(element, types, i);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,427,private void validateWhileStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,428,"validateChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,429,//TODO(dhans): check if the first child is expression
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,432,private void validateWithStmt(JsonML element) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,433,"validateChildrenSize(element, 2);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,434,//TODO(dhans): check if the first child is expression
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,437,"private void validateArgument(JsonML element, TagAttr attr) {"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,438,Object value = element.getAttribute(attr);
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,439,if (value == null) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,441,// there is an exceptional situation when the value can be null
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,442,"// {'value': null, 'type': 'null'}"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,443,String type;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,444,if ((type = (String) element.getAttribute(TagAttr.TYPE)) != null &&
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,445,"type.equals(""null"")) {"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,446,return;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,449,error = true;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,450,appendLine(String.format(
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,451,"MISSING_ARGUMENT,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,452,"attr, element.getType()));"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,456,"private void validateChildrenSize(JsonML element, int expected) {"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,457,"validateChildrenSize(element, expected, expected);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,460,"private void validateChildrenSize(JsonML element, int min, int max) {"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,461,"validateMinChildrenSize(element, min);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,462,if (!error) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,463,"validateMaxChildrenSize(element, max);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,467,"private void validateMinChildrenSize(JsonML element, int min) {"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,468,int size = element.childrenSize();
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,469,if (size < min) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,470,appendLine(String.format(
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,471,"NOT_ENOUGH_CHILDREN_FMT,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,472,"element.getType(), min, size));"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,473,error = true;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,477,"private void validateMaxChildrenSize(JsonML element, int max) {"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,478,int size = element.childrenSize();
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,479,if (size > max) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,480,appendLine(String.format(
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,481,"TOO_MANY_CHILDREN_FMT,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,482,"element.getType().toString(), max, size));"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,483,error = true;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,487,"private void validateIsChildExpression(JsonML element, int index) {"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,488,"validateChildType(element, exprTypes, index);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,491,"private void validateChildType(JsonML element, TagType expected,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,492,int index) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,493,TagType[] types = { expected };
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,494,"validateChildType(element, types, index);"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,497,"private void validateChildType(JsonML element, TagType[] expected,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,498,int index) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,499,TagType type = element.getChild(index).getType();
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,500,if (!Arrays.asList(expected).contains(type)) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,501,appendLine(String.format(
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,502,"WRONG_CHILD_TYPE_FMT,"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,503,"index, element.getType(), printList(expected), type));"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,504,error = true;
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,508,private void appendLine(String line) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,509,"b.append(String.format(""%s"", line));"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,512,// public for test purposes only
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,513,public static String printList(Object[] list) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,514,"StringBuilder builder = new StringBuilder("""");"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,515,if (list.length == 1) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,516,builder.append(list[0].toString());
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,517,} else if (list.length > 1) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,518,builder.append('[');
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,519,for (int i = 0; i < list.length; ++i) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,520,builder.append(list[i].toString());
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,521,if (i < list.length - 1) {
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,522,"builder.append("", "");"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,525,"builder.append(""]"");"
True,src/com/google/javascript/jscomp/jsonml/Validator.java,src/com/google/javascript/jscomp/jsonml/Validator.java,527,return builder.toString();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,17,package com.google.javascript.jscomp.jsonml;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,20,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,21,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,23,import java.util.Iterator;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,24,import java.util.Set;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,27,* Converts internal AST into JsonML tree.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,29,* @author dhans@google.com (Daniel Hans)
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,31,public class Writer {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,34,* Creates JsonML tree based on a specified AST.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,35,* @param root AST node
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,36,* @return root of a created JsonML tree
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,38,public JsonML processAst(Node root) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,39,Preconditions.checkNotNull(root);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,40,Preconditions.checkArgument(root.getType() == Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,42,JsonML rootElement = new JsonML(TagType.BlockStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,43,Node child = root.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,44,while (child != null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,45,"processNode(child, rootElement);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,46,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,49,return rootElement.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,53,* Dispatches an AST node to a function which converts it to JsonML.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,54,* @param node AST node to convert into JsonML element.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,55,* @param currentParent element to which newly created JsonML element will
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,56,* be attached as a child
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,58,"private void processNode(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,59,switch (node.getType()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,60,case Token.RETURN:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,61,"processReturn(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,62,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,63,case Token.BITOR:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,64,"processBinaryExpr(node, currentParent, ""|"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,65,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,66,case Token.BITXOR:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,67,"processBinaryExpr(node, currentParent, ""^"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,68,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,69,case Token.BITAND:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,70,"processBinaryExpr(node, currentParent, ""&"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,71,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,72,case Token.EQ:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,73,"processBinaryExpr(node, currentParent, ""=="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,74,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,75,case Token.NE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,76,"processBinaryExpr(node, currentParent, ""!="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,77,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,78,case Token.LT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,79,"processBinaryExpr(node, currentParent, ""<"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,80,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,81,case Token.LE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,82,"processBinaryExpr(node, currentParent, ""<="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,83,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,84,case Token.GT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,85,"processBinaryExpr(node, currentParent, "">"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,86,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,87,case Token.GE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,88,"processBinaryExpr(node, currentParent, "">="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,89,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,90,case Token.LSH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,91,"processBinaryExpr(node, currentParent, ""<<"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,92,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,93,case Token.RSH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,94,"processBinaryExpr(node, currentParent, "">>"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,95,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,96,case Token.URSH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,97,"processBinaryExpr(node, currentParent, "">>>"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,98,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,99,case Token.ADD:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,100,"processBinaryExpr(node, currentParent, ""+"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,101,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,102,case Token.SUB:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,103,"processBinaryExpr(node, currentParent, ""-"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,104,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,105,case Token.MUL:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,106,"processBinaryExpr(node, currentParent, ""*"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,107,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,108,case Token.DIV:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,109,"processBinaryExpr(node, currentParent, ""/"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,110,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,111,case Token.MOD:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,112,"processBinaryExpr(node, currentParent, ""%"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,113,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,114,case Token.NOT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,115,"processUnaryExpr(node, currentParent, ""!"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,116,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,117,case Token.BITNOT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,118,"processUnaryExpr(node, currentParent, ""~"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,119,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,120,case Token.POS:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,121,"processUnaryExpr(node, currentParent, ""+"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,122,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,123,case Token.NEG:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,124,"processUnaryExpr(node, currentParent, ""-"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,125,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,126,case Token.NEW:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,127,"processNew(node, currentParent, TagType.NewExpr);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,128,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,129,case Token.DELPROP:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,130,"processOneArgExpr(node, currentParent, TagType.DeleteExpr);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,131,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,132,case Token.TYPEOF:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,133,"processOneArgExpr(node, currentParent, TagType.TypeofExpr);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,134,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,135,case Token.GETPROP:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,136,"processMemberExpr(node, currentParent, ""."");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,137,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,138,case Token.GETELEM:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,139,"processMemberExpr(node, currentParent, ""[]"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,140,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,141,case Token.CALL:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,142,"processCall(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,143,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,144,case Token.NAME:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,145,"processName(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,146,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,147,case Token.NUMBER:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,148,case Token.STRING:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,149,case Token.NULL:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,150,case Token.FALSE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,151,case Token.TRUE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,152,"processLiteral(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,153,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,154,case Token.THIS:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,155,"processThis(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,156,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,157,case Token.SHEQ:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,158,"processBinaryExpr(node, currentParent, ""==="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,159,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,160,case Token.SHNE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,161,"processBinaryExpr(node, currentParent, ""!=="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,162,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,163,case Token.REGEXP:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,164,"processRegExp(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,165,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,166,case Token.THROW:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,167,"processThrow(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,168,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,169,case Token.IN:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,170,"processBinaryExpr(node, currentParent, ""in"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,171,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,172,case Token.INSTANCEOF:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,173,"processBinaryExpr(node, currentParent, ""instanceof"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,174,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,175,case Token.ARRAYLIT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,176,"processArrayLiteral(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,177,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,178,case Token.OBJECTLIT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,179,"processObjectLiteral(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,180,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,181,case Token.TRY:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,182,"processTry(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,183,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,184,case Token.COMMA:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,185,"processBinaryExpr(node, currentParent, "","");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,186,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,187,case Token.ASSIGN:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,188,"processAssignExpr(node, currentParent, ""="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,189,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,190,case Token.ASSIGN_BITOR:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,191,"processAssignExpr(node, currentParent, ""|="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,192,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,193,case Token.ASSIGN_BITXOR:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,194,"processAssignExpr(node, currentParent, ""^="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,195,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,196,case Token.ASSIGN_BITAND:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,197,"processAssignExpr(node, currentParent, ""&="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,198,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,199,case Token.ASSIGN_LSH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,200,"processAssignExpr(node, currentParent, ""<<="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,201,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,202,case Token.ASSIGN_RSH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,203,"processAssignExpr(node, currentParent, "">>="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,204,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,205,case Token.ASSIGN_URSH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,206,"processAssignExpr(node, currentParent, "">>>="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,207,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,208,case Token.ASSIGN_ADD:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,209,"processAssignExpr(node, currentParent, ""+="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,210,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,211,case Token.ASSIGN_SUB:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,212,"processAssignExpr(node, currentParent, ""-="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,213,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,214,case Token.ASSIGN_MUL:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,215,"processAssignExpr(node, currentParent, ""*="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,216,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,217,case Token.ASSIGN_DIV:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,218,"processAssignExpr(node, currentParent, ""/="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,219,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,220,case Token.ASSIGN_MOD:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,221,"processAssignExpr(node, currentParent, ""%="");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,222,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,223,case Token.HOOK:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,224,"processHook(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,225,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,226,case Token.OR:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,227,"processLogicalExpr(node, currentParent, ""||"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,228,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,229,case Token.AND:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,230,"processLogicalExpr(node, currentParent, ""&&"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,231,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,232,case Token.INC:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,233,"processIncrDecrExpr(node, currentParent, ""++"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,234,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,235,case Token.DEC:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,236,"processIncrDecrExpr(node, currentParent, ""--"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,237,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,238,case Token.FUNCTION:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,239,"processFunction(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,240,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,241,case Token.IF:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,242,"processIf(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,243,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,244,case Token.SWITCH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,245,"processSwitch(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,246,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,247,case Token.CASE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,248,"processCase(node, currentParent, TagType.Case);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,249,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,250,case Token.DEFAULT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,251,"processCase(node, currentParent, TagType.DefaultCase);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,252,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,253,case Token.WHILE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,254,"processLoop(node, currentParent, TagType.WhileStmt);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,255,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,256,case Token.DO:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,257,"processLoop(node, currentParent, TagType.DoWhileStmt);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,258,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,259,case Token.FOR:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,260,"processForLoop(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,261,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,262,case Token.BREAK:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,263,"processJmp(node, currentParent, TagType.BreakStmt);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,264,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,265,case Token.CONTINUE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,266,"processJmp(node, currentParent, TagType.ContinueStmt);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,267,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,268,case Token.VAR:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,269,"processVar(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,270,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,271,case Token.WITH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,272,"processWith(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,273,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,274,case Token.CATCH:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,275,"processCatch(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,276,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,277,case Token.VOID:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,278,"processUnaryExpr(node, currentParent, ""void"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,279,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,280,case Token.EMPTY:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,281,"processEmpty(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,282,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,283,case Token.BLOCK:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,284,"processBlock(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,285,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,286,case Token.LABEL:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,287,"processLabel(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,288,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,289,case Token.EXPR_RESULT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,290,"processExprResult(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,291,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,292,case Token.SCRIPT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,293,"processScript(node, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,294,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,298,"private void processAssignExpr(Node node, JsonML currentParent, String op) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,299,"processTwoArgExpr(node, currentParent, TagType.AssignExpr, op);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,302,"private void processArrayLiteral(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,303,JsonML element = new JsonML(TagType.ArrayExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,304,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,305,Iterator<Node> it = node.children().iterator();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,306,int[] skipIndexes = (int[]) node.getProp(Node.SKIP_INDEXES_PROP);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,307,int i = 0;  // next index in new array to process
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,308,int j = 0;  // next index in skip array
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,309,int nextToSkip = 0;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,310,while (it.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,311,while (skipIndexes != null && j < skipIndexes.length) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,312,if (i == skipIndexes[j]) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,313,element.appendChild(new JsonML(TagType.Empty));
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,314,++i;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,315,++j;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,316,} else {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,317,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,320,"processNode(it.next(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,321,++i;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,325,"private void processBinaryExpr(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,326,String op) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,327,"processTwoArgExpr(node, currentParent, TagType.BinaryExpr, op);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,330,"private void processBlock(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,331,JsonML element = new JsonML(TagType.BlockStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,332,if (currentParent != null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,333,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,336,"processDirectives(node, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,338,for (Node child : node.children()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,339,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,343,"private void processCall(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,344,Iterator<Node> it = node.children().iterator();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,345,Node child = it.next();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,346,JsonML element;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,347,// the first child may indicate that it is invoke expression
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,348,// or a standard function call
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,349,switch (child.getType()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,350,case Token.GETPROP:         // a.x()
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,351,case Token.GETELEM:         // a[x]()
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,352,// we have to process this node here and cannot call processNode(child)
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,353,"// other children of CALL represent arguments, so we need to have"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,354,// access to them while processing InvokeExpr
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,355,element = new JsonML(TagType.InvokeExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,356,element.setAttribute(
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,357,"TagAttr.OP,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,358,"child.getType() == Token.GETPROP ? ""."" : ""[]"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,359,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,361,// there should be exactly two children
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,362,Node grandchild = child.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,363,"processNode(grandchild, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,364,"processNode(grandchild.getNext(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,367,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,368,case Token.NAME:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,369,// caja treats calls to eval in a special way
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,370,"if (child.getString().equals(""eval"")) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,371,element = new JsonML(TagType.EvalExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,372,} else {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,373,// element representing function name is created
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,374,element = new JsonML(TagType.IdExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,375,"element.setAttribute(TagAttr.NAME, child.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,376,// element representing function is created
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,377,"element = new JsonML(TagType.CallExpr, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,379,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,380,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,381,default:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,382,// it addresses all cases where the first argument evaluates to
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,383,// another expression
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,384,element = new JsonML(TagType.CallExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,385,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,386,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,387,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,390,// there may be arguments applied
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,391,while (it.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,392,"processNode(it.next(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,396,"private void processCase(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,397,TagType type) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,398,JsonML element = new JsonML(type);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,399,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,401,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,402,"// for case, the first child represents its argument"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,403,if (type == TagType.Case) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,404,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,405,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,408,// it should be a BLOCK which is required by rhino for compatibility
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,409,// the writer skips the node and move on to its children
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,410,Preconditions.checkNotNull(child);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,411,Preconditions.checkState(child.getType() == Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,412,child = child.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,413,while (child != null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,414,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,415,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,419,"private void processCatch(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,420,JsonML element = new JsonML(TagType.CatchClause);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,421,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,423,// the first child represents exception's name
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,424,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,425,JsonML patt = new JsonML(TagType.IdPatt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,426,"patt.setAttribute(TagAttr.NAME, child.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,427,element.appendChild(patt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,429,// the second child represents content
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,430,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,431,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,434,"private void processEmpty(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,435,currentParent.appendChild(new JsonML(TagType.EmptyStmt));
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,438,"private void processExprResult(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,439,"// this not interesting to JsonML, so we just need to skip it"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,440,"processNode(node.getFirstChild(), currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,443,"private void processForLoop(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,444,if (NodeUtil.isForIn(node)) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,445,"processLoop(node, currentParent, TagType.ForInStmt);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,446,} else {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,447,"processLoop(node, currentParent, TagType.ForStmt);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,451,"private void processFunction(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,452,JsonML element;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,453,if (NodeUtil.isFunctionDeclaration(node)) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,454,element = new JsonML(TagType.FunctionDecl);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,455,} else {  // isFunctionExpresion == true
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,456,element = new JsonML(TagType.FunctionExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,458,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,460,// the first child represents function's name
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,461,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,462,String name = child.getString();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,463,"if (!name.equals("""")) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,464,JsonML nameElement = new JsonML(TagType.IdPatt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,465,"nameElement.setAttribute(TagAttr.NAME, name);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,466,element.appendChild(nameElement);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,467,} else {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,468,element.appendChild(new JsonML(TagType.Empty));
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,471,// the second child is a wrapper for formal parameters
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,472,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,473,JsonML params = new JsonML(TagType.ParamDecl);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,474,element.appendChild(params);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,475,Iterator<Node> it = child.children().iterator();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,476,while (it.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,477,JsonML param = new JsonML(TagType.IdPatt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,478,Node nameNode = it.next();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,479,"param.setAttribute(TagAttr.NAME, nameNode.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,480,params.appendChild(param);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,483,// the third child represents function's body
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,484,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,486,// it can contain some directives
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,487,"processDirectives(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,489,it = child.children().iterator();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,490,while (it.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,491,"processNode(it.next(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,495,"private void processHook(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,496,JsonML element = new JsonML(TagType.ConditionalExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,497,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,498,"processChildren(node, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,501,"private void processIf(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,502,JsonML element = new JsonML(TagType.IfStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,503,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,504,Iterator<Node> it = node.children().iterator();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,506,// there should be at least one child
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,507,while (it.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,508,"processNode(it.next(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,510,// append EmptyStmt for each missing part
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,511,int childCount = node.getChildCount();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,512,Preconditions.checkState(childCount >= 2);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,513,"if (childCount < 3) { // no ""else"" part for sure"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,514,element.appendChild(new JsonML(TagType.EmptyStmt));
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,518,"private void processIncrDecrExpr(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,519,String op) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,520,JsonML element = new JsonML(TagType.CountExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,521,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,522,"if (op.equals(""++"")) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,523,"element.setAttribute(TagAttr.OP, ""++"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,524,"} else { // op.euals(""--"")"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,525,"element.setAttribute(TagAttr.OP, ""--"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,528,if (node.getIntProp(Node.INCRDECR_PROP) == 1) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,529,"element.setAttribute(TagAttr.IS_PREFIX, false);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,530,} else { // INCRDECR_PROP == 0
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,531,"element.setAttribute(TagAttr.IS_PREFIX, true);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,534,// there is exactly one child
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,535,"processNode(node.getFirstChild(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,538,"private void processJmp(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,539,TagType type) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,540,JsonML element = new JsonML(type);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,541,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,543,// optional child may point to a label
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,544,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,545,if (child != null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,546,"element.setAttribute(TagAttr.LABEL, child.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,550,"private void processLabel(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,551,JsonML element = new JsonML(TagType.LabelledStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,552,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,554,// the first child represents label's name
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,555,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,556,"element.setAttribute(TagAttr.LABEL, child.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,558,// the second child represents labelled content
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,559,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,560,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,563,"private void processLiteral(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,564,JsonML element = new JsonML(TagType.LiteralExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,565,switch (node.getType()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,566,case Token.NUMBER:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,567,"element.setAttribute(TagAttr.TYPE, ""number"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,568,"element.setAttribute(TagAttr.VALUE, node.getDouble());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,569,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,570,case Token.STRING:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,571,"element.setAttribute(TagAttr.TYPE, ""string"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,572,"element.setAttribute(TagAttr.VALUE, node.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,573,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,574,case Token.NULL:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,575,"element.setAttribute(TagAttr.TYPE, ""null"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,576,"element.setAttribute(TagAttr.VALUE, null);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,577,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,578,case Token.TRUE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,579,"element.setAttribute(TagAttr.TYPE, ""boolean"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,580,"element.setAttribute(TagAttr.VALUE, true);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,581,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,582,case Token.FALSE:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,583,"element.setAttribute(TagAttr.TYPE, ""boolean"");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,584,"element.setAttribute(TagAttr.VALUE, false);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,585,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,586,default:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,587,"throw new IllegalArgumentException(""Illegal type of node."");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,589,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,592,"private void processLogicalExpr(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,593,String op) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,594,"if (op.equals(""||"")) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,595,"processTwoArgExpr(node, currentParent, TagType.LogicalOrExpr);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,596,"} else if (op.endsWith(""&&"")) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,597,"processTwoArgExpr(node, currentParent, TagType.LogicalAndExpr);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,598,} else {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,599,"throw new IllegalArgumentException(""Unsupported value of op argument."");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,603,"private void processLoop(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,604,TagType type) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,605,JsonML element = new JsonML(type);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,606,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,607,"processChildren(node, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,610,"private void processMemberExpr(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,611,String op) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,612,JsonML element = new JsonML(TagType.MemberExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,613,"element.setAttribute(TagAttr.OP, op);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,614,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,616,// there should be exactly two children
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,617,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,618,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,619,"processNode(child.getNext(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,622,"private void processName(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,623,Preconditions.checkState(!node.hasChildren());
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,625,JsonML element = new JsonML(TagType.IdExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,626,"element.setAttribute(TagAttr.NAME, node.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,627,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,630,"private void processNew(Node node, JsonML currentParent, TagType type) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,631,JsonML element = new JsonML(type);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,632,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,634,"processChildren(node, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,637,"private void processObjectLiteral(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,638,JsonML element = new JsonML(TagType.ObjectExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,639,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,640,Iterator<Node> it = node.children().iterator();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,641,while (it.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,642,JsonML item = new JsonML(TagType.DataProp);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,643,Node child = it.next();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,644,Object name = null;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,645,switch (child.getType()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,646,case Token.STRING:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,647,name = child.getString();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,648,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,649,case Token.NUMBER:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,650,name = child.getDouble();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,651,break;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,652,default:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,653,"throw new IllegalArgumentException(""Illegal type of node."");"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,655,"item.setAttribute(TagAttr.NAME, name);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,656,"processNode(it.next(), item);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,657,element.appendChild(item);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,661,"private void processRegExp(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,662,JsonML element = new JsonML(TagType.RegExpExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,663,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,665,// first child represents expression's body
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,666,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,667,"element.setAttribute(TagAttr.BODY, child.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,669,// optional second child represents flags
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,670,"String flags = """";"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,671,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,672,if (child != null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,673,flags = child.getString();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,675,"element.setAttribute(TagAttr.FLAGS, flags);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,678,"private void processSwitch(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,679,JsonML element = new JsonML(TagType.SwitchStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,680,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,682,// the first child represents expression
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,683,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,684,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,686,// next children represent particular cases
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,687,for (Node c = child.getNext(); c != null; c = c.getNext()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,688,"processNode(c, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,692,"private void processThis(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,693,currentParent.appendChild(new JsonML(TagType.ThisExpr));
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,696,"private void processThrow(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,697,JsonML element = new JsonML(TagType.ThrowStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,698,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,700,// there is exactly one child
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,701,"processNode(node.getFirstChild(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,704,"private void processTry(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,705,JsonML element = new JsonML(TagType.TryStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,706,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,708,// first child represents actual try block
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,709,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,710,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,712,// second child (precisely: child of that child) represents catch block
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,713,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,714,if (child.hasChildren()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,715,"processNode(child.getFirstChild(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,716,} else {  // catch block is not present
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,717,element.appendChild(new JsonML(TagType.Empty));
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,720,//optional third child represents finally block
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,721,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,722,if (child != null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,723,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,727,"private void processTwoArgExpr(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,728,TagType type) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,729,"processTwoArgExpr(node, currentParent, type, null);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,732,"private void processTwoArgExpr(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,733,"TagType type, String op) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,734,JsonML element = new JsonML(type);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,735,if (op != null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,736,"element.setAttribute(TagAttr.OP, op);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,738,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,740,Preconditions.checkState(node.getChildCount() == 2);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,741,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,742,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,743,"processNode(child.getNext(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,747,* Process nodes which JsonML represents by UnaryExpr.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,748,* @param node node to process
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,749,* @param op operation for this unary expression - depends on node type
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,751,"private void processUnaryExpr(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,752,String op) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,753,JsonML element = new JsonML(TagType.UnaryExpr);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,754,"element.setAttribute(TagAttr.OP, op);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,755,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,757,"processNode(node.getFirstChild(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,760,"private void processVar(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,761,JsonML element = new JsonML(TagType.VarDecl);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,762,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,764,//there may be many actual declarations
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,765,Iterator<Node> it = node.children().iterator();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,766,while (it.hasNext()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,767,Node child = it.next();  // this node represents var's id
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,768,// its own child represents initial value
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,770,JsonML id = new JsonML(TagType.IdPatt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,771,"id.setAttribute(TagAttr.NAME, child.getString());"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,773,if (child.hasChildren()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,774,JsonML patt = new JsonML(TagType.InitPatt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,775,element.appendChild(patt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,776,patt.appendChild(id);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,777,"processNode(child.getFirstChild(), patt);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,778,} else {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,779,element.appendChild(id);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,784,"private void processReturn(Node currentNode, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,785,JsonML element = new JsonML(TagType.ReturnStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,786,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,788,// there is exactly one child if return statement is not empty
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,789,if (currentNode.hasChildren()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,790,"processNode(currentNode.getFirstChild(), element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,794,"private void processScript(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,795,JsonML element = new JsonML(TagType.Program);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,796,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,798,"processDirectives(node, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,800,"processChildren(node, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,803,"private void processWith(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,804,JsonML element = new JsonML(TagType.WithStmt);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,805,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,807,// the first child represent object
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,808,Node child = node.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,809,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,811,// the second one represents content
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,812,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,813,"processNode(child, element);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,816,"private void processChildren(Node node, JsonML currentParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,817,for (Node child : node.children()) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,818,"processNode(child, currentParent);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,822,"private void processDirectives(Node node, JsonML currectParent) {"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,823,Set<String> directives = node.getDirectives();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,825,if (directives == null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,826,return;
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,829,for (String directive : directives) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,830,JsonML element = new JsonML(TagType.PrologueDecl);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,831,"element.setAttribute(TagAttr.DIRECTIVE, directive);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,832,"element.setAttribute(TagAttr.VALUE, directive);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,833,currectParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,837,"private void processOneArgExpr(Node node, JsonML currentParent,"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,838,TagType type) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,839,JsonML element = new JsonML(type);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,840,currentParent.appendChild(element);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,842,// there is only one child node
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,843,"processNode(node.getFirstChild(), element);"
