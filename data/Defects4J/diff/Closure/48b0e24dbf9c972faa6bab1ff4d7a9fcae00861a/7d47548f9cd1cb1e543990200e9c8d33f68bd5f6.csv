is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,20,import com.google.common.collect.ImmutableMap;
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,24,mport com.google.common.collect.Sets;
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,680,et<String> idGenerators;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,680,"ImmutableMap<String, RenamingMap> idGenerators;"
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,983,dGenerators = Collections.emptySet();
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,983,idGenerators = ImmutableMap.of();
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1231,his.idGenerators = Sets.newHashSet(idGenerators);
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1231,"ImmutableMap.Builder<String, RenamingMap> builder = ImmutableMap.builder();"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1232,for (String name : idGenerators) {
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1233,"builder.put(name, UNIQUE_ID_GENERATOR);"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1235,this.idGenerators = builder.build();
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1239,"* A renaming map instance to use to signal the use of the ""inconsistent"""
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1240,* id generator type.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1242,public static final RenamingMap UNIQUE_ID_GENERATOR =
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1243,ReplaceIdGenerators.UNIQUE;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1246,* Sets the id generators to replace.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1248,"public void setIdGenerators(Map<String, RenamingMap> idGenerators) {"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1249,this.idGenerators = ImmutableMap.copyOf(idGenerators);
False,src/com/google/javascript/jscomp/CssRenamingMap.java,src/com/google/javascript/jscomp/CssRenamingMap.java,22,ublic interface CssRenamingMap {
True,src/com/google/javascript/jscomp/CssRenamingMap.java,src/com/google/javascript/jscomp/CssRenamingMap.java,22,public interface CssRenamingMap extends RenamingMap {
True,src/com/google/javascript/jscomp/CssRenamingMap.java,src/com/google/javascript/jscomp/CssRenamingMap.java,30,@Override
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,2,* Copyright 2013 The Closure Compiler Authors.
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,16,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,19,* Interface used by to substitute names.
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,20,* @author johnlenz@google.com (John Lenz)
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,22,public interface RenamingMap {
True,src/com/google/javascript/jscomp/RenamingMap.java,src/com/google/javascript/jscomp/RenamingMap.java,23,String get(String value);
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,35,mport java.util.Set;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,35,import java.util.Map.Entry;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,57,"Id generator can only be one of consistent, inconsistent, or stable."");"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,57,"""Id generator can only be one of "" +"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,58,"""consistent, inconsistent, mapped or stable."");"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,65,static final DiagnosticType MISSING_NAME_MAP_FOR_GENERATOR =
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,66,DiagnosticType.warning(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,67,"""JSC_MISSING_NAME_MAP_FOR_GENERATOR"","
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,68,"""The mapped id generator, does not have a renaming map supplied."");"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,79,public static final RenamingMap UNIQUE = new RenamingMap() {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,80,@Override public String get(String value) { return null; }};
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,74,"bstractCompiler compiler, Set<String> idGens,"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,83,"AbstractCompiler compiler, Map<String, RenamingMap> idGens,"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,88,or (String gen : idGens) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,89,ameGenerators.put(
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,90,"en, createNameSupplier(RenameStrategy.INCONSISTENT, previousMap.get(gen)));"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,91,"dGeneratorMaps.put(gen, Maps.<String, String>newLinkedHashMap());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,97,"for (Entry<String, RenamingMap> gen : idGens.entrySet()) {"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,98,String name = gen.getKey();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,99,RenamingMap map = gen.getValue();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,100,if (map == ReplaceIdGenerators.UNIQUE) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,101,"nameGenerators.put(name,"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,102,createNameSupplier(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,103,"RenameStrategy.INCONSISTENT, previousMap.get(name)));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,104,} else {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,105,"nameGenerators.put(name,"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,106,createNameSupplier(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,107,"RenameStrategy.MAPPED, map));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,109,"idGeneratorMaps.put(name, Maps.<String, String>newLinkedHashMap());"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,96,rivate enum RenameStrategy {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,114,enum RenameStrategy {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,117,"MAPPED,"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,187,private static class MappedNameSupplier implements NameSupplier {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,188,private final RenamingMap map;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,190,MappedNameSupplier(RenamingMap map) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,191,this.map = map;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,194,@Override
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,195,"public String getName(String id, String name) {"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,196,return map.get(name);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,199,@Override
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,200,public RenameStrategy getRenameStrategy() {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,201,return RenameStrategy.MAPPED;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,219,private NameSupplier createNameSupplier(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,220,"RenameStrategy renameStrategy, RenamingMap mappings) {"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,221,Preconditions.checkState(renameStrategy == RenameStrategy.MAPPED);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,222,return new MappedNameSupplier(mappings);
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,194,doc.isStableIdGenerator() ? 1 : 0);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,237,(doc.isStableIdGenerator() ? 1 : 0) +
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,238,(doc.isMappedIdGenerator() ? 1 : 0);
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,216,"ame, createNameSupplier(RenameStrategy.CONSISTENT, previousMap.get(name)));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,260,"name, createNameSupplier("
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,261,"RenameStrategy.CONSISTENT, previousMap.get(name)));"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,219,"ame, createNameSupplier(RenameStrategy.STABLE, previousMap.get(name)));"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,220, else {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,264,"name, createNameSupplier("
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,265,"RenameStrategy.STABLE, previousMap.get(name)));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,266,} else if (doc.isIdGenerator()) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,222,"ame, createNameSupplier(RenameStrategy.INCONSISTENT, previousMap.get(name)));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,268,"name, createNameSupplier("
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,269,"RenameStrategy.INCONSISTENT, previousMap.get(name)));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,270,} else if (doc.isMappedIdGenerator()) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,271,NameSupplier supplier = nameGenerators.get(name);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,272,if (supplier == null
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,273,|| supplier.getRenameStrategy() != RenameStrategy.MAPPED) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,274,"compiler.report(t.makeError(n, MISSING_NAME_MAP_FOR_GENERATOR));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,275,// skip registering the name in the list of Generators if there no
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,276,// mapping.
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,277,return;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,279,} else {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,280,"throw new IllegalStateException(""unexpected"");"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,269,"tring rename = getObfuscatedName(arg, callName, nameGenerator, arg.getString());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,327,String rename = getObfuscatedName(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,328,"arg, callName, nameGenerator, arg.getString());"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,274,"tring rename = getObfuscatedName(key, callName, nameGenerator, key.getString());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,333,String rename = getObfuscatedName(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,334,"key, callName, nameGenerator, key.getString());"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,286,"rivate String getObfuscatedName(Node id, String callName, NameSupplier nameGenerator,"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,287,tring name) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,346,private String getObfuscatedName(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,347,"Node id, String callName, NameSupplier nameGenerator, String name) {"
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,329,rivate static final int MASK_MAPPEDIDGEN   = 0x00800000; // @idGenerator {mapped}
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,329,private static final int MASK_MAPPEDIDGEN   = 0x01000000; // @idGenerator {mapped}
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,290,nstrumentMemoryAllocPass.JS_INSTRUMENT_ALLOCATION_CODE +
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,290,InstrumentMemoryAllocPass.JS_INSTRUMENT_ALLOCATION_CODE +
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,537,"ptions.idGenerators = Sets.newHashSet(""f"");"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,537,"options.setIdGenerators(Sets.newHashSet(""f""));"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,19,mport com.google.common.collect.ImmutableSet;
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,19,import com.google.common.collect.ImmutableMap;
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,34,RenamingMap xidTestMap = new RenamingMap() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,35,"private final ImmutableMap<String, String> map = ImmutableMap.of("
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,36,"""foo"", "":foo:"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,37,"""bar"", "":bar:"");"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,38,@Override
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,39,public String get(String value) {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,40,String replacement = map.get(value);
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,41,"return replacement != null ? replacement : ""unknown:"" + value;"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,36,ew ImmutableSet.Builder<String>()
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,37,"add(""goog.events.getUniqueId"")"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,38,"add(""goog.place.getUniqueId"")"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,47,"new ImmutableMap.Builder<String, RenamingMap>()"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,48,".put(""goog.events.getUniqueId"", ReplaceIdGenerators.UNIQUE)"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,49,".put(""goog.place.getUniqueId"", ReplaceIdGenerators.UNIQUE)"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,50,".put(""xid"", xidTestMap)"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,310,public void testInObjLit2() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,311,"test(""/** @idGenerator {mapped}*/ xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,312,"""foo.bar = {a: xid('foo')}"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,314,"""xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,315,"""foo.bar = {a: ':foo:'}"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,317,"""xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,318,"""foo.bar = {a: ':foo:'}"");"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,321,public void testMapped() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,322,"test(""/** @idGenerator {mapped}*/ xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,323,"""foo.bar = xid('foo');"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,325,"""xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,326,"""foo.bar = ':foo:';"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,328,"""xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,329,"""foo.bar = ':foo:';"");"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,390,"estSame(new String[] {""/** @stableIdGenerator \n @consistentIdGenerator \n*/"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,424,"testSame(new String[] {""/** @stableIdGenerator \n "" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,425,"""@consistentIdGenerator \n*/"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,439,public void testUnknownMapping() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,440,"testSame("""" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,441,"""/** @idGenerator {mapped} */\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,442,"""var id = function() {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,443,"""function Foo() { id('foo'); }\n"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,444,ReplaceIdGenerators.MISSING_NAME_MAP_FOR_GENERATOR);
