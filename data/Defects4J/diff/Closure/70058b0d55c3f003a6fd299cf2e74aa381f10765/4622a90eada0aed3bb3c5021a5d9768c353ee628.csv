is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,178,heckLevel reportUnknownTypes;
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,180,** Flags a warning for every node whose type could not be determined. */
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,181,ublic void setReportUnknownTypes(CheckLevel level) {
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,182,eportUnknownTypes = level;
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,884,eportUnknownTypes = CheckLevel.OFF;
False,src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java,src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java,26,inal DiagnosticGroup group;
False,src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java,src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java,27,inal CheckLevel level;
True,src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java,src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java,26,private final DiagnosticGroup group;
True,src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java,src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java,27,private final CheckLevel level;
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,80,"checkTypes, checkVars, const, constantProperty, deprecated, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,81,"duplicateMessage, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,80,"""checkStructDictInheritance, checkTypes, checkVars, const, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,81,"""constantProperty, deprecated, duplicateMessage, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,85,"nonStandardJsDocs, suspiciousCode, strictModuleDepCheck, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,86,"typeInvalidation, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,85,"""nonStandardJsDocs, reportUnknownTypes, suspiciousCode, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,86,"""strictModuleDepCheck, typeInvalidation, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,190,ublic static final DiagnosticGroup CHECK_STRUCT_DICT_INHERITENCE =
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,191,"iagnosticGroups.registerGroup(""checkStructDictInheritence"","
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,190,public static final DiagnosticGroup REPORT_UNKNOWN_TYPES =
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,191,"DiagnosticGroups.registerGroup(""reportUnknownTypes"","
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,192,TypeCheck.UNKNOWN_EXPR_TYPE);
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,194,public static final DiagnosticGroup CHECK_STRUCT_DICT_INHERITANCE =
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,195,"DiagnosticGroups.registerGroup(""checkStructDictInheritance"","
False,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,179,"ptions.reportMissingOverride,"
False,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,180,ptions.reportUnknownTypes)
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,179,options.reportMissingOverride)
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,197,"iagnosticType.warning(""JSC_UNKNOWN_EXPR_TYPE"","
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,197,"DiagnosticType.disabled(""JSC_UNKNOWN_EXPR_TYPE"","
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,241,"// If a diagnostic is disabled by default, do not add it in this list"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,242,"// TODO(user): Either INEXISTENT_PROPERTY shouldn't be here, or we should"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,243,// change DiagnosticGroups.setWarningLevel to not accidentally enable it.
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,265,"NKNOWN_EXPR_TYPE,"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,292,rivate final CheckLevel reportUnknownTypes;
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,294,private final boolean reportUnknownTypes;
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,315,"heckLevel reportMissingOverride,"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,316,heckLevel reportUnknownTypes) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,317,CheckLevel reportMissingOverride) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,324,his.reportUnknownTypes = reportUnknownTypes;
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,325,this.reportUnknownTypes = ((Compiler) compiler).getOptions().enables(
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,326,DiagnosticGroups.REPORT_UNKNOWN_TYPES);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,331,"heckLevel reportMissingOverride,"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,332,heckLevel reportUnknownTypes) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,333,CheckLevel reportMissingOverride) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,334,"eportMissingOverride, reportUnknownTypes);"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,335,reportMissingOverride);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,341,"heckLevel.WARNING, CheckLevel.OFF);"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,342,CheckLevel.WARNING);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,872,f (reportUnknownTypes.isOn()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,873,ompiler.report(
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,874,".makeError(n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,873,if (reportUnknownTypes) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,874,"compiler.report(t.makeError(n, UNKNOWN_EXPR_TYPE));"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,332,"eturn new TypeCheck(compiler, rai, compiler.getTypeRegistry(),"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,333,"evel, CheckLevel.OFF);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,332,"return new TypeCheck(compiler, rai, compiler.getTypeRegistry(), level);"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6868,"egistry, topScope, scopeCreator, CheckLevel.WARNING, CheckLevel.OFF)"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6868,"registry, topScope, scopeCreator, CheckLevel.WARNING)"
False,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,61,"heckLevel.ERROR,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10556,"egistry, topScope, scopeCreator, CheckLevel.WARNING, CheckLevel.OFF)"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10556,"registry, topScope, scopeCreator, CheckLevel.WARNING)"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11536,public void testUnknownTypeReport() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11537,"compiler.getOptions().setWarningLevel(DiagnosticGroups.REPORT_UNKNOWN_TYPES,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11538,CheckLevel.WARNING);
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11539,"testTypes(""function id(x) { return x; }"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11540,"""could not determine the type of this expression"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11543,public void testUnknownTypeDisabledByDefault() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11544,"testTypes(""function id(x) { return x; }"");"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11740,"eportMissingOverrides,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11741,heckLevel.OFF);
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11751,reportMissingOverrides);
