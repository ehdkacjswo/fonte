is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,176,void maybeInitializePreprocessorSymbolTable(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,177,if (options.ideMode) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,178,Node root = compiler.getRoot();
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,179,if (preprocessorSymbolTable == null ||
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,180,preprocessorSymbolTable.getRootNode() != root) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,181,preprocessorSymbolTable = new PreprocessorSymbolTable(root);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,846,maybeInitializePreprocessorSymbolTable(compiler);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,849,"preprocessorSymbolTable,"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,880,f (options.ideMode) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,881,reprocessorSymbolTable =
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,882,ew PreprocessorSymbolTable(compiler.getRoot());
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,892,maybeInitializePreprocessorSymbolTable(compiler);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,33,import javax.annotation.Nullable;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,121,private final PreprocessorSymbolTable preprocessorSymbolTable;
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,121,"heckLevel requiresLevel,"
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,122,oolean rewriteNewDateGoogNow) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,124,"@Nullable PreprocessorSymbolTable preprocessorSymbolTable,"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,125,"CheckLevel requiresLevel,"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,126,boolean rewriteNewDateGoogNow) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,128,this.preprocessorSymbolTable = preprocessorSymbolTable;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,303,maybeAddToSymbolTable(left);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,304,maybeAddStringNodeToSymbolTable(arg);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,320,maybeAddToSymbolTable(left);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,321,maybeAddStringNodeToSymbolTable(arg);
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1027,ewNode.setSourcePositionForTree(
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1028,ewNode.getSourcePosition() + offset);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1038,newNode.setSourceEncodedPositionForTree(
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1039,sourceInfoNode.getSourcePosition() + offset);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1091,* The string in {@code n} is a reference name. Create a synthetic
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1092,"* node for it with all the proper source info, and add it to the symbol"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1093,* table.
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1095,private void maybeAddStringNodeToSymbolTable(Node n) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1096,if (preprocessorSymbolTable == null) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1097,return;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1100,String name = n.getString();
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1101,Node syntheticRef = NodeUtil.newQualifiedNameNode(
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1102,"compiler.getCodingConvention(), name,"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1103,"n /* real source offsets will be filled in below */,"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1104,name);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1106,// Offsets to add to source. Named for documentation purposes.
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1107,final int FOR_QUOTE = 1;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1108,final int FOR_DOT = 1;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1110,Node current = null;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1111,for (current = syntheticRef;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1112,current.getType() == Token.GETPROP;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1113,current = current.getFirstChild()) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1114,int fullLen = current.getQualifiedName().length();
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1115,int namespaceLen = current.getFirstChild().getQualifiedName().length();
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1117,current.setSourceEncodedPosition(n.getSourcePosition() + FOR_QUOTE);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1118,current.setLength(fullLen);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1120,current.getLastChild().setSourceEncodedPosition(
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1121,n.getSourcePosition() + namespaceLen + FOR_QUOTE + FOR_DOT);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1122,current.getLastChild().setLength(
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1123,current.getLastChild().getString().length());
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1126,current.setSourceEncodedPosition(n.getSourcePosition() + FOR_QUOTE);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1127,current.setLength(current.getString().length());
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1129,maybeAddToSymbolTable(syntheticRef);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1133,* Add the given qualified name node to the symbol table.
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1135,private void maybeAddToSymbolTable(Node n) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1136,if (preprocessorSymbolTable != null) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1137,preprocessorSymbolTable.addReference(n);
False,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,103,"Expected line number between 1 and "" + lineOffsets.length);"
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,103,"""Expected line number between 1 and "" + lineOffsets.length +"
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,104,"""\nActual: "" + lineno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1313,ublic void setSourcePositionForTree(int sourcePosition) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1313,public void setSourceEncodedPosition(int sourcePosition) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1314,this.sourcePosition = sourcePosition;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1317,public void setSourceEncodedPositionForTree(int sourcePosition) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1318,hild.setSourcePositionForTree(sourcePosition);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1322,child.setSourceEncodedPositionForTree(sourcePosition);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2100,f (getProp(SOURCENAME_PROP) == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2101,"utProp(SOURCENAME_PROP, other.getProp(SOURCENAME_PROP));"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2102,ourcePosition = other.sourcePosition;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2108,if (getProp(SOURCENAME_PROP) == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2109,"putProp(SOURCENAME_PROP, other.getProp(SOURCENAME_PROP));"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2112,sourcePosition = other.sourcePosition;
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6970,"ew ProcessClosurePrimitives(compiler, CheckLevel.ERROR, true)"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6970,"new ProcessClosurePrimitives(compiler, null, CheckLevel.ERROR, true)"
False,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,57,"eturn new ProcessClosurePrimitives(compiler, CheckLevel.ERROR, true);"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,57,return new ProcessClosurePrimitives(
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,58,"compiler, null, CheckLevel.ERROR, true);"
False,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,63,"ew ProcessClosurePrimitives(compiler, CheckLevel.OFF, true)"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,64,"new ProcessClosurePrimitives(compiler, null, CheckLevel.OFF, true)"
False,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,101,"ew ProcessClosurePrimitives(compiler, CheckLevel.ERROR, true)"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,102,"new ProcessClosurePrimitives(compiler, null, CheckLevel.ERROR, true)"
False,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,587,"ew ProcessClosurePrimitives(compiler, CheckLevel.WARNING, true);"
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,587,new ProcessClosurePrimitives(
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,588,"compiler, null, CheckLevel.WARNING, true);"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,100,public void testGoogRequireReferences() throws Exception {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,101,SymbolTable table = createSymbolTable(
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,102,"""var goog = {};"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,103,"""goog.provide = function() {};"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,104,"""goog.require = function() {};"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,105,"""goog.provide('goog.dom');"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,106,"""goog.require('goog.dom');"");"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,107,"Symbol goog = getGlobalVar(table, ""goog"");"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,108,assertNotNull(goog);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,110,// 8 references:
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,111,// 5 in code
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,112,// 2 in strings
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,113,// 1 created by ProcessClosurePrimitives when it processes the provide.
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,115,"// NOTE(nicksantos): In the future, we may de-dupe references such"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,116,// that the one in the goog.provide string and the one created by
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,117,// ProcessClosurePrimitives count as the same reference.
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,118,"assertEquals(8, Iterables.size(table.getReferences(goog)));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8987,"ew ProcessClosurePrimitives(compiler, CheckLevel.ERROR, true)"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8987,"new ProcessClosurePrimitives(compiler, null, CheckLevel.ERROR, true)"
