is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,145,f (n != null && n.getType() != Token.SCRIPT
False,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,146,& (n.getType() != Token.BLOCK || !n.isSyntheticBlock())) {
True,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,144,if (n != null && !n.isScript()
True,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java,145,&& (!n.isBlock() || !n.isSyntheticBlock())) {
False,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,413,f (n.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,413,if (!n.isName()) {
False,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,131,arent.getType() != Token.GETPROP &&
False,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,132,arent.getType() != Token.REGEXP &&
True,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,131,!parent.isGetProp() &&
True,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,132,!parent.isRegExp() &&
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,26,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,74,f (exitNode.getType() != Token.RETURN ||
True,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,73,if (!exitNode.isReturn() ||
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,76,xitNode.getFirstChild().getType() != Token.THIS) {
True,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,75,!exitNode.getFirstChild().isThis()) {
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,112,f (callNode.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,111,if (!callNode.isCall()) {
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,117,f (getPropNode.getType() != Token.GETPROP) {
True,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,116,if (!getPropNode.isGetProp()) {
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,145,f (nextNode == null ||
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,146,extNode.getType() != Token.EXPR_RESULT) {
True,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,144,if (nextNode == null || !nextNode.isExprResult()) {
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,151,f (nextCallNode.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,149,if (!nextCallNode.isCall()) {
False,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,156,f (nextGetPropNode.getType() != Token.GETPROP) {
True,src/com/google/javascript/jscomp/ChainCalls.java,src/com/google/javascript/jscomp/ChainCalls.java,154,if (!nextGetPropNode.isGetProp()) {
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,368,& (parent.getType() != Token.INC) && (parent.getType() != Token.DEC)
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,368,&& !parent.isInc() && !parent.isDec()
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,536,eturn parent.getType() != Token.NEW;
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,536,return !parent.isNew();
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,20,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,61,arent.getType() != Token.GETPROP &&
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,62,arent.getType() != Token.REGEXP &&
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,59,!parent.isGetProp() &&
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,60,!parent.isRegExp() &&
False,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,24,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,125,f (s.getSource().getValue().getType() != Token.RETURN) {
True,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,124,if (!s.getSource().getValue().isReturn()) {
False,src/com/google/javascript/jscomp/CheckRequiresForConstructors.java,src/com/google/javascript/jscomp/CheckRequiresForConstructors.java,105,eturn parent == null || parent.getType() != Token.SCRIPT ||
True,src/com/google/javascript/jscomp/CheckRequiresForConstructors.java,src/com/google/javascript/jscomp/CheckRequiresForConstructors.java,105,return parent == null || !parent.isScript() ||
False,src/com/google/javascript/jscomp/CheckRequiresForConstructors.java,src/com/google/javascript/jscomp/CheckRequiresForConstructors.java,202,f (nameNode.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/CheckRequiresForConstructors.java,src/com/google/javascript/jscomp/CheckRequiresForConstructors.java,202,if (!nameNode.isName()) {
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,26,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,63,.getType() != Token.EMPTY && n.getType() != Token.BREAK) {
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,62,!n.isEmpty() && !n.isBreak()) {
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,314,f (objectNode.getType() != Token.OBJECTLIT) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,314,if (!objectNode.isObjectLit()) {
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,371,f (n.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,371,if (!n.isCall()) {
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,88,f (keyNode.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,88,if (!keyNode.isString()) {
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,110,f (curParam.getType() != Token.STRING &&
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,111,urParam.getType() != Token.NUMBER) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,110,if (!curParam.isString() && !curParam.isNumber()) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,366,f (parent.getType() != Token.FOR) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,366,if (!parent.isFor()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,269,f (first.getType() != Token.STRING ||
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,270,ast.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,269,if (!first.isString() ||
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,270,!last.isString()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,561,f (first.getType() != Token.LABEL_NAME) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,561,if (!first.isLabelName()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,580,f (first.getType() != Token.LABEL_NAME) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,580,if (!first.isLabelName()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,702,f (first.getType() != Token.LABEL_NAME) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,702,if (!first.isLabelName()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,762,f (!allowNonBlockChild && n.getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,762,if (!allowNonBlockChild && !n.isBlock()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,823,f (labeledStatement.getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,823,if (!labeledStatement.isBlock()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,1090, else if (c.getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,1090,} else if (!c.isEmpty()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,1105, else if (c.getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,1105,} else if (!c.isEmpty()) {
False,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,20,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,392,f (n.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,391,if (!n.isCall()) {
False,src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java,src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java,21,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java,src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java,55,f (n.getType() != Token.VAR) {
True,src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java,src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java,54,if (!n.isVar()) {
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,585,or (; currentParent.getType() != Token.SCRIPT &&
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,586,urrentParent.getType() != Token.BLOCK;
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,585,for (; !currentParent.isScript() &&
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,586,!currentParent.isBlock();
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,848,oolean isJsIdentifier = key.getType() != Token.NUMBER &&
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,848,boolean isJsIdentifier = !key.isNumber() &&
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,143,"f (n.getType() != Token.VAR && !canBeRedeclared(n, t.getScope())) return;"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,143,"if (!n.isVar() && !canBeRedeclared(n, t.getScope())) return;"
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,27,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,264,arent.getType() != Token.EXPR_RESULT &&
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,265,arent.getType() != Token.SCRIPT) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,262,!parent.isExprResult() &&
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,263,!parent.isScript()) {
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,963,ur.getType() != Token.SCRIPT && cur.getType() != Token.FUNCTION;
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,963,!cur.isScript() && !cur.isFunction();
False,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,172,f (n.getType() != Token.CALL
False,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,173,| n.getFirstChild().getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,172,if (!n.isCall() || !n.getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,181,f (parent.getType() != Token.EXPR_RESULT) {
True,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,180,if (!parent.isExprResult()) {
False,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,195,f (endMarkerNode.getType() != Token.EXPR_RESULT) {
True,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,194,if (!endMarkerNode.isExprResult()) {
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,116,"eclParent.getType() != Token.VAR || declParent.hasOneChild(),"
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,116,"!declParent.isVar() || declParent.hasOneChild(),"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,280,f (n.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,280,if (!n.isName()) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,387,reconditions.checkState(parent.getType() != Token.FOR);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,387,Preconditions.checkState(!parent.isFor());
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,81,.getLastChild().getType() != Token.ASSIGN) {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,81,!n.getLastChild().isAssign()) {
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,105,f (node.getType() != Token.VAR) {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,105,if (!node.isVar()) {
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,231,oolean needResult = parent.getType() != Token.EXPR_RESULT;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,231,boolean needResult = !parent.isExprResult();
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,457,"f (n.getType() != Token.STRING && !isConstantName(n, knownConstants)) {"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,457,"if (!n.isString() && !isConstantName(n, knownConstants)) {"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,314,f (definition.getType() != Token.FUNCTION) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,314,if (!definition.isFunction()) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,462,f (parent.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,462,if (!parent.isCall()) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,489,f (nameArg.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,489,if (!nameArg.isString()) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,515,f (nameArg.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,515,if (!nameArg.isString()) {
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,258,f (n.getType() != Token.SCRIPT && n.getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,258,if (!n.isScript() && !n.isBlock()) {
False,src/com/google/javascript/jscomp/FindExportableNodes.java,src/com/google/javascript/jscomp/FindExportableNodes.java,82,.getLastChild().getType() != Token.ASSIGN) {
True,src/com/google/javascript/jscomp/FindExportableNodes.java,src/com/google/javascript/jscomp/FindExportableNodes.java,82,!n.getLastChild().isAssign()) {
False,src/com/google/javascript/jscomp/FindExportableNodes.java,src/com/google/javascript/jscomp/FindExportableNodes.java,90,.getFirstChild().getFirstChild().getType() != Token.ASSIGN) {
True,src/com/google/javascript/jscomp/FindExportableNodes.java,src/com/google/javascript/jscomp/FindExportableNodes.java,90,!n.getFirstChild().getFirstChild().isAssign()) {
False,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,67,reconditions.checkState(parent.getType() != Token.FUNCTION
False,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,68,| parent.getType() != Token.VAR
False,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,69,| parent.getType() != Token.CATCH);
True,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,67,Preconditions.checkState(!parent.isFunction()
True,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,68,|| !parent.isVar()
True,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,69,|| !parent.isCatch());
False,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,79,f (replacementTemplate.getType() != Token.THIS) {
True,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,79,if (!replacementTemplate.isThis()) {
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,217,f (callNode.getFirstChild().getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,217,if (!callNode.getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,221,f (thisValue == null || thisValue.getType() != Token.THIS) {
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,221,if (thisValue == null || !thisValue.isThis()) {
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,672,f (callNode.getFirstChild().getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,672,if (!callNode.getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,675,f (cArg == null || cArg.getType() != Token.THIS) {
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,675,if (cArg == null || !cArg.isThis()) {
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,428,f (propName.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,428,if (!propName.isString()) {
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,490,f (propName.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,490,if (!propName.isString()) {
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,263,f (value.getType() != Token.THIS
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,263,if (!value.isThis()
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,465,f (greatGramps == null ||
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,466,reatGramps.getType() != Token.VAR) {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,465,if (greatGramps == null || !greatGramps.isVar()) {
False,src/com/google/javascript/jscomp/GlobalVarReferenceMap.java,src/com/google/javascript/jscomp/GlobalVarReferenceMap.java,28,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/GlobalVarReferenceMap.java,src/com/google/javascript/jscomp/GlobalVarReferenceMap.java,104,f (refMap == null || root.getType() != Token.SCRIPT) {
True,src/com/google/javascript/jscomp/GlobalVarReferenceMap.java,src/com/google/javascript/jscomp/GlobalVarReferenceMap.java,102,if (refMap == null || !root.isScript()) {
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,104,f (parent.getType() != Token.VAR &&
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,104,if (!parent.isVar() &&
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,186,f (val.getType() != Token.OBJECTLIT) {
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,186,if (!val.isObjectLit()) {
False,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,122,f (expectedGetprop.getType() != Token.GETPROP) {
True,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,122,if (!expectedGetprop.isGetProp()) {
False,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,127,f (leftChild.getType() != Token.THIS &&
True,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,127,if (!leftChild.isThis() &&
False,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,163,f (expectedReturn.getType() != Token.RETURN) {
True,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,163,if (!expectedReturn.isReturn()) {
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,31,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,485,eturn value.getType() != Token.STRING ||
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,483,return !value.isString() ||
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,535,nitialization.getGrandparent().getType() != Token.EXPR_RESULT) {
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,533,!initialization.getGrandparent().isExprResult()) {
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,634,& declaration.getGrandparent().getType() != Token.FOR)
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,632,&& !declaration.getGrandparent().isFor())
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,702,value.getType() != Token.STRING ||
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,700,(!value.isString() ||
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,239,eturn n.getType() != Token.FUNCTION;
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,239,return !n.isFunction();
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,244,f (n.getType() != Token.RETURN) {
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,244,if (!n.isReturn()) {
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,279,f (n.getType() != Token.RETURN) {
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,279,if (!n.isReturn()) {
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,290,f (n.getType() != Token.FUNCTION) {
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,290,if (!n.isFunction()) {
False,src/com/google/javascript/jscomp/InvocationsCallback.java,src/com/google/javascript/jscomp/InvocationsCallback.java,21,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/InvocationsCallback.java,src/com/google/javascript/jscomp/InvocationsCallback.java,41,f (n.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/InvocationsCallback.java,src/com/google/javascript/jscomp/InvocationsCallback.java,40,if (!n.isCall()) {
False,src/com/google/javascript/jscomp/InvocationsCallback.java,src/com/google/javascript/jscomp/InvocationsCallback.java,47,f (function.getType() != Token.GETPROP) {
True,src/com/google/javascript/jscomp/InvocationsCallback.java,src/com/google/javascript/jscomp/InvocationsCallback.java,46,if (!function.isGetProp()) {
False,src/com/google/javascript/jscomp/InvocationsCallback.java,src/com/google/javascript/jscomp/InvocationsCallback.java,54,f (nameNode.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/InvocationsCallback.java,src/com/google/javascript/jscomp/InvocationsCallback.java,53,if (!nameNode.isString()) {
False,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,187,f (getProp.getType() != Token.GETPROP) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,187,if (!getProp.isGetProp()) {
False,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,521,f (returnNode.getType() != Token.RETURN) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,521,if (!returnNode.isReturn()) {
False,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,604,f (node.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,604,if (!node.isCall()) {
False,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,630,f (objLitNode.getType() != Token.OBJECTLIT) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,630,if (!objLitNode.isObjectLit()) {
False,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,635,f (aNode.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,635,if (!aNode.isString()) {
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,298,f (n.getType() != Token.NAME ||
True,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,298,if (!n.isName()||
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,83,eclarationRoot.getType() != Token.FUNCTION ||
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,83,!declarationRoot.isFunction() ||
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,91,f (declarationRoot.getType() != Token.FUNCTION) {
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,91,if (!declarationRoot.isFunction()) {
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,216,| parent.getType() != Token.FUNCTION
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,216,|| !parent.isFunction()
False,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,135,f (dest.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,135,if (!dest.isString()) {
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,159,f (n.getType() != Token.BLOCK || n.getLastChild() == null) {
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,159,if (!n.isBlock() || n.getLastChild() == null) {
False,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,23,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,73,eturn gramps == null || gramps.getType() != Token.SCRIPT;
True,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,71,return gramps == null || !gramps.isScript();
False,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,78,f (parent == null ||
False,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,79,arent.getType() != Token.SCRIPT) {
True,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,src/com/google/javascript/jscomp/MoveFunctionDeclarations.java,76,if (parent == null || !parent.isScript()) {
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1634, else if (n.isAssign() && parent.getType() != Token.FOR) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1634,} else if (n.isAssign() && !parent.isFor()) {
False,src/com/google/javascript/jscomp/NodeTraversal.java,src/com/google/javascript/jscomp/NodeTraversal.java,165,eturn parent == null || parent.getType() != Token.FUNCTION ||
True,src/com/google/javascript/jscomp/NodeTraversal.java,src/com/google/javascript/jscomp/NodeTraversal.java,165,return parent == null || !parent.isFunction() ||
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,521, else if (c.getFirstChild().getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,521,} else if (!c.getFirstChild().isEmpty()) {
False,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,54,f (n.getType() != Token.NEW) {
True,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,54,if (!n.isNew()) {
False,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,77,f (script == null || script.getType() != Token.SCRIPT) {
True,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,77,if (script == null || !script.isScript()) {
False,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,100,f (n.getType() != Token.NEW) {
True,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,100,if (!n.isNew()) {
False,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,126,f (secondArgument.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,126,if (!secondArgument.isString()) {
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,205,f (getElem.getType() != Token.GETELEM) {
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,205,if (!getElem.isGetElem()) {
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,213,f (index.getType() != Token.NUMBER) {
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,213,if (!index.isNumber()) {
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,262,f (index.getType() != Token.NUMBER) {
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,262,if (!index.isNumber()) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,36,f (subtree.getType() != Token.SCRIPT
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,37,& subtree.getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,36,if (!subtree.isScript() && !subtree.isBlock()) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,47,f (child.getType() != Token.VAR && !NodeUtil.isExprAssign(child)) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,46,if (!child.isVar() && !NodeUtil.isExprAssign(child)) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,57,f (name.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,56,if (!name.isName()) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,117,f (lhs.getType() != Token.GETELEM && lhs.getType() != Token.GETPROP) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,116,if (!NodeUtil.isGet(lhs)) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,123,f (obj.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,122,if (!obj.isName()) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,179,f (lhs.getType() != Token.GETELEM) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,178,if (!lhs.isGetElem()) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,185,f (property.getType() != Token.NUMBER) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,184,if (!property.isNumber()) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,217,f (currentValue.getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,216,if (!currentValue.isEmpty()) {
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,237,& (property.getType() != Token.STRING
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,238,& property.getType() != Token.NUMBER)) {
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,236,&& (!property.isString()
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,237,&& !property.isNumber())) {
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,182,f (child.getType() != Token.NUMBER || child.getDouble() != 0.0) {
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,182,if (!child.isNumber() || child.getDouble() != 0.0) {
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,806,.getType() != Token.ADD || !NodeUtil.mayBeString(n));
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,806,!n.isAdd()|| !NodeUtil.mayBeString(n));
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1006,f (right.getType() != Token.THIS) {
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1006,if (!right.isThis()) {
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1315,f (objectType.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1315,if (!objectType.isName()) {
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1426,f (right.getType() != Token.NUMBER) {
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1426,if (!right.isNumber()) {
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1469,f (left.getType() != Token.OBJECTLIT || right.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1469,if (!left.isObjectLit() || !right.isString()) {
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,782,f (init.getType() != Token.EMPTY && init.getType() != Token.VAR) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,782,if (!init.isEmpty() && !init.isVar()) {
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,786,f (increment.getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,786,if (!increment.isEmpty()) {
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,791,f (n.getFirstChild().getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,791,if (!n.getFirstChild().isEmpty()) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,88,f ((stringNode.getType() != Token.STRING) ||
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,89,functionName.getType() != Token.STRING)) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,88,if ((!stringNode.isString()) ||
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,89,(!functionName.isString())) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,220,f ((secondArg.getNext() != null) ||
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,221,secondArg.getType() != Token.NUMBER)) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,220,if (secondArg.getNext() != null || !secondArg.isNumber()) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,347,f ((secondArg.getNext() != null) ||
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,348,secondArg.getType() != Token.NUMBER)) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,346,if (secondArg.getNext() != null || !secondArg.isNumber()) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,384,f ((arrayNode.getType() != Token.ARRAYLIT) ||
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,382,if (!arrayNode.isArrayLit() ||
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,450,f (foldedStringNode.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,448,if (!foldedStringNode.isString()) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,56,eturn input.getType() != Token.FUNCTION;
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,56,return !input.isFunction();
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,135,f (node.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,135,if (!node.isCall()) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,275,& parent.getParent().getType() != Token.LABEL) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,275,&& !parent.getParent().isLabel()) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1150,f (leftParent.getType() != Token.NOT
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1151,& rightParent.getType() != Token.NOT) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1150,if (!leftParent.isNot()
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1151,&& !rightParent.isNot()) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1518,f (cur.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1518,if (!cur.isString()) {
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,96,& n.getType() != Token.LABEL
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,97,& n.getType() != Token.SWITCH) {
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,96,&& !n.isLabel()
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,97,&& !n.isSwitch()) {
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,100,.getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,100,!c.isBlock()) {
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,104,f (c.getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,104,if (!c.isEmpty()) {
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,258,arent.getType() != Token.CALL &&
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,259,arent.getType() != Token.ASSIGN &&
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,258,!parent.isCall() &&
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,259,!parent.isAssign() &&
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,418,f (thisArg == null || thisArg.getType() != Token.THIS) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,418,if (thisArg == null || !thisArg.isThis()) {
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,464,f (methodNameNode == null || methodNameNode.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,464,if (methodNameNode == null || !methodNameNode.isString()) {
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,575,f (key.getType() != Token.STRING
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,575,if (!key.isString()
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,577,| value.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,577,|| !value.isString()) {
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,750, else if (firstArg.getType() != Token.OBJECTLIT) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,750,} else if (!firstArg.isObjectLit()) {
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,754,f (secondArg.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,754,if (!secondArg.isString()) {
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,344,f (n.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,344,if (!n.isCall()) {
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,362,f (tweakIdNode.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,362,if (!tweakIdNode.isString()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,404,& node.getType() != Token.RETURN) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,404,&& !node.isReturn()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,799,f (callSite.getType() != Token.NEW) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,799,if (!callSite.isNew()) {
False,src/com/google/javascript/jscomp/RecordFunctionInformation.java,src/com/google/javascript/jscomp/RecordFunctionInformation.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/RecordFunctionInformation.java,src/com/google/javascript/jscomp/RecordFunctionInformation.java,86,f (n.getType() != Token.FUNCTION) {
True,src/com/google/javascript/jscomp/RecordFunctionInformation.java,src/com/google/javascript/jscomp/RecordFunctionInformation.java,84,if (!n.isFunction()) {
False,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,579,etParent().getType() != Token.VAR ||
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,579,!getParent().isVar() ||
False,src/com/google/javascript/jscomp/RemoveTryCatch.java,src/com/google/javascript/jscomp/RemoveTryCatch.java,102,nc != null && anc.getType() != Token.FUNCTION;
True,src/com/google/javascript/jscomp/RemoveTryCatch.java,src/com/google/javascript/jscomp/RemoveTryCatch.java,102,anc != null && !anc.isFunction();
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,538,& (arg.getType() != Token.NUMBER || arg.getDouble() != 0)) {
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,538,&& (!arg.isNumber() || arg.getDouble() != 0)) {
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,901,ssignNode.getParent().getType() != Token.EXPR_RESULT ||
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,901,!assignNode.getParent().isExprResult() ||
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,948,urrent.getType() != Token.NAME;
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,948,!current.isName();
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,495,f (firstArg.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,495,if (!firstArg.isString()) {
False,src/com/google/javascript/jscomp/RenameVars.java,src/com/google/javascript/jscomp/RenameVars.java,27,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/RenameVars.java,src/com/google/javascript/jscomp/RenameVars.java,215,f (n.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/RenameVars.java,src/com/google/javascript/jscomp/RenameVars.java,213,if (!n.isName()) {
False,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,165,f (second.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,165,if (!second.isString()) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,24,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,131,f (n.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,129,if (!n.isCall()) {
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,149,f (n.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,149,if (!n.isName()) {
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,226,f (n.getType() != Token.VAR) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,226,if (!n.isVar()) {
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,197,hile (n.getParent().getType() != Token.SCRIPT &&
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,198,.getParent().getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,197,while (!n.getParent().isScript() && !n.getParent().isBlock()) {
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,870,odeUtil.isAssignmentOp(parent) && parent.getType() != Token.ASSIGN;
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,870,NodeUtil.isAssignmentOp(parent) && !parent.isAssign();
False,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,48,f (block.getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,48,if (!block.isBlock()) {
False,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,186,f (key.getType() != Token.SETTER_DEF) {
True,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,186,if (!key.isSetterDef()) {
False,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,194,f (key.getType() != Token.GETTER_DEF) {
True,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,194,if (!key.isGetterDef()) {
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,477,f (function == null || function.getType() != Token.GETPROP) {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,477,if (function == null || !function.isGetProp()) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,271,f (rootNode.getType() != Token.FUNCTION) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,271,if (!rootNode.isFunction()) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,1363,f (n.getType() != Token.THIS) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,1363,if (!n.isThis()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,476,f (parent.getType() != Token.FUNCTION) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,476,if (!parent.isFunction()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1837,reconditions.checkState(n.getType() != Token.FUNCTION ||
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1837,Preconditions.checkState(!n.isFunction() ||
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,391,f (n.getType() != Token.FUNCTION) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,391,if (!n.isFunction()) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,466,oolean descend = parent == null || parent.getType() != Token.FUNCTION ||
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,466,boolean descend = parent == null || !parent.isFunction() ||
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1653,ember.getType() != Token.GETPROP ||
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1654,ember.getFirstChild().getType() != Token.THIS) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1653,!member.isGetProp() ||
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1654,!member.getFirstChild().isThis()) {
False,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,128,f (n.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,128,if (!n.isName()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2233,public boolean isBreak() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2234,return this.getType() == Token.BREAK;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2253,public boolean isContinue() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2254,return this.getType() == Token.CONTINUE;
False,test/com/google/javascript/jscomp/CombinedCompilerPassTest.java,test/com/google/javascript/jscomp/CombinedCompilerPassTest.java,226,eturn n.getType() != Token.NAME || !ignoring.contains(n.getString());
True,test/com/google/javascript/jscomp/CombinedCompilerPassTest.java,test/com/google/javascript/jscomp/CombinedCompilerPassTest.java,226,return !n.isName() || !ignoring.contains(n.getString());
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,22,mport com.google.javascript.rhino.Token;
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,386,& parent.getType() != Token.LABEL) {
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,385,&& !parent.isLabel()) {
