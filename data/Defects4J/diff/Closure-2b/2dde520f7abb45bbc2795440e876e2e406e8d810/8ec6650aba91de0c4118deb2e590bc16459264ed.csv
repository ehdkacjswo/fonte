is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1052,* Add a new source input dynamically. Intended for incremental compilation.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1053,* <p>
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1054,"* If the new source input doesn't parse, it will not be added, and a false"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1055,* will be returned.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1057,* @param ast the JS Source to add.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1058,"* @return true if the source was added successfully, false otherwise."
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1059,* @throws IllegalStateException if an input for this ast already exists.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1061,boolean addNewSourceAst(JsAst ast) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1062,CompilerInput oldInput = getInput(ast.getInputId());
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1063,if (oldInput != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1064,throw new IllegalStateException(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1065,"""Input already exists: "" + ast.getInputId().getIdName());"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1067,Node newRoot = ast.getAstRoot(this);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1068,if (newRoot == null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1069,return false;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1072,getRoot().getLastChild().addChildToBack(newRoot);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1074,CompilerInput newInput = new CompilerInput(ast);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1075,"inputsById.put(ast.getInputId(), newInput);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1077,return true;
