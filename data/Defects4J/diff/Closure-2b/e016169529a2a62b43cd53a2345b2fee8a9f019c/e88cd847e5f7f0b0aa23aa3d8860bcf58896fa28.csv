is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,730,eturn n;  // We can't remove branches otherwise!
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,730,"// If the result nodes are equivalent, then one of the nodes can be"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,731,// removed and it doesn't matter which.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,732,"if (!areNodesEqualForInlining(thenBody, elseBody)) {"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,733,return n;  // We can't remove branches otherwise!
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1698,/ TODO(johnlenz): re-enable this.
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1699,"/ Once a ""x ? a : a"" => ""a"" optimization is added."
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1700,"/ test(options, code, expected);"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1698,"test(options, code, expected);"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,147,"fold(""y = (x ? void 0 : void 0)"", ""y = void 0"");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,148,"fold(""y = (x ? f() : f())"", ""y = f()"");"
