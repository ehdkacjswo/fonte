is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,967,JSModuleGraph graph = compiler.getModuleGraph();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,969,terable<JSModule> modules = compiler.getModuleGraph().getAllModules();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,970,Iterable<JSModule> modules = graph.getAllModules();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,971,"rintManifestTo(module.getInputs(), expandManifest(module));"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,972,PrintStream out = toPrintStream(expandManifest(module));
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,973,"printManifestTo(module.getInputs(), out);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,974,out.close();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,975,"rintManifestTo(compiler.getInputsInOrder(), expandManifest(null));"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,978,PrintStream out = toPrintStream(expandManifest(null));
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,979,if (graph == null) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,980,"printManifestTo(compiler.getInputsInOrder(), out);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,981,} else {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,982,"printModuleGraphManifestTo(graph, out);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,984,out.close();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,989,* Prints a set of modules to the manifest file.
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,991,@VisibleForTesting
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,992,void printModuleGraphManifestTo(
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,993,"JSModuleGraph graph, Appendable out) throws IOException {"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,994,"Joiner commas = Joiner.on("","");"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,995,boolean requiresNewline = false;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,996,for (JSModule module : graph.getAllModulesInDependencyOrder()) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,997,if (requiresNewline) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,998,"out.append(""\n"");"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1001,// See CommandLineRunnerTest to see what the format of this
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1002,// manifest looks like.
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1003,String dependencies = commas.join(module.getSortedDependencyNames());
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1004,out.append(
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1005,"String.format(""{%s%s}\n"","
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1006,"module.getName(),"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1007,"dependencies.isEmpty() ? """" : "":"" + dependencies));"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1008,"printManifestTo(module.getInputs(), out);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1009,requiresNewline = true;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,982,"rivate void printManifestTo(Iterable<CompilerInput> inputs, String path)"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1016,"private void printManifestTo(Iterable<CompilerInput> inputs, Appendable out)"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,989,rintStream out = toPrintStream(path);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,991,ut.close();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1024,"out.append(""\n"");"
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,55,f (parent != null && parent.getType() == Token.SCRIPT
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,56,& t.inGlobalScope()) {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,55,if (parent != null && parent.getType() == Token.SCRIPT) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,150,"* Gets the names of the modules that this module depends on,"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,151,* sorted alphabetically.
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,153,List<String> getSortedDependencyNames() {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,154,List<String> names = Lists.newArrayList();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,155,for (JSModule module : getDependencies()) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,156,names.add(module.getName());
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,158,Collections.sort(names);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,159,return names;
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,118, Gets all the modules in dependency order.
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,118,* Gets all the modules in dependency order. Modules with the same depth
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,119,* will be ordered deterministically.
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,120,rivate Iterable<JSModule> getAllModulesInDependencyOrder() {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,121,Iterable<JSModule> getAllModulesInDependencyOrder() {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,60,static final DiagnosticType STRIP_ASSIGNMENT_ERROR = DiagnosticType.error(
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,61,"""JSC_STRIP_ASSIGNMENT_ERROR"","
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,62,"""Unable to strip assignment to {0}"");"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,96,// Any additional types added to this switch statement should
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,97,// also be added to the guard in
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,98,// maybeReplaceDirectReferenceToStrippedType() to prevent
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,99,// interference.
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,99,"aybeRemoveReferenceToRemovedVariable(t, n, parent);"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,107,if (qualifiedNameBeginsWithStripType(n)) {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,108,"maybeReplaceDirectReferenceToStrippedType(t, n);"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,109,} else {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,110,"maybeRemoveReferenceToRemovedVariable(t, n, parent);"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,112,break;
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,114,case Token.GETPROP:
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,115,"maybeReplaceDirectReferenceToStrippedType(t, n);"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,290,// Limit to EXPR_RESULT because it is not
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,291,"// safe to eliminate assignment in complex expressions,"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,292,// e.g. in ((x = 7) + 8)
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,276, else {
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,277,"eplaceWithEmpty(n, parent);"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,296,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,297,}  else {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,298,"t.report(n, STRIP_ASSIGNMENT_ERROR, lvalue.getQualifiedName());"
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,279,ompiler.reportCodeChange();
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,378,* Replaces a reference to a stripped type with 'void 0' when it is safe
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,379,"* to do so. In particular, we want to avoid stepping on the toes of other"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,380,* StripCode methods.
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,382,* @param t The traversal
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,383,* @param n A GETPROP node or NAME node
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,385,"void maybeReplaceDirectReferenceToStrippedType(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,386,if (stripTypes.contains(n.getQualifiedName())) {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,387,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,389,// Other methods already handle these cases
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,390,// and we don't want to interfere with them.
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,391,// This guard may need to be updated if additional
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,392,// functionality is added to StripCode.
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,393,if (NodeUtil.isGet(parent)
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,394,|| NodeUtil.isCall(parent)
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,395,|| NodeUtil.isNew(parent)
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,396,|| NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,397,return;
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,400,int parentType = parent.getType();
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,402,// Report error if stripping type would result in (void 0)++.
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,403,if (parentType == Token.INC || parentType == Token.DEC) {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,404,"t.report(n, STRIP_ASSIGNMENT_ERROR, n.getQualifiedName());"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,405,return;
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,408,"n.getParent().replaceChild(n, NodeUtil.newUndefinedNode(n));"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,409,t.getCompiler().reportCodeChange();
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,41,rivate boolean useModules = false;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,41,private ModulePattern useModules = ModulePattern.NONE;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,43,private enum ModulePattern {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,44,"NONE,"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,45,"CHAIN,"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,46,STAR
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,63,seModules = false;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,69,useModules = ModulePattern.NONE;
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,357,seModules = true;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,363,useModules = ModulePattern.CHAIN;
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,367,seModules = true;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,373,useModules = ModulePattern.CHAIN;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,383,public void testChainModuleManifest() throws Exception {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,384,useModules = ModulePattern.CHAIN;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,385,testSame(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,386,"""var x = 3;"", ""var y = 5;"", ""var z = 7;"", ""var a = 9;""});"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,388,StringBuilder builder = new StringBuilder();
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,389,lastCommandLineRunner.printModuleGraphManifestTo(
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,390,"lastCompiler.getModuleGraph(), builder);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,391,assertEquals(
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,392,"""{m0}\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,393,"""i0\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,394,"""\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,395,"""{m1:m0}\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,396,"""i1\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,397,"""\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,398,"""{m2:m1}\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,399,"""i2\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,400,"""\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,401,"""{m3:m2}\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,402,"""i3\n"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,403,builder.toString());
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,406,public void testStarModuleManifest() throws Exception {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,407,useModules = ModulePattern.STAR;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,408,testSame(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,409,"""var x = 3;"", ""var y = 5;"", ""var z = 7;"", ""var a = 9;""});"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,411,StringBuilder builder = new StringBuilder();
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,412,lastCommandLineRunner.printModuleGraphManifestTo(
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,413,"lastCompiler.getModuleGraph(), builder);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,414,assertEquals(
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,415,"""{m0}\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,416,"""i0\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,417,"""\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,418,"""{m1:m0}\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,419,"""i1\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,420,"""\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,421,"""{m2:m0}\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,422,"""i2\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,423,"""\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,424,"""{m3:m0}\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,425,"""i3\n"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,426,builder.toString());
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,463,f (useModules) {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,515,if (useModules == ModulePattern.CHAIN) {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,518,} else if (useModules == ModulePattern.STAR) {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,519,"args.add(""--module"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,520,"args.add(""mod"" + i + "":1"" + (i > 0 ? "":mod0"" : """"));"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,482,f (useModules) {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,537,if (useModules != ModulePattern.NONE) {
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,485,"ompilerTestCase.createModuleChain(original),"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,540,useModules == ModulePattern.STAR ?
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,541,CompilerTestCase.createModuleStar(original) :
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,542,"CompilerTestCase.createModuleChain(original),"
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,34,"uper(EXTERNS, false);"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,34,super(EXTERNS);
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,53,"goog.net.BrowserChannel.LogSaver"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,53,"""goog.net.BrowserChannel.LogSaver"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,54,"""TypeWithoutNamespace"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,307,public void testReplaceDirectStrippedTypeReferences() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,309,// Replace direct references with undefined
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,310,"test(""if (goog.debug.Logger != null){foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,311,"""if (void 0 != null){foo()}"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,313,// Test replacement with non-namespaced type
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,314,"test(""if (TypeWithoutNamespace != null){foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,315,"""if (void 0 != null){foo()}"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,317,// Replace is fine in RHS of assignment
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,318,"test(""if ((x = goog.debug.Logger) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,319,"""if ((x = void 0) != null) {foo()}"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,320,"test(""if ((x += goog.debug.Logger) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,321,"""if ((x += void 0) != null) {foo()}"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,324,public void testReportErrorOnStripTypeInNestedAssignment() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,325,// Don't replace if stripped type is LHS of assignment
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,326,"test(""if ((goog.debug.Logger = bar()) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,327,"""if ((goog.debug.Logger = bar()) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,328,StripCode.STRIP_ASSIGNMENT_ERROR);
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,330,"test(""if ((goog.debug.Logger += bar()) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,331,"""if ((goog.debug.Logger += bar()) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,332,StripCode.STRIP_ASSIGNMENT_ERROR);
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,334,// Don't replace if stripped type is in increment/decrement
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,335,"test(""if ((goog.debug.Logger++) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,336,"""if ((goog.debug.Logger++) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,337,StripCode.STRIP_ASSIGNMENT_ERROR);
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,339,"test(""if ((goog.debug.Logger--) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,340,"""if ((goog.debug.Logger--) != null) {foo()}"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,341,StripCode.STRIP_ASSIGNMENT_ERROR);
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,344,public void testReportErrorOnStripNameInNestedAssignment() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,345,"test(""(foo.logger_ = 7) + 8"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,346,"""(foo.logger_ = 7) + 8"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,347,StripCode.STRIP_ASSIGNMENT_ERROR);
