is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,628,// This was a use site removed by something else before we run.
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,629,// 1. By another pass before us which means the definition graph is
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,630,//    no updated properly.
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,631,// 2. By the continuations algorithm above.
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,632,if (parent == null) {
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,633,continue; // Ignore it.
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,2,* Copyright 2011 The Closure Compiler Authors.
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,18,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,20,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,23,* Unit tests for {#link {@link OptimizeCalls}
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,26,public class OptimizeCallsTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,28,@Override
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,29,protected CompilerPass getProcessor(final Compiler compiler) {
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,30,final OptimizeCalls passes = new OptimizeCalls(compiler);
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,31,passes.addPass(new OptimizeReturns(compiler));
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,32,passes.addPass(new OptimizeParameters(compiler));
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,33,"passes.addPass(new RemoveUnusedVars(compiler, true, false, true));"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,34,return new CompilerPass() {
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,36,@Override
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,37,"public void process(Node externs, Node root) {"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,38,"new PureFunctionIdentifier(compiler,"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,39,"new SimpleDefinitionFinder(compiler)).process(externs, root);"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,40,"passes.process(externs, root);"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,45,public void testRemovingReturnCallToFunctionWithUnusedParams() {
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,46,"test(""function foo() {var x; return x = bar(1)} foo(); function bar(x) {}"","
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,47,"""function foo() {          bar(); return;} foo(); function bar()  {}"");"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,50,public void testNestingFunctionCallWithUnsedParams() {
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,51,"test(""function f1(x) { } function f2(x) { }"" +"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,52,"""function f3(x) { } function f4(x) { }"" +"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,53,"""f3(f1(f2()));"","
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,54,"""function f1() {f2()} function f2() { }"" +"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,55,"""function f3() {f1()} "" +"
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,56,"""f3();"""
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,60,public void testUnusedAssignOnFunctionWithUnusedParams() {
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,61,"test(""var foo = function(a){}; function bar(){var x;x = foo} bar(); foo(1)"","
True,test/com/google/javascript/jscomp/OptimizeCallsTest.java,test/com/google/javascript/jscomp/OptimizeCallsTest.java,62,"""var foo = function( ){}; function bar(){             } bar(); foo()"");"
