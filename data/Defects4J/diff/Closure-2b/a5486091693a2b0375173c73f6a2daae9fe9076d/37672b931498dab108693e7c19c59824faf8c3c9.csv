is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1014,f (fnType.getTemplateTypeNames().isEmpty()
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1015,| !call.hasMoreThanOneChild()) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1014,if (fnType.getTemplateTypeNames().isEmpty()) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1020,aybeResolveTemplateTypeFromNodes(
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1021,"nType.getParameters(),"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1022,"all.getChildAtIndex(1).siblings(),"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1023,esolvedTypes);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1020,Node callTarget = call.getFirstChild();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1021,if (NodeUtil.isGet(callTarget)) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1022,Node obj = callTarget.getFirstChild();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1023,maybeResolveTemplatedType(
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1024,"fnType.getTypeOfThis(),"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1025,"getJSType(obj),"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1026,resolvedTypes);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1029,if (call.hasMoreThanOneChild()) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1030,maybeResolveTemplateTypeFromNodes(
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1031,"fnType.getParameters(),"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1032,"call.getChildAtIndex(1).siblings(),"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1033,resolvedTypes);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1060,maybeResolveTemplatedType(
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1061,"paramFunctionType.getTypeOfThis(),"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1062,"argFunctionType.getTypeOfThis(), resolvedTypes);"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1063,// infer from return type of the function type
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9926,public void testTemplatedThisType1() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9927,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9928,"""/** @constructor */\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9929,"""function Foo() {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9930,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9931,""" * @this {T}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9932,""" * @return {T}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9933,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9934,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9935,"""Foo.prototype.method = function() {};\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9936,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9937,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9938,""" * @extends {Foo}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9939,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9940,"""function Bar() {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9941,"""var g = new Bar().method();\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9942,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9943,""" * @param {number} a\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9944,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9945,"""function compute(a) {};\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9946,"""compute(g);\n"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9948,"""actual parameter 1 of compute does not match formal parameter\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9949,"""found   : Bar\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9950,"""required: number"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1136,public void testTemplateType9() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1137,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1138,"""/** @constructor */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1139,"""function Foo() {}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1140,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1141,""" * @this {T}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1142,""" * @return {T}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1143,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1144,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1145,"""Foo.prototype.method = function() {};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1146,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1147,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1148,""" * @extends {Foo}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1149,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1150,"""function Bar() {}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1151,"""\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1152,"""var g = new Bar().method();\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1153,"assertEquals(""Bar"", findNameType(""g"", globalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1156,public void testTemplateType10() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1157,"// NOTE: we would like the type within the function to remain ""Foo"""
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1158,"// we can handle this by support template type like ""T extends Foo"""
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1159,"// to provide a ""minimum"" type for ""Foo"" within the function body."
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1160,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1161,"""/** @constructor */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1162,"""function Foo() {}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1163,"""\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1164,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1165,""" * @this {T}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1166,""" * @return {T} fn\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1167,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1168,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1169,"""Foo.prototype.method = function() {var g = this;};\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1170,"assertEquals(""T"", findNameType(""g"", lastLocalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1173,public void testTemplateType11() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1174,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1175,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1176,""" * @this {T}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1177,""" * @return {T} fn\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1178,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1179,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1180,"""var method = function() {};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1181,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1182,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1183,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1184,"""function Bar() {}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1185,"""\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1186,"""var g = method().call(new Bar());\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1187,"// NOTE: we would like this to be ""Bar"""
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1188,"assertEquals(""?"", findNameType(""g"", globalScope).toString());"
