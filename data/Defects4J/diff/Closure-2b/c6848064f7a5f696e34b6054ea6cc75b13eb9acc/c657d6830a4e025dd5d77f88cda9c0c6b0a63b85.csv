is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,19,import com.google.javascript.jscomp.CheckLevel;
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,21,mport com.google.javascript.jscomp.CheckLevel;
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,22,import com.google.javascript.rhino.JSDocInfo;
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,24,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,145,"// If this is an annotated EXPR-GET, don't do anything."
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,146,Node parent = ref.node.getParent();
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,147,if (parent.getType() == Token.EXPR_RESULT) {
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,148,JSDocInfo info = ref.node.getJSDocInfo();
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,149,if (info != null && info.hasTypedefType()) {
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,150,return;
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,145,ame.fullName()));
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,156,name.fullName()));
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,24,import com.google.javascript.jscomp.CodingConvention.SubclassRelationship;
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,520,// Bug 2388531: Don't inline subclass definitions into class defining
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,521,// calls as this confused class removing logic.
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,522,if (value.getType() == Token.FUNCTION) {
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,523,Node callNode = reference.getParent();
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,524,if (reference.getParent().getType() == Token.CALL) {
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,525,SubclassRelationship relationship =
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,526,compiler.getCodingConvention().getClassesDefinedByCall(callNode);
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,527,if (relationship != null) {
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,528,return false;
True,test/com/google/javascript/jscomp/CheckGlobalNamesTest.java,test/com/google/javascript/jscomp/CheckGlobalNamesTest.java,125,public void testTypedefGivesNoWarning() {
True,test/com/google/javascript/jscomp/CheckGlobalNamesTest.java,test/com/google/javascript/jscomp/CheckGlobalNamesTest.java,126,"testSame(""var a = {}; /** @typedef {number} */ a.b;"");"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,517,public void test2388531() {
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,518,"testSame(""var f = function () {};"" +"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,519,"""var g = function () {};"" +"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,520,"""goog.inherits(f, g);"");"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,521,"testSame(""var f = function () {};"" +"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,522,"""var g = function () {};"" +"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,523,"""goog$inherits(f, g);"");"
