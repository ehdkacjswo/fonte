is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,305,"/ If we have a named function, set the position to that of the name."
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,306,f (irNode.getType() == Token.FUNCTION &&
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,307,rNode.getFirstChild().getLineno() != -1) {
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,308,rNode.setLineno(irNode.getFirstChild().getLineno());
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,309,rNode.setCharno(irNode.getFirstChild().getCharno());
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,305,if (irNode.getLineno() == -1) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,306,"// If we didn't already set the line, then set it now. This avoids"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,307,// cases like ParenthesizedExpression where we just return a previous
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,308,"// node, but don't want the new node to get its parent's line number."
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,309,int lineno = node.getLineno();
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,310,irNode.setLineno(lineno);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,311,int charno = position2charno(node.getAbsolutePosition());
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,312,irNode.setCharno(charno);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,311, else {
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,312,f (irNode.getLineno() == -1) {
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,313,"/ If we didn't already set the line, then set it now.  This avoids"
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,314,/ cases like ParenthesizedExpression where we just return a previous
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,315,"/ node, but don't want the new node to get its parent's line number."
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,316,nt lineno = node.getLineno();
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,317,rNode.setLineno(lineno);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,318,nt charno = position2charno(node.getAbsolutePosition());
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,319,rNode.setCharno(charno);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,320,"aybeSetLengthFrom(irNode, node);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,97,"[\""testcode\"",1,9,\""f\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,97,"""[\""testcode\"",1,0,\""f\""]\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,119,"[\""testcode\"",1,17,\""a.b.c\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,119,"""[\""testcode\"",1,8,\""a.b.c\""]\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,138,"[\""testcode\"",1,17,\""q\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,138,"""[\""testcode\"",1,8,\""q\""]\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,157,"[\""testcode\"",1,18,\""q\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,157,"""[\""testcode\"",1,9,\""q\""]\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,177,"[\""testcode\"",1,9,\""f\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,177,"""[\""testcode\"",1,0,\""f\""]\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,205,"[\""testcode\"",1,9,\""f\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,205,"""[\""testcode\"",1,0,\""f\""]\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,229,"[\""testcode\"",1,9,\""f\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,229,"""[\""testcode\"",1,0,\""f\""]\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,60,"\""mappings\"":[[0,1,9,0],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,60,"""\""mappings\"":[[0,1,0,0],\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,86,"\""mappings\"":[[0,1,9,0],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,86,"""\""mappings\"":[[0,1,0,0],\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,148,"\""mappings\"":[[0,1,9,0],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,148,"""\""mappings\"":[[0,1,0,0],\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,175,"\""mappings\"":[[0,1,9,0],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,175,"""\""mappings\"":[[0,1,0,0],\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,199,"\""mappings\"":[[0,1,9,0],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,199,"""\""mappings\"":[[0,1,0,0],\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,57,"\""mappings\"":\""AACSA,QAAAA,UAAS,EAAG;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,57,"""\""mappings\"":\""AACAA,QAASA,UAAS,EAAG;\"",\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,81,"\""mappings\"":\""AACSA,QAAAA,UAAS,CAACC,UAAD,CAAaC,UAAb,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,81,"""\""mappings\"":\""AACAA,QAASA,UAAS,CAACC,UAAD,CAAaC,UAAb,"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,138,"\""mappings\"":\""AACSA,QAAAA,EAAC,CAACC,GAAD,CAAMC,GAAN,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,138,"""\""mappings\"":\""AACAA,QAASA,EAAC,CAACC,GAAD,CAAMC,GAAN,"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,153,"\""mappings\"":\""AACSA,QAAAA,EAAAA,CAAEC,GAAFD,CAAOE,"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,154,"GAAPF,EAAcC,GAAdD,CAAoBC,GAApBD,CAA0BE,GAA1BF,"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,155,"SAA0CC,IAA1CD;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,153,"""\""mappings\"":\""AACAA,QAASA,EAATA,CAAWC,GAAXD,CAAgBE,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,154,"""GAAhBF,EAAuBC,GAAvBD,CAA6BC,GAA7BD,CAAmCE,GAAnCF,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,155,"""SAAmDC,IAAnDD;\"",\n"" +"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,169,"\""mappings\"":\""AACSA,QAAAA,EAAC,CAACC,GAAD,CAAMC,GAAN,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,169,"""\""mappings\"":\""AACAA,QAASA,EAAC,CAACC,GAAD,CAAMC,GAAN,"" +"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,578,"ssertNodePosition(2, 5, function);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,578,"assertNodePosition(1, 0, function);"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1106,"ssertNodePosition(3, 8, fnNode);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1106,"assertNodePosition(3, 0, fnNode);"
