is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,244,f (x < 0 && prev == '-') {
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,244,boolean negativeZero = isNegativeZero(x);
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,245,if ((x < 0 || negativeZero) && prev == '-') {
False,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,248,f ((long) x == x && !isNegativeZero(x)) {
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,249,if ((long) x == x && !negativeZero) {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1371,public void testMinusNegativeZero() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1372,"// Negative zero is weird, because we have to be able to distinguish"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1373,// it from positive zero (there are some subtle differences in behavior).
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1374,"assertPrint(""x- -0"", ""x- -0.0"");"
