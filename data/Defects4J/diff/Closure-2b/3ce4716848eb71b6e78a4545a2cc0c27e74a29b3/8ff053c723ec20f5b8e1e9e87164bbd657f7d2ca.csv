is_addition,old_file_path,new_file_path,line_num,content
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,63,ublic boolean hasId() { return hasId; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,64,ublic int getId() { return id_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,63,public boolean hasId() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,64,return hasId;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,66,public int getId() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,67,return id_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,70,ublic boolean hasSourceName() { return hasSourceName; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,71,ublic java.lang.String getSourceName() { return sourceName_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,74,public boolean hasSourceName() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,75,return hasSourceName;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,77,public java.lang.String getSourceName() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,78,return sourceName_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,77,ublic boolean hasLineNumber() { return hasLineNumber; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,78,ublic int getLineNumber() { return lineNumber_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,85,public boolean hasLineNumber() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,86,return hasLineNumber;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,88,public int getLineNumber() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,89,return lineNumber_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,84,ublic boolean hasModuleName() { return hasModuleName; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,85,ublic java.lang.String getModuleName() { return moduleName_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,96,public boolean hasModuleName() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,97,return hasModuleName;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,99,public java.lang.String getModuleName() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,100,return moduleName_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,91,ublic boolean hasSize() { return hasSize; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,92,ublic int getSize() { return size_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,107,public boolean hasSize() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,108,return hasSize;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,110,public int getSize() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,111,return size_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,98,ublic boolean hasName() { return hasName; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,99,ublic java.lang.String getName() { return name_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,118,public boolean hasName() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,119,return hasName;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,121,public java.lang.String getName() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,122,return name_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,105,ublic boolean hasCompiledSource() { return hasCompiledSource; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,106,ublic java.lang.String getCompiledSource() { return compiledSource_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,129,public boolean hasCompiledSource() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,130,return hasCompiledSource;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,132,public java.lang.String getCompiledSource() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,133,return compiledSource_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,605,ublic boolean hasName() { return hasName; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,606,ublic java.lang.String getName() { return name_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,633,public boolean hasName() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,634,return hasName;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,636,public java.lang.String getName() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,637,return name_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,612,ublic boolean hasCompiledSource() { return hasCompiledSource; }
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,613,ublic java.lang.String getCompiledSource() { return compiledSource_; }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,644,public boolean hasCompiledSource() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,645,return hasCompiledSource;
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,647,public java.lang.String getCompiledSource() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,648,return compiledSource_;
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,917,ublic int getEntryCount() { return entry_.size(); }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,953,public int getEntryCount() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,954,return entry_.size();
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,929,ublic int getModuleCount() { return module_.size(); }
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,967,public int getModuleCount() {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,968,return module_.size();
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1207,"ublic Builder setEntry(int index, com.google.javascript.jscomp.FunctionInformationMap.Entry value) {"
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1247,public Builder setEntry(
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1248,"int index, com.google.javascript.jscomp.FunctionInformationMap.Entry value) {"
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1214,"ublic Builder setEntry(int index, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder builderForValue) {"
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1255,public Builder setEntry(
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1256,"int index, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder builderForValue) {"
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1228,ublic Builder addEntry(com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder builderForValue) {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1270,public Builder addEntry(
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1271,com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder builderForValue) {
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1258,"ublic Builder setModule(int index, com.google.javascript.jscomp.FunctionInformationMap.Module value) {"
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1301,public Builder setModule(
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1302,"int index, com.google.javascript.jscomp.FunctionInformationMap.Module value) {"
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1265,"ublic Builder setModule(int index, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder builderForValue) {"
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1309,public Builder setModule(
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1310,"int index, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder builderForValue) {"
False,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1279,ublic Builder addModule(com.google.javascript.jscomp.FunctionInformationMap.Module.Builder builderForValue) {
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1324,public Builder addModule(
True,gen/com/google/javascript/jscomp/FunctionInformationMap.java,gen/com/google/javascript/jscomp/FunctionInformationMap.java,1325,com.google.javascript.jscomp.FunctionInformationMap.Module.Builder builderForValue) {
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,36,ublic boolean hasReportDefined() { return hasReportDefined; }
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,37,ublic java.lang.String getReportDefined() { return reportDefined_; }
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,36,public boolean hasReportDefined() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,37,return hasReportDefined;
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,39,public java.lang.String getReportDefined() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,40,return reportDefined_;
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,43,ublic boolean hasReportCall() { return hasReportCall; }
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,44,ublic java.lang.String getReportCall() { return reportCall_; }
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,47,public boolean hasReportCall() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,48,return hasReportCall;
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,50,public java.lang.String getReportCall() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,51,return reportCall_;
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,50,ublic boolean hasReportExit() { return hasReportExit; }
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,51,ublic java.lang.String getReportExit() { return reportExit_; }
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,58,public boolean hasReportExit() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,59,return hasReportExit;
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,61,public java.lang.String getReportExit() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,62,return reportExit_;
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,57,ublic java.util.List<java.lang.String> getDeclarationToRemoveList() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,69,public java.util.List<java.lang.String>
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,70,getDeclarationToRemoveList() {
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,60,ublic int getDeclarationToRemoveCount() { return declarationToRemove_.size(); }
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,73,public int getDeclarationToRemoveCount() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,74,return declarationToRemove_.size();
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,69,ublic java.util.List<java.lang.String> getInitList() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,84,public java.util.List<java.lang.String>
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,85,getInitList() {
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,72,ublic int getInitCount() { return init_.size(); }
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,88,public int getInitCount() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,89,return init_.size();
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,81,ublic boolean hasAppNameSetter() { return hasAppNameSetter; }
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,82,ublic java.lang.String getAppNameSetter() { return appNameSetter_; }
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,99,public boolean hasAppNameSetter() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,100,return hasAppNameSetter;
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,102,public java.lang.String getAppNameSetter() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,103,return appNameSetter_;
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,467,ublic java.util.List<java.lang.String> getDeclarationToRemoveList() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,489,public java.util.List<java.lang.String>
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,490,getDeclarationToRemoveList() {
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,476,"ublic Builder setDeclarationToRemove(int index, java.lang.String value) {"
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,499,public Builder setDeclarationToRemove(
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,500,"int index, java.lang.String value) {"
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,507,ublic java.util.List<java.lang.String> getInitList() {
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,531,public java.util.List<java.lang.String>
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,532,getInitList() {
False,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,516,"ublic Builder setInit(int index, java.lang.String value) {"
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,541,public Builder setInit(
True,gen/com/google/javascript/jscomp/Instrumentation.java,gen/com/google/javascript/jscomp/Instrumentation.java,542,"int index, java.lang.String value) {"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,68,// An arbitrary limit to prevent catch infinite recursion.
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,82,"DecomposeExpression depth exceeded on :\n"" +"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,83,"""DecomposeExpression depth exceeded on :\n"" +"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,723,"/ methods can not be called indirectly, as is required when the"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,724,"// methods can not be called indirectly, as is required when the"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,727,/ both the 'this' value ('x') and the function to be called ('x.m')
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,728,// both the 'this' value ('x') and the function to be called ('x.m')
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,731,/ As IE doesn't support the call to these non-javascript objects
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,732,// As IE doesn't support the call to these non-javascript objects
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,738,f (requiresDecomposition
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,739,& parent.getType() == Token.CALL
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,739,if (requiresDecomposition
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,740,&& parent.getType() == Token.CALL
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,766,    CONST_NAME[CONST_VALUE] = foo();
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,767,*    CONST_NAME[CONST_VALUE] = foo();
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,774," side-effects, otherwise if the tree has side-effects. @see"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,775,"* side-effects, otherwise if the tree has side-effects. @see"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,787,"eturn !isExpressionTreeUnsafe(lhs.getFirstChild(), seenSideEffects)"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,788,"return !isExpressionTreeUnsafe(lhs.getFirstChild(), seenSideEffects)"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,602,case Token.FUNCTION:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,603,"// Anonymous functions definitions are not changed by side-effects,"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,604,// and named functions are not part of expressions.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,605,Preconditions.checkState(NodeUtil.isAnonymousFunction(n));
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,606,return false;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,177,ist<Definition> result = Lists.newArrayList();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,177,if (NodeUtil.isGetProp(name) || NodeUtil.isName(name)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,178,List<Definition> result = Lists.newArrayList();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,179,f (!NodeUtil.isGetProp(name) && !NodeUtil.isName(name)) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,180,eturn null;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,180,Collection<Definition> decls =
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,181,definitionProvider.getDefinitionsReferencedAt(name);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,182,if (decls == null) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,183,return null;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,183,ollection<Definition> decls =
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,184,efinitionProvider.getDefinitionsReferencedAt(name);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,185,f (decls == null) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,186,eturn null;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,186,for (Definition current : decls) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,187,Node rValue = current.getRValue();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,188,if ((rValue != null) && NodeUtil.isFunction(rValue)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,189,result.add(current);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,190,} else {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,191,return null;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,195,return result;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,196,} else if (name.getType() == Token.OR || name.getType() == Token.HOOK) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,197,Node firstVal;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,198,if (name.getType() == Token.HOOK) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,199,firstVal = name.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,200,} else {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,201,firstVal = name.getFirstChild();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,189,or (Definition current : decls) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,190,ode rValue = current.getRValue();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,191,f ((rValue != null) && NodeUtil.isFunction(rValue)) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,192,esult.add(current);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,204,"Collection<Definition> defs1 = getCallableDefinitions(definitionProvider,"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,205,firstVal);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,206,"Collection<Definition> defs2 = getCallableDefinitions(definitionProvider,"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,207,firstVal.getNext());
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,208,if (defs1 != null && defs2 != null) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,209,defs1.addAll(defs2);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,210,return defs1;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,214,} else {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,215,return null;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,198,eturn result;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1834,* @return this
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1835,ublic void copyInformationFrom(Node other) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1836,public Node copyInformationFrom(Node other) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1846,return this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1852,* @return this
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1850,ublic void copyInformationFromForTree(Node other) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1854,public Node copyInformationFromForTree(Node other) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1861,return this;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,28,import javax.annotation.Nullable;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,85,helperCanExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,86,"DecompositionType.MOVABLE, ""(function(a){b = a})(foo())"", ""foo"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,117,"ecompositionType.UNDECOMPOSABLE, ""if (goo.a(1, foo()));"", ""foo"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,121,"DecompositionType.UNDECOMPOSABLE, ""if (goo.a(1, foo()));"", ""foo"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,123,"ecompositionType.UNDECOMPOSABLE, ""if (goo['a'](foo()));"", ""foo"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,127,"DecompositionType.UNDECOMPOSABLE, ""if (goo['a'](foo()));"", ""foo"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,129,"ecompositionType.UNDECOMPOSABLE, ""z:if (goo.a(1, foo()));"", ""foo"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,133,"DecompositionType.UNDECOMPOSABLE, ""z:if (goo.a(1, foo()));"", ""foo"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,136,public void testCanExposeExpression7() {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,137,// Verify calls to anonymous function are movable.
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,138,helperCanExposeAnonymousFunctionExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,139,"DecompositionType.MOVABLE,"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,140,"""(function(map){descriptions_=map})(\n"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,141,"""function(){\n"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,142,"""var ret={};\n"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,143,"""ret[INIT]='a';\n"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,144,"""ret[MIGRATION_BANNER_DISMISS]='b';\n"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,145,"""return ret\n"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,146,"""}()\n"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,147,""");"", 2);"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,337,private void helperCanExposeAnonymousFunctionExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,338,"DecompositionType expectedResult, String code, int call) {"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,339,Compiler compiler = new Compiler();
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,340,Set<String> knownConstants = Sets.newHashSet();
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,341,ExpressionDecomposer decomposer = new ExpressionDecomposer(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,342,"compiler, compiler.getUniqueNameIdSupplier(), knownConstants);"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,343,"Node tree = parse(compiler, code);"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,344,assertNotNull(tree);
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,346,"Node externsRoot = parse(compiler,"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,347,"""function goo() {}"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,348,"""function foo() {}"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,349,assertNotNull(externsRoot);
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,350,Node mainRoot = tree;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,352,"Node callSite = findCall(tree, null, 2);"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,353,"assertNotNull(""Call "" + call + "" was not found."", callSite);"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,355,compiler.resetUniqueNameId();
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,356,DecompositionType result = decomposer.canExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,357,callSite);
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,358,"assertEquals(expectedResult, result);"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,436,f (n.getType() == Token.CALL) {
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,437,ode callee = n.getFirstChild();
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,438,f (callee.getType() == Token.NAME
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,439,& callee.getString().equals(name)) {
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,440,eturn n;
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,444,or (Node c : n.children()) {
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,445,"ode result = findCall(c, name);"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,446,f (result != null) {
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,447,eturn result;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,476,"return findCall(n, name, 1);"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,480,* @param name The name to look for.
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,481,* @param call The call to look for.
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,482,* @return The return the Nth CALL node to name found in a pre-order
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,483,* traversal.
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,485,private static Node findCall(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,486,"Node root, @Nullable final String name, final int call) {"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,487,class Find {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,488,int found = 0;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,489,Node find(Node n) {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,490,if (n.getType() == Token.CALL) {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,491,Node callee = n.getFirstChild();
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,492,if (name == null || (callee.getType() == Token.NAME
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,493,&& callee.getString().equals(name))) {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,494,found++;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,495,if (found == call) {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,496,return n;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,501,for (Node c : n.children()) {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,502,Node result = find(c);
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,503,if (result != null) {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,504,return result;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,508,return null;
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,451,eturn null;
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,512,return (new Find()).find(root);
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,19,import com.google.javascript.jscomp.ExpressionDecomposer.DecompositionType;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1336,public void testDecomposeAnonymousInCall() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1337,test(
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1338,"""(function(map){descriptions_=map})(\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1339,"""function(){\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1340,"""var ret={};\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1341,"""ret[ONE]='a';\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1342,"""ret[TWO]='b';\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1343,"""return ret\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1344,"""}()\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1347,"""var JSCompiler_inline_result_0;"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1348,"""var ret$$inline_2={};\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1349,"""ret$$inline_2[ONE]='a';\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1350,"""ret$$inline_2[TWO]='b';\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1351,"""JSCompiler_inline_result_0 = ret$$inline_2;\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1354,"""descriptions_=JSCompiler_inline_result_0;"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,603,public void testCallFunctionFOrG() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,604,"String source = ""function f(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,605,"""function g(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,606,"""function h(){ (f || g)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,607,"""h()"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,609,"checkMarkedCalls(source, ImmutableList.<String>of(""(f || g)"", ""h""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,612,public void testCallFunctionFOrGViaHook() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,613,"String source = ""function f(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,614,"""function g(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,615,"""function h(){ (false ? f : g)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,616,"""h()"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,618,"checkMarkedCalls(source, ImmutableList.<String>of(""(f : g)"", ""h""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,621,public void testCallFunctionForGorH() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,622,"String source = ""function f(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,623,"""function g(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,624,"""function h(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,625,"""function i(){ (false ? f : (g || h))() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,626,"""i()"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,628,"checkMarkedCalls(source, ImmutableList.<String>of(""(f : (g || h))"", ""i""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,631,public void testCallFunctionFOrGWithSideEffects() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,632,"String source = ""var x = 0;\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,633,"""function f(){x = 10}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,634,"""function g(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,635,"""function h(){ (f || g)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,636,"""function i(){ (g || f)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,637,"""function j(){ (f || f)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,638,"""function k(){ (g || g)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,639,"""h(); i(); j(); k()"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,641,"checkMarkedCalls(source, ImmutableList.<String>of(""(g || g)"", ""k""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,644,public void testCallFunctionFOrGViaHookWithSideEffects() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,645,"String source = ""var x = 0;\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,646,"""function f(){x = 10}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,647,"""function g(){}\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,648,"""function h(){ (false ? f : g)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,649,"""function i(){ (false ? g : f)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,650,"""function j(){ (false ? f : f)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,651,"""function k(){ (false ? g : g)() }\n"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,652,"""h(); i(); j(); k()"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,654,"checkMarkedCalls(source, ImmutableList.<String>of(""(g : g)"", ""k""));"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,671,oSideEffectCalls.add(n.getFirstChild().getQualifiedName());
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,725,noSideEffectCalls.add(generateNameString(n.getFirstChild()));
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,675,oSideEffectCalls.add(n.getFirstChild().getQualifiedName());
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,729,noSideEffectCalls.add(generateNameString(n.getFirstChild()));
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,734,private String generateNameString(Node node) {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,735,if (node.getType() == Token.OR) {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,736,"return ""("" + generateNameString(node.getFirstChild()) +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,737,""" || "" + generateNameString(node.getLastChild()) + "")"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,738,} else if (node.getType() == Token.HOOK) {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,739,"return ""("" + generateNameString(node.getFirstChild().getNext()) +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,740,""" : "" + generateNameString(node.getLastChild()) + "")"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,741,} else {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,742,return node.getQualifiedName();
