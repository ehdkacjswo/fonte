is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,35,mport com.google.javascript.jscomp.deps.SortedDependencies;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,36,mport com.google.javascript.jscomp.deps.SortedDependencies.CircularDependencyException;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,749,f (options.processCommonJSModules) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,750,/ For CommonJS modules constructs modules from actual inputs.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,751,odules = Lists.newArrayList(compiler.getDegenerateModuleGraph()
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,752,getAllModules());
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,753,/ The module graph constructor expects modules to be already sorted.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,754,ry {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,755,ortedDependencies<JSModule> sorter =
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,756,ew SortedDependencies<JSModule>(modules);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,757,"odules = sorter.getDependenciesOf(modules, true);"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,758, catch (CircularDependencyException e) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,759,hrow Throwables.propagate(e);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,823,utputModuleGraphJson();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,826,utputModuleGraphJson();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1439, Creates a file containing the current module graph in JSON serialization.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1441,rivate void outputModuleGraphJson() throws IOException {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1442,f (config.outputModuleDependencies != null &&
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1443,"onfig.outputModuleDependencies != """") {"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1444,riter out = fileNameToOutputWriter2(config.outputModuleDependencies);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1445,"rintModuleGraphJsonTo(compiler.getDegenerateModuleGraph(), out);"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1446,ut.close();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1451, Prints the current module graph as JSON.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1453,VisibleForTesting
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1454,"oid printModuleGraphJsonTo(JSModuleGraph graph,"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1455,ppendable out) throws IOException {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1456,ut.append(compiler.getDegenerateModuleGraph().toJson().toString());
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1984,rivate String outputModuleDependencies = null;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1987, Sets whether a JSON file representing the dependencies between modules
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1988, should be created.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1990,ommandLineConfig setOutputModuleDependencies(String
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1991,utputModuleDependencies) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1992,his.outputModuleDependencies = outputModuleDependencies;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1993,eturn this;
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,375,"Option(name = ""--output_module_dependencies"","
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,376,"sage = ""Prints out a JSON file of dependencies between modules."")"
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,377,"rivate String output_module_dependencies = """";"
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,739,setOutputModuleDependencies(flags.output_module_dependencies)
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,20,mport com.google.common.base.Throwables;
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,44,mport org.json.JSONArray;
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,45,mport org.json.JSONException;
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,46,mport org.json.JSONObject;
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,139, Returns a JSON representation of the JSModuleGraph. Specifically a
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,140," JSONArray of ""Modules"" where each module has a"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,141," - ""name"""
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,142," - ""dependencies"" (list of module names)"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,143," - ""transitive-dependencies"" (list of module names, deepest first)"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,144," - ""inputs"" (list of file names)"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,145, @return List of module JSONObjects.
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,147,SONArray toJson() {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,148,SONArray modules = new JSONArray();
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,149,or (JSModule module : getAllModules()) {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,150,SONObject node = new JSONObject();
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,151,ry {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,152,"ode.put(""name"", module.getName());"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,153,SONArray deps = new JSONArray();
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,154,"ode.put(""dependencies"", deps);"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,155,or (JSModule m : module.getDependencies()) {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,156,eps.put(m.getName());
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,158,SONArray transitiveDeps = new JSONArray();
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,159,"ode.put(""transitive-dependencies"", transitiveDeps);"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,160,or (JSModule m : getTransitiveDepsDeepestFirst(module)) {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,161,ransitiveDeps.put(m.getName());
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,163,SONArray inputs = new JSONArray();
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,164,"ode.put(""inputs"", inputs);"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,165,or (CompilerInput input : module.getInputs()) {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,166,nputs.put(input.getSourceFile().getOriginalPath());
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,168,odules.put(node);
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,169, catch(JSONException e) {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,170,hrowables.propagate(e);
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,173,eturn modules;
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,907,ublic void testOutputModuleGraphJson() throws Exception {
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,908,seModules = ModulePattern.STAR;
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,909,estSame(new String[] {
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,910,"var x = 3;"", ""var y = 5;"", ""var z = 7;"", ""var a = 9;""});"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,912,tringBuilder builder = new StringBuilder();
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,913,astCommandLineRunner.printModuleGraphJsonTo(
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,914,"astCompiler.getModuleGraph(), builder);"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,915,"ssertTrue(builder.toString().indexOf(""transitive-dependencies"") != -1);"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,27,mport org.json.JSONArray;
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,28,mport org.json.JSONException;
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,29,mport org.json.JSONObject;
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,242,ublic void testToJson() throws JSONException {
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,243,SONArray modules = graph.toJson();
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,244,"ssertEquals(6, modules.length());"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,245,or (int i = 0; i < modules.length(); i++) {
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,246,SONObject m = modules.getJSONObject(i);
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,247,"ssertNotNull(m.getString(""name""));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,248,"ssertNotNull(m.getJSONArray(""dependencies""));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,249,"ssertNotNull(m.getJSONArray(""transitive-dependencies""));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,250,"ssertNotNull(m.getJSONArray(""inputs""));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,252,SONObject m = modules.getJSONObject(3);
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,253,"ssertEquals(""D"", m.getString(""name""));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,254,"ssertEquals(""[\""B\""]"", m.getJSONArray(""dependencies"").toString());"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,255,"ssertEquals(2,"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,256,".getJSONArray(""transitive-dependencies"").length());"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,257,"ssertEquals(""[]"", m.getJSONArray(""inputs"").toString());"
