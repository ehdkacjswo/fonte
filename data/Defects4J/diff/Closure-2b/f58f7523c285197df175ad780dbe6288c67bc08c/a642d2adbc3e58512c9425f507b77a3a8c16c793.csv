is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,195,* @return Whether the function is inlinable by convention.
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,197,public boolean isInlinableFunction(Node n);
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,200,* @return the delegate relationship created by the call or null.
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,161,@Override
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,162,public boolean isInlinableFunction(Node n) {
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,163,return nextConvention.isInlinableFunction(n);
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,344,@Override
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,345,public boolean isInlinableFunction(Node n) {
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,346,Preconditions.checkState(n.isFunction());
True,src/com/google/javascript/jscomp/CodingConventions.java,src/com/google/javascript/jscomp/CodingConventions.java,347,return true;
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,126,// 0) The function is inlinable by convention
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,133,if (!compiler.getCodingConvention().isInlinableFunction(fnNode)) {
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,134,return false;
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,652,eturn NodeUtil.isFunctionDeclaration(initialization.getParent())
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,653,| initialization.getNode().getFirstChild() != null;
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,652,if (!NodeUtil.isFunctionDeclaration(initialization.getParent())
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,653,&& initialization.getNode().getFirstChild() == null) {
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,654,return false;
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,659,eturn true;
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,663,Node n = initialization.getAssignedValue();
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,664,if (n.isFunction()) {
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,665,return compiler.getCodingConvention().isInlinableFunction(n);
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,668,return true;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,19,mport com.google.common.base.Joiner;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,23,mport com.google.common.collect.Lists;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,29,mport junit.framework.TestCase;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,31,mport java.util.List;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,38,ublic class IntegrationTest extends TestCase {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,40,** Externs for the test */
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,41,rivate final List<SourceFile> DEFAULT_EXTERNS = ImmutableList.of(
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,42,"ourceFile.fromCode(""externs"","
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,43,"var arguments;\n"""
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,44," ""/** @constructor */ function Window() {}\n"""
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,45," ""/** @type {string} */ Window.prototype.name;\n"""
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,46," ""/** @type {string} */ Window.prototype.offsetWidth;\n"""
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,47," ""/** @type {Window} */ var window;\n"""
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,48," ""/** @nosideeffects */ function noSideEffects() {}\n"""
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,49," ""/** @constructor\n * @nosideeffects */ function Widget() {}\n"""
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,50," ""/** @modifies {this} */ Widget.prototype.go = function() {};\n"""
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,51," ""/** @return {string} */ var widgetToken = function() {};\n""));"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,53,rivate List<SourceFile> externs = DEFAULT_EXTERNS;
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,32,public class IntegrationTest extends IntegrationTestCase {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,62,/ The most recently used compiler.
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,63,rivate Compiler lastCompiler;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,65,Override
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,66,ublic void setUp() {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,67,xterns = DEFAULT_EXTERNS;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,68,astCompiler = null;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2110,"rivate void testSame(CompilerOptions options, String original) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2111,"estSame(options, new String[] { original });"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2114,"rivate void testSame(CompilerOptions options, String[] original) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2115,"est(options, original, original);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2119," Asserts that when compiling with the given compiler options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2120, {@code original} is transformed into {@code compiled}.
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2122,"rivate void test(CompilerOptions options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2123,"tring original, String compiled) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2124,"est(options, new String[] { original }, new String[] { compiled });"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2128," Asserts that when compiling with the given compiler options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2129, {@code original} is transformed into {@code compiled}.
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2131,"rivate void test(CompilerOptions options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2132,"tring[] original, String[] compiled) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2133,"ompiler compiler = compile(options, original);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2134,"ssertEquals(""Expected no warnings or errors\n"" +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2135,"Errors: \n"" + Joiner.on(""\n"").join(compiler.getErrors()) +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2136,"Warnings: \n"" + Joiner.on(""\n"").join(compiler.getWarnings()),"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2137,", compiler.getErrors().length + compiler.getWarnings().length);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2139,ode root = compiler.getRoot().getLastChild();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2140,"ode expectedRoot = parse(compiled, options);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2141,tring explanation = expectedRoot.checkTreeEquals(root);
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2142,"ssertNull(""\nExpected: "" + compiler.toSource(expectedRoot) +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2143,"\nResult: "" + compiler.toSource(root) +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2144,"\n"" + explanation, explanation);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2148," Asserts that when compiling with the given compiler options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2149, there is an error or warning.
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2151,"rivate void test(CompilerOptions options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2152,"tring original, DiagnosticType warning) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2153,"est(options, new String[] { original }, warning);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2156,"rivate void test(CompilerOptions options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2157,"tring original, String compiled, DiagnosticType warning) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2158,"est(options, new String[] { original }, new String[] { compiled },"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2159,arning);
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2162,"rivate void test(CompilerOptions options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2163,"tring[] original, DiagnosticType warning) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2164,"est(options, original, null, warning);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2168," Asserts that when compiling with the given compiler options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2169, there is an error or warning.
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2171,"rivate void test(CompilerOptions options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2172,"tring[] original, String[] compiled, DiagnosticType warning) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2173,"ompiler compiler = compile(options, original);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2174,"heckUnexpectedErrorsOrWarnings(compiler, 1);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2175,"ssertEquals(""Expected exactly one warning or error"","
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2176,", compiler.getErrors().length + compiler.getWarnings().length);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2177,f (compiler.getErrors().length > 0) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2178,"ssertEquals(warning, compiler.getErrors()[0].getType());"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2179, else {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2180,"ssertEquals(warning, compiler.getWarnings()[0].getType());"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2183,f (compiled != null) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2184,ode root = compiler.getRoot().getLastChild();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2185,"ode expectedRoot = parse(compiled, options);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2186,tring explanation = expectedRoot.checkTreeEquals(root);
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2187,"ssertNull(""\nExpected: "" + compiler.toSource(expectedRoot) +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2188,"\nResult: "" + compiler.toSource(root) +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2189,"\n"" + explanation, explanation);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2194," Asserts that when compiling with the given compiler options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2195, there is an error or warning.
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2197,"rivate void test(CompilerOptions options,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2198,"tring[] original, String[] compiled, DiagnosticType[] warnings) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2199,"ompiler compiler = compile(options, original);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2200,"heckUnexpectedErrorsOrWarnings(compiler, warnings.length);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2202,f (compiled != null) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2203,ode root = compiler.getRoot().getLastChild();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2204,"ode expectedRoot = parse(compiled, options);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2205,tring explanation = expectedRoot.checkTreeEquals(root);
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2206,"ssertNull(""\nExpected: "" + compiler.toSource(expectedRoot) +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2207,"\nResult: "" + compiler.toSource(root) +"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2208,"\n"" + explanation, explanation);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2212,rivate void checkUnexpectedErrorsOrWarnings(
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2213,"ompiler compiler, int expected) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2214,nt actual = compiler.getErrors().length + compiler.getWarnings().length;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2215,f (actual != expected) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2216,"tring msg = """";"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2217,or (JSError err : compiler.getErrors()) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2218,"sg += ""Error:"" + err.toString() + ""\n"";"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2220,or (JSError err : compiler.getWarnings()) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2221,"sg += ""Warning:"" + err.toString() + ""\n"";"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2223,"ssertEquals(""Unexpected warnings or errors.\n "" + msg,"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2224,"xpected, actual);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2228,"rivate Compiler compile(CompilerOptions options, String original) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2229,"eturn compile(options, new String[] { original });"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2232,"rivate Compiler compile(CompilerOptions options, String[] original) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2233,ompiler compiler = lastCompiler = new Compiler();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2234,ist<SourceFile> inputs = Lists.newArrayList();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2235,or (int i = 0; i < original.length; i++) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2236,"nputs.add(SourceFile.fromCode(""input"" + i, original[i]));"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2238,ompiler.compileModules(
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2239,"xterns, Lists.newArrayList(CompilerTestCase.createModuleChain(original)),"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2240,ptions);
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2241,eturn compiler;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2244,"rivate Node parse(String[] original, CompilerOptions options) {"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2245,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2246,ist<SourceFile> inputs = Lists.newArrayList();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2247,or (int i = 0; i < original.length; i++) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2248,"nputs.add(SourceFile.fromCode(""input"" + i, original[i]));"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2250,"ompiler.init(externs, inputs, options);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2251,"heckUnexpectedErrorsOrWarnings(compiler, 0);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2252,ode all = compiler.parseInputs();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2253,"heckUnexpectedErrorsOrWarnings(compiler, 0);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2254,ode n = all.getLastChild();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2255,ode externs = all.getFirstChild();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2257,new CreateSyntheticBlocks(
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2258,"ompiler, ""synStart"", ""synEnd"")).process(externs, n);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2259,"new Normalize(compiler, false)).process(externs, n);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2260,MakeDeclaredNamesUnique.getContextualRenameInverter(compiler)).process(
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2261,"xterns, n);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2262,"new Denormalize(compiler)).process(externs, n);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2263,eturn n;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2267,rivate CompilerOptions createCompilerOptions() {
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2081,@Override
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2082,protected CompilerOptions createCompilerOptions() {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,2,* Copyright 2012 The Closure Compiler Authors.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,19,import com.google.common.base.Joiner;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,20,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,21,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,22,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,24,import junit.framework.TestCase;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,26,import java.util.List;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,29,* Framework for end-to-end test cases.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,31,* @author nicksantos@google.com (Nick Santos)
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,33,abstract class IntegrationTestCase extends TestCase {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,35,/** Externs for the test */
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,36,protected final List<SourceFile> DEFAULT_EXTERNS = ImmutableList.of(
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,37,"SourceFile.fromCode(""externs"","
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,38,"""var arguments;\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,39,"+ ""/** @constructor */ function Window() {}\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,40,"+ ""/** @type {string} */ Window.prototype.name;\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,41,"+ ""/** @type {string} */ Window.prototype.offsetWidth;\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,42,"+ ""/** @type {Window} */ var window;\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,43,"+ ""/** @nosideeffects */ function noSideEffects() {}\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,44,"+ ""/** @constructor\n * @nosideeffects */ function Widget() {}\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,45,"+ ""/** @modifies {this} */ Widget.prototype.go = function() {};\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,46,"+ ""/** @return {string} */ var widgetToken = function() {};\n"""
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,47,"+ ""function alert(x) {}""));"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,49,protected List<SourceFile> externs = DEFAULT_EXTERNS;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,51,// The most recently used compiler.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,52,protected Compiler lastCompiler;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,54,@Override
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,55,public void setUp() {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,56,externs = DEFAULT_EXTERNS;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,57,lastCompiler = null;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,60,"protected void testSame(CompilerOptions options, String original) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,61,"testSame(options, new String[] { original });"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,64,"protected void testSame(CompilerOptions options, String[] original) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,65,"test(options, original, original);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,69,"* Asserts that when compiling with the given compiler options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,70,* {@code original} is transformed into {@code compiled}.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,72,"protected void test(CompilerOptions options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,73,"String original, String compiled) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,74,"test(options, new String[] { original }, new String[] { compiled });"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,78,"* Asserts that when compiling with the given compiler options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,79,* {@code original} is transformed into {@code compiled}.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,81,"protected void test(CompilerOptions options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,82,"String[] original, String[] compiled) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,83,"Compiler compiler = compile(options, original);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,84,"assertEquals(""Expected no warnings or errors\n"" +"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,85,"""Errors: \n"" + Joiner.on(""\n"").join(compiler.getErrors()) +"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,86,"""Warnings: \n"" + Joiner.on(""\n"").join(compiler.getWarnings()),"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,87,"0, compiler.getErrors().length + compiler.getWarnings().length);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,89,Node root = compiler.getRoot().getLastChild();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,90,"Node expectedRoot = parse(compiled, options);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,91,String explanation = expectedRoot.checkTreeEquals(root);
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,92,"assertNull(""\nExpected: "" + compiler.toSource(expectedRoot) +"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,93,"""\nResult: "" + compiler.toSource(root) +"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,94,"""\n"" + explanation, explanation);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,98,"* Asserts that when compiling with the given compiler options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,99,* there is an error or warning.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,101,"protected void test(CompilerOptions options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,102,"String original, DiagnosticType warning) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,103,"test(options, new String[] { original }, warning);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,106,"protected void test(CompilerOptions options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,107,"String original, String compiled, DiagnosticType warning) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,108,"test(options, new String[] { original }, new String[] { compiled },"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,109,warning);
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,112,"protected void test(CompilerOptions options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,113,"String[] original, DiagnosticType warning) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,114,"test(options, original, null, warning);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,118,"* Asserts that when compiling with the given compiler options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,119,* there is an error or warning.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,121,"protected void test(CompilerOptions options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,122,"String[] original, String[] compiled, DiagnosticType warning) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,123,"Compiler compiler = compile(options, original);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,124,"checkUnexpectedErrorsOrWarnings(compiler, 1);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,125,"assertEquals(""Expected exactly one warning or error"","
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,126,"1, compiler.getErrors().length + compiler.getWarnings().length);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,127,if (compiler.getErrors().length > 0) {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,128,"assertEquals(warning, compiler.getErrors()[0].getType());"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,129,} else {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,130,"assertEquals(warning, compiler.getWarnings()[0].getType());"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,133,if (compiled != null) {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,134,Node root = compiler.getRoot().getLastChild();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,135,"Node expectedRoot = parse(compiled, options);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,136,String explanation = expectedRoot.checkTreeEquals(root);
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,137,"assertNull(""\nExpected: "" + compiler.toSource(expectedRoot) +"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,138,"""\nResult: "" + compiler.toSource(root) +"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,139,"""\n"" + explanation, explanation);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,144,"* Asserts that when compiling with the given compiler options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,145,* there is an error or warning.
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,147,"protected void test(CompilerOptions options,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,148,"String[] original, String[] compiled, DiagnosticType[] warnings) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,149,"Compiler compiler = compile(options, original);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,150,"checkUnexpectedErrorsOrWarnings(compiler, warnings.length);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,152,if (compiled != null) {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,153,Node root = compiler.getRoot().getLastChild();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,154,"Node expectedRoot = parse(compiled, options);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,155,String explanation = expectedRoot.checkTreeEquals(root);
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,156,"assertNull(""\nExpected: "" + compiler.toSource(expectedRoot) +"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,157,"""\nResult: "" + compiler.toSource(root) +"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,158,"""\n"" + explanation, explanation);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,162,protected void checkUnexpectedErrorsOrWarnings(
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,163,"Compiler compiler, int expected) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,164,int actual = compiler.getErrors().length + compiler.getWarnings().length;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,165,if (actual != expected) {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,166,"String msg = """";"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,167,for (JSError err : compiler.getErrors()) {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,168,"msg += ""Error:"" + err.toString() + ""\n"";"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,170,for (JSError err : compiler.getWarnings()) {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,171,"msg += ""Warning:"" + err.toString() + ""\n"";"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,173,"assertEquals(""Unexpected warnings or errors.\n "" + msg,"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,174,"expected, actual);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,178,"protected Compiler compile(CompilerOptions options, String original) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,179,"return compile(options, new String[] { original });"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,182,"protected Compiler compile(CompilerOptions options, String[] original) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,183,Compiler compiler = lastCompiler = new Compiler();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,184,List<SourceFile> inputs = Lists.newArrayList();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,185,for (int i = 0; i < original.length; i++) {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,186,"inputs.add(SourceFile.fromCode(""input"" + i, original[i]));"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,188,compiler.compileModules(
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,189,"externs, Lists.newArrayList(CompilerTestCase.createModuleChain(original)),"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,190,options);
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,191,return compiler;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,194,"protected Node parse(String[] original, CompilerOptions options) {"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,195,Compiler compiler = new Compiler();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,196,List<SourceFile> inputs = Lists.newArrayList();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,197,for (int i = 0; i < original.length; i++) {
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,198,"inputs.add(SourceFile.fromCode(""input"" + i, original[i]));"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,200,"compiler.init(externs, inputs, options);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,201,"checkUnexpectedErrorsOrWarnings(compiler, 0);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,202,Node all = compiler.parseInputs();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,203,"checkUnexpectedErrorsOrWarnings(compiler, 0);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,204,Node n = all.getLastChild();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,205,Node externs = all.getFirstChild();
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,207,(new CreateSyntheticBlocks(
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,208,"compiler, ""synStart"", ""synEnd"")).process(externs, n);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,209,"(new Normalize(compiler, false)).process(externs, n);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,210,(MakeDeclaredNamesUnique.getContextualRenameInverter(compiler)).process(
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,211,"externs, n);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,212,"(new Denormalize(compiler)).process(externs, n);"
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,213,return n;
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,216,/** Creates a CompilerOptions object with google coding conventions. */
True,test/com/google/javascript/jscomp/IntegrationTestCase.java,test/com/google/javascript/jscomp/IntegrationTestCase.java,217,abstract CompilerOptions createCompilerOptions();
