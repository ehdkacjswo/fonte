is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,204,if (config.closureEntryPoints.size() > 0) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,205,options.setManageClosureDependencies(config.closureEntryPoints);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1515,private List<String> closureEntryPoints = ImmutableList.of();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1518,"* Set closure entry points, which makes the compiler only include"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1519,* those files and sort them in dependency order.
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1521,CommandLineConfig setClosureEntryPoints(List<String> entryPoints) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1522,Preconditions.checkNotNull(entryPoints);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1523,this.closureEntryPoints = entryPoints;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1524,return this;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,294,"@Option(name = ""--closure_entry_point"","
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,295,"usage = ""Entry points to the program. Must be goog.provide'd """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,296,"+ ""symbols. Any goog.provide'd symbols that are not a transitive """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,297,"+ ""dependency of the entry points will be removed. Files without """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,298,"+ ""goog.provides, and their dependencies, will always be left in. """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,299,"+ ""If any entry points are specified, then the """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,300,"+ ""manage_closure_dependencies option will be set to true and """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,301,"+ ""all files will be sorted in dependency order."")"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,302,private List<String> closure_entry_point = Lists.newArrayList();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,480,.setClosureEntryPoints(flags.closure_entry_point)
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,27,import com.google.javascript.jscomp.deps.SortedDependencies.MissingProvideException;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,66,static final DiagnosticType MODULE_DEPENDENCY_ERROR =
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,67,"DiagnosticType.error(""JSC_MODULE_DEPENDENCY_ERROR"","
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,68,"""Bad dependency: {0} -> {1}. """
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,69,"+ ""Modules must be listed in dependency order."");"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,71,static final DiagnosticType MISSING_ENTRY_ERROR = DiagnosticType.error(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,72,"""JSC_MISSING_ENTRY_ERROR"","
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,73,"""required entry point \""{0}\"" never provided"");"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,275,tatic final DiagnosticType MODULE_DEPENDENCY_ERROR =
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,276,"iagnosticType.error(""JSC_MODULE_DEPENDENCY_ERROR"","
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,277,"Bad dependency: {0} -> {1}. """
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,278," ""Modules must be listed in dependency order."");"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1073,manageDependencies(inputs);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1079,.manageDependencies(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1080,"options.manageClosureDependenciesEntryPoints, inputs);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1085,} catch (MissingProvideException e) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1086,report(JSError.make(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1087,"MISSING_ENTRY_ERROR, e.getMessage()));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1088,return null;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,20,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,76,List<String> manageClosureDependenciesEntryPoints = ImmutableList.of();
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,952,* Sort inputs by their goog.provide/goog.require calls.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,954,* @param entryPoints Entry points to the program. Must be goog.provide'd
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,955,*     symbols. Any goog.provide'd symbols that are not a transitive
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,956,*     dependency of the entry points will be deleted.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,957,"*     Files without goog.provides, and their dependencies,"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,958,*     will always be left in.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,960,public void setManageClosureDependencies(List<String> entryPoints) {
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,961,Preconditions.checkNotNull(entryPoints);
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,962,manageClosureDependencies = true;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,963,manageClosureDependenciesEntryPoints = entryPoints;
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,30,import com.google.javascript.jscomp.deps.SortedDependencies.MissingProvideException;
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,283,* @param entryPoints The entry points into the program.
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,284,*     Expressed as JS symbols.
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,288,* @throws CircularDependencyException if there is a circular dependency
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,289,*     between the provides and requires.
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,290,* @throws MissingProvideException if an entry point was not provided
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,291,*     by any of the inputs.
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,286,ist<CompilerInput> manageDependencies(List<CompilerInput> inputs)
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,287,hrows CircularDependencyException {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,293,List<CompilerInput> manageDependencies(
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,294,"List<String> entryPoints,"
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,295,List<CompilerInput> inputs)
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,296,"throws CircularDependencyException, MissingProvideException {"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,290,ist<CompilerInput> inputsWithoutProvides =
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,291,orter.getInputsWithoutProvides();
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,299,Set<CompilerInput> entryPointInputs =
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,300,Sets.newLinkedHashSet(sorter.getInputsWithoutProvides());
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,301,for (String entryPoint : entryPoints) {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,302,entryPointInputs.add(sorter.getInputProviding(entryPoint));
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,297,"istMultimap<JSModule, CompilerInput> inputsWithoutProvidesPerModule ="
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,309,"ListMultimap<JSModule, CompilerInput> entryPointInputsPerModule ="
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,299,or (CompilerInput input : inputsWithoutProvides) {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,311,for (CompilerInput input : entryPointInputs) {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,302,"nputsWithoutProvidesPerModule.put(module, input);"
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,314,"entryPointInputsPerModule.put(module, input);"
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,313,or (JSModule module : inputsWithoutProvidesPerModule.keySet()) {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,325,for (JSModule module : entryPointInputsPerModule.keySet()) {
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,316,nputsWithoutProvidesPerModule.get(module));
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,328,entryPointInputsPerModule.get(module));
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,319,nput.setModule(
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,320,ldModule == null ?
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,321,odule :
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,322,"etDeepestCommonDependencyInclusive(oldModule, module));"
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,331,if (oldModule == null) {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,332,input.setModule(module);
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,333,} else {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,334,input.setModule(null);
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,335,input.setModule(
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,336,"getDeepestCommonDependencyInclusive(oldModule, module));"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,111,* Return the input that gives us the given symbol.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,112,* @throws MissingProvideException An exception if there is no
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,113,*     input for this symbol.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,115,public INPUT getInputProviding(String symbol)
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,116,throws MissingProvideException {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,117,if (provideMap.containsKey(symbol)) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,118,return provideMap.get(symbol);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,120,throw new MissingProvideException(symbol);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,270,public static class MissingProvideException extends Exception {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,271,MissingProvideException(String provide) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,272,super(provide);
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,342,ublic void testSourcePruningOn() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,342,public void testSourcePruningOn1() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,355,public void testSourcePruningOn2() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,356,"args.add(""--closure_entry_point=guinness"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,357,test(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,358,"""goog.provide('guinness');\ngoog.require('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,359,"""goog.provide('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,360,"""goog.provide('scotch'); var x = 3;"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,362,new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,363,"""var beer = {};"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,364,"""var guinness = {};"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,368,public void testSourcePruningOn3() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,369,"args.add(""--closure_entry_point=scotch"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,370,test(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,371,"""goog.provide('guinness');\ngoog.require('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,372,"""goog.provide('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,373,"""goog.provide('scotch'); var x = 3;"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,375,new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,376,"""var scotch = {}, x = 3;"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,380,public void testSourcePruningOn4() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,381,"args.add(""--closure_entry_point=scotch"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,382,"args.add(""--closure_entry_point=beer"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,383,test(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,384,"""goog.provide('guinness');\ngoog.require('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,385,"""goog.provide('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,386,"""goog.provide('scotch'); var x = 3;"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,388,new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,389,"""var beer = {};"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,390,"""var scotch = {}, x = 3;"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,394,public void testSourcePruningOn5() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,395,"args.add(""--closure_entry_point=shiraz"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,396,test(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,397,"""goog.provide('guinness');\ngoog.require('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,398,"""goog.provide('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,399,"""goog.provide('scotch'); var x = 3;"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,401,Compiler.MISSING_ENTRY_ERROR);
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,404,public void testSourcePruningOn6() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,405,"args.add(""--closure_entry_point=scotch"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,406,test(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,407,"""goog.require('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,408,"""goog.provide('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,409,"""goog.provide('scotch'); var x = 3;"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,411,new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,412,"""var beer = {};"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,414,"""var scotch = {}, x = 3;"","
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,19,import com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,148,ublic void testManageDependencies() throws Exception {
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,149,public void testManageDependencies1() throws Exception {
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,150,List<CompilerInput> inputs = setUpManageDependenciesTest();
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,151,List<CompilerInput> results = graph.manageDependencies(
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,152,"ImmutableList.<String>of(), inputs);"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,154,"assertInputs(A, ""a1"", ""a3"");"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,155,"assertInputs(B, ""a2"", ""b2"");"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,156,assertInputs(C); // no inputs
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,157,"assertInputs(E, ""c1"", ""e1"", ""e2"");"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,159,assertEquals(
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,160,"Lists.newArrayList(""a1"", ""a3"", ""a2"", ""b2"", ""c1"", ""e1"", ""e2""),"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,161,sourceNames(results));
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,164,public void testManageDependencies2() throws Exception {
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,165,List<CompilerInput> inputs = setUpManageDependenciesTest();
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,166,List<CompilerInput> results = graph.manageDependencies(
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,167,"ImmutableList.<String>of(""c2""), inputs);"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,169,"assertInputs(A, ""a1"", ""a3"");"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,170,"assertInputs(B, ""a2"", ""b2"");"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,171,"assertInputs(C, ""c1"", ""c2"");"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,172,"assertInputs(E, ""e1"", ""e2"");"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,174,assertEquals(
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,175,"Lists.newArrayList(""a1"", ""a3"", ""a2"", ""b2"", ""c1"", ""c2"", ""e1"", ""e2""),"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,176,sourceNames(results));
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,179,private List<CompilerInput> setUpManageDependenciesTest() {
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,173,ist<CompilerInput> results = graph.manageDependencies(inputs);
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,175,"ssertInputs(A, ""a1"", ""a3"");"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,176,"ssertInputs(B, ""a2"", ""b2"");"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,177,ssertInputs(C); // no inputs
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,178,"ssertInputs(E, ""c1"", ""e1"", ""e2"");"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,180,ssertEquals(
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,181,"ists.newArrayList(""a1"", ""a3"", ""a2"", ""b2"", ""c1"", ""e1"", ""e2""),"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,182,ourceNames(results));
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,203,return inputs;
