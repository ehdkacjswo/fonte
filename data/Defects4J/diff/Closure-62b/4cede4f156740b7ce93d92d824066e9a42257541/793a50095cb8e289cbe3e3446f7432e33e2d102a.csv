is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,33,import java.io.Closeable;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,35,mport java.io.FileWriter;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,37,import java.io.OutputStream;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,93,rivate static Charset inputCharset;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,94,private Charset inputCharset;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,95,private String outputCharset;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,206,ptions.outputCharset = getOutputCharset();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,208,outputCharset = options.outputCharset = getOutputCharset();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,296,"rivate static List<JSSourceFile> createInputs(List<String> files,"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,298,"private List<JSSourceFile> createInputs(List<String> files,"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,340,rivate static List<JSSourceFile> createExternInputs(List<String> files)
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,342,private List<JSSourceFile> createExternInputs(List<String> files)
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,566,"ut = toWriter(options.jsOutputFile, inputCharset.name());"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,568,out = fileNameToOutputWriter(options.jsOutputFile);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,569,} else if (out instanceof OutputStream) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,570,out = streamToOutputWriter((OutputStream) out);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,581,f (writeOutputToFile) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,582,(Writer)out).close();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,585,if (out instanceof Closeable) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,586,((Closeable)out).close();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,647,"apOut = toWriter(expandSourceMapPath(options, null));"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,651,"mapOut = fileNameToOutputWriter(expandSourceMapPath(options, null));"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,652,"apOut = toWriter(expandSourceMapPath(options, m));"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,656,"mapOut = fileNameToOutputWriter(expandSourceMapPath(options, m));"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,655,riter writer = toWriter(
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,659,Writer writer = fileNameToOutputWriter(
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,779,eturn toWriter(exPath);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,783,return fileNameToOutputWriter(exPath);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,831,rivate Writer toWriter(String fileName) throws IOException {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,835,private Writer fileNameToOutputWriter(String fileName) throws IOException {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,838,/ Use a FileWriter if the charset translation isn't required.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,839,eturn new BufferedWriter(new FileWriter(fileName));
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,842,return streamToOutputWriter(new FileOutputStream(fileName));
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,843, Converts a file name into a Writer.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,844, Returns null if the file name is null.
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,846,* Create a writer.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,846,"rivate Writer toWriter(String fileName, String charSet)"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,848,private Writer streamToOutputWriter(OutputStream stream)
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,848,f (fileName == null) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,849,eturn null;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,851,f (testMode) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,852,eturn new StringWriter();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,850,if (outputCharset == null) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,851,return new BufferedWriter(
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,852,new OutputStreamWriter(stream));
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,853,} else {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,854,return new BufferedWriter(
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,855,"new OutputStreamWriter(stream, outputCharset));"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,854,/ Use a FileOutputStream for a non-default charset.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,855,eturn new BufferedWriter(
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,856,"ew OutputStreamWriter(new FileOutputStream(fileName), charSet));"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,872,riter out = toWriter(outName);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,872,Writer out = fileNameToOutputWriter(outName);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1061,riter out = toWriter(expandManifest(module));
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1061,Writer out = fileNameToOutputWriter(expandManifest(module));
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1067,riter out = toWriter(expandManifest(null));
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1067,Writer out = fileNameToOutputWriter(expandManifest(null));
