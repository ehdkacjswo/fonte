is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,56,import java.math.BigDecimal;
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,65, @version $Revision: 1.5 $ $Date: 2003/08/18 02:22:25 $
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,67,* @author Tim O'Brien
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,68,* @version $Revision: 1.6 $ $Date: 2003/10/11 20:35:11 $
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,75,private NumberRange fifteenToTwentyFive;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,76,private NumberRange fiveToNine;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,78,private Number nine;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,90,nine      = new Double(9.0);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,97,"fifteenToTwentyFive = new NumberRange( fifteen, twentyFive);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,98,"fiveToNine = new NumberRange( five, nine );"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,136,public void testEqualsWithOtherObject() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,137,"assertEquals( ""A NumberRange should not equals a String object"", false, fiveToNine.equals(""TEST""));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,140,public void testEqualsWithSameReference() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,141,"assertEquals( ""A NumberRange should equal itself"", true, fiveToNine.equals(fiveToNine));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,144,public void testEqualsNull() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,145,"assertEquals( ""A NumberRange should not equal null"", false, fiveToNine.equals(null));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,148,public void testHashCode() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,149,"NumberRange nr = new NumberRange( new Integer(5), new Double(9.0));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,150,"assertEquals( ""The hashCode of 5-9 should equals the hashcode of another NumberRange of the same min/max"","
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,151,"fiveToNine.hashCode(), nr.hashCode());"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,152,"assertTrue( ""The hashCode of 10-20 should not equal the hashCode of 5-9"","
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,153,fiveToNine.hashCode() != tenToTwenty.hashCode());
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,178,public void testIncludesNumberNull() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,179,boolean result = tenToTwenty.includesNumber(null);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,180,"assertEquals(""Includes number should return false for null values"", false, result);"
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,185,ublic void testConstructorNullParameters()
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,187,ry
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,215,public void testIncludesRangeNull() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,216,boolean result = tenToTwenty.includesRange(null);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,217,"assertEquals(""Includes range should return false for null values"", false, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,220,public void testConstructor() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,221,NumberRange nr = new NumberRange( new Double(2.0));
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,222,"assertEquals(""Unexpected min on NumberRange"", 2.0, nr.getMinimum().doubleValue(), Double.MIN_VALUE);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,223,"assertEquals(""Unexpected max on NumberRange"", 2.0, nr.getMaximum().doubleValue(), Double.MIN_VALUE);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,226,public void testConstructorNullParameters() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,227,try {
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,192,atch (Exception e)
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,194,ssertTrue(
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,195,"NumberRange(null)"","
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,196, instanceof NullPointerException);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,230,} catch (Exception e) {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,231,"assertTrue(	""NumberRange(null)"", e instanceof NullPointerException);"
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,199,ry
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,234,try {
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,204,atch (Exception e)
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,206,ssertTrue(
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,207,"NumberRange(five, null)"","
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,208, instanceof NullPointerException);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,237,} catch (Exception e) {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,238,"assertTrue(""NumberRange(five, null)"", e instanceof NullPointerException);"
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,211,ry
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,241,try {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,244,} catch (Exception e) {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,245,"assertTrue(""NumberRange(null, five)"", e instanceof NullPointerException);"
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,216,atch (Exception e)
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,218,ssertTrue(
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,219,"NumberRange(null, five)"","
False,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,220, instanceof NullPointerException);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,249,public void testConstructorWithMaxLessThanMin() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,250,"NumberRange nr = new NumberRange( new Double(2.0), new Double(1.0));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,251,"assertEquals(""Unexpected min on NumberRange"", 2.0, nr.getMinimum().doubleValue(), Double.MIN_VALUE);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,252,"assertEquals(""Unexpected max on NumberRange"", 2.0, nr.getMaximum().doubleValue(), Double.MIN_VALUE);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,255,public void testOverlap() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,256,"assertEquals( ""5-9 should not overlap 10-20"", false, fiveToNine.overlaps( tenToTwenty ));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,257,"assertEquals( ""10-20 should overlap 15-25"", true, tenToTwenty.overlaps( fifteenToTwentyFive ));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,260,public void testOverlapNull() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,261,"assertEquals( ""5-9 should not overlap null"", false, fiveToNine.overlaps( null ));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,270,public void testToStringWithNegatives() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,271,"String expected = ""(-20)-(-10)"";"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,272,"NumberRange nr = new NumberRange( new Integer(-20), new Integer(-10));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,273,String result = nr.toString();
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,274,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,276,"expected = ""(-20)-10"";"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,277,"nr = new NumberRange( new Integer(-20), new Integer(10));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,278,result = nr.toString();
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,279,"assertEquals(expected, result);"
