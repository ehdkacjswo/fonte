is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,98,ublic class VariableFormat {
True,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,98,public class VariableFormatter {
False,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,134,"ublic VariableFormat(Map valueMap, String prefix, String suffix, char escape) {"
True,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,134,"public VariableFormatter(Map valueMap, String prefix, String suffix, char escape) {"
False,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,153,"ublic VariableFormat(Map valueMap, String prefix, String suffix) {"
True,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,153,"public VariableFormatter(Map valueMap, String prefix, String suffix) {"
False,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,166,ublic VariableFormat(Map valueMap) {
True,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,166,public VariableFormatter(Map valueMap) {
False,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,301,eturn new VariableFormat(valueMap).replace(source);
True,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,301,return new VariableFormatter(valueMap).replace(source);
False,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,319,"eturn new VariableFormat(valueMap, prefix, suffix).replace(source);"
True,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,319,"return new VariableFormatter(valueMap, prefix, suffix).replace(source);"
False,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,330,eturn new VariableFormat(System.getProperties()).replace(source);
True,src/java/org/apache/commons/lang/text/VariableFormat.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,330,return new VariableFormatter(System.getProperties()).replace(source);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,54,uite.addTestSuite(VariableFormatTest.class);
True,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,54,suite.addTestSuite(VariableFormatterTest.class);
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,25, Test class for VariableResolver.
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,25,* Test class for VariableFormatter.
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,30,ublic class VariableFormatTest extends TestCase {
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,30,public class VariableFormatterTest extends TestCase {
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,33,rivate VariableFormat format;
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,33,private VariableFormatter format;
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,43,etFormat(new VariableFormat(map));
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,43,setFormat(new VariableFormatter(map));
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,51,"ssertEquals(VariableFormat.DEFAULT_PREFIX, format.getVariablePrefix());"
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,52,"ssertEquals(VariableFormat.DEFAULT_SUFFIX, format.getVariableSuffix());"
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,53,"ssertEquals(VariableFormat.DEFAULT_ESCAPE, format.getEscapeCharacter());"
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,51,"assertEquals(VariableFormatter.DEFAULT_PREFIX, format.getVariablePrefix());"
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,52,"assertEquals(VariableFormatter.DEFAULT_SUFFIX, format.getVariableSuffix());"
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,53,"assertEquals(VariableFormatter.DEFAULT_ESCAPE, format.getEscapeCharacter());"
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,55,"ormat = new VariableFormat(values, ""<<"", "">>"", '\\');"
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,55,"format = new VariableFormatter(values, ""<<"", "">>"", '\\');"
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,61,ormat = new VariableFormat(null);
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,61,format = new VariableFormatter(null);
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,68,"ormat = new VariableFormat(values, ""${"", null);"
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,68,"format = new VariableFormatter(values, ""${"", null);"
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,75,"ormat = new VariableFormat(values, null, ""]"");"
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,75,"format = new VariableFormatter(values, null, ""]"");"
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,166,"ormat = new VariableFormat(values, ""<<"", "">>"", '\\');"
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,166,"format = new VariableFormatter(values, ""<<"", "">>"", '\\');"
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,177,"ssertEquals(""The quick brown fox jumps over the lazy dog."", VariableFormat.replace(values, REPLACE_TEMPLATE));"
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,177,"assertEquals(""The quick brown fox jumps over the lazy dog."", VariableFormatter.replace(values, REPLACE_TEMPLATE));"
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,180,"ssertEquals(""The cow jumps over the moon."", VariableFormat.replace(values, ""&"", "";"","
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,180,"assertEquals(""The cow jumps over the moon."", VariableFormatter.replace(values, ""&"", "";"","
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,194,"ssertEquals(buf.toString(), VariableFormat.replaceSystemProperties(""Hi ${user.name}, you are """
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,194,"assertEquals(buf.toString(), VariableFormatter.replaceSystemProperties(""Hi ${user.name}, you are """
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,207,ariableFormat getFormat() {
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,207,VariableFormatter getFormat() {
False,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,211,oid setFormat(VariableFormat format) {
True,src/test/org/apache/commons/lang/text/VariableFormatTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,211,void setFormat(VariableFormatter format) {
