is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,60,import java.io.PrintWriter;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,61,import java.io.StringWriter;
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,64,ODO: Refactor code from NestableDelegate to ExceptionUtils.
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,66,"rintStackTrace(Throwable, PrintWriter)"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,64,import java.util.LinkedList;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,65,import java.util.List;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,66,import java.util.StringTokenizer;
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,311,rrayList list = new ArrayList();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,310,List list = new ArrayList();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,371,* A convenient way of extracting the stack trace from an
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,372,* exception.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,374,* @param t The <code>Throwable</code>.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,375,* @return The stack trace as generated by the exception's
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,376,* <code>printStackTrace(PrintWriter)</code> method.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,378,public static String getStackTrace(Throwable t)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,380,StringWriter sw = new StringWriter();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,381,"PrintWriter pw = new PrintWriter(sw, true);"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,382,t.printStackTrace(pw);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,383,return sw.getBuffer().toString();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,387,* Captures the stack trace associated with the specified
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,388,"* <code>Throwable</code> object, decomposing it into a list of"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,389,* stack frames.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,391,* @param t The <code>Throwable</code>.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,392,* @return  An array of strings describing each stack frame.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,394,public static String[] getStackFrames(Throwable t)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,396,return getStackFrames(getStackTrace(t));
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,400,* Functionality shared between the
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,401,* <code>getStackFrames(Throwable)</code> methods of this and the
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,402,* {@link org.apache.commons.lang.exception.NestableDelegate}
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,403,* classes.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,405,static String[] getStackFrames(String stackTrace)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,407,// TODO: Use constant from org.apache.commons.lang.SystemUtils.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,408,"String linebreak = System.getProperty(""line.separator"");"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,409,"StringTokenizer frames = new StringTokenizer(stackTrace, linebreak);"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,410,List list = new LinkedList();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,411,while (frames.hasMoreTokens())
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,413,list.add(frames.nextToken());
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,415,return (String []) list.toArray(new String[] {});
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,62,mport java.util.LinkedList;
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,63,mport java.util.StringTokenizer;
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,70," @version $Id: NestableDelegate.java,v 1.5 2002/08/21 23:52:02 dlr Exp $"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,68,"* @version $Id: NestableDelegate.java,v 1.6 2002/08/24 19:18:50 dlr Exp $"
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,261,ynchronized (System.err)
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,263,rintStackTrace(System.err);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,259,printStackTrace(System.err);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,268, Prints the stack trace of this exception to the specified print stream.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,263,* Prints the stack trace of this exception to the specified
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,264,* stream.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,267,* @see #printStackTrace(PrintWriter)
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,284, Prints the stack trace of this exception to the specified print writer.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,281,* Prints the stack trace of this exception to the specified
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,282,* writer.
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,292,tring[] st = decompose(this.cause);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,290,String[] st = getStackFrames(this.cause);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,303,tring[] nst = decompose(nestedCause);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,301,String[] nst = getStackFrames(nestedCause);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,321, Captures the stack trace associated with a <code>Throwable</code>
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,322," object, decomposing it into a list of stack frames."
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,319,* Captures the stack trace associated with the specified
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,320,"* <code>Throwable</code> object, decomposing it into a list of"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,321,* stack frames.
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,327,rivate String[] decompose(Throwable t)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,326,private String[] getStackFrames(Throwable t)
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,342,"tring linebreak = System.getProperty(""line.separator"");"
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,343,"tringTokenizer st = new StringTokenizer(sw.getBuffer().toString(),"
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,344,inebreak);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,345,inkedList list = new LinkedList();
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,346,hile (st.hasMoreTokens())
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,348,ist.add(st.nextToken());
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,350,eturn (String []) list.toArray(new String[] {});
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,340,return ExceptionUtils.getStackFrames(sw.getBuffer().toString());
