is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,6,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,7,* reserved.
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,11,* are met:
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,19,*    distribution.
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,35,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,58,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,60,public class AbstractChild implements Child {
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,62,private String name;
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,64,protected void setName(String name)
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,66,this.name = name;
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,69,public String getName()
True,src/test/org/apache/commons/lang/reflect/AbstractChild.java,src/test/org/apache/commons/lang/reflect/AbstractChild.java,71,return name;
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,6,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,7,* reserved.
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,11,* are met:
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,19,*    distribution.
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,35,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,58,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,60,public abstract class AbstractParent {
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,62,private Child child;
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,64,public Child getChild()
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,66,return child;
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,70,* Method which matches signature but which has wrong parameters
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,72,public String testAddChild(String badParameter) {
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,73,return null;
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,77,* Method which matches signature but which has wrong parameters
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,79,"public String testAddChild2(String ignore, String badParameter) {"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,80,return null;
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,83,public String testAddChild(Child child) {
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,84,this.child = child;
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,85,return child.getName();
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,89,"public String testAddChild2(String ignore, Child child) {"
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,90,this.child = child;
True,src/test/org/apache/commons/lang/reflect/AbstractParent.java,src/test/org/apache/commons/lang/reflect/AbstractParent.java,91,return child.getName();
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,6,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,7,* reserved.
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,11,* are met:
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,19,*    distribution.
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,35,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,58,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,60,public class AlphaBean extends AbstractParent implements Child {
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,62,private String name;
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,64,public AlphaBean(String name) {
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,65,setName(name);
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,68,public String getName() {
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,69,return name;
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,72,public void setName(String name) {
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,73,this.name = name;
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,77,* Used for testing that correct exception is thrown.
True,src/test/org/apache/commons/lang/reflect/AlphaBean.java,src/test/org/apache/commons/lang/reflect/AlphaBean.java,79,public void bogus(String badParameter){}
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,6,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,7,* reserved.
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,11,* are met:
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,19,*    distribution.
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,35,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,58,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,60,public class BetaBean extends AbstractChild {
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,62,public BetaBean(String name) {
True,src/test/org/apache/commons/lang/reflect/BetaBean.java,src/test/org/apache/commons/lang/reflect/BetaBean.java,63,setName(name);
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,6,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,7,* reserved.
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,11,* are met:
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,19,*    distribution.
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,35,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,59,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,61,public interface Child {
True,src/test/org/apache/commons/lang/reflect/Child.java,src/test/org/apache/commons/lang/reflect/Child.java,63,public String getName();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,6,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,7,* reserved.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,11,* are met:
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,19,*    distribution.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,35,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,59,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,62,import java.lang.reflect.Method;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,63,import java.lang.reflect.Modifier;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,65,import org.apache.commons.lang.reflect.priv.PrivateBeanFactory;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,66,import org.apache.commons.lang.reflect.priv.PublicSubBean;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,68,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,69,import junit.framework.Test;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,70,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,74,* <p> Test case for <code>MethodUtils</code> </p>
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,77,public class MethodUtilsTestCase extends TestCase {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,79,// ---------------------------------------------------- Instance Variables
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,81,protected PrivateBeanFactory privateBeanFactory;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,83,// ---------------------------------------------------------- Constructors
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,86,* Construct a new instance of this test case.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,88,* @param name Name of the test case
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,90,public MethodUtilsTestCase(String name) {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,91,super(name);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,95,// -------------------------------------------------- Overall Test Methods
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,99,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,101,public void setUp() {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,102,privateBeanFactory = new PrivateBeanFactory();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,107,* Return the tests included in this test suite.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,109,public static Test suite() {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,110,return (new TestSuite(MethodUtilsTestCase.class));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,114,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,116,public void tearDown() {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,117,privateBeanFactory = null;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,121,// ------------------------------------------------ Individual Test Methods
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,124,* <p> Test <code>getAccessibleMethod</code>.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,126,public void testGetAccessibleMethod() {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,127,// test MethodUtils.getAccessibleMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,128,// we'll make things easier by using the convenience methods
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,130,// easy bit first - find a public method
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,131,// METHOD ONE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,132,Method method = MethodUtils.getAccessibleMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,133,"(TestBean.class, ""setStringProperty"", String.class);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,135,// check that we've found one that matches
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,136,assertNotNull(method);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,137,"assertEquals(""method ONE is named correctly"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,138,"""setStringProperty"", method.getName());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,139,"assertTrue(""Method ONE is public"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,140,Modifier.isPublic(method.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,142,// trickier this one - find a method in a direct interface
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,143,// METHOD TWO
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,144,method = MethodUtils.getAccessibleMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,145,"(privateBeanFactory.create().getClass(),"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,146,"""methodBar"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,147,String.class);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,149,// check that we've found one that matches
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,150,assertNotNull(method);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,151,"assertEquals(""Method TWO is named correctly"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,152,"""methodBar"", method.getName());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,153,"assertTrue(""Method TWO is public"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,154,Modifier.isPublic(method.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,156,// trickier this one - find a method in a indirect interface
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,157,// METHOD THREE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,158,method = MethodUtils.getAccessibleMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,159,"(privateBeanFactory.createSubclass().getClass(),"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,160,"""methodBaz"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,161,String.class);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,163,// check that we've found one that matches
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,164,assertNotNull(method);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,165,"assertEquals(""Method THREE is named correctly"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,166,"""methodBaz"", method.getName());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,167,"assertTrue(""Method THREE is public"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,168,Modifier.isPublic(method.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,174,* <p> Test <code>invokeExactMethod</code>.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,176,public void testInvokeExactMethod() {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,177,// test MethodUtils.invokeExactMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,178,// easy bit first - invoke a public method
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,179,// METHOD ONE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,180,try {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,182,TestBean bean = new TestBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,183,"Object ret = MethodUtils.invokeExactMethod(bean, ""setStringProperty"", ""TEST"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,184,// check that the return's right and that the properties been set
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,185,assertNull(ret);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,186,"assertEquals(""Method ONE was invoked"", ""TEST"", bean.getStringProperty());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,188,} catch (Throwable t) {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,189,// ONE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,190,"fail(""Exception in method ONE prevented invokation: "" + t.toString());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,193,// trickier this one - find a method in a direct interface
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,194,// METHOD TWO FAILURE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,195,try {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,197,Object ret = MethodUtils.invokeExactMethod(
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,198,"privateBeanFactory.create(),"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,199,"""methodBar"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,200,"""ANOTHER TEST"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,202,// check that we've found one that matches
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,203,"assertEquals(""Method TWO was invoked correctly"", ""ANOTHER TEST"", ret);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,205,} catch (Throwable t) {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,206,// METHOD TWO FAILURE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,207,"fail(""Exception in method TWO prevented invokation: "" + t.toString());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,211,// trickier this one - find a method in a indirect interface
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,212,// METHOD THREE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,213,try {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,215,Object ret = MethodUtils.invokeExactMethod(
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,216,"privateBeanFactory.createSubclass(),"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,217,"""methodBaz"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,218,"""YET ANOTHER TEST"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,221,// check that we've found one that matches
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,222,"assertEquals(""Method TWO was invoked correctly"", ""YET ANOTHER TEST"", ret);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,225,} catch (Throwable t) {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,226,// METHOD THREE FAILURE
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,227,"fail(""Exception in method THREE prevented invokation: "" + t.toString());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,233,* <p> Test <code>invokeMethod</code>.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,235,public void testInvokeMethod() throws Exception {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,236,// i'm going to test that the actual calls work first and then try them via reflection
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,238,"AbstractParent parent = new AlphaBean(""parent"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,240,// try testAddChild through abstract superclass
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,241,"BetaBean childOne = new BetaBean(""ChildOne"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,243,"assertEquals(""Oh no! Badly coded test case! (1)"", ""ChildOne"", parent.testAddChild(childOne));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,245,// let's try MethodUtils version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,246,assertEquals(
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,247,"""Cannot invoke through abstract class (1)"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,248,"""ChildOne"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,249,"MethodUtils.invokeMethod(parent, ""testAddChild"", childOne));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,252,// try adding through interface
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,253,"AlphaBean childTwo = new AlphaBean(""ChildTwo"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,255,"assertEquals(""Oh no! Badly coded test case! (2)"", ""ChildTwo"", parent.testAddChild(childTwo));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,257,// let's try MethodUtils version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,258,assertEquals(
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,259,"""Cannot invoke through interface (1)"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,260,"""ChildTwo"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,261,"MethodUtils.invokeMethod(parent, ""testAddChild"", childTwo));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,264,Object[] params = new Object[2];
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,266,"assertEquals(""Oh no! Badly coded test case! (3)"", ""ChildOne"", parent.testAddChild2(""parameter"", childOne));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,269,// let's try MethodUtils version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,270,"params[0] = ""parameter"";"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,271,params[1] = childOne;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,273,assertEquals(
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,274,"""Cannot invoke through abstract class (1)"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,275,"""ChildOne"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,276,"MethodUtils.invokeMethod(parent, ""testAddChild2"", params));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,278,"assertEquals(""Oh no! Badly coded test case! (4)"", ""ChildTwo"", parent.testAddChild2(""parameter"", childTwo));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,280,// let's try MethodUtils version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,281,"params[0] = ""parameter"";"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,282,params[1] = childTwo;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,284,assertEquals(
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,285,"""Cannot invoke through abstract class (1)"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,286,"""ChildTwo"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,287,"MethodUtils.invokeMethod(parent, ""testAddChild2"", params));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,289,// test that exception is correctly thrown when a method cannot be found with matching params
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,290,try {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,291,// the next line
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,292,"parent = new AlphaBean(""parent"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,293,"childOne = new BetaBean(""ChildOne"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,294,"MethodUtils.invokeMethod(parent, ""bogus"", childOne);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,295,// should get here!
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,296,"fail(""No exception thrown when no appropriate method exists"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,298,} catch (NoSuchMethodException e) {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,299,// this is what we're expecting!
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,302,"MethodUtils.invokeMethod(parent, ""getName"", null);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,303,"MethodUtils.invokeMethod(parent, ""getName"", null, null);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,304,"MethodUtils.invokeExactMethod(parent, ""getName"", null);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,305,"MethodUtils.invokeExactMethod(parent, ""getName"", null, null);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,310,* <p> Test <code>invokeMethod</code> with a primitive.
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,312,public void testInvokeMethodWithPrimitives() throws Exception {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,313,// first test that the bean works
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,314,PrimitiveBean bean = new PrimitiveBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,315,bean.setFloat(20.0f);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,316,bean.setLong(10l);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,317,bean.setBoolean(true);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,318,bean.setInt(12);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,319,bean.setDouble(25.5d);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,321,"assertEquals(""Bug in PrimitiveBean (1)"", 20.0f, bean.getFloat(), 0.01f);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,322,"assertEquals(""Bug in PrimitiveBean (2)"", 10, bean.getLong());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,323,"assertEquals(""Bug in PrimitiveBean (3)"", true, bean.getBoolean());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,324,"assertEquals(""Bug in PrimitiveBean (4)"", 12, bean.getInt());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,325,"assertEquals(""Bug in PrimitiveBean (5)"", 25.5d, bean.getDouble(), 0.01f);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,327,bean = new PrimitiveBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,328,"MethodUtils.invokeMethod(bean, ""setBoolean"", new Boolean(true));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,329,"assertEquals(""Call boolean property using invokeMethod"", true, bean.getBoolean());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,331,bean = new PrimitiveBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,332,"MethodUtils.invokeMethod(bean, ""setFloat"", new Float(20.0f));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,333,"assertEquals(""Call float property using invokeMethod"", 20.0f, bean.getFloat(), 0.01f);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,335,bean = new PrimitiveBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,336,"MethodUtils.invokeMethod(bean, ""setLong"", new Long(10));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,337,"assertEquals(""Call float property using invokeMethod"", 10, bean.getLong());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,339,bean = new PrimitiveBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,340,"MethodUtils.invokeMethod(bean, ""setInt"", new Integer(12));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,341,"assertEquals(""Set float property using invokeMethod"", 12, bean.getInt());"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,343,bean = new PrimitiveBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,344,"MethodUtils.invokeMethod(bean, ""setDouble"", new Double(25.5d));"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,345,"assertEquals(""Set float property using invokeMethod"", 25.5d, bean.getDouble(), 0.01d);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,350,* Simple tests for accessing static methods via invokeMethod().
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,352,public void testSimpleStatic1() {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,354,TestBean bean = new TestBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,355,Object value = null;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,356,int current = TestBean.currentCounter();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,358,try {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,360,// Return initial value of the counter
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,361,value = MethodUtils.invokeMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,362,"(bean, ""currentCounter"", new Object[0], new Class[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,363,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,364,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,365,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,366,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,367,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,368,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,370,// Increment via no-arguments version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,371,MethodUtils.invokeMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,372,"(bean, ""incrementCounter"", new Object[0], new Class[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,374,// Validate updated value
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,375,current++;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,376,value = MethodUtils.invokeMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,377,"(bean, ""currentCounter"", new Object[0], new Class[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,378,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,379,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,380,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,381,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,382,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,383,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,385,// Increment via specified-argument version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,386,MethodUtils.invokeMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,387,"(bean, ""incrementCounter"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,388,"new Object[] { new Integer(5) },"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,389,new Class[] { Integer.TYPE });
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,391,// Validate updated value
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,392,current += 5;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,393,value = MethodUtils.invokeMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,394,"(bean, ""currentCounter"", new Object[0], new Class[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,395,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,396,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,397,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,398,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,399,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,400,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,402,} catch (Exception e) {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,403,"fail(""Threw exception"" + e);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,410,* Simple tests for accessing static methods via invokeExactMethod().
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,412,public void testSimpleStatic2() {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,414,TestBean bean = new TestBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,415,Object value = null;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,416,int current = TestBean.currentCounter();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,418,try {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,420,// Return initial value of the counter
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,421,value = MethodUtils.invokeExactMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,422,"(bean, ""currentCounter"", new Object[0], new Class[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,423,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,424,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,425,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,426,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,427,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,428,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,430,// Increment via no-arguments version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,431,MethodUtils.invokeExactMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,432,"(bean, ""incrementCounter"", new Object[0], new Class[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,434,// Validate updated value
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,435,current++;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,436,value = MethodUtils.invokeExactMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,437,"(bean, ""currentCounter"", new Object[0], new Class[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,438,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,439,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,440,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,441,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,442,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,443,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,445,// Increment via specified-argument version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,446,MethodUtils.invokeExactMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,447,"(bean, ""incrementCounter"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,448,"new Object[] { new Integer(5) },"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,449,new Class[] { Integer.TYPE });
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,451,// Validate updated value
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,452,current += 5;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,453,value = MethodUtils.invokeExactMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,454,"(bean, ""currentCounter"", new Object[0], new Class[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,455,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,456,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,457,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,458,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,459,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,460,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,463,} catch (Exception e) {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,464,"fail(""Threw exception"" + e);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,471,* Simple tests for accessing static methods via getAccessibleMethod()
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,473,public void testSimpleStatic3() {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,475,Object value = null;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,476,int current = TestBean.currentCounter();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,478,try {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,480,// Acquire the methods we need
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,481,Method currentCounterMethod = MethodUtils.getAccessibleMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,482,"(TestBean.class, ""currentCounter"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,483,new Class[0]);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,484,"assertNotNull(""currentCounterMethod exists"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,485,currentCounterMethod);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,486,"assertEquals(""currentCounterMethod name"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,487,"""currentCounter"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,488,currentCounterMethod.getName());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,489,"assertEquals(""currentCounterMethod args"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,490,"0,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,491,currentCounterMethod.getParameterTypes().length);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,492,"assertTrue(""currentCounterMethod public"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,493,Modifier.isPublic(currentCounterMethod.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,494,"assertTrue(""currentCounterMethod static"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,495,Modifier.isStatic(currentCounterMethod.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,496,Method incrementCounterMethod1 = MethodUtils.getAccessibleMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,497,"(TestBean.class, ""incrementCounter"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,498,new Class[0]);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,499,"assertNotNull(""incrementCounterMethod1 exists"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,500,incrementCounterMethod1);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,501,"assertEquals(""incrementCounterMethod1 name"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,502,"""incrementCounter"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,503,incrementCounterMethod1.getName());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,504,"assertEquals(""incrementCounterMethod1 args"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,505,"0,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,506,incrementCounterMethod1.getParameterTypes().length);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,507,"assertTrue(""incrementCounterMethod1 public"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,508,Modifier.isPublic(incrementCounterMethod1.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,509,"assertTrue(""incrementCounterMethod1 static"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,510,Modifier.isStatic(incrementCounterMethod1.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,511,Method incrementCounterMethod2 = MethodUtils.getAccessibleMethod
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,512,"(TestBean.class, ""incrementCounter"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,513,new Class[] { Integer.TYPE });
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,514,"assertNotNull(""incrementCounterMethod2 exists"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,515,incrementCounterMethod2);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,516,"assertEquals(""incrementCounterMethod2 name"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,517,"""incrementCounter"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,518,incrementCounterMethod2.getName());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,519,"assertEquals(""incrementCounterMethod2 args"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,520,"1,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,521,incrementCounterMethod2.getParameterTypes().length);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,522,"assertTrue(""incrementCounterMethod2 public"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,523,Modifier.isPublic(incrementCounterMethod2.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,524,"assertTrue(""incrementCounterMethod2 static"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,525,Modifier.isStatic(incrementCounterMethod2.getModifiers()));
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,527,// Return initial value of the counter
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,528,"value = currentCounterMethod.invoke(null, new Object[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,529,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,530,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,531,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,532,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,533,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,534,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,536,// Increment via no-arguments version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,537,"incrementCounterMethod1.invoke(null, new Object[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,539,// Validate updated value
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,540,current++;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,541,"value = currentCounterMethod.invoke(null, new Object[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,542,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,543,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,544,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,545,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,546,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,547,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,549,// Increment via specified-argument version
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,550,"incrementCounterMethod2.invoke(null,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,551,new Object[] { new Integer(5) });
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,553,// Validate updated value
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,554,current += 5;
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,555,"value = currentCounterMethod.invoke(null, new Object[0]);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,556,"assertNotNull(""currentCounter exists"", value);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,557,"assertTrue(""currentCounter type"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,558,value instanceof Integer);
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,559,"assertEquals(""currentCounter value"","
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,560,"current,"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,561,((Integer) value).intValue());
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,563,} catch (Exception e) {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,564,"fail(""Threw exception"" + e);"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,569,public void testPublicSub() throws Exception {
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,570,// make sure that bean does what it should
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,571,PublicSubBean bean = new PublicSubBean();
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,572,"assertEquals(""Start value (foo)"", bean.getFoo(), ""This is foo"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,573,"assertEquals(""Start value (bar)"", bean.getBar(), ""This is bar"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,574,"bean.setFoo(""new foo"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,575,"bean.setBar(""new bar"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,576,"assertEquals(""Set value (foo)"", bean.getFoo(), ""new foo"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,577,"assertEquals(""Set value (bar)"", bean.getBar(), ""new bar"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,579,// see if we can access public methods in a default access superclass
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,580,// from a public access subclass instance
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,581,"MethodUtils.invokeMethod(bean, ""setFoo"", ""alpha"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,582,"assertEquals(""Set value (foo:2)"", bean.getFoo(), ""alpha"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,583,"MethodUtils.invokeMethod(bean, ""setBar"", ""beta"");"
True,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,src/test/org/apache/commons/lang/reflect/MethodUtilsTestCase.java,584,"assertEquals(""Set value (bar:2)"", bean.getFoo(), ""alpha"");"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,6,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,7,* reserved.
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,11,* are met:
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,19,*    distribution.
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,35,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,58,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,61,* Bean that has primitive properties
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,63,public class PrimitiveBean {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,65,private float _float;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,66,private double _double;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,67,private boolean _boolean;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,68,private long _long;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,69,private int _int;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,71,public float getFloat() {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,72,return _float;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,75,public void setFloat(float _float) {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,76,this._float = _float;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,79,public double getDouble() {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,80,return _double;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,83,public void setDouble(double _double) {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,84,this._double = _double;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,87,public boolean getBoolean() {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,88,return _boolean;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,91,public void setBoolean(boolean _boolean) {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,92,this._boolean = _boolean;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,95,public long getLong() {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,96,return _long;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,99,public void setLong(long _long) {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,100,this._long = _long;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,103,public int getInt() {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,104,return _int;
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,107,public void setInt(int _int) {
True,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,src/test/org/apache/commons/lang/reflect/PrimitiveBean.java,108,this._int = _int;
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,5,* reserved.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,9,* are met:
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,17,*    distribution.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,54,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,62,* Test suite for the Reflect packages.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a> (of original copied from)"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,65,* @author Robert Burrell Donkin
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,66,"* @version $Id: ReflectTestSuite.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,68,public class ReflectTestSuite extends TestCase {
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,71,* Construct a new instance.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,73,public ReflectTestSuite(String name) {
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,74,super(name);
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,78,* Executor-line interface.
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,80,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,81,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,85,* Get the suite of tests
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,87,public static Test suite() {
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,88,TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,89,suite.addTest(MethodUtilsTestCase.suite());
True,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,src/test/org/apache/commons/lang/reflect/ReflectTestSuite.java,90,return suite;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/reflect/Attic/TestBean.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,4,* $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,10,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,11,* reserved.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,15,* are met:
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,23,*    distribution.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,63,package org.apache.commons.lang.reflect;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,66,import java.util.ArrayList;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,67,import java.util.HashMap;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,68,import java.util.List;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,69,import java.util.Map;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,73,"* General purpose test bean for JUnit tests for the ""beanutils"" component."
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,75,* @author Craig R. McClanahan
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,76,* @version $Revision: 1.1 $ $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,79,public class TestBean {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,82,// ------------------------------------------------------------- Properties
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,86,* A boolean property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,88,private boolean booleanProperty = true;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,90,public boolean getBooleanProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,91,return (booleanProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,94,public void setBooleanProperty(boolean booleanProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,95,this.booleanProperty = booleanProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,100,"* A boolean property that uses an ""is"" method for the getter."
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,102,private boolean booleanSecond = true;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,104,public boolean isBooleanSecond() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,105,return (booleanSecond);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,108,public void setBooleanSecond(boolean booleanSecond) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,109,this.booleanSecond = booleanSecond;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,114,* A double property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,116,private double doubleProperty = 321.0;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,118,public double getDoubleProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,119,return (this.doubleProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,122,public void setDoubleProperty(double doubleProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,123,this.doubleProperty = doubleProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,128,"* An ""indexed property"" accessible via both array and subscript"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,129,* based getters and setters.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,131,private String dupProperty[] =
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,132,"{ ""Dup 0"", ""Dup 1"", ""Dup 2"", ""Dup 3"", ""Dup 4"" };"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,134,public String[] getDupProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,135,return (this.dupProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,138,public String getDupProperty(int index) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,139,return (this.dupProperty[index]);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,142,"public void setDupProperty(int index, String value) {"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,143,this.dupProperty[index] = value;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,146,public void setDupProperty(String dupProperty[]) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,147,this.dupProperty = dupProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,152,* A float property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,154,private float floatProperty = (float) 123.0;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,156,public float getFloatProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,157,return (this.floatProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,160,public void setFloatProperty(float floatProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,161,this.floatProperty = floatProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,166,* An integer array property accessed as an array.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,168,"private int intArray[] = { 0, 10, 20, 30, 40 };"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,170,public int[] getIntArray() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,171,return (this.intArray);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,174,public void setIntArray(int intArray[]) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,175,this.intArray = intArray;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,180,* An integer array property accessed as an indexed property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,182,"private int intIndexed[] = { 0, 10, 20, 30, 40 };"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,184,public int getIntIndexed(int index) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,185,return (intIndexed[index]);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,188,"public void setIntIndexed(int index, int value) {"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,189,intIndexed[index] = value;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,194,* An integer property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,196,private int intProperty = 123;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,198,public int getIntProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,199,return (this.intProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,202,public void setIntProperty(int intProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,203,this.intProperty = intProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,208,* A List property accessed as an indexed property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,210,private static List listIndexed = new ArrayList();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,212,static {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,213,"listIndexed.add(""String 0"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,214,"listIndexed.add(""String 1"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,215,"listIndexed.add(""String 2"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,216,"listIndexed.add(""String 3"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,217,"listIndexed.add(""String 4"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,220,public List getListIndexed() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,221,return (listIndexed);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,226,* A long property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,228,private long longProperty = 321;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,230,public long getLongProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,231,return (this.longProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,234,public void setLongProperty(long longProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,235,this.longProperty = longProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,240,* A mapped property with only a getter and setter for a Map.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,242,private Map mapProperty = null;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,244,public Map getMapProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,245,// Create the map the very first time
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,246,if (mapProperty == null) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,247,mapProperty = new HashMap();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,248,"mapProperty.put(""First Key"", ""First Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,249,"mapProperty.put(""Second Key"", ""Second Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,251,return (mapProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,254,public void setMapProperty(Map mapProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,255,// Create the map the very first time
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,256,if (mapProperty == null) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,257,mapProperty = new HashMap();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,258,"mapProperty.put(""First Key"", ""First Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,259,"mapProperty.put(""Second Key"", ""Second Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,261,this.mapProperty = mapProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,266,* A mapped property that has String keys and Object values.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,268,private HashMap mappedObjects = null;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,270,public Object getMappedObjects(String key) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,271,// Create the map the very first time
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,272,if (mappedObjects == null) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,273,mappedObjects = new HashMap();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,274,"mappedObjects.put(""First Key"", ""First Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,275,"mappedObjects.put(""Second Key"", ""Second Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,277,return (mappedObjects.get(key));
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,280,"public void setMappedObjects(String key, Object value) {"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,281,// Create the map the very first time
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,282,if (mappedObjects == null) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,283,mappedObjects = new HashMap();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,284,"mappedObjects.put(""First Key"", ""First Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,285,"mappedObjects.put(""Second Key"", ""Second Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,287,"mappedObjects.put(key, value);"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,292,* A mapped property that has String keys and String values.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,294,private HashMap mappedProperty = null;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,296,public String getMappedProperty(String key) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,297,// Create the map the very first time
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,298,if (mappedProperty == null) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,299,mappedProperty = new HashMap();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,300,"mappedProperty.put(""First Key"", ""First Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,301,"mappedProperty.put(""Second Key"", ""Second Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,303,return ((String) mappedProperty.get(key));
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,306,"public void setMappedProperty(String key, String value) {"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,307,// Create the map the very first time
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,308,if (mappedProperty == null) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,309,mappedProperty = new HashMap();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,310,"mappedProperty.put(""First Key"", ""First Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,311,"mappedProperty.put(""Second Key"", ""Second Value"");"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,313,"mappedProperty.put(key, value);"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,318,* A mapped property that has String keys and int values.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,320,private HashMap mappedIntProperty = null;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,322,public int getMappedIntProperty(String key) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,323,// Create the map the very first time
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,324,if (mappedProperty == null) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,325,mappedProperty = new HashMap();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,326,"mappedProperty.put(""One"", new Integer(1));"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,327,"mappedProperty.put(""Two"", new Integer(2));"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,329,Integer x = (Integer) mappedIntProperty.get(key);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,330,return ((x == null) ? 0 : x.intValue());
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,333,"public void setMappedIntProperty(String key, int value) {"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,334,"mappedIntProperty.put(key, new Integer(value));"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,339,* A nested reference to another test bean (populated as needed).
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,341,private TestBean nested = null;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,343,public TestBean getNested() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,344,if (nested == null)
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,345,nested = new TestBean();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,346,return (nested);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,351,* Another nested reference to a bean containing mapp properties
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,353,class MappedTestBean {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,354,"public void setValue(String key,String val) { }"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,355,"public String getValue(String key) { return ""Mapped Value""; }"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,358,private MappedTestBean mappedNested = null;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,360,public MappedTestBean getMappedNested() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,361,if (mappedNested == null)
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,363,mappedNested = new MappedTestBean();
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,365,return mappedNested;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,369,* A String property with an initial value of null.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,371,private String nullProperty = null;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,373,public String getNullProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,374,return (this.nullProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,377,public void setNullProperty(String nullProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,378,this.nullProperty = nullProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,383,* A read-only String property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,385,"private String readOnlyProperty = ""Read Only String Property"";"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,387,public String getReadOnlyProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,388,return (this.readOnlyProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,393,* A short property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,395,private short shortProperty = (short) 987;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,397,public short getShortProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,398,return (this.shortProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,401,public void setShortProperty(short shortProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,402,this.shortProperty = shortProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,407,* A String array property accessed as a String.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,409,private String stringArray[] =
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,410,"{ ""String 0"", ""String 1"", ""String 2"", ""String 3"", ""String 4"" };"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,412,public String[] getStringArray() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,413,return (this.stringArray);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,416,public void setStringArray(String stringArray[]) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,417,this.stringArray = stringArray;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,422,* A String array property accessed as an indexed property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,424,private String stringIndexed[] =
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,425,"{ ""String 0"", ""String 1"", ""String 2"", ""String 3"", ""String 4"" };"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,427,public String getStringIndexed(int index) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,428,return (stringIndexed[index]);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,431,"public void setStringIndexed(int index, String value) {"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,432,stringIndexed[index] = value;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,437,* A String property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,439,"private String stringProperty = ""This is a string"";"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,441,public String getStringProperty() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,442,return (this.stringProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,445,public void setStringProperty(String stringProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,446,this.stringProperty = stringProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,451,* A write-only String property.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,453,"private String writeOnlyProperty = ""Write Only String Property"";"
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,455,public String getWriteOnlyPropertyValue() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,456,return (this.writeOnlyProperty);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,459,public void setWriteOnlyProperty(String writeOnlyProperty) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,460,this.writeOnlyProperty = writeOnlyProperty;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,464,// ------------------------------------------------------- Static Variables
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,468,* A static variable that is accessed and updated via static methods
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,469,* for MethodUtils testing.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,471,private static int counter = 0;
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,475,* Return the current value of the counter.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,477,public static int currentCounter() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,479,return (counter);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,485,* Increment the current value of the counter by 1.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,487,public static void incrementCounter() {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,489,incrementCounter(1);
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,495,* Increment the current value of the counter by the specified amount.
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,497,* @param amount Amount to be added to the current counter
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,499,public static void incrementCounter(int amount) {
True,src/test/org/apache/commons/lang/reflect/TestBean.java,src/test/org/apache/commons/lang/reflect/TestBean.java,501,counter += amount;
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/reflect/priv/Attic/PackageBean.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,4,* $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,10,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,11,* reserved.
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,15,* are met:
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,23,*    distribution.
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,63,package org.apache.commons.lang.reflect.priv;
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,67,* <p>This class is designed to test the default access jvm problem workaround.
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,68,* The issue is that public methods of a public subclass contained in a default access
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,69,* superclass are returned by reflection but an IllegalAccessException is thrown
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,70,* when they are invoked.</p>
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,72,* <p>This is the default access superclass</p>
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,74,* @author Robert Burrell Donkin
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,75,* @version $Revision: 1.1 $ $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,78,class PackageBean {
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,81,// ----------------------------------------------------------- Constructors
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,85,* Package private constructor - can only use factory method to create
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,86,* beans.
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,88,PackageBean() {
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,90,super();
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,95,// ------------------------------------------------------------- Properties
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,100,"private String bar = ""This is bar"";"
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,102,public String getBar() {
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,104,return (this.bar);
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,108,public void setBar(String bar) {
True,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,src/test/org/apache/commons/lang/reflect/priv/PackageBean.java,110,this.bar = bar;
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/reflect/priv/Attic/PrivateBean.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,4,* $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,10,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,11,* reserved.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,15,* are met:
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,23,*    distribution.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,63,package org.apache.commons.lang.reflect.priv;
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,67,* Bean that has a private constructor that exposes properties via
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,68,* various mechanisms (based on property name):
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,69,* <ul>
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,70,* <li><strong>foo</strong> - Via direct public method
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,71,* <li><strong>bar</strong> - Via directly implemented interface
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,72,* <li><strong>baz</strong> - Via indirectly implemented interface
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,73,* </ul>
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,75,* @author Craig R. McClanahan
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,76,* @version $Revision: 1.1 $ $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,79,class PrivateBean implements PrivateDirect {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,82,// ----------------------------------------------------------- Constructors
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,86,* Package private constructor - can only use factory method to create
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,87,* beans.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,89,PrivateBean() {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,91,super();
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,96,// ------------------------------------------------------------- Properties
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,100,* A directly implemented property.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,102,"private String foo = ""This is foo"";"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,104,public String getFoo() {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,106,return (this.foo);
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,112,* A property accessible via a directly implemented interface.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,114,"private String bar = ""This is bar"";"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,116,public String getBar() {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,118,return (this.bar);
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,124,* A method accessible via a directly implemented interface.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,126,public String methodBar(String in) {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,128,return (in);
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,134,* A property accessible via an indirectly implemented interface.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,136,"private String baz = ""This is baz"";"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,138,public String getBaz() {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,140,return (this.baz);
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,146,* A method accessible via an indirectly implemented interface.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,148,public String methodBaz(String in) {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBean.java,150,return (in);
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/reflect/priv/Attic/PrivateBeanFactory.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,4,* $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,10,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,11,* reserved.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,15,* are met:
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,23,*    distribution.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,63,package org.apache.commons.lang.reflect.priv;
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,67,* Factory class for PrivateBean instances.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,69,* @author Craig R. McClanahan
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,70,* @author Jan Sorensen
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,71,* @version $Revision: 1.1 $ $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,74,public class PrivateBeanFactory {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,78,* Factory method to create new beans.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,80,public static PrivateDirect create() {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,82,return (new PrivateBean());
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,88,* Factory method to create new beans.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,90,public static PrivateDirect createSubclass() {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanFactory.java,92,return (new PrivateBeanSubclass());
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/reflect/priv/Attic/PrivateBeanSubclass.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,4,* $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,10,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,11,* reserved.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,15,* are met:
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,23,*    distribution.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,63,package org.apache.commons.lang.reflect.priv;
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,67,* Bean that exposes methods defined by an interface that is implemented
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,68,* in the superclass.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,70,* @author Jan Sorensen
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,71,* @version $Revision: 1.1 $ $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,74,class PrivateBeanSubclass extends PrivateBean {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,77,// ----------------------------------------------------------- Constructors
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,81,* Create a new PrivateBeanSubclass instance.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,83,PrivateBeanSubclass() {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,85,super();
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,90,// ------------------------------------------------------------- Properties
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,94,* A property accessible via the superclass.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,96,public String getBar() {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,src/test/org/apache/commons/lang/reflect/priv/PrivateBeanSubclass.java,98,return (super.getBar());
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/reflect/priv/Attic/PrivateDirect.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,4,* $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,10,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,11,* reserved.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,15,* are met:
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,23,*    distribution.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,63,package org.apache.commons.lang.reflect.priv;
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,67,* Interface that is directly implemented by PrivateBean.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,69,* @author Craig R. McClanahan
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,70,* @version $Revision: 1.1 $ $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,73,public interface PrivateDirect extends PrivateIndirect {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,76,// ------------------------------------------------------------- Properties
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,80,* A property accessible via a directly implemented interface.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,82,String getBar();
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,86,* A method accessible via a directly implemented interface.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateDirect.java,88,String methodBar(String in);
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/reflect/priv/Attic/PrivateIndirect.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,4,* $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,10,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,11,* reserved.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,15,* are met:
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,23,*    distribution.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,63,package org.apache.commons.lang.reflect.priv;
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,67,* Interface that is indirectly implemented by PrivateBean.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,69,* @author Craig R. McClanahan
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,70,* @version $Revision: 1.1 $ $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,73,public interface PrivateIndirect {
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,76,// ------------------------------------------------------------- Properties
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,80,* A property accessible via an indirectly implemented interface.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,82,public String getBaz();
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,86,* A method accessible via an indirectly implemented interface.
True,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,src/test/org/apache/commons/lang/reflect/priv/PrivateIndirect.java,88,public String methodBaz(String in);
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/reflect/priv/Attic/PublicSubBean.java,v 1.1 2002/11/14 18:53:36 rdonkin Exp $"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,4,* $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,10,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,11,* reserved.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,15,* are met:
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,23,*    distribution.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,63,package org.apache.commons.lang.reflect.priv;
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,67,* <p>This class is designed to test the default access jvm problem workaround.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,68,* The issue is that public methods of a public subclass contained in a default access
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,69,* superclass are returned by reflection but an IllegalAccessException is thrown
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,70,* when they are invoked.</p>
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,72,* <p>This is the default access superclass</p>
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,74,* @author Robert Burrell Donkin
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,75,* @version $Revision: 1.1 $ $Date: 2002/11/14 18:53:36 $
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,78,public class PublicSubBean extends PackageBean {
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,81,// ----------------------------------------------------------- Constructors
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,85,* Package private constructor - can only use factory method to create
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,86,* beans.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,88,public PublicSubBean() {
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,90,super();
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,95,// ------------------------------------------------------------- Properties
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,99,* A directly implemented property.
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,101,"private String foo = ""This is foo"";"
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,103,public String getFoo() {
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,105,return (this.foo);
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,109,public void setFoo(String foo) {
True,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,src/test/org/apache/commons/lang/reflect/priv/PublicSubBean.java,111,this.foo = foo;
