is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,35,*  <li><b>startsWith</b>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,36,*      - check if a String starts with a prefix null-safe</li>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,37,*  <li><b>endsWith</b>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,38,*      - check if a String ends with a suffix null-safe</li>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2989,"* <p>Case insensitive removal of a substring if it is at the begining of a source string,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2990,* otherwise returns the source string.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2992,* <p>A <code>null</code> source string will return <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2993,"* An empty ("""") source string will return the empty string."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2994,* A <code>null</code> search string will return the source string.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2996,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2997,"* StringUtils.removeStartIgnoreCase(null, *)      = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2998,"* StringUtils.removeStartIgnoreCase("""", *)        = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2999,"* StringUtils.removeStartIgnoreCase(*, null)      = *"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3000,"* StringUtils.removeStartIgnoreCase(""www.domain.com"", ""www."")   = ""domain.com"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3001,"* StringUtils.removeStartIgnoreCase(""www.domain.com"", ""WWW."")   = ""domain.com"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3002,"* StringUtils.removeStartIgnoreCase(""domain.com"", ""www."")       = ""domain.com"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3003,"* StringUtils.removeStartIgnoreCase(""www.domain.com"", ""domain"") = ""www.domain.com"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3004,"* StringUtils.removeStartIgnoreCase(""abc"", """")    = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3005,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3007,"* @param str  the source String to search, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3008,"* @param remove  the String to search for (case insensitive) and remove, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3009,"* @return the substring with the string removed if found,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3010,*  <code>null</code> if null String input
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3011,* @since 2.4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3013,"public static String removeStartIgnoreCase(String str, String remove) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3014,if (isEmpty(str) || isEmpty(remove)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3015,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3017,"if (startsWithIgnoreCase(str, remove)){"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3018,return str.substring(remove.length());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3020,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3058,"* <p>Case insensitive removal of a substring if it is at the end of a source string,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3059,* otherwise returns the source string.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3061,* <p>A <code>null</code> source string will return <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3062,"* An empty ("""") source string will return the empty string."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3063,* A <code>null</code> search string will return the source string.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3065,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3066,"* StringUtils.removeEnd(null, *)      = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3067,"* StringUtils.removeEnd("""", *)        = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3068,"* StringUtils.removeEnd(*, null)      = *"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3069,"* StringUtils.removeEnd(""www.domain.com"", "".com."")  = ""www.domain.com."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3070,"* StringUtils.removeEnd(""www.domain.com"", "".com"")   = ""www.domain"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3071,"* StringUtils.removeEnd(""www.domain.com"", ""domain"") = ""www.domain.com"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3072,"* StringUtils.removeEnd(""abc"", """")    = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3073,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3075,"* @param str  the source String to search, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3076,"* @param remove  the String to search for (case insensitive) and remove, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3077,"* @return the substring with the string removed if found,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3078,*  <code>null</code> if null String input
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3079,* @since 2.4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3081,"public static String removeEndIgnoreCase(String str, String remove) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3082,if (isEmpty(str) || isEmpty(remove)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3083,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3085,"if (endsWithIgnoreCase(str, remove)) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3086,"return str.substring(0, str.length() - remove.length());"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3088,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5135,// startsWith
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5139,* <p>Check if a String starts with a specified prefix.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5141,* <p><code>null</code>s are handled without exceptions. Two <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5142,* references are considered to be equal. The comparison is case sensitive.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5144,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5145,"* StringUtils.startsWith(null, null)      = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5146,"* StringUtils.startsWith(null, ""abcdef"")  = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5147,"* StringUtils.startsWith(""abc"", null)     = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5148,"* StringUtils.startsWith(""abc"", ""abcdef"") = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5149,"* StringUtils.startsWith(""abc"", ""ABCDEF"") = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5150,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5152,* @see java.lang.String#startsWith(String)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5153,"* @param str  the String to check, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5154,"* @param prefix the prefix to find, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5155,"* @return <code>true</code> if the String starts with the prefix, case sensitive, or"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5156,*  both <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5157,* @since 2.4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5159,"public static boolean startsWith(String str, String prefix) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5160,"return startsWith(str, prefix, false);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5164,* <p>Case insensitive check if a String starts with a specified prefix.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5166,* <p><code>null</code>s are handled without exceptions. Two <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5167,* references are considered to be equal. The comparison is case insensitive.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5169,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5170,"* StringUtils.startsWithIgnoreCase(null, null)      = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5171,"* StringUtils.startsWithIgnoreCase(null, ""abcdef"")  = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5172,"* StringUtils.startsWithIgnoreCase(""abc"", null)     = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5173,"* StringUtils.startsWithIgnoreCase(""abc"", ""abcdef"") = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5174,"* StringUtils.startsWithIgnoreCase(""abc"", ""ABCDEF"") = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5175,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5177,* @see java.lang.String#startsWith(String)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5178,"* @param str  the String to check, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5179,"* @param prefix the prefix to find, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5180,"* @return <code>true</code> if the String starts with the prefix, case insensitive, or"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5181,*  both <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5182,* @since 2.4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5184,"public static boolean startsWithIgnoreCase(String str, String prefix) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5185,"return startsWith(str, prefix, true);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5189,* <p>Check if a String starts with a specified prefix (optionally case insensitive).</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5191,* @see java.lang.String#startsWith(String)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5192,"* @param str  the String to check, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5193,"* @param prefix the prefix to find, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5194,* @param ignoreCase inidicates whether the compare should ignore case
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5195,*  (case insensitive) or not.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5196,* @return <code>true</code> if the String starts with the prefix or
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5197,*  both <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5199,"private static boolean startsWith(String str, String prefix, boolean ignoreCase) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5200,if (str == null || prefix == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5201,return (str == null && prefix == null);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5203,if (prefix.length() > str.length()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5204,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5206,"return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5209,// endsWith
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5213,* <p>Check if a String ends with a specified suffix.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5215,* <p><code>null</code>s are handled without exceptions. Two <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5216,* references are considered to be equal. The comparison is case sensitive.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5218,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5219,"* StringUtils.endsWith(null, null)      = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5220,"* StringUtils.endsWith(null, ""abcdef"")  = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5221,"* StringUtils.endsWith(""def"", null)     = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5222,"* StringUtils.endsWith(""def"", ""abcdef"") = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5223,"* StringUtils.endsWith(""def"", ""ABCDEF"") = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5224,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5226,* @see java.lang.String#endsWith(String)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5227,"* @param str  the String to check, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5228,"* @param suffix the suffix to find, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5229,"* @return <code>true</code> if the String ends with the suffix, case sensitive, or"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5230,*  both <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5231,* @since 2.4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5233,"public static boolean endsWith(String str, String suffix) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5234,"return endsWith(str, suffix, false);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5238,* <p>Case insensitive check if a String ends with a specified suffix.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5240,* <p><code>null</code>s are handled without exceptions. Two <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5241,* references are considered to be equal. The comparison is case insensitive.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5243,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5244,"* StringUtils.endsWithIgnoreCase(null, null)      = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5245,"* StringUtils.endsWithIgnoreCase(null, ""abcdef"")  = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5246,"* StringUtils.endsWithIgnoreCase(""def"", null)     = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5247,"* StringUtils.endsWithIgnoreCase(""def"", ""abcdef"") = true"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5248,"* StringUtils.endsWithIgnoreCase(""def"", ""ABCDEF"") = false"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5249,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5251,* @see java.lang.String#endsWith(String)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5252,"* @param str  the String to check, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5253,"* @param suffix the suffix to find, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5254,"* @return <code>true</code> if the String ends with the suffix, case insensitive, or"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5255,*  both <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5256,* @since 2.4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5258,"public static boolean endsWithIgnoreCase(String str, String suffix) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5259,"return endsWith(str, suffix, true);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5263,* <p>Check if a String ends with a specified suffix (optionally case insensitive).</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5265,* @see java.lang.String#endsWith(String)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5266,"* @param str  the String to check, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5267,"* @param suffix the suffix to find, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5268,* @param ignoreCase inidicates whether the compare should ignore case
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5269,*  (case insensitive) or not.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5270,* @return <code>true</code> if the String starts with the prefix or
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5271,*  both <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5273,"private static boolean endsWith(String str, String suffix, boolean ignoreCase) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5274,if (str == null || suffix == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5275,return (str == null && suffix == null);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5277,if (suffix.length() > str.length()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5278,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5280,int strOffset = str.length() - suffix.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5281,"return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,82,suite.addTest(StringUtilsStartsEndsWithTest.suite());
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,17,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,19,import junit.framework.Test;
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,21,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,22,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,25,* Unit tests {@link org.apache.commons.lang.StringUtils} - StartsWith/EndsWith methods
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,27,* @version $Id$
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,29,public class StringUtilsStartsEndsWithTest extends TestCase {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,30,"private static final String foo    = ""foo"";"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,31,"private static final String bar    = ""bar"";"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,32,"private static final String foobar = ""foobar"";"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,33,"private static final String FOO    = ""FOO"";"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,34,"private static final String BAR    = ""BAR"";"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,35,"private static final String FOOBAR = ""FOOBAR"";"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,37,public StringUtilsStartsEndsWithTest(String name) {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,38,super(name);
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,41,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,42,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,45,public static Test suite() {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,46,TestSuite suite = new TestSuite(StringUtilsStartsEndsWithTest.class);
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,47,"suite.setName(""StringUtilsStartsEndsWith Tests"");"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,48,return suite;
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,51,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,52,super.setUp();
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,55,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,56,super.tearDown();
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,62,* Test StringUtils.startsWith()
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,64,public void testStartsWith() {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,65,"assertTrue(""startsWith(null, null)"", StringUtils.startsWith(null, (String)null));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,66,"assertFalse(""startsWith(FOOBAR, null)"", StringUtils.startsWith(FOOBAR, (String)null));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,67,"assertFalse(""startsWith(null, FOO)"",    StringUtils.startsWith(null, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,68,"assertTrue(""startsWith(FOOBAR, \""\"")"",  StringUtils.startsWith(FOOBAR, """"));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,70,"assertTrue(""startsWith(foobar, foo)"",  StringUtils.startsWith(foobar, foo));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,71,"assertTrue(""startsWith(FOOBAR, FOO)"",  StringUtils.startsWith(FOOBAR, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,72,"assertFalse(""startsWith(foobar, FOO)"", StringUtils.startsWith(foobar, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,73,"assertFalse(""startsWith(FOOBAR, foo)"", StringUtils.startsWith(FOOBAR, foo));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,75,"assertFalse(""startsWith(foo, foobar)"", StringUtils.startsWith(foo, foobar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,76,"assertFalse(""startsWith(foo, foobar)"", StringUtils.startsWith(bar, foobar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,78,"assertFalse(""startsWith(foobar, bar)"", StringUtils.startsWith(foobar, bar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,79,"assertFalse(""startsWith(FOOBAR, BAR)"", StringUtils.startsWith(FOOBAR, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,80,"assertFalse(""startsWith(foobar, BAR)"", StringUtils.startsWith(foobar, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,81,"assertFalse(""startsWith(FOOBAR, bar)"", StringUtils.startsWith(FOOBAR, bar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,85,* Test StringUtils.testStartsWithIgnoreCase()
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,87,public void testStartsWithIgnoreCase() {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,88,"assertTrue(""startsWithIgnoreCase(null, null)"",    StringUtils.startsWithIgnoreCase(null, (String)null));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,89,"assertFalse(""startsWithIgnoreCase(FOOBAR, null)"", StringUtils.startsWithIgnoreCase(FOOBAR, (String)null));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,90,"assertFalse(""startsWithIgnoreCase(null, FOO)"",    StringUtils.startsWithIgnoreCase(null, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,91,"assertTrue(""startsWithIgnoreCase(FOOBAR, \""\"")"",  StringUtils.startsWithIgnoreCase(FOOBAR, """"));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,93,"assertTrue(""startsWithIgnoreCase(foobar, foo)"", StringUtils.startsWithIgnoreCase(foobar, foo));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,94,"assertTrue(""startsWithIgnoreCase(FOOBAR, FOO)"", StringUtils.startsWithIgnoreCase(FOOBAR, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,95,"assertTrue(""startsWithIgnoreCase(foobar, FOO)"", StringUtils.startsWithIgnoreCase(foobar, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,96,"assertTrue(""startsWithIgnoreCase(FOOBAR, foo)"", StringUtils.startsWithIgnoreCase(FOOBAR, foo));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,98,"assertFalse(""startsWithIgnoreCase(foo, foobar)"", StringUtils.startsWithIgnoreCase(foo, foobar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,99,"assertFalse(""startsWithIgnoreCase(foo, foobar)"", StringUtils.startsWithIgnoreCase(bar, foobar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,101,"assertFalse(""startsWithIgnoreCase(foobar, bar)"", StringUtils.startsWithIgnoreCase(foobar, bar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,102,"assertFalse(""startsWithIgnoreCase(FOOBAR, BAR)"", StringUtils.startsWithIgnoreCase(FOOBAR, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,103,"assertFalse(""startsWithIgnoreCase(foobar, BAR)"", StringUtils.startsWithIgnoreCase(foobar, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,104,"assertFalse(""startsWithIgnoreCase(FOOBAR, bar)"", StringUtils.startsWithIgnoreCase(FOOBAR, bar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,109,* Test StringUtils.endsWith()
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,111,public void testEndsWith() {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,112,"assertTrue(""endsWith(null, null)"",    StringUtils.endsWith(null, (String)null));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,113,"assertFalse(""endsWith(FOOBAR, null)"", StringUtils.endsWith(FOOBAR, (String)null));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,114,"assertFalse(""endsWith(null, FOO)"",    StringUtils.endsWith(null, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,115,"assertTrue(""endsWith(FOOBAR, \""\"")"",  StringUtils.endsWith(FOOBAR, """"));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,117,"assertFalse(""endsWith(foobar, foo)"", StringUtils.endsWith(foobar, foo));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,118,"assertFalse(""endsWith(FOOBAR, FOO)"", StringUtils.endsWith(FOOBAR, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,119,"assertFalse(""endsWith(foobar, FOO)"", StringUtils.endsWith(foobar, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,120,"assertFalse(""endsWith(FOOBAR, foo)"", StringUtils.endsWith(FOOBAR, foo));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,122,"assertFalse(""endsWith(foo, foobar)"", StringUtils.endsWith(foo, foobar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,123,"assertFalse(""endsWith(foo, foobar)"", StringUtils.endsWith(bar, foobar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,125,"assertTrue(""endsWith(foobar, bar)"",  StringUtils.endsWith(foobar, bar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,126,"assertTrue(""endsWith(FOOBAR, BAR)"",  StringUtils.endsWith(FOOBAR, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,127,"assertFalse(""endsWith(foobar, BAR)"", StringUtils.endsWith(foobar, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,128,"assertFalse(""endsWith(FOOBAR, bar)"", StringUtils.endsWith(FOOBAR, bar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,132,* Test StringUtils.endsWithIgnoreCase()
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,134,public void testEndsWithIgnoreCase() {
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,135,"assertTrue(""endsWithIgnoreCase(null, null)"",    StringUtils.endsWithIgnoreCase(null, (String)null));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,136,"assertFalse(""endsWithIgnoreCase(FOOBAR, null)"", StringUtils.endsWithIgnoreCase(FOOBAR, (String)null));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,137,"assertFalse(""endsWithIgnoreCase(null, FOO)"",    StringUtils.endsWithIgnoreCase(null, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,138,"assertTrue(""endsWithIgnoreCase(FOOBAR, \""\"")"",  StringUtils.endsWithIgnoreCase(FOOBAR, """"));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,140,"assertFalse(""endsWithIgnoreCase(foobar, foo)"", StringUtils.endsWithIgnoreCase(foobar, foo));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,141,"assertFalse(""endsWithIgnoreCase(FOOBAR, FOO)"", StringUtils.endsWithIgnoreCase(FOOBAR, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,142,"assertFalse(""endsWithIgnoreCase(foobar, FOO)"", StringUtils.endsWithIgnoreCase(foobar, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,143,"assertFalse(""endsWithIgnoreCase(FOOBAR, foo)"", StringUtils.endsWithIgnoreCase(FOOBAR, foo));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,145,"assertFalse(""endsWithIgnoreCase(foo, foobar)"", StringUtils.endsWithIgnoreCase(foo, foobar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,146,"assertFalse(""endsWithIgnoreCase(foo, foobar)"", StringUtils.endsWithIgnoreCase(bar, foobar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,148,"assertTrue(""endsWithIgnoreCase(foobar, bar)"", StringUtils.endsWithIgnoreCase(foobar, bar));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,149,"assertTrue(""endsWithIgnoreCase(FOOBAR, BAR)"", StringUtils.endsWithIgnoreCase(FOOBAR, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,150,"assertTrue(""endsWithIgnoreCase(foobar, BAR)"", StringUtils.endsWithIgnoreCase(foobar, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,src/test/org/apache/commons/lang/StringUtilsStartsEndsWithTest.java,151,"assertTrue(""endsWithIgnoreCase(FOOBAR, bar)"", StringUtils.endsWithIgnoreCase(FOOBAR, bar));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1514,public void testRemoveStartIgnoreCase() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1515,"// StringUtils.removeStart("""", *)        = """""
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1516,"assertNull(""removeStartIgnoreCase(null, null)"", StringUtils.removeStartIgnoreCase(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1517,"assertNull(""removeStartIgnoreCase(null, \""\"")"", StringUtils.removeStartIgnoreCase(null, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1518,"assertNull(""removeStartIgnoreCase(null, \""a\"")"", StringUtils.removeStartIgnoreCase(null, ""a""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1520,"// StringUtils.removeStart(*, null)      = *"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1521,"assertEquals(""removeStartIgnoreCase(\""\"", null)"", StringUtils.removeStartIgnoreCase("""", null), """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1522,"assertEquals(""removeStartIgnoreCase(\""\"", \""\"")"", StringUtils.removeStartIgnoreCase("""", """"), """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1523,"assertEquals(""removeStartIgnoreCase(\""\"", \""a\"")"", StringUtils.removeStartIgnoreCase("""", ""a""), """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1525,// All others:
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1526,"assertEquals(""removeStartIgnoreCase(\""www.domain.com\"", \""www.\"")"", StringUtils.removeStartIgnoreCase(""www.domain.com"", ""www.""), ""domain.com"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1527,"assertEquals(""removeStartIgnoreCase(\""domain.com\"", \""www.\"")"", StringUtils.removeStartIgnoreCase(""domain.com"", ""www.""), ""domain.com"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1528,"assertEquals(""removeStartIgnoreCase(\""domain.com\"", \""\"")"", StringUtils.removeStartIgnoreCase(""domain.com"", """"), ""domain.com"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1529,"assertEquals(""removeStartIgnoreCase(\""domain.com\"", null)"", StringUtils.removeStartIgnoreCase(""domain.com"", null), ""domain.com"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1531,// Case insensitive:
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1532,"assertEquals(""removeStartIgnoreCase(\""www.domain.com\"", \""WWW.\"")"", StringUtils.removeStartIgnoreCase(""www.domain.com"", ""WWW.""), ""domain.com"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1554,public void testRemoveEndIgnoreCase() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1555,"// StringUtils.removeEndIgnoreCase("""", *)        = """""
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1556,"assertNull(""removeEndIgnoreCase(null, null)"", StringUtils.removeEndIgnoreCase(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1557,"assertNull(""removeEndIgnoreCase(null, \""\"")"", StringUtils.removeEndIgnoreCase(null, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1558,"assertNull(""removeEndIgnoreCase(null, \""a\"")"", StringUtils.removeEndIgnoreCase(null, ""a""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1560,"// StringUtils.removeEnd(*, null)      = *"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1561,"assertEquals(""removeEndIgnoreCase(\""\"", null)"", StringUtils.removeEndIgnoreCase("""", null), """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1562,"assertEquals(""removeEndIgnoreCase(\""\"", \""\"")"", StringUtils.removeEndIgnoreCase("""", """"), """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1563,"assertEquals(""removeEndIgnoreCase(\""\"", \""a\"")"", StringUtils.removeEndIgnoreCase("""", ""a""), """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1565,// All others:
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1566,"assertEquals(""removeEndIgnoreCase(\""www.domain.com.\"", \"".com\"")"", StringUtils.removeEndIgnoreCase(""www.domain.com."", "".com""), ""www.domain.com."");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1567,"assertEquals(""removeEndIgnoreCase(\""www.domain.com\"", \"".com\"")"", StringUtils.removeEndIgnoreCase(""www.domain.com"", "".com""), ""www.domain"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1568,"assertEquals(""removeEndIgnoreCase(\""www.domain\"", \"".com\"")"", StringUtils.removeEndIgnoreCase(""www.domain"", "".com""), ""www.domain"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1569,"assertEquals(""removeEndIgnoreCase(\""domain.com\"", \""\"")"", StringUtils.removeEndIgnoreCase(""domain.com"", """"), ""domain.com"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1570,"assertEquals(""removeEndIgnoreCase(\""domain.com\"", null)"", StringUtils.removeEndIgnoreCase(""domain.com"", null), ""domain.com"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1572,// Case insensitive:
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1573,"assertEquals(""removeEndIgnoreCase(\""www.domain.com\"", \"".com\"")"", StringUtils.removeEndIgnoreCase(""www.domain.com"", "".COM""), ""www.domain"");"
