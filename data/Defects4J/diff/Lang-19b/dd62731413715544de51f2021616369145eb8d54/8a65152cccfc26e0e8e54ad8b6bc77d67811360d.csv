is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,68, for the Executor pattern interface. The supplied commands are:
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,68,* for the Executor functor interface. The supplied executors are:
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,71, <li>For - repeatedly calls a command for a fixed number of times
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,72, <li>While - repeatedly calls a command while a predicate is true
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,73, <li>DoWhile - repeatedly calls a command while a predicate is true
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,74, <li>Chained - chains two or more commands together
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,75, <li>Switch - calls one command based on one or more predicates
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,76, <li>SwitchMap - calls one command looked up from a Map
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,77, <li>Transformer - wraps a Transformer as a Predicate
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,71,* <li>For - repeatedly calls an executor for a fixed number of times
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,72,* <li>While - repeatedly calls an executor while a predicate is true
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,73,* <li>DoWhile - repeatedly calls an executor while a predicate is true
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,74,* <li>Chained - chains two or more executors together
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,75,* <li>Switch - calls one executor based on one or more predicates
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,76,* <li>SwitchMap - calls one executor looked up from a Map
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,77,* <li>Transformer - wraps a Transformer as an Executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,81, All the supplied commands are Serializable.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,81,* All the supplied executors are Serializable.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,84," @version $Id: ExecutorUtils.java,v 1.1 2002/11/06 19:15:40 bayard Exp $"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,84,"* @version $Id: ExecutorUtils.java,v 1.2 2002/11/14 21:54:49 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,91,rivate static final Executor EXCEPTION_COMMAND = new ExceptionExecutor();
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,91,private static final Executor EXCEPTION_EXECUTOR = new ExceptionExecutor();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,95,rivate static final Executor NOP_COMMAND = new NOPExecutor();
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,95,private static final Executor NOP_EXECUTOR = new NOPExecutor();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,108, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,108,* @return the executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,111,eturn EXCEPTION_COMMAND;
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,111,return EXCEPTION_EXECUTOR;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,118, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,118,* @return the executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,121,eturn NOP_COMMAND;
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,121,return NOP_EXECUTOR;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,125, Creates a Executor that calls a Factory each time the transformer is used.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,126, The transformer will return the value returned by the factory.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,125,* Creates a Executor that calls a Transformer each time it is called.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,126,* The transformer will be called using the executor's input object.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,127,* The transformer's result will be ignored.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,128, @param transformer  the transformer to run each time in the command
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,129, @return the command.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,129,* @param transformer  the transformer to run each time in the executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,130,* @return the executor.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,133,"hrow new IllegalArgumentException(""TransformerExecutor: The transformer must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,134,"throw new IllegalArgumentException(""The transformer must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,139, Creates a Executor that will call the command <code>count</code> times.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,140,* Creates a Executor that will call the executor <code>count</code> times.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,142, @param command  the command to call repeatedly
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,143, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,143,* @param executor  the executor to call repeatedly
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,144,* @return the <code>for</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,146,"ublic static Executor forExecutor(int count, Executor command) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,147,"public static Executor forExecutor(int count, Executor executor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,148,"hrow new IllegalArgumentException(""ForExecutor: The loop count must not be less than zero, it was "" + count);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,149,"throw new IllegalArgumentException(""The loop count must not be less than zero, it was "" + count);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,150,f (command == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,151,"hrow new IllegalArgumentException(""ForExecutor: The command must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,151,if (executor == null) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,152,"throw new IllegalArgumentException(""The executor must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,153,"eturn new ForExecutor(count, command);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,154,"return new ForExecutor(count, executor);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,157, Creates a Executor that will call the command repeatedly until the
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,158,* Creates a Executor that will call the executor repeatedly until the
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,161, @param command  the command to call repeatedly
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,162, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,162,* @param executor  the executor to call repeatedly
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,163,* @return the <code>while</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,165,"ublic static Executor whileExecutor(Predicate predicate, Executor command) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,166,"public static Executor whileExecutor(Predicate predicate, Executor executor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,167,"hrow new IllegalArgumentException(""WhileExecutor: The predicate must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,168,"throw new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,169,f (command == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,170,"hrow new IllegalArgumentException(""WhileExecutor: The command must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,170,if (executor == null) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,171,"throw new IllegalArgumentException(""The executor must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,172,"eturn new WhileExecutor(predicate, command, false);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,173,"return new WhileExecutor(predicate, executor, false);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,176, Creates a Executor that will call the command once and then repeatedly
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,177,* Creates a Executor that will call the executor once and then repeatedly
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,179, @param command  the command to call repeatedly
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,180,* @param executor  the executor to call repeatedly
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,181, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,182,* @return the <code>do-while</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,184,"ublic static Executor doWhileExecutor(Executor command, Predicate predicate) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,185,f (command == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,186,"hrow new IllegalArgumentException(""DoWhileExecutor: The command must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,185,"public static Executor doWhileExecutor(Executor executor, Predicate predicate) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,186,if (executor == null) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,187,"throw new IllegalArgumentException(""The executor must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,189,"hrow new IllegalArgumentException(""DoWhileExecutor: The predicate must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,190,"throw new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,191,"eturn new WhileExecutor(predicate, command, true);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,192,"return new WhileExecutor(predicate, executor, true);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,195, Creates a Executor that will invoke a specific method on the command's
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,196,* Creates a Executor that will invoke a specific method on the executor's
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,199, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,200,* @return the <code>invoker</code> executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,204,"// reuse transformer as it has caching - this is lazy really, should have inner class here"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,207, Creates a Executor that will invoke a specific method on the command's
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,209,* Creates a Executor that will invoke a specific method on the executor's
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,213, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,215,* @return the <code>invoker</code> executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,220,"// reuse transformer as it has caching - this is lazy really, should have inner class here"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,225, @param command1  the first command
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,226, @param command2  the second command
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,227, @return the command
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,228, @throws IllegalArgumentException if either command is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,228,* @param executor1  the first executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,229,* @param executor2  the second executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,230,* @return the <code>chained</code> executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,231,* @throws IllegalArgumentException if either executor is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,230,"ublic static Executor chainedExecutor(Executor command1, Executor command2) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,231,"xecutor[] commands = new Executor[] { command1, command2 };"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,232,alidate(commands);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,233,eturn new ChainedExecutor(commands);
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,233,"public static Executor chainedExecutor(Executor executor1, Executor executor2) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,234,"Executor[] executors = new Executor[] { executor1, executor2 };"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,235,validate(executors);
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,236,return new ChainedExecutor(executors);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,237," Create a new Executor that calls each command in turn, passing the"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,238, result into the next command.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,240,"* Create a new Executor that calls each executor in turn, passing the"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,241,* result into the next executor.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,240, @param commands  an array of commands to chain
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,241, @return the command
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,242, @throws IllegalArgumentException if the commands array is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,243, @throws IllegalArgumentException if the commands array has 0 elements
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,244, @throws IllegalArgumentException if any command in the array is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,243,* @param executors  an array of executors to chain
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,244,* @return the <code>chained</code> executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,245,* @throws IllegalArgumentException if the executors array is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,246,* @throws IllegalArgumentException if the executors array has 0 elements
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,247,* @throws IllegalArgumentException if any executor in the array is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,246,ublic static Executor chainedExecutor(Executor[] commands) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,247,ommands = copy(commands);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,248,alidate(commands);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,249,eturn new ChainedExecutor(commands);
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,249,public static Executor chainedExecutor(Executor[] executors) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,250,executors = copy(executors);
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,251,validate(executors);
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,252,return new ChainedExecutor(executors);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,253," Create a new Executor that calls each command in turn, passing the"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,254, result into the next command. The ordering is that of the iterator()
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,256,"* Create a new Executor that calls each executor in turn, passing the"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,257,* result into the next executor. The ordering is that of the iterator()
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,257, @param commands  a collection of commands to chain
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,258, @return the command
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,259, @throws IllegalArgumentException if the commands collection is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,260, @throws IllegalArgumentException if the commands collection is empty
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,261, @throws IllegalArgumentException if any command in the collection is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,260,* @param executors  a collection of executors to chain
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,261,* @return the <code>chained</code> executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,262,* @throws IllegalArgumentException if the executors collection is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,263,* @throws IllegalArgumentException if the executors collection is empty
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,264,* @throws IllegalArgumentException if any executor in the collection is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,263,ublic static Executor chainedExecutor(Collection commands) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,264,f (commands == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,265,"hrow new IllegalArgumentException(""ChainedExecutor: The command collection must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,266,public static Executor chainedExecutor(Collection executors) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,267,if (executors == null) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,268,"throw new IllegalArgumentException(""The executor collection must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,268,xecutor[] cmds = new Executor[commands.size()];
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,271,Executor[] cmds = new Executor[executors.size()];
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,270,or (Iterator it = commands.iterator(); it.hasNext();) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,273,for (Iterator it = executors.iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,278, Create a new Executor that calls one of two commands depending
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,281,* Create a new Executor that calls one of two executors depending
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,282, @param trueExecutor  the command called if the predicate is true
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,283, @param falseExecutor  the command called if the predicate is false
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,284, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,285,* @param trueExecutor  the executor called if the predicate is true
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,286,* @param falseExecutor  the executor called if the predicate is false
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,287,* @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,286, @throws IllegalArgumentException if either command is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,289,* @throws IllegalArgumentException if either executor is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,293, Create a new Executor that calls one of the commands depending
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,294, on the predicates. The command at array location 0 is called if the
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,295, predicate at array location 0 returned true. Each predicate is evaluated
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,296,* Create a new Executor that calls one of the executors depending
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,297,* on the predicates.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,298,* <p>
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,299,* The executor at array location 0 is called if the predicate at array
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,300,* location 0 returned true. Each predicate is evaluated
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,299, @param commands  an array of commands to call
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,300, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,304,* @param executors  an array of executors to call
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,305,* @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,306,"ublic static Executor switchExecutor(Predicate[] predicates, Executor[] commands) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,307,"eturn switchExecutorInternal(copy(predicates), copy(commands), null);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,311,"public static Executor switchExecutor(Predicate[] predicates, Executor[] executors) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,312,"return switchExecutorInternal(copy(predicates), copy(executors), null);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,311, Create a new Executor that calls one of the commands depending
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,312, on the predicates. The command at array location 0 is called if the
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,313, predicate at array location 0 returned true. Each predicate is evaluated
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,316,* Create a new Executor that calls one of the executors depending
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,317,* on the predicates.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,318,* <p>
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,319,* The executor at array location 0 is called if the predicate at array
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,320,* location 0 returned true. Each predicate is evaluated
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,315, command is called.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,322,* executor is called.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,318, @param commands  an array of commands to call
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,325,* @param executors  an array of executors to call
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,320, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,327,* @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,326,"ublic static Executor switchExecutor(Predicate[] predicates, Executor[] commands, Executor defaultExecutor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,327,"eturn switchExecutorInternal(copy(predicates), copy(commands), defaultExecutor);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,333,"public static Executor switchExecutor(Predicate[] predicates, Executor[] executors, Executor defaultExecutor) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,334,"return switchExecutorInternal(copy(predicates), copy(executors), defaultExecutor);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,331, Create a new Executor that calls one of the commands depending
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,338,* Create a new Executor that calls one of the executors depending
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,334, The Map consists of Predicate keys and Executor values. A command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,341,* The Map consists of Predicate keys and Executor values. A executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,337, command is called. The default command is set in the map with a
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,344,* executor is called. The default executor is set in the map with a
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,341, @param predicatesAndExecutors  a map of predicates to commands
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,342, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,348,* @param predicatesAndExecutors  a map of predicates to executors
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,349,* @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,345, @throws IllegalArgumentException if any command in the map is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,352,* @throws IllegalArgumentException if any executor in the map is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,352,"hrow new IllegalArgumentException(""SwitchExecutor: The predicate and command map must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,359,"throw new IllegalArgumentException(""The predicate and executor map must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,370, Validate input and create command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,377,* Validate input and create executor.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,379,* @param predicates  an array of predicates to check
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,380,* @param executors  an array of executors to call
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,381,* @param defaultExecutor  the default to call if no predicate matches
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,382,* @return the <code>switch</code> executor
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,383,* @throws IllegalArgumentException if the either array is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,384,* @throws IllegalArgumentException if the either array has 0 elements
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,385,* @throws IllegalArgumentException if any element in the arrays is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,386,* @throws IllegalArgumentException if the arrays are different sizes
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,372,"rivate static Executor switchExecutorInternal(Predicate[] predicates, Executor[] commands, Executor defaultExecutor) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,388,"private static Executor switchExecutorInternal(Predicate[] predicates, Executor[] executors, Executor defaultExecutor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,374,alidate(commands);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,375,f (predicates.length != commands.length) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,376,"hrow new IllegalArgumentException(""SwitchExecutor: The predicate and command arrays must be the same size"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,390,validate(executors);
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,391,if (predicates.length != executors.length) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,392,"throw new IllegalArgumentException(""The predicate and executor arrays must be the same size"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,381,"eturn new SwitchExecutor(predicates, commands, defaultExecutor);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,397,"return new SwitchExecutor(predicates, executors, defaultExecutor);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,386, command to call.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,402,* executor to call.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,388, The Map consists of object keys and Executor values. A command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,404,* The Map consists of object keys and Executor values. A executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,390, default command is called. The default command is set in the map
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,406,* default executor is called. The default executor is set in the map
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,393, @param objectsAndExecutors  a map of objects to commands
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,394, @return the command
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,409,* @param objectsAndExecutors  a map of objects to executors
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,410,* @return the executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,397, @throws IllegalArgumentException if any command in the map is null
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,413,* @throws IllegalArgumentException if any executor in the map is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,403,"hrow new IllegalArgumentException(""SwitchEqualsExecutor: The obejct and command map must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,419,"throw new IllegalArgumentException(""The obejct and executor map must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,420, Copy method
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,436,* Clone the predicates to ensure that the internal reference can't be messed with.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,439,* @return the cloned predicates
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,432, Validate method
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,449,* Validate the predicates to ensure that all is well.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,452,* @return the validated predicates
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,438,"hrow new IllegalArgumentException(""ExecutorUtils: The predicate array must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,456,"throw new IllegalArgumentException(""The predicate array must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,442,"ExecutorUtils: At least 1 predicate must be specified in the predicate array, size was "" + predicates.length);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,460,"""At least 1 predicate must be specified in the predicate array, size was "" + predicates.length);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,446,"hrow new IllegalArgumentException(""ExecutorUtils: The predicate array must not contain a null predicate, index "" + i + "" was null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,464,"throw new IllegalArgumentException(""The predicate array must not contain a null predicate, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,452, Copy method
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,470,* Clone the executors to ensure that the internal reference can't be messed with.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,454, @param commands  the commands to copy
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,472,* @param executors  the executors to copy
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,473,* @return the cloned executors
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,456,rivate static Executor[] copy(Executor[] commands) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,457,f (commands == null) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,475,private static Executor[] copy(Executor[] executors) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,476,if (executors == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,460,eturn (Executor[]) commands.clone();
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,479,return (Executor[]) executors.clone();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,464, Validate method
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,483,* Validate the executors to ensure that all is well.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,466, @param commands  the commands to validate
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,485,* @param executors  the executors to validate
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,486,* @return the validated executors
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,468,rivate static void validate(Executor[] commands) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,469,f (commands == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,470,"hrow new IllegalArgumentException(""ExecutorUtils: The command array must not be null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,488,private static void validate(Executor[] executors) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,489,if (executors == null) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,490,"throw new IllegalArgumentException(""The executor array must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,472,f (commands.length < 1) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,492,if (executors.length < 1) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,474,"ExecutorUtils: At least 1 command must be specified in the command array, size was "" + commands.length);"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,494,"""At least 1 executor must be specified in the executor array, size was "" + executors.length);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,476,or (int i = 0; i < commands.length; i++) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,477,f (commands[i] == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,478,"hrow new IllegalArgumentException(""ExecutorUtils: The command array must not contain a null command, index "" + i + "" was null"");"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,496,for (int i = 0; i < executors.length; i++) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,497,if (executors[i] == null) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,498,"throw new IllegalArgumentException(""The executor array must not contain a null executor, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,533, TransformerExecutor returns the result of calling a Transformer.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,553,* TransformerExecutor calls a Transformer using the input object and ignore the result.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,556,/** The transformer to wrap */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,540, Constructor to store factory
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,560,* Constructor to store transformer
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,548, Return the result of calling the factory
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,568,* Call the transformer
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,564, ChainedExecutor calls a list of commands.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,584,* ChainedExecutor calls a list of executors.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,587,/** The executors to call in turn */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,573,rivate ChainedExecutor(Executor[] commands) {
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,593,private ChainedExecutor(Executor[] executors) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,575,Executors = commands;
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,595,iExecutors = executors;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,579, Execute a list of commands
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,599,* Execute a list of executors
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,592, SwitchExecutor calls the command whose predicate returns true.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,612,* SwitchExecutor calls the executor whose predicate returns true.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,615,/** The tests to consider */
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,617,/** The matching executors to call */
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,619,/** The default executor to call if no tests match */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,603,"rivate SwitchExecutor(Predicate[] predicates, Executor[] commands, Executor defaultExecutor) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,625,"private SwitchExecutor(Predicate[] predicates, Executor[] executors, Executor defaultExecutor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,606,Executors = commands;
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,628,iExecutors = executors;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,611, Execute the command whose predicate returns true
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,633,* Execute the executor whose predicate returns true
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,628, ForExecutor calls the command a fixed nunmber of times.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,650,* ForExecutor calls the executor a fixed nunmber of times.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,653,/** The number of times to loop */
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,655,/** The executor to call */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,638,"rivate ForExecutor(int count, Executor command) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,661,"private ForExecutor(int count, Executor executor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,641,Executor = command;
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,664,iExecutor = executor;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,645, Execute the command count times
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,668,* Execute the executor count times
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,658, WhileExecutor calls the command until the predicate is false.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,681,* WhileExecutor calls the executor until the predicate is false.
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,684,/** The test condition */
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,686,/** The executor to call */
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,688,"/** The flag, true is a do loop, false is a while */"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,669,"rivate WhileExecutor(Predicate predicate, Executor command, boolean doLoop) {"
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,694,"private WhileExecutor(Predicate predicate, Executor executor, boolean doLoop) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,672,Executor = command;
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,697,iExecutor = executor;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,677, Execute the command until the predicate is false
True,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,702,* Execute the executor until the predicate is false
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,65, for the Factory pattern interface. The supplied factories are:
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,65,* for the Factory functor interface. The supplied factories are:
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,76," @version $Id: FactoryUtils.java,v 1.1 2002/11/05 16:44:28 bayard Exp $"
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,76,"* @version $Id: FactoryUtils.java,v 1.2 2002/11/14 21:54:49 scolebourne Exp $"
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,108,* This could be useful during testing as a placeholder.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,122, @return the factory.
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,123,* @return the <code>constant</code> factory.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,139, @return the factory
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,140,* @return the <code>prototype</code> factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,145,"hrow new IllegalArgumentException(""PrototypeFactory: The prototype must not be null"");"
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,146,"throw new IllegalArgumentException(""The prototype must not be null"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,147,/ TODO: move to cloneable pattern
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,163,"hrow new IllegalArgumentException(""PrototypeFactory: The prototype must be cloneable"");"
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,163,"throw new IllegalArgumentException(""The prototype must be cloneable via a public clone method"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,171, @return the factory
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,171,* @return the <code>reflection</code> factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,185, @return the factory
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,185,* @return the <code>reflection</code> factory
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,224,/** The constant to return each time */
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,250,/** The object to clone each time */
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,252,/** The method used to clone */
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,307,/** The object to clone via serialization each time */
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,341,/** The class to create */
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,343,/** The constructor parameter types */
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,345,/** The constructor arguments */
True,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,347,/** The constructor */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,67, for the Predicate pattern interface. The supplied predicates are:
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,67,* for the Predicate functor interface. The supplied predicates are:
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,91," @version $Id: PredicateUtils.java,v 1.1 2002/11/05 16:44:28 bayard Exp $"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,91,"* @version $Id: PredicateUtils.java,v 1.2 2002/11/14 21:54:49 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,130, @return the factory
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,130,* @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,202," a particular type, using instanceof."
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,202,"* a particular type, using instanceof. A <code>null</code> input"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,203,* object will return <code>false</code>.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,210,"hrow new IllegalArgumentException(""InstanceofPredicate: The type to check instanceof must not be null"");"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,211,"throw new IllegalArgumentException(""The type to check instanceof must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,218, again. The comparison is by equals().
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,219,* again. The comparison is by equals(). A <code>null</code> input object
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,220,"* is accepted and will return true the first time, and false subsequently"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,221,* as well.
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,245,"// reuse transformer as it has caching - this is lazy really, should have inner class here"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,267,"// reuse transformer as it has caching - this is lazy really, should have inner class here"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,275, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,280,* @return the <code>and</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,287, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,292,* @return the <code>all</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,301, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,306,* @return the <code>all</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,316, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,321,* @return the <code>or</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,328, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,333,* @return the <code>any</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,342, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,347,* @return the <code>any</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,357, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,362,* @return the <code>either</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,369, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,374,* @return the <code>one</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,383, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,388,* @return the <code>one</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,398, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,403,* @return the <code>neither</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,410, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,415,* @return the <code>none</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,428, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,433,* @return the <code>none</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,446, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,451,* @return the <code>not</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,451,"hrow new IllegalArgumentException(""NotPredicate: The predicate must not be null"");"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,456,"throw new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,465, @return the predicate
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,470,* @return the transformer wrapping predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,470,"hrow new IllegalArgumentException(""TransformerPredicate: The transformer to call must not be null"");"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,475,"throw new IllegalArgumentException(""The transformer to call must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,534,"hrow new IllegalArgumentException(""PredicateUtils: The predicate collection must not be null"");"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,539,"throw new IllegalArgumentException(""The predicate collection must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,538,"PredicateUtils: At least 2 predicates must be specified in the predicate collection, size was "" + predicates.size());"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,543,"""At least 2 predicates must be specified in the predicate collection, size was "" + predicates.size());"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,546,"hrow new IllegalArgumentException(""PredicateUtils: The predicate collection must not contain a null predicate, index "" + i + "" was null"");"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,551,"throw new IllegalArgumentException(""The predicate collection must not contain a null predicate, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,561,"hrow new IllegalArgumentException(""PredicateUtils: The predicate array must not be null"");"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,566,"throw new IllegalArgumentException(""The predicate array must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,565,"PredicateUtils: At least 2 predicates must be specified in the predicate array, size was "" + predicates.length);"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,570,"""At least 2 predicates must be specified in the predicate array, size was "" + predicates.length);"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,570,"hrow new IllegalArgumentException(""PredicateUtils: The predicate array must not contain a null predicate, index "" + i + "" was null"");"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,575,"throw new IllegalArgumentException(""The predicate array must not contain a null predicate, index "" + i + "" was null"");"
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,612,/** The constant value to return each time */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,638,/** The array of predicates to call */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,669,/** The array of predicates to call */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,700,/** The array of predicates to call */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,735,/** The predicate to call */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,761,/** The type to check for */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,787,/** The object to compare to */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,813,/** The object to compare identity to */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,841,/** The set of previously seen objects */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,867,/** The transformer to call */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,905,/** The predicate to call */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,934,/** The predicate to call */
True,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,963,/** The predicate to call */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,65, utilities for the Transformer pattern interface. The supplied transformers are:
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,64,* utilities for the Transformer functor interface. The supplied transformers are:
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,85," @version $Id: TransformerUtils.java,v 1.2 2002/11/06 19:16:33 bayard Exp $"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,84,"* @version $Id: TransformerUtils.java,v 1.3 2002/11/14 21:54:49 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,181,ublic static Transformer asTransformer(Executor command) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,182,f (command == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,183,"hrow new IllegalArgumentException(""ExecutorTransformer: The command must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,180,public static Transformer asTransformer(Executor executor) {
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,181,if (executor == null) {
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,182,"throw new IllegalArgumentException(""The executor must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,185,eturn new ExecutorTransformer(command);
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,184,return new ExecutorTransformer(executor);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,197,"hrow new IllegalArgumentException(""PredicateTransformer: The predicate must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,196,"throw new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,211,"hrow new IllegalArgumentException(""FactoryTransformer: The factory must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,210,"throw new IllegalArgumentException(""The factory must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,261,"hrow new IllegalArgumentException(""ChainedTransformer: The transformer collection must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,260,"throw new IllegalArgumentException(""The transformer collection must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,349,"hrow new IllegalArgumentException(""SwitchTransformer: The predicate and transformer map must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,348,"throw new IllegalArgumentException(""The predicate and transformer map must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,373,"hrow new IllegalArgumentException(""SwitchTransformer: The predicate and transformer arrays must be the same size"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,372,"throw new IllegalArgumentException(""The predicate and transformer arrays must be the same size"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,400,"hrow new IllegalArgumentException(""SwitchEqualsTransformer: The obejct and transformer map must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,399,"throw new IllegalArgumentException(""The obejct and transformer map must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,449,"hrow new IllegalArgumentException(""MapTransformer: The map must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,448,"throw new IllegalArgumentException(""The map must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,506,"hrow new IllegalArgumentException(""TransformerUtils: The predicate array must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,505,"throw new IllegalArgumentException(""The predicate array must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,510,"TransformerUtils: At least 1 predicate must be specified in the predicate array, size was "" + predicates.length);"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,509,"""At least 1 predicate must be specified in the predicate array, size was "" + predicates.length);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,515,"TransformerUtils: The predicate array must not contain a null predicate, index "" + i + "" was null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,514,"""The predicate array must not contain a null predicate, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,539,"hrow new IllegalArgumentException(""TransformerUtils: The transformer array must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,538,"throw new IllegalArgumentException(""The transformer array must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,543,"TransformerUtils: At least 1 transformer must be specified in the transformer array, size was "" + transformers.length);"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,542,"""At least 1 transformer must be specified in the transformer array, size was "" + transformers.length);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,548,"TransformerUtils: The transformer array must not contain a null transformer, index "" + i + "" was null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,547,"""The transformer array must not contain a null transformer, index "" + i + "" was null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,638,/** The constant to return each time */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,643, Constructor to store constant
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,642,* Constructor to store constant.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,651, Always return constant
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,650,* Always return constant.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,664,/** The executor to call each time */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,669, Constructor to store command
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,668,* Constructor to store executor.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,671,rivate ExecutorTransformer(Executor command) {
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,670,private ExecutorTransformer(Executor executor) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,673,Executor = command;
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,672,iExecutor = executor;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,677, Exceute the command and return the input
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,676,* Exceute the executor and return the input.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,696,/** The predicate to call each time */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,701, Constructor to store predicate
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,700,* Constructor to store predicate.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,709, Evaluate the predicate and return the result as a Boolean
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,708,* Evaluate the predicate and return the result as a Boolean.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,727,/** The factory to call each time */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,732, Constructor to store factory
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,731,* Constructor to store factory.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,740, Return the result of calling the factory
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,739,* Return the result of calling the factory.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,758,/** The array of transformers to call */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,763, Constructor to store params
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,762,* Constructor to store params.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,771, Returns the result of calling a list of transformers
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,770,* Returns the result of calling a list of transformers.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,787,/** The array of predicates to switch on */
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,789,/** The array of transformers to call */
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,791,/** The default transformer called if no predicate matches */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,794, Constructor to store params
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,795,* Constructor to store params.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,804, Returns the result of the transformer whose predicate returns true
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,805,* Returns the result of the transformer whose predicate returns true.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,820, InstantiateTransformer returns the result of calling a Factory.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,821,* InstantiateTransformer returns the result of instantiating the input Class object.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,824,/** The array of reflection parameter types */
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,826,/** The array of reflection arguments */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,828, Constructor to store params
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,830,* Constructor to store params.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,847, Return the result of calling the factory
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,849,* Return the result of instantiating the input Class object.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,875,/** The map of data to lookup in */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,877, Constructor to store map
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,879,* Constructor to store map.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,885, Returns the result by looking up in the map
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,887,* Returns the result by looking up in the map.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,902,/** The method name to call */
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,904,/** The array of reflection parameter types */
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,906,/** The array of reflection arguments */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,905, Constructor
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,910,* Constructor.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,929, Execute the command based on the input object.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,934,* Invoke the specified method on the input object.
