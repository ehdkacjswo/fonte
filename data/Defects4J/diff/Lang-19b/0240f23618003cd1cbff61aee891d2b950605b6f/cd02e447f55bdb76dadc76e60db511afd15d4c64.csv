is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,803," <p>Finds the first index within a String, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,804, This method uses {@link String#indexOf(int)}.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,803,"* <p>Finds the first index within a CharSequence, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,804,"* This method uses {@link String#indexOf(int, int)} if possible.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,806," <p>A {@code null} or empty ("""") String will return {@code INDEX_NOT_FOUND (-1)}.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,806,"* <p>A {@code null} or empty ("""") CharSequence will return {@code INDEX_NOT_FOUND (-1)}.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,815," @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,815,"* @param seq  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,821,"ublic static int indexOf(String str, int searchChar) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,822,f (isEmpty(str)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,821,"public static int indexOf(CharSequence seq, int searchChar) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,822,if (isEmpty(seq)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,825,eturn str.indexOf(searchChar);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,825,"return StringUtils.indexOfSequence(seq, searchChar, 0);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,829," <p>Finds the first index within a String from a start position,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,829,"* <p>Finds the first index within a CharSequence from a start position,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,831," This method uses {@link String#indexOf(int, int)}.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,831,"* This method uses {@link String#indexOf(int, int)} if possible.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,833," <p>A {@code null} or empty ("""") String will return {@code (INDEX_NOT_FOUND) -1}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,833,"* <p>A {@code null} or empty ("""") CharSequence will return {@code (INDEX_NOT_FOUND) -1}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,846," @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,846,"* @param seq  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,853,"ublic static int indexOf(String str, int searchChar, int startPos) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,854,f (isEmpty(str)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,853,"public static int indexOf(CharSequence seq, int searchChar, int startPos) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,854,if (isEmpty(seq)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,857,"eturn str.indexOf(searchChar, startPos);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,857,"return StringUtils.indexOfSequence(seq, searchChar, startPos);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6419,// Used by the indexOf(CharSequence methods) as a green implementation of indexOf
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6420,"static int indexOfSequence(CharSequence cs, int searchChar, int start) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6421,if (cs instanceof String) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6422,"return ((String) cs).indexOf(searchChar, start);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6423,} else {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6424,int sz = cs.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6425,if ( start < 0 ) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6426,start = 0;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6428,for ( int i=start; i < sz; i++ ) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6429,if ( cs.charAt(i) == searchChar) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6430,return i;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6433,return -1;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6436,// Used by the indexOf(CharSequence methods) as a green implementation of indexOf
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6437,"static int indexOfSequence(CharSequence cs, CharSequence searchChar, int start) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6438,if (cs instanceof String && searchChar instanceof String) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6439,// TODO: Do we assume searchChar is usually relatively small;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6440,//       If so then calling toString() on it is better than reverting to
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6441,//       the green implementation in the else block
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6442,"return ((String) cs).indexOf( (String) searchChar, start);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6443,} else {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6444,// TODO: Implement rather than convert to String
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6445,"return cs.toString().indexOf(searchChar.toString(), start);"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,471,"assertEquals(2, StringUtils.indexOf(new StringBuilder(""aabaabaa""), 'b'));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,485,"assertEquals(5, StringUtils.indexOf(new StringBuilder(""aabaabaa""), 'b', 3));"
