is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,21,import java.util.HashMap;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,27,// TODO: Replace with a RegexLookup? Performance test.
False,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,28,rotected CharSequence[][] lookup;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,30,"private HashMap<CharSequence, CharSequence> lookupMap;"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,31,private int shortest = Integer.MAX_VALUE;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,32,private int longest = 0;
False,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,36,his.lookup = lookup;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,40,"lookupMap = new HashMap<CharSequence, CharSequence>();"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,41,for(CharSequence[] seq : lookup) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,42,"this.lookupMap.put(seq[0], seq[1]);"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,43,int sz = seq[0].length();
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,44,if(sz < shortest) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,45,shortest = sz;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,47,if(sz > longest) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,48,longest = sz;
False,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,43,"harSequence subsequence = input.subSequence(index, input.length());"
False,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,44,or(CharSequence[] seq : lookup) {
False,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,45,f( subsequence.toString().startsWith(seq[0].toString()) ) {
False,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,46,ut.write(seq[1].toString());
False,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,47,eturn seq[0].length();
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,57,int max = longest;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,58,if(index + longest > input.length()) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,59,max = input.length() - index;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,61,// descend so as to get a greedy algorithm
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,62,for(int i=max; i >= shortest; i--) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,63,"CharSequence subSeq = input.subSequence(index, index + i);"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,64,CharSequence result = lookupMap.get(subSeq);
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,65,if(result != null) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,66,out.write(result.toString());
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,67,return i;
