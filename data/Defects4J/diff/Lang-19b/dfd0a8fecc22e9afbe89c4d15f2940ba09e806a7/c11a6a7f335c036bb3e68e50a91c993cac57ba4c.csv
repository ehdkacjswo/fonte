is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,15, limitations under the License.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,18,ackage org.apache.commons.lang3.event;
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,20,mport java.lang.reflect.InvocationTargetException;
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,21,mport java.lang.reflect.Method;
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,22,mport java.util.EventListener;
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,23,mport java.util.EventObject;
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,25,mport org.apache.commons.lang3.Validate;
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,26,mport org.apache.commons.lang3.reflect.MethodUtils;
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,29, <p>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,30, The ReflectiveEventSupport class provides a means of posting
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,31, {@link EventObject}s to registered listeners. The class uses reflection to
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,32," call specified methods on the listeners, either by {@link Method} or method"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,33, name.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,34, </p>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,36, <p>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,37, <em>NOTE: The methods on the listeners must be accessible in order to be
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,38, called.</em>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,39, </p>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,41, <p>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,42, Example:
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,43, <code><pre>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,44, ReflectiveEventSupport<ChangeListener> reflectiveEventSupport =
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,45,    new ReflectiveEventSupport<ChangeListener>(this);
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,49, reflectiveEventSupport.addListener(listener);
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,53," reflectiveEventSupport.fireEvent(""stateChanged"","
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,54,     new ChangeEvent(reflectiveEventSupport.getSource());
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,55, </pre></code>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,56, </p>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,58," @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,60, @param <L> the subclass of {@link EventListener} that this event support
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,61,        class can register.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,63, @since 3.0
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,65,ublic class ReflectiveEventSupport<L extends EventListener>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,66,xtends AbstractEventSupport<L> {
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,69, The serialization unique version identifier.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,71,rivate static final long serialVersionUID = 20100310L;
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,74, Constructs a new ReflectiveEventSupport object and associates it with the
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,75, object that can be used as the source of all events sent to the
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,76, listeners.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,78, @param source the object that can be used as the source of all events
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,79,        posted to the listeners.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,81, @throws NullPointerException if <code>source</code> is
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,82,         <code>null</code>.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,84,ublic ReflectiveEventSupport(Object source) {
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,85,uper(source);
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,89, Fires the provided event object to the named method specified on each of
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,90, the listeners registered with this event support class.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,92, @param <E>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,93,            the {@link EventObject} type that will be posted to the
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,94,            listeners.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,96, @param methodName
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,97,            the name of the method that should be called on each of the
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,98,            listeners.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,99, @param eventObject
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,100,            the event object that will be passed to the listener's method.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,102, @throws NullPointerException
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,103,             if <code>methodName</code> is <code>null</code>.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,104, @throws NoSuchMethodException
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,105,             if there is no such accessible method
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,106, @throws InvocationTargetException
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,107,             wraps an exception thrown by the method invoked
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,108, @throws IllegalAccessException
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,109,             if the requested method is not accessible via reflection
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,111,"ublic <E extends EventObject> void fireEvent(String methodName, E eventObject)"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,112,"hrows NoSuchMethodException, IllegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,113,"alidate.notNull(methodName, ""methodName cannot be null"");"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,114,or (L listener : this) {
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,115,"ethodUtils.invokeMethod(listener, methodName, eventObject);"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,120, Fires the provided event object to the method specified on each of the
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,121, listeners registered with this event support class.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,123, @param <E>
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,124,            the {@link EventObject} type that will be posted to the
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,125,            listeners.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,126, @param method
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,127,            the method that should be called on each of the listeners.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,128, @param eventObject
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,129,            the event object that will be passed to the listener's method.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,131, @throws NullPointerException
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,132,             if <code>method</code> is <code>null</code>.
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,133, @throws NoSuchMethodException
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,134,            if there is no such accessible method
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,135, @throws InvocationTargetException
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,136,            wraps an exception thrown by the method invoked
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,137, @throws IllegalAccessException
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,138,            if the requested method is not accessible via reflection
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,140,"ublic <E extends EventObject> void fireEvent(Method method, E eventObject)"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,141,"hrows NoSuchMethodException, IllegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,142,"alidate.notNull(method, ""method cannot be null"");"
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,143,ethod accessibleMethod = MethodUtils.getAccessibleMethod(method);
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,144,or (L listener : this) {
False,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,145,"ccessibleMethod.invoke(listener, eventObject);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,18,ackage org.apache.commons.lang3.event;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,20,mport java.lang.reflect.InvocationTargetException;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,21,mport java.lang.reflect.Method;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,23,mport javax.swing.event.ChangeEvent;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,24,mport javax.swing.event.ChangeListener;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,26,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,29, <p>
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,30, The ReflectiveEventSupportTest class provides a set of unit tests for the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,31, {@link ReflectiveEventSupport} class.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,32, </p>
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,34," @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,36, @since 3.0
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,38,ublic class ReflectiveEventSupportTest extends TestCase {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,41, The event support mock object that will be used for testing.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,43,rivate ReflectiveEventSupport<ChangeListener> eventSupport;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,46, The first listener that will be registered for change events.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,48,rivate ChangeDetectedChangeListener firstChangeListener;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,51, The second listener that will be registered for change events.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,53,rivate ChangeDetectedChangeListener secondChangeListener;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,56, Creates the {@link ReflectiveEventSupport} instance under test and
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,57, registers a couple of {@link ChangeDetectedChangeListener}s with the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,58, event support.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,60,rotected void setUp() throws Exception {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,61,ventSupport = new ReflectiveEventSupport<ChangeListener>(this);
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,62,irstChangeListener = new ChangeDetectedChangeListener();
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,63,econdChangeListener = new ChangeDetectedChangeListener();
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,64,ventSupport.addListener(firstChangeListener);
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,65,ventSupport.addListener(secondChangeListener);
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,69, Tests the {@link ReflectiveEventSupport#ReflectiveEventSupport(Object)}
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,70, constructor.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,72,ublic void testReflectiveEventSupport() {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,73,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,75,ew ReflectiveEventSupport<ChangeListener>(null);
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,76,"ail(""ReflectiveEventSupport(null) did not throw an IllegalArgumentException"");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,78,atch (NullPointerException iae)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,80,"/ Success, the exception was properly thrown"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,85, Tests the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,86," {@link ReflectiveEventSupport#fireEvent(String, java.util.EventObject)}"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,87, method to ensure that events will be propagated to accessible methods
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,88, with the provided name.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,90, @throws NoSuchMethodException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,91, @throws IllegalAccessException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,92, @throws InvocationTargetException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,94,"ublic void testFireEventByMethodName() throws NoSuchMethodException,"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,95,"llegalAccessException, InvocationTargetException {"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,96,hangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,97,"ventSupport.fireEvent(""stateChanged"", changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,98,"ssertTrue(""ChangeEvent not propogated to first change lisetener"","
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,99,irstChangeListener.isChanged());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,100,"ssertTrue(""ChangeEvent not propogated to second change lisetener"","
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,101,econdChangeListener.isChanged());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,105, Tests the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,106," {@link ReflectiveEventSupport#fireEvent(String, java.util.EventObject)}"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,107, method to ensure that a {@link NoSuchMethodException} is thrown if the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,108, method is not accessible.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,110, @throws IllegalAccessException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,111, @throws InvocationTargetException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,113,ublic void testFireEventByMethodNameToInaccessibleMethods()
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,114,"hrows IllegalAccessException, InvocationTargetException {"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,116,hangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,118,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,120,"ventSupport.fireEvent(""privateMethod"", changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,121,"ail(""eventSupport.fireEvent() did not throw an exception "" +"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,122,"for a private method"");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,124,atch (NoSuchMethodException nsme)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,126,/ Success
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,129,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,131,"ventSupport.fireEvent(""protectedMethod"", changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,132,"ail(""eventSupport.fireEvent() did not throw an exception "" +"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,133,"for a protected method"");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,135,atch (NoSuchMethodException nsme)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,137,/ Success
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,140,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,142,"ventSupport.fireEvent(""defaultMethod"", changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,143,"ail(""eventSupport.fireEvent() did not throw an exception "" +"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,144,"for a default method"");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,146,atch (NoSuchMethodException nsme)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,148,/ Success
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,153, Tests the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,154," {@link ReflectiveEventSupport#fireEvent(String, java.util.EventObject)}"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,155, method to ensure that a {@link NullPointerException} is thrown if a
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,156, <code>null</code> value is provided for the method name.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,158, @throws NoSuchMethodException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,159, @throws IllegalAccessException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,160, @throws InvocationTargetException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,162,"ublic void testFireEventNullMethodName() throws NoSuchMethodException,"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,163,"llegalAccessException,"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,164,nvocationTargetException {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,165,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,167,hangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,168,"ventSupport.fireEvent((String) null, changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,169,"ail(""eventSupport.fireEvent() did not throw an exception for a "" +"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,170,"null method name."");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,172,atch (NullPointerException npe)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,174,/ Success
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,179, Tests the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,180," {@link ReflectiveEventSupport#fireEvent(Method, java.util.EventObject)}"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,181, method to ensure that events will be propagated to the accessible method
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,182, provided.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,184, @throws NoSuchMethodException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,185, @throws IllegalAccessException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,186, @throws InvocationTargetException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,188,"ublic void testFireEventByMethod() throws NoSuchMethodException,"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,189,"llegalAccessException, InvocationTargetException {"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,190,hangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,191,ethod stateChangedMethod =
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,192,"hangeListener.class.getMethod(""stateChanged"", ChangeEvent.class);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,193,"ventSupport.fireEvent(stateChangedMethod, changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,194,"ssertTrue(""ChangeEvent not propogated to first change lisetener"","
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,195,irstChangeListener.isChanged());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,196,"ssertTrue(""ChangeEvent not propogated to second change lisetener"","
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,197,econdChangeListener.isChanged());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,201, Tests the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,202," {@link ReflectiveEventSupport#fireEvent(Method, java.util.EventObject)}"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,203, method to ensure that a {@link NoSuchMethodException} is thrown if the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,204, method is not accessible.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,206, @throws IllegalAccessException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,207, @throws InvocationTargetException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,209,ublic void testFireEventByMethodToInaccessibleMethods()
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,210,"hrows IllegalAccessException, InvocationTargetException {"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,212,hangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,214,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,216,ethod privateMethod =
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,217,"hangeListener.class.getMethod(""privateMethod"","
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,218,hangeEvent.class);
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,219,"ventSupport.fireEvent(privateMethod, changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,220,"ail(""eventSupport.fireEvent() did not throw an exception "" +"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,221,"for a private method"");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,223,atch (NoSuchMethodException nsme)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,225,/ Success
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,228,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,230,ethod protectedMethod =
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,231,"hangeListener.class.getMethod(""protectedMethod"","
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,232,hangeEvent.class);
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,233,"ventSupport.fireEvent(protectedMethod, changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,234,"ail(""eventSupport.fireEvent() did not throw an exception "" +"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,235,"for a protected method"");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,237,atch (NoSuchMethodException nsme)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,239,/ Success
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,242,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,244,ethod defaultMethod =
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,245,"hangeListener.class.getMethod(""defaultMethod"","
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,246,hangeEvent.class);
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,247,"ventSupport.fireEvent(defaultMethod, changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,248,"ail(""eventSupport.fireEvent() did not throw an exception "" +"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,249,"for a default method"");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,251,atch (NoSuchMethodException nsme)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,253,/ Success
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,258, Tests the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,259," {@link ReflectiveEventSupport#fireEvent(Method, java.util.EventObject)}"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,260, method to ensure that a {@link NullPointerException} is thrown if a
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,261, <code>null</code> value is provided for the method.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,263, @throws NoSuchMethodException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,264, @throws IllegalAccessException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,265, @throws InvocationTargetException
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,267,"ublic void testFireEventNullMethod() throws NoSuchMethodException,"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,268,"llegalAccessException, InvocationTargetException {"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,269,ry
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,271,hangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,272,"ventSupport.fireEvent((Method) null, changeEvent);"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,273,"ail(""eventSupport.fireEvent() did not throw an exception for a "" +"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,274,"null method."");"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,276,atch (NullPointerException npe)
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,278,/ Success
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,283, Tests the {@link ReflectiveEventSupport#getSource()} method to ensure it
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,284, returns the source object it was originally provided.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,286,ublic void testGetSource() {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,287,"ssertEquals(this, eventSupport.getSource());"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,291, <p>
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,292, The ChangeDetectedChangeListener class provides a version of the
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,293, {@link ChangeListener} interface that detects when the listener has
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,294, been called. The class provides an {@link #isChanged()} method that
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,295, will indicate whether or not the listener has been called.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,296, </p>
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,298,ublic class ChangeDetectedChangeListener implements ChangeListener {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,301, Represents whether or not the listener has detected a change.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,303,rivate boolean changed = false;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,306, Called whenever a change is detected.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,308, @param changeEvent the change event indicating a state change.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,310,ublic void stateChanged(ChangeEvent changeEvent) {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,311,his.changed = true;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,315, Returns whether or not the listener has detected a change event.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,317, @return <code>true</code> if the listener has detected a change
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,318,"         event, <code>false</code> otherwise."
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,320,ublic boolean isChanged() {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,321,eturn this.changed;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,325, A default (package private) method used to test
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,326, ReflectiveEventSupport calls to inaccessible methods.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,328, @param changeEvent not used.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,330,oid defaultMethod(ChangeEvent changeEvent) {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,331,his.changed = true;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,335, A protected method used to test ReflectiveEventSupport calls to
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,336, inaccessible methods.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,338, @param changeEvent not used.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,340,rotected void protectedMethod(ChangeEvent changeEvent) {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,341,his.changed = true;
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,345, A private method used to test ReflectiveEventSupport calls to
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,346, inaccessible methods.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,348, @param changeEvent not used.
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,350,"SuppressWarnings(""unused"")"
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,351,rivate void privateMethod(ChangeEvent changeEvent) {
False,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,352,his.changed = true;
