is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,77," @version $Id: EqualsBuilder.java,v 1.24 2004/02/18 22:53:24 ggregory Exp $"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,77,"* @version $Id: EqualsBuilder.java,v 1.25 2004/08/25 21:20:13 ggregory Exp $"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,291,"/the simple case, not an array, just test the element"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,291,"// The simple case, not an array, just test the element"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,293,} else if (lhs.getClass() != rhs.getClass()) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,294,"// Here when we compare different dimensions, for example: a boolean[][] to a boolean[]"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,295,isEquals = false;
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,297,"// 'Switch' on type of array, to dispatch to the correct handler"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,298,// This handles multi dimensional arrays of the same depth
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,299,else if (lhs instanceof long[]) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,300,"append((long[]) lhs, (long[]) rhs);"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,301,} else if (lhs instanceof int[]) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,302,"append((int[]) lhs, (int[]) rhs);"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,303,} else if (lhs instanceof short[]) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,304,"append((short[]) lhs, (short[]) rhs);"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,305,} else if (lhs instanceof char[]) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,306,"append((char[]) lhs, (char[]) rhs);"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,307,} else if (lhs instanceof byte[]) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,308,"append((byte[]) lhs, (byte[]) rhs);"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,309,} else if (lhs instanceof double[]) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,310,"append((double[]) lhs, (double[]) rhs);"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,311,} else if (lhs instanceof float[]) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,312,"append((float[]) lhs, (float[]) rhs);"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,313,} else if (lhs instanceof boolean[]) {
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,314,"append((boolean[]) lhs, (boolean[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,294,"/'Switch' on type of array, to dispatch to the correct handler"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,295,/ This handles multi dimensional arrays
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,296,f (lhs instanceof long[]) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,297,"ppend((long[]) lhs, (long[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,298, else if (lhs instanceof int[]) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,299,"ppend((int[]) lhs, (int[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,300, else if (lhs instanceof short[]) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,301,"ppend((short[]) lhs, (short[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,302, else if (lhs instanceof char[]) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,303,"ppend((char[]) lhs, (char[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,304, else if (lhs instanceof byte[]) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,305,"ppend((byte[]) lhs, (byte[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,306, else if (lhs instanceof double[]) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,307,"ppend((double[]) lhs, (double[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,308, else if (lhs instanceof float[]) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,309,"ppend((float[]) lhs, (float[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,310, else if (lhs instanceof boolean[]) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,311,"ppend((boolean[]) lhs, (boolean[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,312, else {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,313,/ Not an array of primitives
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,314,"ppend((Object[]) lhs, (Object[]) rhs);"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,316,// Not an array of primitives
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,317,"append((Object[]) lhs, (Object[]) rhs);"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,321, <p>Test if two <code>long</code>s are equal.</p>
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,323, @param lhs  the left hand <code>long</code>
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,324, @param rhs  the right hand <code>long</code>
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,323,* <p>
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,324,* Test if two <code>long</code> s are equal.
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,325,* </p>
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,327,* @param lhs
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,328,*                  the left hand <code>long</code>
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,329,* @param rhs
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,330,*                  the right hand <code>long</code>
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,41," @version $Id: ArrayUtilsTest.java,v 1.27 2004/06/06 03:53:24 bayard Exp $"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,41,"* @version $Id: ArrayUtilsTest.java,v 1.28 2004/08/25 21:20:13 ggregory Exp $"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,106,ublic void testIsEquals() {
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,107,"ong[][] array1 = new long[][] {{2,5}, {4,5}};"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,108,"ong[][] array2 = new long[][] {{2,5}, {4,6}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,106,"private void assertIsEquals(Object array1, Object array2, Object array3) {"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,108,"assertEquals(true, ArrayUtils.isEquals(array2, array2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,109,"assertEquals(true, ArrayUtils.isEquals(array3, array3));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,112,"bject[] array3 = new Object[] {new String(new char[] {'A', 'B'})};"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,113,"bject[] array4 = new Object[] {""AB""};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,111,"assertEquals(false, ArrayUtils.isEquals(array2, array1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,112,"assertEquals(false, ArrayUtils.isEquals(array1, array3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,113,"assertEquals(false, ArrayUtils.isEquals(array3, array1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,114,"assertEquals(false, ArrayUtils.isEquals(array1, array2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,115,"assertEquals(false, ArrayUtils.isEquals(array2, array1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,118,public void testIsEquals() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,119,"long[][] larray1 = new long[][]{{2, 5}, {4, 5}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,120,"long[][] larray2 = new long[][]{{2, 5}, {4, 6}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,121,"long[] larray3 = new long[]{2, 5};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,122,"this.assertIsEquals(larray1, larray2, larray3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,124,"int[][] iarray1 = new int[][]{{2, 5}, {4, 5}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,125,"int[][] iarray2 = new int[][]{{2, 5}, {4, 6}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,126,"int[] iarray3 = new int[]{2, 5};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,127,"this.assertIsEquals(iarray1, iarray2, iarray3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,129,"short[][] sarray1 = new short[][]{{2, 5}, {4, 5}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,130,"short[][] sarray2 = new short[][]{{2, 5}, {4, 6}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,131,"short[] sarray3 = new short[]{2, 5};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,132,"this.assertIsEquals(sarray1, sarray2, sarray3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,134,"float[][] farray1 = new float[][]{{2, 5}, {4, 5}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,135,"float[][] farray2 = new float[][]{{2, 5}, {4, 6}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,136,"float[] farray3 = new float[]{2, 5};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,137,"this.assertIsEquals(farray1, farray2, farray3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,139,"double[][] darray1 = new double[][]{{2, 5}, {4, 5}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,140,"double[][] darray2 = new double[][]{{2, 5}, {4, 6}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,141,"double[] darray3 = new double[]{2, 5};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,142,"this.assertIsEquals(darray1, darray2, darray3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,144,"byte[][] byteArray1 = new byte[][]{{2, 5}, {4, 5}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,145,"byte[][] byteArray2 = new byte[][]{{2, 5}, {4, 6}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,146,"byte[] byteArray3 = new byte[]{2, 5};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,147,"this.assertIsEquals(byteArray1, byteArray2, byteArray3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,149,"char[][] charArray1 = new char[][]{{2, 5}, {4, 5}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,150,"char[][] charArray2 = new char[][]{{2, 5}, {4, 6}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,151,"char[] charArray3 = new char[]{2, 5};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,152,"this.assertIsEquals(charArray1, charArray2, charArray3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,154,"boolean[][] barray1 = new boolean[][]{{true, false}, {true, true}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,155,"boolean[][] barray2 = new boolean[][]{{true, false}, {true, false}};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,156,"boolean[] barray3 = new boolean[]{false, true};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,157,"this.assertIsEquals(barray1, barray2, barray3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,159,"Object[] array3 = new Object[]{new String(new char[]{'A', 'B'})};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,160,"Object[] array4 = new Object[]{""AB""};"
False,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,30," @version $Id: EqualsBuilderTest.java,v 1.9 2004/02/18 23:00:51 ggregory Exp $"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,30,"* @version $Id: EqualsBuilderTest.java,v 1.10 2004/08/25 21:20:15 ggregory Exp $"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,673,// compare 1 dim to 2.
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,674,"boolean[] array3 = new boolean[]{true, true};"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,675,"assertFalse(new EqualsBuilder().append(array1, array3).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,676,"assertFalse(new EqualsBuilder().append(array3, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,677,"assertFalse(new EqualsBuilder().append(array2, array3).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,678,"assertFalse(new EqualsBuilder().append(array3, array2).isEquals());"
