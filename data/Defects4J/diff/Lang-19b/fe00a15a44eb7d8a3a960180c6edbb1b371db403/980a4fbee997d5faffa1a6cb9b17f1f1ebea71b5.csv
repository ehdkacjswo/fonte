is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,15, limitations under the License.
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,17,ackage org.apache.commons.lang;
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,20, <p>Thrown when it is impossible or undesirable to consume or throw a checked exception.</p>
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,21, This exception supplements the standard exception classes by providing a more
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,22, semantically rich description of the problem.</p>
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,24, <p><code>UnhandledException</code> represents the case where a method has to deal
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,25, with a checked exception but does not wish to.
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,26," Instead, the checked exception is rethrown in this unchecked wrapper.</p>"
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,28, <pre>
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,29, public void foo() {
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,30,   try {
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,31,     // do something that throws IOException
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,32,   } catch (IOException ex) {
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,33,     // don't want to or can't throw IOException from foo()
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,34,     throw new UnhandledException(ex);
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,37, </pre>
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,39, @author Matthew Hawthorne
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,40, @since 2.0
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,41, @version $Id$
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,43,ublic class UnhandledException extends RuntimeException {
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,46, Required for serialization support.
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,48, @see java.io.Serializable
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,50,rivate static final long serialVersionUID = 1832101364842773720L;
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,53, Constructs the exception using a cause.
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,55, @param cause  the underlying cause
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,57,ublic UnhandledException(Throwable cause) {
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,58,uper(cause);
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,62, Constructs the exception using a message and cause.
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,64, @param message  the message to use
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,65, @param cause  the underlying cause
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,67,"ublic UnhandledException(String message, Throwable cause) {"
False,src/java/org/apache/commons/lang/UnhandledException.java,src/java/org/apache/commons/lang/UnhandledException.java,68,"uper(message, cause);"
