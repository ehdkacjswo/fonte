is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,20,mport java.awt.event.ActionEvent;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,21,mport java.awt.event.ActionListener;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,20,import java.beans.PropertyVetoException;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,21,import java.beans.PropertyChangeEvent;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,22,import java.beans.VetoableChangeListener;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,30,import java.util.Date;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,43,ventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,45,EventListenerSupport<VetoableChangeListener> listenerSupport = EventListenerSupport.create(VetoableChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,57,ventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,59,EventListenerSupport<VetoableChangeListener> listenerSupport = EventListenerSupport.create(VetoableChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,69,ublic void testEventDispatchOrder()
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,71,public void testEventDispatchOrder() throws PropertyVetoException
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,71,ventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,72,inal List<ActionListener> calledListeners = new ArrayList<ActionListener>();
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,73,EventListenerSupport<VetoableChangeListener> listenerSupport = EventListenerSupport.create(VetoableChangeListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,74,final List<VetoableChangeListener> calledListeners = new ArrayList<VetoableChangeListener>();
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,74,inal ActionListener listener1 = createListener(calledListeners);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,75,inal ActionListener listener2 = createListener(calledListeners);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,76,final VetoableChangeListener listener1 = createListener(calledListeners);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,77,final VetoableChangeListener listener2 = createListener(calledListeners);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,78,"istenerSupport.fire().actionPerformed(new ActionEvent(""Hello"", 0, ""Hello""));"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,80,"listenerSupport.fire().vetoableChange(new PropertyChangeEvent(new Date(), ""Day"", 4, 5));"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,110,ublic void testRemoveListenerDuringEvent()
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,112,public void testRemoveListenerDuringEvent() throws PropertyVetoException
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,112,inal EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,114,final EventListenerSupport<VetoableChangeListener> listenerSupport = EventListenerSupport.create(VetoableChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,118,"istenerSupport.fire().actionPerformed(new ActionEvent(""Hello"", 0, ""Hello""));"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,120,"listenerSupport.fire().vetoableChange(new PropertyChangeEvent(new Date(), ""Day"", 4, 5));"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,123,inal EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,125,final EventListenerSupport<VetoableChangeListener> listenerSupport = EventListenerSupport.create(VetoableChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,125,ctionListener[] listeners = listenerSupport.getListeners();
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,127,VetoableChangeListener[] listeners = listenerSupport.getListeners();
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,127,"ssertEquals(ActionListener.class, listeners.getClass().getComponentType());"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,128,ctionListener[] empty = listeners;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,129,"assertEquals(VetoableChangeListener.class, listeners.getClass().getComponentType());"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,130,VetoableChangeListener[] empty = listeners;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,132,ctionListener listener1 = EasyMock.createNiceMock(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,134,VetoableChangeListener listener1 = EasyMock.createNiceMock(VetoableChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,135,ctionListener listener2 = EasyMock.createNiceMock(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,137,VetoableChangeListener listener2 = EasyMock.createNiceMock(VetoableChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,144,"ublic void testSerialization() throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,145,ventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,146,istenerSupport.addListener(new ActionListener() {
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,146,"public void testSerialization() throws IOException, ClassNotFoundException, PropertyVetoException {"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,147,EventListenerSupport<VetoableChangeListener> listenerSupport = EventListenerSupport.create(VetoableChangeListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,148,listenerSupport.addListener(new VetoableChangeListener() {
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,148,ublic void actionPerformed(ActionEvent e) {
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,150,public void vetoableChange(PropertyChangeEvent e) {
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,151,istenerSupport.addListener(EasyMock.createNiceMock(ActionListener.class));
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,153,listenerSupport.addListener(EasyMock.createNiceMock(VetoableChangeListener.class));
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,162,ventListenerSupport<ActionListener> deserializedListenerSupport = (EventListenerSupport<ActionListener>) new ObjectInputStream(
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,164,EventListenerSupport<VetoableChangeListener> deserializedListenerSupport = (EventListenerSupport<VetoableChangeListener>) new ObjectInputStream(
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,166,ctionListener[] listeners = deserializedListenerSupport.getListeners();
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,167,"ssertEquals(ActionListener.class, listeners.getClass().getComponentType());"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,168,VetoableChangeListener[] listeners = deserializedListenerSupport.getListeners();
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,169,"assertEquals(VetoableChangeListener.class, listeners.getClass().getComponentType());"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,171,ctionListener listener = listeners[0];
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,172,"ctionEvent evt = new ActionEvent(new Object(), 666, ""sit"");"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,173,istener.actionPerformed(evt);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,173,VetoableChangeListener listener = listeners[0];
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,174,"PropertyChangeEvent evt = new PropertyChangeEvent(new Date(), ""Day"", 7, 9);"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,175,listener.vetoableChange(evt);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,175,eserializedListenerSupport.fire().actionPerformed(evt);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,177,deserializedListenerSupport.fire().vetoableChange(evt);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,183,ublic void testSubclassInvocationHandling() {
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,185,public void testSubclassInvocationHandling() throws PropertyVetoException {
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,186,ventListenerSupport<ActionListener> eventListenerSupport = new EventListenerSupport<ActionListener>(
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,187,ctionListener.class) {
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,188,EventListenerSupport<VetoableChangeListener> eventListenerSupport = new EventListenerSupport<VetoableChangeListener>(
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,189,VetoableChangeListener.class) {
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,196,"eturn ""actionPerformed"".equals(method.getName())"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,197,"& ""ignore"".equals(((ActionEvent) args[0]).getActionCommand()) ? null"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,198,"return ""vetoableChange"".equals(method.getName())"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,199,"&& ""Hour"".equals(((PropertyChangeEvent) args[0]).getPropertyName()) ? null"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,204,ctionListener listener = EasyMock.createNiceMock(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,206,VetoableChangeListener listener = EasyMock.createNiceMock(VetoableChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,206,bject source = new Object();
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,207,"ctionEvent ignore = new ActionEvent(source, 0, ""ignore"");"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,208,"ctionEvent respond = new ActionEvent(source, 1, ""respond"");"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,209,istener.actionPerformed(respond);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,208,Object source = new Date();
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,209,"PropertyChangeEvent ignore = new PropertyChangeEvent(source, ""Hour"", 5, 6);"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,210,"PropertyChangeEvent respond = new PropertyChangeEvent(source, ""Day"", 6, 7);"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,211,listener.vetoableChange(respond);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,211,ventListenerSupport.fire().actionPerformed(ignore);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,212,ventListenerSupport.fire().actionPerformed(respond);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,213,eventListenerSupport.fire().vetoableChange(ignore);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,214,eventListenerSupport.fire().vetoableChange(respond);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,216,rivate void addDeregisterListener(final EventListenerSupport<ActionListener> listenerSupport)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,218,private void addDeregisterListener(final EventListenerSupport<VetoableChangeListener> listenerSupport)
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,218,istenerSupport.addListener(new ActionListener()
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,220,listenerSupport.addListener(new VetoableChangeListener()
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,220,ublic void actionPerformed(ActionEvent e)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,222,public void vetoableChange(PropertyChangeEvent e)
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,227,rivate ActionListener createListener(final List<ActionListener> calledListeners)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,229,private VetoableChangeListener createListener(final List<VetoableChangeListener> calledListeners)
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,229,eturn new ActionListener()
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,231,return new VetoableChangeListener()
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,231,ublic void actionPerformed(ActionEvent e)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,233,public void vetoableChange(PropertyChangeEvent e)
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,19,mport java.awt.event.ActionEvent;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,20,mport java.awt.event.ActionListener;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,19,import javax.naming.event.ObjectChangeListener;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,26,import java.util.Date;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,54,ctionListener listener = handler.createListener(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,54,ObjectChangeListener listener = handler.createListener(ObjectChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,57,"ventUtils.addEventListener(src, ActionListener.class, listener);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,57,"EventUtils.addEventListener(src, ObjectChangeListener.class, listener);"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,62,"ssertEquals(""Class "" + src.getClass().getName() + "" does not have a public add"" + ActionListener.class.getSimpleName() + "" method which takes a parameter of type "" + ActionListener.class.getName() + ""."", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,62,"assertEquals(""Class "" + src.getClass().getName() + "" does not have a public add"" + ObjectChangeListener.class.getSimpleName() + "" method which takes a parameter of type "" + ObjectChangeListener.class.getName() + ""."", e.getMessage());"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,71,"ventUtils.addEventListener(src, ActionListener.class, new ActionListener()"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,71,"EventUtils.addEventListener(src, PropertyChangeListener.class, new PropertyChangeListener()"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,73,ublic void actionPerformed(ActionEvent e)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,73,public void propertyChange(PropertyChangeEvent e)
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,130,"rc.listeners.fire().event1(new ActionEvent(src, ActionEvent.ACTION_PERFORMED, ""event1""));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,130,"src.listeners.fire().event1(new PropertyChangeEvent(new Date(), ""Day"", 0, 1));"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,132,"rc.listeners.fire().event2(new ActionEvent(src, ActionEvent.ACTION_PERFORMED, ""event2""));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,132,"src.listeners.fire().event2(new PropertyChangeEvent(new Date(), ""Day"", 1, 2));"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,138,ublic void event1(ActionEvent e);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,138,public void event1(PropertyChangeEvent e);
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,140,ublic void event2(ActionEvent e);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,140,public void event2(PropertyChangeEvent e);
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,218,ublic void addActionListener(ActionListener listener)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,218,public void addPropertyChangeListener(PropertyChangeListener listener)
