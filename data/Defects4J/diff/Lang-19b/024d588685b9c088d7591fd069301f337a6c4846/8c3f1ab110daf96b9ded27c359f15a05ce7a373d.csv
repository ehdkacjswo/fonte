is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,71,* @author Matthew Hawthorne
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,72," @version $Id: ArrayUtils.java,v 1.14 2003/06/25 23:32:08 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,73,"* @version $Id: ArrayUtils.java,v 1.15 2003/06/25 23:33:47 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,909,// Primitive/Object converters
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,912,* <p>Converts an array of object Booleans to primitives.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,914,* <p>This method returns <code>null</code> if <code>null</code> input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,916,"* @param array  a <code>Boolean</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,917,* @return a <code>boolean</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,918,* @throws NullPointerException if array content is <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,920,public static boolean[] toPrimitive(final Boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,921,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,922,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,923,} else if (array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,924,return EMPTY_BOOLEAN_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,926,final boolean[] result = new boolean[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,927,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,928,result[i] = array[i].booleanValue();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,930,return result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,934,* <p>Converts an array of object Booleans to primitives handling null.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,936,* <p>This method returns <code>null</code> if <code>null</code> input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,938,"* @param array  a <code>Boolean</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,939,* @param valueForNull  the value to insert if <code>null</code> found
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,940,* @return a <code>boolean</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,942,"public static boolean[] toPrimitive(final Boolean[] array, final boolean valueForNull) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,943,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,944,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,945,} else if (array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,946,return EMPTY_BOOLEAN_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,948,final boolean[] result = new boolean[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,949,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,950,Boolean b = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,951,result[i] = (b == null ? valueForNull : b.booleanValue());
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,953,return result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,957,* <p>Converts an array of primitive booleans to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,959,* <p>This method returns <code>null</code> if <code>null</code> input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,961,* @param array  a <code>boolean</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,962,* @return a <code>Boolean</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,964,public static Boolean[] toObject(final boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,965,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,966,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,967,} else if (array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,968,return EMPTY_BOOLEAN_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,970,final Boolean[] result = new Boolean[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,971,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,972,result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,974,return result;
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,67," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,67,* @author Stephen Colebourne
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,70," @version $Id: ArrayUtilsTest.java,v 1.6 2003/03/23 21:47:30 scolebourne Exp $"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,70,* @author Matthew Hawthorne
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,71,"* @version $Id: ArrayUtilsTest.java,v 1.7 2003/06/25 23:33:47 scolebourne Exp $"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,83,estSuite suite = new TestSuite(ArrayUtilsTest.class);
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,84,"uite.setName(""ArrayUtils Tests"");"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,84,TestSuite suite = new TestSuite(ArrayUtilsTest.class);
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,85,"suite.setName(""ArrayUtils Tests"");"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,711,// testToPrimitive/Object for boolean
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,713,public void testToPrimitive_boolean() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,714,"assertEquals(null, ArrayUtils.toPrimitive(null));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,715,"assertSame(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.toPrimitive(new Boolean[0]));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,716,assertTrue(Arrays.equals(
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,717,"new boolean[] {true, false, true},"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,718,"ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, Boolean.FALSE, Boolean.TRUE}))"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,721,try {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,722,"ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, null});"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,723,fail();
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,724,} catch (NullPointerException ex) {}
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,727,public void testToPrimitive_boolean_boolean() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,728,"assertEquals(null, ArrayUtils.toPrimitive(null, false));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,729,"assertSame(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.toPrimitive(new Boolean[0], false));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,730,assertTrue(Arrays.equals(
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,731,"new boolean[] {true, false, true},"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,732,"ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, Boolean.FALSE, Boolean.TRUE}, false))"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,734,assertTrue(Arrays.equals(
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,735,"new boolean[] {true, false, false},"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,736,"ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, null, Boolean.FALSE}, false))"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,738,assertTrue(Arrays.equals(
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,739,"new boolean[] {true, true, false},"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,740,"ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, null, Boolean.FALSE}, true))"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,744,public void testToObject_boolean() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,745,"assertEquals(null, ArrayUtils.toObject(null));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,746,"assertSame(ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY, ArrayUtils.toObject(new boolean[0]));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,747,assertTrue(Arrays.equals(
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,748,"new Boolean[] {Boolean.TRUE, Boolean.FALSE, Boolean.TRUE},"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,749,"ArrayUtils.toObject(new boolean[] {true, false, true}))"
