is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,21,mport java.util.Formatter;
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,26,mport org.apache.commons.lang3.text.FormattableUtils;
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,45,"ublic abstract class Pair<L, R> implements Map.Entry<L, R>, Comparable<Pair<L, R>>, Formattable, Serializable {"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,43,"public abstract class Pair<L, R> implements Map.Entry<L, R>, Comparable<Pair<L, R>>, Serializable {"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,51, Basic format pattern.
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,53,"rivate static final String DEFAULT_FORMAT_STRING = ""(%1$s,%2$s)"";"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,170," <p>Format this {@link Pair}.  Basic format is in the form: (L,R).</p>"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,163,* <p>Formats the receiver using the given format.</p>
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,172," @param formatter  the target formatter to append to, not null"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,173," @param flags  the flags for output format, see {@code Formattable}"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,174," @param width  the width of the output, see {@code Formattable}"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,175," @param precision the precision of the output, see {@code Formattable}"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,177,"ublic void formatTo(Formatter formatter, int flags, int width, int precision) {"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,178,"ormattableUtils.append(String.format(DEFAULT_FORMAT_STRING, getLeft(), getRight()),"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,179,"ormatter, flags, width, precision);"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,183, Formats the receiver using the given string.
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,165,* <p>This uses {@link Formattable} to perform the formatting. Two variable may
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,166,* be used to embed the left and right elements. Use {@code %1$} for the left
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,167,* element (key) and {@code %2$} for the right element (value).
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,168,"* The default format used by {@code toString()} is {@code (%1$s,%2$s)}.</p>"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,185," @param format  the {@code Formattable} format string, where {@code %1$} is"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,186,"  the left element (key) and {@code %2$} is the right element (value), not null"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,170,"* @param format  the format string, optionally containing {@code %1$} and {@code %2$}, not null"
False,src/test/java/org/apache/commons/lang3/text/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/text/FormattableUtilsTest.java,24,mport org.apache.commons.lang3.tuple.Pair;
False,src/test/java/org/apache/commons/lang3/text/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/text/FormattableUtilsTest.java,118,Test
False,src/test/java/org/apache/commons/lang3/text/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/text/FormattableUtilsTest.java,119,ublic void testToStringFormattable() {
False,src/test/java/org/apache/commons/lang3/text/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/text/FormattableUtilsTest.java,120,"ssertEquals(""(Key,Value)"", FormattableUtils.toString(Pair.of(""Key"", ""Value"")));"
