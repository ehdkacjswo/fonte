is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,170,/a lot of things can go wrong
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,170,// a lot of things can go wrong
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,177,"ssertEquals(""createNumber(String) 5 failed"", new Long(Integer.MAX_VALUE + 1L), NumberUtils.createNumber("""" + (Integer.MAX_VALUE + 1L)));"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,177,"assertEquals(""createNumber(String) 5 failed"", new Long(Integer.MAX_VALUE + 1L), NumberUtils.createNumber("""""
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,178,+ (Integer.MAX_VALUE + 1L)));
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,190,"assertEquals(""createNumber(String) failed"", new BigInteger(""12345678901234567890""), NumberUtils"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,191,".createNumber(""12345678901234567890L""));"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,191,f(SystemUtils.isJavaVersionAtLeast(1.3f)) {
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,192,"ssertEquals(""createNumber(String) 15 failed"", new BigDecimal(""1.1E-700""), NumberUtils.createNumber(""1.1E-700F""));"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,194,if (SystemUtils.isJavaVersionAtLeast(1.3f)) {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,195,"assertEquals(""createNumber(String) 15 failed"", new BigDecimal(""1.1E-700""), NumberUtils"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,196,".createNumber(""1.1E-700F""));"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,194,ssertEquals(
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,195,"createNumber(String) 16 failed"","
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,196,"ew Long(""10"" + Integer.MAX_VALUE),"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,197,"umberUtils.createNumber(""10"" + Integer.MAX_VALUE + ""L""));"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,198,ssertEquals(
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,199,"createNumber(String) 17 failed"","
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,200,"ew Long(""10"" + Integer.MAX_VALUE),"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,201,"umberUtils.createNumber(""10"" + Integer.MAX_VALUE));"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,202,ssertEquals(
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,203,"createNumber(String) 18 failed"","
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,204,"ew BigInteger(""10"" + Long.MAX_VALUE),"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,205,"umberUtils.createNumber(""10"" + Long.MAX_VALUE));"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,198,"assertEquals(""createNumber(String) 16 failed"", new Long(""10"" + Integer.MAX_VALUE), NumberUtils"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,199,".createNumber(""10"" + Integer.MAX_VALUE + ""L""));"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,200,"assertEquals(""createNumber(String) 17 failed"", new Long(""10"" + Integer.MAX_VALUE), NumberUtils"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,201,".createNumber(""10"" + Integer.MAX_VALUE));"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,202,"assertEquals(""createNumber(String) 18 failed"", new BigInteger(""10"" + Long.MAX_VALUE), NumberUtils"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,203,".createNumber(""10"" + Long.MAX_VALUE));"
