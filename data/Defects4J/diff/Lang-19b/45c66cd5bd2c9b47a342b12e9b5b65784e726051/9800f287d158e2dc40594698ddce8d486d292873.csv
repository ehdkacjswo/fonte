is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,172,"/besides modularity, this has the advantage of autoboxing primitives:"
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,173,"rivate static int hashMember(String name, Object value) throws IllegalArgumentException,"
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,174,"llegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,175,nt part1 = name.hashCode() * 127;
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,176,f (value == null) {
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,177,eturn part1;
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,179,f (value.getClass().isArray()) {
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,180,"eturn part1 ^ arrayMemberHash(value.getClass().getComponentType(), value);"
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,182,f (value instanceof Annotation) {
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,183,eturn part1 ^ hashCode((Annotation) value);
False,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,185,eturn part1 ^ value.hashCode();
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,190,"//besides modularity, this has the advantage of autoboxing primitives:"
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,191,"private static int hashMember(String name, Object value) throws IllegalArgumentException,"
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,192,"IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,193,int part1 = name.hashCode() * 127;
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,194,if (value == null) {
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,195,return part1;
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,197,if (value.getClass().isArray()) {
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,198,"return part1 ^ arrayMemberHash(value.getClass().getComponentType(), value);"
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,200,if (value instanceof Annotation) {
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,201,return part1 ^ hashCode((Annotation) value);
True,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,src/main/java/org/apache/commons/lang3/AnnotationUtils.java,203,return part1 ^ value.hashCode();
