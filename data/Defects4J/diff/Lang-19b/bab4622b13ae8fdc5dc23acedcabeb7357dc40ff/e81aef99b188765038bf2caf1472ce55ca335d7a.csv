is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,18,import java.io.Serializable;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,21,* A mutable <code>Object</code>.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,23,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,24,"* @version $Id: MutableObject.java,v 1.1 2004/07/08 00:02:35 scolebourne Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,26,public class MutableObject
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,27,"implements Mutable, Serializable {"
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,29,/** Serialization lock. */
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,30,private static final long serialVersionUID = 86241875189L;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,32,/** The mutable value. */
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,33,private Object value;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,36,* Constructs a new MutableObject with the default value of null.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,38,public MutableObject() {
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,39,super();
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,43,* Constructs a new MutableObject with the specified value.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,45,* @param value a value.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,47,public MutableObject(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,48,super();
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,49,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,54,* Gets the value.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,56,* @return the value
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,58,public Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,59,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,63,* Sets the value.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,65,* @param value  the value to set
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,67,public void setValue(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,68,this.value = value;;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,73,* Checks if this object equals the specified object.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,74,* <p>
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,75,* The object must be a MutableObject with an equal value to be equal.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,77,* @param obj  the object to compare to
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,78,* @return true if equal
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,80,public boolean equals(Object obj) {
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,81,if (obj instanceof MutableObject) {
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,82,Object other = ((MutableObject) obj).value;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,83,return (value == other || (value != null && value.equals(other)));
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,85,return false;
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,89,* Returns a suitable hashcode for this mutable.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,91,* @return a suitable hashcode
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,93,public int hashCode() {
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,94,return (value == null ? 0 : value.hashCode());
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,98,* Returns the String value of this mutable.
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,100,* @return the mutable value as a string
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,102,public String toString() {
True,src/java/org/apache/commons/lang/mutable/MutableObject.java,src/java/org/apache/commons/lang/mutable/MutableObject.java,103,"return (value == null ? ""null"" : value.toString());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,20,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,21,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,24,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,26,"* @version $Id: MutableObjectTest.java,v 1.1 2004/07/08 00:02:35 scolebourne Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,27,* @see MutableShort
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,29,public class MutableObjectTest extends TestCase {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,31,public MutableObjectTest(String testName) {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,32,super(testName);
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,35,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,36,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,39,public static Test suite() {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,40,return new TestSuite(MutableObjectTest.class);
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,44,public void testConstructors() {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,45,"assertEquals(null, new MutableObject().getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,47,Integer i = new Integer(6);
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,48,"assertSame(i, new MutableObject(i).getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,49,"assertSame(""HI"", new MutableObject(""HI"").getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,50,"assertSame(null, new MutableObject(null).getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,53,public void testGetSet() {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,54,final MutableObject mutNum = new MutableObject();
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,55,"assertEquals(null, new MutableObject().getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,57,"mutNum.setValue(""HELLO"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,58,"assertSame(""HELLO"", mutNum.getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,60,mutNum.setValue(null);
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,61,"assertSame(null, mutNum.getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,64,public void testEquals() {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,65,"final MutableObject mutNumA = new MutableObject(""ALPHA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,66,"final MutableObject mutNumB = new MutableObject(""ALPHA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,67,"final MutableObject mutNumC = new MutableObject(""BETA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,68,final MutableObject mutNumD = new MutableObject(null);
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,70,"assertEquals(true, mutNumA.equals(mutNumA));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,71,"assertEquals(true, mutNumA.equals(mutNumB));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,72,"assertEquals(true, mutNumB.equals(mutNumA));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,73,"assertEquals(true, mutNumB.equals(mutNumB));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,74,"assertEquals(false, mutNumA.equals(mutNumC));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,75,"assertEquals(false, mutNumB.equals(mutNumC));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,76,"assertEquals(true, mutNumC.equals(mutNumC));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,77,"assertEquals(false, mutNumA.equals(mutNumD));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,78,"assertEquals(true, mutNumD.equals(mutNumD));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,80,"assertEquals(false, mutNumA.equals(null));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,81,"assertEquals(false, mutNumA.equals(new Object()));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,82,"assertEquals(false, mutNumA.equals(""0""));"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,85,public void testHashCode() {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,86,"final MutableObject mutNumA = new MutableObject(""ALPHA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,87,"final MutableObject mutNumB = new MutableObject(""ALPHA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,88,"final MutableObject mutNumC = new MutableObject(""BETA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,89,final MutableObject mutNumD = new MutableObject(null);
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,91,"assertEquals(true, mutNumA.hashCode() == mutNumA.hashCode());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,92,"assertEquals(true, mutNumA.hashCode() == mutNumB.hashCode());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,93,"assertEquals(false, mutNumA.hashCode() == mutNumC.hashCode());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,94,"assertEquals(false, mutNumA.hashCode() == mutNumD.hashCode());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,95,"assertEquals(true, mutNumA.hashCode() == ""ALPHA"".hashCode());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,96,"assertEquals(0, mutNumD.hashCode());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,99,public void testToString() {
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,100,"assertEquals(""HI"", new MutableObject(""HI"").toString());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,101,"assertEquals(""10.0"", new MutableObject(new Double(10)).toString());"
False,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,25," @version $Id: MutableTestSuite.java,v 1.3 2004/07/07 23:50:28 scolebourne Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,25,"* @version $Id: MutableTestSuite.java,v 1.4 2004/07/08 00:02:35 scolebourne Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,42,suite.addTest(MutableObjectTest.suite());
