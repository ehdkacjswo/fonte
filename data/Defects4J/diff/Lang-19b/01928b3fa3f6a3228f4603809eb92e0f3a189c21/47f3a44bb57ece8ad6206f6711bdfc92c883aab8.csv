is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Ant"", and ""Apache Software"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,33,*    permission of the Apache Group.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,56,import java.text.ChoiceFormat;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,57,import java.text.DateFormat;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,58,import java.text.MessageFormat;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,59,import java.text.SimpleDateFormat;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,60,import java.util.Calendar;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,61,import java.util.Date;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,62,import java.util.Locale;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,63,import java.util.TimeZone;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,66,* Helper methods to deal with date/time formatting. [Relies heavily on
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,67,* code taken from the DateUtils class of the jakarata-ant project.]
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,69,"* @author <a href=""mailto:sbailliez@apache.org"">Stephane Bailliez</a>"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,70,"* @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,72,* @since Lang 2.0
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,74,* @version $Revision: 1.1 $
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,76,public final class DateUtils {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,79,* ISO8601-like pattern for date-time. It does not support timezone.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,80,*  <tt>yyyy-MM-ddTHH:mm:ss</tt>
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,82,public static final String ISO8601_DATETIME_PATTERN
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,83,"= ""yyyy-MM-dd'T'HH:mm:ss"";"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,86,* ISO8601-like pattern for date. <tt>yyyy-MM-dd</tt>
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,88,public static final String ISO8601_DATE_PATTERN
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,89,"= ""yyyy-MM-dd"";"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,92,* ISO8601-like pattern for time.  <tt>HH:mm:ss</tt>
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,94,public static final String ISO8601_TIME_PATTERN
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,95,"= ""HH:mm:ss"";"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,98,* Format used for SMTP (and probably other) Date headers.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,100,public static final DateFormat DATE_HEADER_FORMAT
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,101,"= new SimpleDateFormat(""EEE, dd MMM yyyy HH:mm:ss "", Locale.US);"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,104,// code from Magesh moved from DefaultLogger and slightly modified
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,105,private static final MessageFormat MINUTE_SECONDS
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,106,"= new MessageFormat(""{0}{1}"");"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,108,"private static final double[] LIMITS = {0, 1, 2};"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,110,private static final String[] MINUTES_PART =
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,111,"{"""", ""1 minute "", ""{0,number} minutes ""};"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,113,private static final String[] SECONDS_PART =
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,114,"{""0 seconds"", ""1 second"", ""{1,number} seconds""};"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,116,private static final ChoiceFormat MINUTES_FORMAT =
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,117,"new ChoiceFormat(LIMITS, MINUTES_PART);"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,119,private static final ChoiceFormat SECONDS_FORMAT =
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,120,"new ChoiceFormat(LIMITS, SECONDS_PART);"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,122,static {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,123,"MINUTE_SECONDS.setFormat(0, MINUTES_FORMAT);"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,124,"MINUTE_SECONDS.setFormat(1, SECONDS_FORMAT);"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,127,/** public constructor */
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,128,/// TODO: Insert note that this should not be used
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,129,public DateUtils() {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,134,* Format a date/time into a specific pattern.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,135,* @param date the date to format expressed in milliseconds.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,136,* @param pattern the pattern to use to format the date.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,137,* @return the formatted date.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,139,"public static String format(long date, String pattern) {"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,140,"return format(new Date(date), pattern);"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,145,* Format a date/time into a specific pattern.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,146,* @param date the date to format expressed in milliseconds.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,147,* @param pattern the pattern to use to format the date.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,148,* @return the formatted date.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,150,"public static String format(Date date, String pattern) {"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,151,DateFormat df = createDateFormat(pattern);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,152,return df.format(date);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,157,* Format an elapsed time into a plurialization correct string.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,158,* It is limited only to report elapsed time in minutes and
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,159,* seconds and has the following behavior.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,160,* <ul>
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,161,"* <li>minutes are not displayed when 0. (ie: ""45 seconds"")</li>"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,162,"* <li>seconds are always displayed in plural form (ie ""0 seconds"" or"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,163,"* ""10 seconds"") except for 1 (ie ""1 second"")</li>"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,164,* </ul>
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,165,* @param time the elapsed time to report in milliseconds.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,166,* @return the formatted text in minutes/seconds.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,168,public static String formatElapsedTime(long millis) {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,169,long seconds = millis / 1000;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,170,long minutes = seconds / 60;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,171,"Object[] args = {new Long(minutes), new Long(seconds % 60)};"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,172,return MINUTE_SECONDS.format(args);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,176,* return a lenient date format set to GMT time zone.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,177,* @param pattern the pattern used for date/time formatting.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,178,* @return the configured format for this pattern.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,180,private static DateFormat createDateFormat(String pattern) {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,181,SimpleDateFormat sdf = new SimpleDateFormat(pattern);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,182,"TimeZone gmt = TimeZone.getTimeZone(""GMT"");"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,183,sdf.setTimeZone(gmt);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,184,sdf.setLenient(true);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,185,return sdf;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,189,* Calculate the phase of the moon for a given date.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,191,* <p>Code heavily influenced by hacklib.c in <a
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,192,"* href=""http://www.nethack.org/"">Nethack</a></p>"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,194,* <p>The Algorithm:
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,196,* <pre>
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,197,"* moon period = 29.53058 days ~= 30, year = 365.2422 days"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,199,* days moon phase advances on first day of year compared to preceding year
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,200,*  = 365.2422 - 12*29.53058 ~= 11
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,202,* years in Metonic cycle (time until same phases fall on the same days of
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,203,*  the month) = 18.6 ~= 19
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,205,* moon phase on first day of year (epact) ~= (11*(year%19) + 18) % 30
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,206,*  (18 as initial condition for 1900)
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,208,* current phase in days = first day phase + days elapsed in year
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,210,* 6 moons ~= 177 days
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,211,* 177 ~= 8 reported phases * 22
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,212,* + 11/22 for rounding
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,213,* </pre>
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,215,* @return The phase of the moon as a number between 0 and 7 with
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,216,*         0 meaning new moon and 4 meaning full moon.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,218,"* @since 1.2, Ant 1.5"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,220,public static int getPhaseOfMoon(Calendar cal) {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,221,int dayOfTheYear = cal.get(Calendar.DAY_OF_YEAR);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,222,int yearInMetonicCycle = ((cal.get(Calendar.YEAR) - 1900) % 19) + 1;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,223,int epact = (11 * yearInMetonicCycle + 18) % 30;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,224,if ((epact == 25 && yearInMetonicCycle > 11) || epact == 24) {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,225,epact++;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,227,return (((((dayOfTheYear + epact) * 6) + 11) % 177) / 22) & 7;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,231,* Returns the current Date in a format suitable for a SMTP date
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,232,* header.
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,234,* @since Ant 1.5.2
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,236,public static String getDateForHeader() {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,237,Calendar cal = Calendar.getInstance();
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,238,TimeZone tz = cal.getTimeZone();
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,239,"int offset = tz.getOffset(cal.get(Calendar.ERA),"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,240,"cal.get(Calendar.YEAR),"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,241,"cal.get(Calendar.MONTH),"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,242,"cal.get(Calendar.DAY_OF_MONTH),"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,243,"cal.get(Calendar.DAY_OF_WEEK),"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,244,cal.get(Calendar.MILLISECOND));
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,245,"StringBuffer tzMarker = new StringBuffer(offset < 0 ? ""-"" : ""+"");"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,246,offset = Math.abs(offset);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,247,int hours = offset / (60 * 60 * 1000);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,248,int minutes = offset / (60 * 1000) - 60 * hours;
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,249,if (hours < 10) {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,250,"tzMarker.append(""0"");"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,252,tzMarker.append(hours);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,253,if (minutes < 10) {
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,254,"tzMarker.append(""0"");"
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,256,tzMarker.append(minutes);
True,src/java/org/apache/commons/lang/DateUtils.java,src/java/org/apache/commons/lang/DateUtils.java,257,return DATE_HEADER_FORMAT.format(cal.getTime()) + tzMarker.toString();
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,9,* are met:
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,26,"* 4. The names ""The Jakarta Project"", ""Ant"", and ""Apache Software"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,33,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,56,import java.util.Date;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,57,import java.util.Calendar;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,58,import java.util.TimeZone;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,60,import junit.framework.Test;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,61,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,62,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,63,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,66,* TestCase for DateUtils.  [Relies heavily on code taken from the
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,67,* DateUtilsTest class of the jakarata-ant project.]
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,69,"* @author <a href=""mailto:sbailliez@apache.org"">Stephane Bailliez</a>"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,70,"* @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,72,public class DateUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,74,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,75,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,78,public static Test suite() {
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,79,TestSuite suite = new TestSuite(DateUtilsTest.class);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,80,"suite.setName(""DateUtils Tests"");"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,81,return suite;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,84,public DateUtilsTest(String s) {
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,85,super(s);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,88,public void testElapsedTime(){
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,89,String text = DateUtils.formatElapsedTime(50*1000);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,90,"assertEquals(""50 seconds"", text);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,91,text = DateUtils.formatElapsedTime(65*1000);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,92,"assertEquals(""1 minute 5 seconds"", text);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,93,text = DateUtils.formatElapsedTime(120*1000);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,94,"assertEquals(""2 minutes 0 seconds"", text);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,95,text = DateUtils.formatElapsedTime(121*1000);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,96,"assertEquals(""2 minutes 1 second"", text);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,99,public void testDateTimeISO(){
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,100,"TimeZone timeZone = TimeZone.getTimeZone(""GMT+1"");"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,101,Calendar cal = Calendar.getInstance(timeZone);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,102,"cal.set(2002,1,23,10,11,12);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,103,"String text = DateUtils.format(cal.getTime(),"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,104,DateUtils.ISO8601_DATETIME_PATTERN);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,105,"assertEquals(""2002-02-23T09:11:12"", text);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,108,public void testDateISO(){
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,109,"TimeZone timeZone = TimeZone.getTimeZone(""GMT"");"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,110,Calendar cal = Calendar.getInstance(timeZone);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,111,"cal.set(2002,1,23);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,112,"String text = DateUtils.format(cal.getTime(),"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,113,DateUtils.ISO8601_DATE_PATTERN);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,114,"assertEquals(""2002-02-23"", text);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,117,public void testTimeISODate(){
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,118,// make sure that elapsed time in set via date works
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,119,"TimeZone timeZone = TimeZone.getTimeZone(""GMT+1"");"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,120,Calendar cal = Calendar.getInstance(timeZone);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,121,"cal.set(2002,1,23, 21, 11, 12);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,122,"String text = DateUtils.format(cal.getTime(),"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,123,DateUtils.ISO8601_TIME_PATTERN);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,124,"assertEquals(""20:11:12"", text);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,127,public void testTimeISO(){
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,128,// make sure that elapsed time in ms works
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,129,long ms = (20*3600 + 11*60 + 12)*1000;
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,130,"String text = DateUtils.format(ms,"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,131,DateUtils.ISO8601_TIME_PATTERN);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,132,"assertEquals(""20:11:12"", text);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,135,public void testPhaseOfMoon() {
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,136,"TimeZone timeZone = TimeZone.getTimeZone(""GMT"");"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,137,Calendar cal = Calendar.getInstance(timeZone);
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,138,// should be full moon
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,139,"cal.set(2002, 2, 27);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,140,"assertEquals(4, DateUtils.getPhaseOfMoon(cal));"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,141,// should be new moon
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,142,"cal.set(2002, 2, 12);"
True,src/test/org/apache/commons/lang/DateUtilsTest.java,src/test/org/apache/commons/lang/DateUtilsTest.java,143,"assertEquals(0, DateUtils.getPhaseOfMoon(cal));"
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65," @version $Id: LangTestSuite.java,v 1.8 2002/12/15 19:36:08 scolebourne Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65,"* @version $Id: LangTestSuite.java,v 1.9 2002/12/16 21:48:41 bayard Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,93,suite.addTest(DateUtilsTest.suite());
