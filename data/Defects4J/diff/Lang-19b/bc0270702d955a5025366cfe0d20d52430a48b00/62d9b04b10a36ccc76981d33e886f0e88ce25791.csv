is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,15, limitations under the License.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,18,ackage org.apache.commons.lang3.event;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,20,mport java.io.Serializable;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,21,mport java.util.EventListener;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,22,mport java.util.EventObject;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,23,mport java.util.Iterator;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,24,mport java.util.concurrent.CopyOnWriteArrayList;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,26,mport org.apache.commons.lang3.Validate;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,29, <p>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,30, The AbstractEventSupport class provides an abstract base class framework for
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,31, managing {@link EventListener} objects and for firing {@link EventObject}s to
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,32," those listeners. The class provides the ability to register a ""source"" object"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,33," that should be used as the source of the events, as well as the ability to"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,34, register and unregister listeners in a thread-safe manner. The class also
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,35, provides support for iterating over the registered listeners.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,36, </p>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,38, <p>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,39, Subclasses of the AbstractEventSupport class are designed to implement
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,40, methods for firing events. The implementations can make use of both the
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,41, iterable functionality and use the associated source object as the source
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,42, of the events.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,43, </p>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,45, <p>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,46, Example:
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,47, <code><pre>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,48, public WindowSupport extends AbstractEventSupport<WindowListener> {
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,50,     public WindowSupport(Window source) {
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,51,         super(source);
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,54,"     public void fireWindowOpened(int windowId, int oldState, int newState) {"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,55,         WindowEvent windowEvent =
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,56,"             new WindowEvent((Window) getSource(), windowId, oldState, newState);"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,57,         for (WindowListener listener : this)
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,59,             listener.windowOpened(windowEvent);
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,63, </pre></code>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,64, </p>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,66," @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,68, @param <L> the subclass of {@link EventListener} that this event support
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,69,        class can register.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,71, @since 3.0
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,73,ublic abstract class AbstractEventSupport<L extends EventListener>
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,74,"mplements EventSupport<L>, Iterable<L>, Serializable {"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,77, The serialization unique version identifier.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,79,rivate static final long serialVersionUID = 20100310L;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,82, The list used to hold the registered listeners. This list is
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,83, intentionally a thread-safe copy-on-write-array so that traversals over
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,84, the list of listeners will be atomic.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,86,rivate final CopyOnWriteArrayList<L> listeners;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,89, The object registered as the source of events fired to the listeners.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,91,rivate final Object source;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,94, Constructs a new AbstractEventSupport object and associates it with the
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,95, object that will be used as the source of all events sent to the
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,96, listeners.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,98, @param source the object that will be used as the source of all events
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,99,        posted to the listeners.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,101, @throws NullPointerException if <code>source</code> is
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,102,         <code>null</code>.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,104,rotected AbstractEventSupport(Object source) {
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,105,"alidate.notNull(source, ""source cannot be null"");"
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,106,his.source = source;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,107,his.listeners = new CopyOnWriteArrayList<L>();
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,111, Registers a listener to receive events posted the by the supported class.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,113, @param listener the listener to register for posted events. Values of
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,114,        <code>null</code> will be ignored.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,116,ublic void addListener(L listener) {
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,117,f (listener != null)
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,119,his.listeners.add(listener);
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,124, Unregisters a listener from receiving events posted by the supported
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,125, class.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,127, @param listener the listener to stop posting events to. Values of
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,128,        <code>null</code> will be ignored.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,130,ublic void removeListener(L listener) {
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,131,f (listener != null)
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,133,his.listeners.remove(listener);
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,138, Returns a reference to the object registered as the source of events
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,139, broadcast to the listeners.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,141, @return the object that was initially registered to be the source of all
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,142,         events sent to the listeners.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,144,ublic Object getSource() {
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,145,eturn this.source;
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,149, Returns an iterator over the current list of listeners. This iterator is
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,150, immutable and does not support {@link Iterator#remove()} operations.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,152, @return an iterator to iterate over the currently registered listeners.
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,154,ublic Iterator<L> iterator() {
False,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,155,eturn this.listeners.iterator();
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,15, limitations under the License.
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,18,ackage org.apache.commons.lang3.event;
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,20,mport java.util.EventListener;
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,23, <p>
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,24, The EventSupport interface identifies as class as being able to register
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,25, listeners for events.
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,26, </p>
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,28," @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,30, @param <L> the subclass of {@link EventListener} that this event support
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,31,        class can register.
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,33, @since 3.0
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,35,ublic interface EventSupport<L extends EventListener> {
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,38, Registers a listener to receive events posted the by the supported class.
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,40, @param listener the listener to register for posted events. Values of
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,41,        <code>null</code> will be ignored.
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,43,ublic void addListener(L listener);
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,46, Unregisters a listener from receiving events posted by the supported
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,47, class.
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,49, @param listener the listener to stop posting events to. Values of
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,50,        <code>null</code> will be ignored.
False,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,52,ublic void removeListener(L listener);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,18,ackage org.apache.commons.lang3.event;
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,20,mport javax.swing.event.ChangeEvent;
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,21,mport javax.swing.event.ChangeListener;
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,23,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,26, <p>
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,27, The {@link AbstractEventSupportTestCase} class provides test cases for
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,28, testing the {@link AbstractEventSupport} class.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,29, </p>
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,31," @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,33, @since 3.0
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,35,ublic class AbstractEventSupportTest extends TestCase {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,38, The event support mock object that will be used for testing.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,40,rivate AbstractEventSupport<ChangeListener> eventSupport;
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,43, Creates the implementation of {@link AbstractEventSupport} that will be
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,44, used for testing.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,46,ublic void setUp() throws Exception {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,47,ventSupport = new AbstractEventSupportMock(this);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,51, Tests that the
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,52, {@link AbstractEventSupport#addListener(java.util.EventListener)}
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,53, properly registers a listener.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,55,ublic void testAddListener() {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,56,hangeListener changeListener = new ChangeListenerMock();
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,57,ventSupport.addListener(changeListener);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,58,ssertTrue(eventSupport.iterator().hasNext());
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,59,"ssertEquals(changeListener, eventSupport.iterator().next());"
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,63, Tests that the
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,64, {@link AbstractEventSupport#addListener(java.util.EventListener)}
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,65, method performs no operation when provided the value of
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,66, <code>null</code>.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,68,ublic void testAddNullListener() {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,69,ventSupport.addListener(null);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,70,ssertFalse(eventSupport.iterator().hasNext());
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,74, Tests that the
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,75, {@link AbstractEventSupport#removeListener(java.util.EventListener)}
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,76, properly removes a previously registered listener.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,78,ublic void testRemoveListener() {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,79,hangeListener changeListener = new ChangeListenerMock();
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,80,ventSupport.addListener(changeListener);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,81,ssertTrue(eventSupport.iterator().hasNext());
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,82,ventSupport.removeListener(changeListener);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,83,ssertFalse(eventSupport.iterator().hasNext());
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,87, Tests that the
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,88, {@link AbstractEventSupport#removeListener(java.util.EventListener)}
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,89, method performs no operation when provided the value of
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,90, <code>null</code>.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,92,ublic void testRemoveNullListener() {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,93,hangeListener changeListener = new ChangeListenerMock();
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,94,ventSupport.addListener(changeListener);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,95,ssertTrue(eventSupport.iterator().hasNext());
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,96,ventSupport.removeListener(null);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,97,ssertTrue(eventSupport.iterator().hasNext());
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,101, Tests that the source registered with the event support is the one
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,102, provided by {@link AbstractEventSupport#getSource()}.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,104,ublic void testGetSource() {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,105,"ssertEquals(this, eventSupport.getSource());"
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,109, Tests that the event support object returns an iterator of the registered
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,110, listeners.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,112,ublic void testIterator() {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,113,hangeListener changeListener = new ChangeListenerMock();
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,114,ventSupport.addListener(changeListener);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,115,ssertNotNull(eventSupport.iterator());
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,116,ssertTrue(eventSupport.iterator().hasNext());
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,120, <p>
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,121, The AbstractEventSupportMock class provides a mock version of the
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,122, {@link AbstractEventSupport} class that can be used for testing since
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,123, AbstractEventSupport is an abstract class.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,124, </p>
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,126,"SuppressWarnings(""serial"")"
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,127,rivate class AbstractEventSupportMock extends AbstractEventSupport<ChangeListener> {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,130, Constructs a new AbstractEventSupportMock and associates it with the
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,131, source of the events.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,133, @param source the source of the events.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,135,ublic AbstractEventSupportMock(Object source) {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,136,uper(source);
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,141, <p>
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,142, The ChangeListenerMock class provides a mock version of the
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,143, {@link ChangeListener} interface that can be used for testing.
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,144, </p>
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,146,rivate class ChangeListenerMock implements ChangeListener {
False,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,147,ublic void stateChanged(ChangeEvent changeEvent) {
