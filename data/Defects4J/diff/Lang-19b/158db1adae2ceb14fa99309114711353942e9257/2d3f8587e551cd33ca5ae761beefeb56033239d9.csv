is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,15, limitations under the License.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,17,ackage org.apache.commons.lang.enum;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,19,mport java.io.Serializable;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,20,mport java.lang.reflect.InvocationTargetException;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,21,mport java.lang.reflect.Method;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,22,mport java.util.ArrayList;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,23,mport java.util.Collections;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,24,mport java.util.HashMap;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,25,mport java.util.Iterator;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,26,mport java.util.List;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,27,mport java.util.Map;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,28,mport java.util.WeakHashMap;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,30,mport org.apache.commons.lang.ClassUtils;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,31,mport org.apache.commons.lang.StringUtils;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,34, <p>Abstract superclass for type-safe enums.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,36, <p>One feature of the C programming language lacking in Java is enumerations. The
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,37, C implementation based on ints was poor and open to abuse. The original Java
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,38, recommendation and most of the JDK also uses int constants. It has been recognised
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,39, however that a more robust type-safe class-based solution can be designed. This
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,40, class follows the basic Java type-safe enumeration pattern.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,42," <p><em>NOTE:</em>Due to the way in which Java ClassLoaders work, comparing"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,43," Enum objects should always be done using <code>equals()</code>, not <code>==</code>."
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,44, The equals() method will try == first so in most cases the effect is the same.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,46," <p>Of course, if you actually want (or don't mind) Enums in different class"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,47," loaders being non-equal, then you can use <code>==</code>.</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,49, <h4>Simple Enums</h4>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,51," <p>To use this class, it must be subclassed. For example:</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,53, <pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,54, public final class ColorEnum extends Enum {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,55,"   public static final ColorEnum RED = new ColorEnum(""Red"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,56,"   public static final ColorEnum GREEN = new ColorEnum(""Green"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,57,"   public static final ColorEnum BLUE = new ColorEnum(""Blue"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,59,   private ColorEnum(String color) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,60,     super(color);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,63,   public static ColorEnum getEnum(String color) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,64,"     return (ColorEnum) getEnum(ColorEnum.class, color);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,67,   public static Map getEnumMap() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,68,     return getEnumMap(ColorEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,71,   public static List getEnumList() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,72,     return getEnumList(ColorEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,75,   public static Iterator iterator() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,76,     return iterator(ColorEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,79, </pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,81," <p>As shown, each enum has a name. This can be accessed using <code>getName</code>.</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,83, <p>The <code>getEnum</code> and <code>iterator</code> methods are recommended.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,84," Unfortunately, Java restrictions require these to be coded as shown in each subclass."
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,85, An alternative choice is to use the {@link EnumUtils} class.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,87, <h4>Subclassed Enums</h4>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,88," <p>A hierarchy of Enum classes can be built. In this case, the superclass is"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,89, unaffected by the addition of subclasses (as per normal Java). The subclasses
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,90, may add additional Enum constants <em>of the type of the superclass</em>. The
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,91, query methods on the subclass will return all of the Enum constants from the
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,92, superclass and subclass.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,94, <pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,95, public final class ExtraColorEnum extends ColorEnum {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,96,"   // NOTE: Color enum declared above is final, change that to get this"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,97,   // example to compile.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,98,"   public static final ColorEnum YELLOW = new ExtraColorEnum(""Yellow"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,100,   private ExtraColorEnum(String color) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,101,     super(color);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,104,   public static ColorEnum getEnum(String color) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,105,"     return (ColorEnum) getEnum(ExtraColorEnum.class, color);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,108,   public static Map getEnumMap() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,109,     return getEnumMap(ExtraColorEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,112,   public static List getEnumList() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,113,     return getEnumList(ExtraColorEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,116,   public static Iterator iterator() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,117,     return iterator(ExtraColorEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,120, </pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,122," <p>This example will return RED, GREEN, BLUE, YELLOW from the List and iterator"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,123," methods in that order. The RED, GREEN and BLUE instances will be the same (==)"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,124, as those from the superclass ColorEnum. Note that YELLOW is declared as a
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,125, ColorEnum and not an ExtraColorEnum.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,127, <h4>Functional Enums</h4>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,129, <p>The enums can have functionality by defining subclasses and
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,130, overriding the <code>getEnumClass()</code> method:</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,132, <pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,133,   public static final OperationEnum PLUS = new PlusOperation();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,134,   private static final class PlusOperation extends OperationEnum {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,135,     private PlusOperation() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,136,"       super(""Plus"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,138,"     public int eval(int a, int b) {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,139,       return a + b;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,142,   public static final OperationEnum MINUS = new MinusOperation();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,143,   private static final class MinusOperation extends OperationEnum {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,144,     private MinusOperation() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,145,"       super(""Minus"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,147,"     public int eval(int a, int b) {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,148,       return a - b;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,152,   private OperationEnum(String color) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,153,     super(color);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,156,   public final Class getEnumClass() {     // NOTE: new method!
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,157,     return OperationEnum.class;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,160,"   public abstract double eval(double a, double b);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,162,   public static OperationEnum getEnum(String name) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,163,"     return (OperationEnum) getEnum(OperationEnum.class, name);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,166,   public static Map getEnumMap() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,167,     return getEnumMap(OperationEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,170,   public static List getEnumList() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,171,     return getEnumList(OperationEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,174,   public static Iterator iterator() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,175,     return iterator(OperationEnum.class);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,178, </pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,179," <p>The code above will work on JDK 1.2. If JDK1.3 and later is used,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,180, the subclasses may be defined as anonymous.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,182, <h4>Nested class Enums</h4>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,184, <p>Care must be taken with class loading when defining a static nested class
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,185, for enums. The static nested class can be loaded without the surrounding outer
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,186, class being loaded. This can result in an empty list/map/iterator being returned.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,187, One solution is to define a static block that references the outer class where
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,188, the constants are defined. For example:</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,190, <pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,191, public final class Outer {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,192,"   public static final BWEnum BLACK = new BWEnum(""Black"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,193,"   public static final BWEnum WHITE = new BWEnum(""White"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,195,   // static nested enum class
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,196,   public static final class BWEnum extends Enum {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,198,     static {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,199,       // explicitly reference BWEnum class to force constants to load
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,200,       Object obj = Outer.BLACK;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,203,     // ... other methods omitted
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,206, </pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,208," <p>Although the above solves the problem, it is not recommended. The best solution"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,209," is to define the constants in the enum class, and hold references in the outer class:"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,211, <pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,212, public final class Outer {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,213,   public static final BWEnum BLACK = BWEnum.BLACK;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,214,   public static final BWEnum WHITE = BWEnum.WHITE;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,216,   // static nested enum class
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,217,   public static final class BWEnum extends Enum {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,218,     // only define constants in enum classes - private if desired
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,219,"     private static final BWEnum BLACK = new BWEnum(""Black"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,220,"     private static final BWEnum WHITE = new BWEnum(""White"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,222,     // ... other methods omitted
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,225, </pre>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,227," <p>For more details, see the 'Nested' test cases."
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,229, @deprecated Replaced by {@link org.apache.commons.lang.enums.Enum org.apache.commons.lang.enums.Enum}
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,230,          and will be removed in version 3.0. All classes in this package are deprecated and repackaged to
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,231,          {@link org.apache.commons.lang.enums} since <code>enum</code> is a Java 1.5 keyword.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,232, @see org.apache.commons.lang.enums.Enum
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,233, @author Apache Avalon project
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,234, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,235, @author Chris Webb
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,236, @author Mike Bowler
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,237, @since 1.0
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,238, @version $Id$
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,240,"ublic abstract class Enum implements Comparable, Serializable {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,243, Required for serialization support. Lang version 1.0.1 serial compatibility.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,245, @see java.io.Serializable
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,247,rivate static final long serialVersionUID = -487045951170455942L;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,249,"/ After discussion, the default size for HashMaps is used, as the"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,250,/ sizing algorithm changes across the JDK versions
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,252," An empty <code>Map</code>, as JDK1.2 didn't have an empty map."
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,254,rivate static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(0));
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,257," <code>Map</code>, key of class name, value of <code>Entry</code>."
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,259,rivate static Map cEnumClasses
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,260,"/ LANG-334: To avoid exposing a mutating map,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,261,/ we copy it each time we add to it. This is cheaper than
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,262,/ using a synchronized map since we are almost entirely reads
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,263, new WeakHashMap();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,266, The string representation of the Enum.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,268,rivate final String iName;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,271, The hashcode representation of the Enum.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,273,rivate transient final int iHashCode;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,276, The toString representation of the Enum.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,277, @since 2.0
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,279,rotected transient String iToString = null;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,282, <p>Enable the iterator to retain the source code order.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,284,rivate static class Entry {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,286, Map of Enum name to Enum.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,288,inal Map map = new HashMap();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,290, Map of Enum name to Enum.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,292,inal Map unmodifiableMap = Collections.unmodifiableMap(map);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,294, List of Enums in source code order.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,296,inal List list = new ArrayList(25);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,298, Map of Enum name to Enum.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,300,inal List unmodifiableList = Collections.unmodifiableList(list);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,303, <p>Restrictive constructor.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,305,rotected Entry() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,306,uper();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,311, <p>Constructor to add a new named item to the enumeration.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,313," @param name  the name of the enum object,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,314,  must not be empty or <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,315, @throws IllegalArgumentException if the name is <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,316,  or an empty string
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,317, @throws IllegalArgumentException if the getEnumClass() method returns
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,318,  a null or invalid Class
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,320,rotected Enum(String name) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,321,uper();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,322,nit(name);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,323,Name = name;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,324,HashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,325,/ cannot create toString here as subclasses may want to include other data
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,329, Initializes the enumeration.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,331, @param name  the enum name
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,332, @throws IllegalArgumentException if the name is null or empty or duplicate
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,333, @throws IllegalArgumentException if the enumClass is null or invalid
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,335,rivate void init(String name) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,336,f (StringUtils.isEmpty(name)) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,337,"hrow new IllegalArgumentException(""The Enum name must not be empty or null"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,340,lass enumClass = getEnumClass();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,341,f (enumClass == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,342,"hrow new IllegalArgumentException(""getEnumClass() must not be null"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,344,lass cls = getClass();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,345,oolean ok = false;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,346,hile (cls != null && cls != Enum.class && cls != ValuedEnum.class) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,347,f (cls == enumClass) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,348,k = true;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,349,reak;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,351,ls = cls.getSuperclass();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,353,f (ok == false) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,354,"hrow new IllegalArgumentException(""getEnumClass() must return a superclass of this class"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,357,ntry entry;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,358,ynchronized( Enum.class ) { // LANG-334
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,359,/ create entry
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,360,ntry = (Entry) cEnumClasses.get(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,361,f (entry == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,362,ntry = createEntry(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,363,ap myMap = new WeakHashMap( ); // we avoid the (Map) constructor to achieve JDK 1.2 support
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,364,yMap.putAll( cEnumClasses );
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,365,"yMap.put(enumClass, entry);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,366,EnumClasses = myMap;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,369,f (entry.map.containsKey(name)) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,370,"hrow new IllegalArgumentException(""The Enum name must be unique, '"" + name + ""' has already been added"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,372,"ntry.map.put(name, this);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,373,ntry.list.add(this);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,377, <p>Handle the deserialization of the class to ensure that multiple
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,378," copies are not wastefully created, or illegal enum types created.</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,380, @return the resolved object
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,382,rotected Object readResolve() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,383,ntry entry = (Entry) cEnumClasses.get(getEnumClass());
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,384,f (entry == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,385,eturn null;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,387,eturn entry.map.get(getName());
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,393, <p>Gets an <code>Enum</code> object by class and name.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,395," @param enumClass  the class of the Enum to get, must not"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,396,  be <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,397," @param name  the name of the <code>Enum</code> to get,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,398,  may be <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,399," @return the enum object, or <code>null</code> if the enum does not exist"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,400, @throws IllegalArgumentException if the enum class
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,401,  is <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,403,"rotected static Enum getEnum(Class enumClass, String name) {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,404,ntry entry = getEntry(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,405,f (entry == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,406,eturn null;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,408,eturn (Enum) entry.map.get(name);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,412, <p>Gets the <code>Map</code> of <code>Enum</code> objects by
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,413, name using the <code>Enum</code> class.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,415, <p>If the requested class has no enum objects an empty
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,416, <code>Map</code> is returned.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,418," @param enumClass  the class of the <code>Enum</code> to get,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,419,  must not be <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,420, @return the enum object Map
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,421, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,422, @throws IllegalArgumentException if the enum class is not a subclass of Enum
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,424,rotected static Map getEnumMap(Class enumClass) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,425,ntry entry = getEntry(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,426,f (entry == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,427,eturn EMPTY_MAP;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,429,eturn entry.unmodifiableMap;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,433, <p>Gets the <code>List</code> of <code>Enum</code> objects using the
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,434, <code>Enum</code> class.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,436, <p>The list is in the order that the objects were created (source code order).
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,437, If the requested class has no enum objects an empty <code>List</code> is
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,438, returned.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,440," @param enumClass  the class of the <code>Enum</code> to get,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,441,  must not be <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,442, @return the enum object Map
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,443, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,444, @throws IllegalArgumentException if the enum class is not a subclass of Enum
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,446,rotected static List getEnumList(Class enumClass) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,447,ntry entry = getEntry(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,448,f (entry == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,449,eturn Collections.EMPTY_LIST;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,451,eturn entry.unmodifiableList;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,455, <p>Gets an <code>Iterator</code> over the <code>Enum</code> objects in
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,456, an <code>Enum</code> class.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,458, <p>The <code>Iterator</code> is in the order that the objects were
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,459, created (source code order). If the requested class has no enum
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,460, objects an empty <code>Iterator</code> is returned.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,462," @param enumClass  the class of the <code>Enum</code> to get,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,463,  must not be <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,464, @return an iterator of the Enum objects
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,465, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,466, @throws IllegalArgumentException if the enum class is not a subclass of Enum
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,468,rotected static Iterator iterator(Class enumClass) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,469,eturn Enum.getEnumList(enumClass).iterator();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,474, <p>Gets an <code>Entry</code> from the map of Enums.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,476, @param enumClass  the class of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,477, @return the enum entry
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,479,rivate static Entry getEntry(Class enumClass) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,480,f (enumClass == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,481,"hrow new IllegalArgumentException(""The Enum Class must not be null"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,483,f (Enum.class.isAssignableFrom(enumClass) == false) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,484,"hrow new IllegalArgumentException(""The Class must be a subclass of Enum"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,486,ntry entry = (Entry) cEnumClasses.get(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,487,eturn entry;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,491, <p>Creates an <code>Entry</code> for storing the Enums.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,493, <p>This accounts for subclassed Enums.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,495, @param enumClass  the class of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,496, @return the enum entry
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,498,rivate static Entry createEntry(Class enumClass) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,499,ntry entry = new Entry();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,500,lass cls = enumClass.getSuperclass();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,501,hile (cls != null && cls != Enum.class && cls != ValuedEnum.class) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,502,ntry loopEntry = (Entry) cEnumClasses.get(cls);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,503,f (loopEntry != null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,504,ntry.list.addAll(loopEntry.list);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,505,ntry.map.putAll(loopEntry.map);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,506,"reak;  // stop here, as this will already have had superclasses added"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,508,ls = cls.getSuperclass();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,510,eturn entry;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,515," <p>Retrieve the name of this Enum item, set in the constructor.</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,517, @return the <code>String</code> name of this Enum item
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,519,ublic final String getName() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,520,eturn iName;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,524," <p>Retrieves the Class of this Enum item, set in the constructor.</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,526," <p>This is normally the same as <code>getClass()</code>, but for"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,527," advanced Enums may be different. If overridden, it must return a"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,528, constant value.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,530, @return the <code>Class</code> of the enum
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,531, @since 2.0
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,533,ublic Class getEnumClass() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,534,eturn getClass();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,538, <p>Tests for equality.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,540, <p>Two Enum objects are considered equal
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,541, if they have the same class names and the same names.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,542," Identity is tested for first, so this method usually runs fast.</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,544," <p>If the parameter is in a different class loader than this instance,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,545, reflection is used to compare the names.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,547, @param other  the other object to compare for equality
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,548, @return <code>true</code> if the Enums are equal
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,550,ublic final boolean equals(Object other) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,551,f (other == this) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,552,eturn true;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,553, else if (other == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,554,eturn false;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,555, else if (other.getClass() == this.getClass()) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,556,/ Ok to do a class cast to Enum here since the test above
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,557,/ guarantee both
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,558,/ classes are in the same class loader.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,559,eturn iName.equals(((Enum) other).iName);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,560, else {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,561,"/ This and other are in different class loaders, we must check indirectly"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,562,f (other.getClass().getName().equals(this.getClass().getName()) == false) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,563,eturn false;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,565,eturn iName.equals( getNameInOtherClassLoader(other) );
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,570, <p>Returns a suitable hashCode for the enumeration.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,572, @return a hashcode based on the name
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,574,ublic final int hashCode() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,575,eturn iHashCode;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,579, <p>Tests for order.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,581," <p>The default ordering is alphabetic by name, but this"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,582, can be overridden by subclasses.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,584," <p>If the parameter is in a different class loader than this instance,"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,585, reflection is used to compare the names.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,587, @see java.lang.Comparable#compareTo(Object)
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,588, @param other  the other object to compare to
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,589," @return -ve if this is less than the other object, +ve if greater"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,590,"  than, <code>0</code> of equal"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,591, @throws ClassCastException if other is not an Enum
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,592, @throws NullPointerException if other is <code>null</code>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,594,ublic int compareTo(Object other) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,595,f (other == this) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,596,eturn 0;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,598,f (other.getClass() != this.getClass()) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,599,f (other.getClass().getName().equals(this.getClass().getName())) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,600,eturn iName.compareTo( getNameInOtherClassLoader(other) );
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,602,hrow new ClassCastException(
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,603,"Different enum class '"" + ClassUtils.getShortClassName(other.getClass()) + ""'"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,605,eturn iName.compareTo(((Enum) other).iName);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,609, <p>Use reflection to return an objects class name.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,611, @param other The object to determine the class name for
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,612, @return The class name
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,614,rivate String getNameInOtherClassLoader(Object other) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,615,ry {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,616,"ethod mth = other.getClass().getMethod(""getName"", null);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,617,"tring name = (String) mth.invoke(other, null);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,618,eturn name;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,619, catch (NoSuchMethodException e) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,620,/ ignore - should never happen
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,621, catch (IllegalAccessException e) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,622,/ ignore - should never happen
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,623, catch (InvocationTargetException e) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,624,/ ignore - should never happen
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,626,"hrow new IllegalStateException(""This should not happen"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,630, <p>Human readable description of this Enum item.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,632," @return String in the form <code>type[name]</code>, for example:"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,633, <code>Color[Red]</code>. Note that the package name is stripped from
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,634, the type name.
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,636,ublic String toString() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,637,f (iToString == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,638,tring shortName = ClassUtils.getShortClassName(getEnumClass());
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,639,"ToString = shortName + ""["" + getName() + ""]"";"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,641,eturn iToString;
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,15, limitations under the License.
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,17,ackage org.apache.commons.lang.enum;
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,19,mport java.util.Iterator;
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,20,mport java.util.List;
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,21,mport java.util.Map;
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,24, <p>Utility class for accessing and manipulating {@link Enum}s.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,26, @deprecated Replaced by {@link org.apache.commons.lang.enums.EnumUtils org.apache.commons.lang.enums.EnumUtils}
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,27,          and will be removed in version 3.0. All classes in this package are deprecated and repackaged to
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,28,          {@link org.apache.commons.lang.enums} since <code>enum</code> is a Java 1.5 keyword.
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,29, @see org.apache.commons.lang.enums.EnumUtils
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,30, @see Enum
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,31, @see ValuedEnum
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,32, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,33, @author Gary Gregory
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,34, @since 1.0
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,35, @version $Id$
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,37,ublic class EnumUtils {
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,40, Public constructor. This class should not normally be instantiated.
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,41, @since 2.0
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,43,ublic EnumUtils() {
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,44,uper();
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,48, <p>Gets an <code>Enum</code> object by class and name.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,50, @param enumClass  the class of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,51," @param name  the name of the Enum to get, may be <code>null</code>"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,52, @return the enum object
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,53, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,55,"ublic static Enum getEnum(Class enumClass, String name) {"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,56,"eturn Enum.getEnum(enumClass, name);"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,60, <p>Gets a <code>ValuedEnum</code> object by class and value.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,62, @param enumClass  the class of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,63, @param value  the value of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,64," @return the enum object, or null if the enum does not exist"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,65, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,67,"ublic static ValuedEnum getEnum(Class enumClass, int value) {"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,68,"eturn (ValuedEnum) ValuedEnum.getEnum(enumClass, value);"
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,72, <p>Gets the <code>Map</code> of <code>Enum</code> objects by
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,73, name using the <code>Enum</code> class.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,75, <p>If the requested class has no enum objects an empty
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,76, <code>Map</code> is returned. The <code>Map</code> is unmodifiable.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,78, @param enumClass  the class of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,79, @return the enum object Map
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,80, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,81, @throws IllegalArgumentException if the enum class is not a subclass
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,82,  of <code>Enum</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,84,ublic static Map getEnumMap(Class enumClass) {
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,85,eturn Enum.getEnumMap(enumClass);
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,89, <p>Gets the <code>List</code> of <code>Enum</code> objects using
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,90, the <code>Enum</code> class.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,92, <p>The list is in the order that the objects were created
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,93, (source code order).</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,95, <p>If the requested class has no enum objects an empty
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,96, <code>List</code> is returned. The <code>List</code> is unmodifiable.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,98, @param enumClass  the class of the Enum to get
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,99, @return the enum object Map
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,100, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,101, @throws IllegalArgumentException if the enum class is not a subclass
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,102,  of <code>Enum</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,104,ublic static List getEnumList(Class enumClass) {
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,105,eturn Enum.getEnumList(enumClass);
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,109, <p>Gets an <code>Iterator</code> over the <code>Enum</code> objects
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,110, in an <code>Enum</code> class.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,112, <p>The iterator is in the order that the objects were created
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,113, (source code order).</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,115, <p>If the requested class has no enum objects an empty
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,116, <code>Iterator</code> is returned. The <code>Iterator</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,117, is unmodifiable.</p>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,119, @param enumClass  the class of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,120, @return an <code>Iterator</code> of the <code>Enum</code> objects
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,121, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,122, @throws IllegalArgumentException if the enum class is not a subclass of <code>Enum</code>
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,124,ublic static Iterator iterator(Class enumClass) {
False,src/java/org/apache/commons/lang/enum/EnumUtils.java,src/java/org/apache/commons/lang/enum/EnumUtils.java,125,eturn Enum.getEnumList(enumClass).iterator();
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,15, limitations under the License.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,17,ackage org.apache.commons.lang.enum;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,19,mport java.util.Iterator;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,20,mport java.util.List;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,22,mport org.apache.commons.lang.ClassUtils;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,25, <p>Abstract superclass for type-safe enums with integer values suitable
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,26, for use in <code>switch</code> statements.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,28," <p><em>NOTE:</em>Due to the way in which Java ClassLoaders work, comparing"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,29," <code>Enum</code> objects should always be done using the equals() method,"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,30, not <code>==</code>. The equals() method will try <code>==</code> first so
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,31, in most cases the effect is the same.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,33," <p>To use this class, it must be subclassed. For example:</p>"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,35, <pre>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,36, public final class JavaVersionEnum extends ValuedEnum {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,37,   //standard enums for version of JVM
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,38,   public static final int  JAVA1_0_VALUE  = 100;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,39,   public static final int  JAVA1_1_VALUE  = 110;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,40,   public static final int  JAVA1_2_VALUE  = 120;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,41,   public static final int  JAVA1_3_VALUE  = 130;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,42,"   public static final JavaVersionEnum  JAVA1_0  = new JavaVersionEnum( ""Java 1.0"", JAVA1_0_VALUE );"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,43,"   public static final JavaVersionEnum  JAVA1_1  = new JavaVersionEnum( ""Java 1.1"", JAVA1_1_VALUE );"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,44,"   public static final JavaVersionEnum  JAVA1_2  = new JavaVersionEnum( ""Java 1.2"", JAVA1_2_VALUE );"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,45,"   public static final JavaVersionEnum  JAVA1_3  = new JavaVersionEnum( ""Java 1.3"", JAVA1_3_VALUE );"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,47,"   private JavaVersionEnum(String name, int value) {"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,48,"     super( name, value );"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,51,   public static JavaVersionEnum getEnum(String javaVersion) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,52,"     return (JavaVersionEnum) getEnum(JavaVersionEnum.class, javaVersion);"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,55,   public static JavaVersionEnum getEnum(int javaVersion) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,56,"     return (JavaVersionEnum) getEnum(JavaVersionEnum.class, javaVersion);"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,59,   public static Map getEnumMap() {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,60,     return getEnumMap(JavaVersionEnum.class);
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,63,   public static List getEnumList() {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,64,     return getEnumList(JavaVersionEnum.class);
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,67,   public static Iterator iterator() {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,68,     return iterator(JavaVersionEnum.class);
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,71, </pre>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,73, <p>The above class could then be used as follows:</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,75, <pre>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,76, public void doSomething(JavaVersionEnum ver) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,77,   switch (ver.getValue()) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,78,     case JAVA1_0_VALUE:
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,80,       break;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,81,     case JAVA1_1_VALUE:
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,83,       break;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,87, </pre>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,89," <p>As shown, each enum has a name and a value. These can be accessed using"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,90, <code>getName</code> and <code>getValue</code>.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,92, <p>The <code>getEnum</code> and <code>iterator</code> methods are recommended.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,93," Unfortunately, Java restrictions require these to be coded as shown in each subclass."
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,94, An alternative choice is to use the {@link EnumUtils} class.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,96, @deprecated Replaced by {@link org.apache.commons.lang.enums.ValuedEnum org.apache.commons.lang.enums.ValuedEnum}
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,97,          and will be removed in version 3.0. All classes in this package are deprecated and repackaged to
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,98,          {@link org.apache.commons.lang.enums} since <code>enum</code> is a Java 1.5 keyword.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,99, @see org.apache.commons.lang.enums.ValuedEnum
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,100, @author Apache Avalon project
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,101, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,102, @since 1.0
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,103, @version $Id$
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,105,ublic abstract class ValuedEnum extends Enum {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,108, Required for serialization support. Lang version 1.0.1 serial compatibility.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,110, @see java.io.Serializable
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,112,rivate static final long serialVersionUID = -7129650521543789085L;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,115, The value contained in enum.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,117,rivate final int iValue;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,120, Constructor for enum item.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,122, @param name  the name of enum item
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,123, @param value  the value of enum item
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,125,"rotected ValuedEnum(String name, int value) {"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,126,uper(name);
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,127,Value = value;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,131, <p>Gets an <code>Enum</code> object by class and value.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,133," <p>This method loops through the list of <code>Enum</code>,"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,134, thus if there are many <code>Enum</code>s this will be
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,135, slow.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,137, @param enumClass  the class of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,138, @param value  the value of the <code>Enum</code> to get
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,139," @return the enum object, or null if the enum does not exist"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,140, @throws IllegalArgumentException if the enum class is <code>null</code>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,142,"rotected static Enum getEnum(Class enumClass, int value) {"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,143,f (enumClass == null) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,144,"hrow new IllegalArgumentException(""The Enum Class must not be null"");"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,146,ist list = Enum.getEnumList(enumClass);
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,147,or (Iterator it = list.iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,148,aluedEnum enumeration = (ValuedEnum) it.next();
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,149,f (enumeration.getValue() == value) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,150,eturn enumeration;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,153,eturn null;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,157, <p>Get value of enum item.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,159, @return the enum item's value.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,161,ublic final int getValue() {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,162,eturn iValue;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,166, <p>Tests for order.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,168," <p>The default ordering is numeric by value, but this"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,169, can be overridden by subclasses.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,171, @see java.lang.Comparable#compareTo(Object)
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,172, @param other  the other object to compare to
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,173," @return -ve if this is less than the other object, +ve if greater than,"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,174,  <code>0</code> of equal
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,175, @throws ClassCastException if other is not an <code>Enum</code>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,176, @throws NullPointerException if other is <code>null</code>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,178,ublic int compareTo(Object other) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,179,eturn iValue - ((ValuedEnum) other).iValue;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,183, <p>Human readable description of this <code>Enum</code> item.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,185," @return String in the form <code>type[name=value]</code>, for example:"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,186,  <code>JavaVersion[Java 1.0=100]</code>. Note that the package name is
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,187,  stripped from the type name.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,189,ublic String toString() {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,190,f (iToString == null) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,191,tring shortName = ClassUtils.getShortClassName(getEnumClass());
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,192,"ToString = shortName + ""["" + getName() + ""="" + getValue() + ""]"";"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,194,eturn iToString;
