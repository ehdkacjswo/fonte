is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,57,import java.io.File;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,58,import java.io.FileInputStream;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,59,import java.io.FileOutputStream;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,60,import java.io.IOException;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,61,import java.io.ObjectInputStream;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,62,import java.io.ObjectOutputStream;
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,62, @version $Revision: 1.7 $ $Date: 2003/11/15 18:52:31 $
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,69,* @version $Revision: 1.8 $ $Date: 2003/11/19 13:26:42 $
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,96,public static Object serializeAndRecover(Object o){
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,98,Object result = null;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,100,File tmp = null;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,102,try {
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,104,// serialize the Object
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,105,"tmp = File.createTempFile(""test"","".ser"");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,106,FileOutputStream fo = new FileOutputStream(tmp);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,107,ObjectOutputStream so = new ObjectOutputStream(fo);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,108,so.writeObject(o);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,109,so.flush();
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,111,// deserialize the Book
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,112,FileInputStream fi = new FileInputStream(tmp);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,113,ObjectInputStream si = new ObjectInputStream(fi);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,114,result = si.readObject();
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,116,}catch (Exception e) {
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,117,e.printStackTrace();
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,118,}finally{
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,119,if(tmp != null) tmp.delete();
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,122,return result;
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,60,import org.apache.commons.math.TestUtils;
False,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,66, @version $Revision: 1.1 $ $Date: 2003/11/15 16:01:41 $
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,67,* @version $Revision: 1.2 $ $Date: 2003/11/19 13:26:42 $
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,345,/** test stats */
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,346,public void testSerialization() {
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,347,DescriptiveStatistics u = DescriptiveStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,348,"assertEquals(""total count"",0,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,349,u.addValue(one);
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,350,u.addValue(two);
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,352,DescriptiveStatistics u2 = (DescriptiveStatistics)TestUtils.serializeAndRecover(u);
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,354,u2.addValue(two);
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,355,u2.addValue(three);
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,357,"assertEquals(""N"",n,u2.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,358,"assertEquals(""sum"",sum,u2.getSum(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,359,"assertEquals(""sumsq"",sumSq,u2.getSumsq(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,360,"assertEquals(""var"",var,u2.getVariance(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,361,"assertEquals(""std"",std,u2.getStandardDeviation(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,362,"assertEquals(""mean"",mean,u2.getMean(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,363,"assertEquals(""min"",min,u2.getMin(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,364,"assertEquals(""max"",max,u2.getMax(),tolerance);"
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,366,u2.clear();
True,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/DescriptiveStatisticsTest.java,367,"assertEquals(""total count"",0,u2.getN(),tolerance);"
