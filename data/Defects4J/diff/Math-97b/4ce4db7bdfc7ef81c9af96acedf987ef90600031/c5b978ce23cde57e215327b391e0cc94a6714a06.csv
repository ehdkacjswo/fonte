is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,5,* reserved.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,9,* are met:
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,17,*    distribution.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,56,package org.apache.commons.math;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,59,* Estimates an ordinary least squares regression model
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,60,* with one independent variable: <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,62,* y = intercept + slope * x  </code><p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,64,* Standard errors for <code>intercept</code> and <code>slope</code> are
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,65,"* available as well as ANOVA, r-square and Pearson's r statistics.<p>"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,67,"* Observations (x,y pairs) can be added to the model one at a time or they"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,68,* can be provided in a 2-dimensional array.  The observations are not stored
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,69,"* in memory, so there is no limit to the number of observations that can be"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,70,* added to the model. <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,72,* <strong>Usage Notes</strong>: <ul>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,73,"* <li> When there are fewer than two observations in the model, or when"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,74,* there is no variation in the x values (i.e. all x values are the same)
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,75,* all statistics return <code>NaN</code>. At least two observations with
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,76,* different x coordinates are requred to estimate a bivariate regression model.</li>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,77,* <li> getters for the statistics always compute values based on the current
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,78,"* set of observations -- i.e., you can get statistics, then add more data"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,79,* and get updated statistics without using a new instance.  There is no
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,80,"* ""compute"" method that updates all statistics.  Each of the getters performs"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,81,* the necessary computations to return the requested statistic.</li>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,82,* </ul>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,84,* @author  Phil Steitz
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,85,* @version $Revision: 1.1 $ $Date: 2003/05/26 02:11:50 $
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,87,public class BivariateRegression {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,89,/** sum of x values */
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,90,private double sumX = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,92,/** sum of squared x values */
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,93,private double sumSqX = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,95,/** sum of y values */
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,96,private double sumY = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,98,/** sum of squared y values */
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,99,private double sumSqY = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,101,/** sum of products */
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,102,private double sumXY = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,104,/** number of observations */
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,105,private long n = 0;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,107,// ---------------------Public methods--------------------------------------
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,110,"* Adds the observation (x,y) to the regression data set"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,112,* @param x independent variable value
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,113,* @param y dependent variable value
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,115,"public void addData(double x, double y) {"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,116,sumX += x;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,117,sumSqX += x*x;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,118,sumY += y;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,119,sumSqY += y*y;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,120,sumXY += x*y;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,121,n++;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,125,* Adds the observations represented by the elements in <code>data.</code><p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,126,"* <code>(data[0][0],data[0][1])</code> will be the first observation, then"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,127,"* <code>(data[1][0],data[1][1])</code>, etc. <p>"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,129,* This method does not replace data that has already been added.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,130,"* To replace all data, use <code>clear()</code> before adding the new data."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,132,* @param data array of observations to be added
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,134,public void addData(double[][] data) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,135,for (int i = 0; i < data.length; i++) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,136,"addData(data[i][0],data[i][1]);"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,141,* Clears all data from the model
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,143,public void clear() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,144,sumX = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,145,sumSqX = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,146,sumY = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,147,sumSqY = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,148,sumXY = 0d;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,149,n = 0;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,153,* Returns the number of observations that have been added to the model
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,155,* @return n
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,157,public long getN() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,158,return n;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,162,"* Returns the ""predicted"" <code>y</code> value associated with the"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,163,"* supplied <code>x</code> value. Specifically, <p>"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,165,* <code> predict(x) = intercept + slope * x </code> <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,167,* At least two observations (with at least two different x values)
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,168,* must have been added before invoking this method. If this method is
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,169,"* invoked before a model can be estimated, <code>Double,NaN</code> is"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,170,* returned.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,172,* @param x input <code>x</code> value
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,173,* @return predicted <code>y</code> value
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,175,public double predict(double x) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,176,double b1 = getSlope();
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,177,if (b1 == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,178,return b1;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,180,return getIntercept(b1) + b1*x;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,184,* Returns the intercept of the estimated regression line.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,185,* The least squares estimate of the intercept is computed using the normal
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,186,"* equations, as described"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,187,* <a href=http://www.xycoon.com/estimation4.htm>here</a>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,188,* The intercept is sometimes denoted b0. <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,190,* At least two distinct data pairs (with at least two different x values)
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,191,* must have been added before invoking this method. If this method is
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,192,"* invoked before a model can be estimated, <code>Double,NaN</code> is"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,193,* returned.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,195,* @return the intercept of the regression line
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,197,public double getIntercept() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,198,return getIntercept(getSlope());
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,202,* Returns the slope of the estimated regression line.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,203,* The least squares estimate of the slope is computed using the normal
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,204,"* equations, as described"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,205,* <a href=http://www.xycoon.com/estimation4.htm>here</a>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,206,* The slope is sometimes denoted b1. <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,208,* At least two observations (with at least two different x values)
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,209,* must have been added before invoking this method. If this method is
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,210,"* invoked before a model can be estimated, <code>Double,NaN</code> is"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,211,* returned.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,213,* @return the slope of the regression line
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,215,public double getSlope() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,216,if (n < 2) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,217,return Double.NaN;  //not enough data
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,219,double dn = (double) n;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,220,double denom = sumSqX - (sumX*sumX/dn);
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,221,if (Math.abs(denom)< 10*Double.MIN_VALUE) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,222,return Double.NaN; //not enough variation in x
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,224,return (sumXY - (sumX*sumY/dn))/denom;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,228,* Returns the sum of squared errors</a> associated with the regression
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,229,* model. This is defined as SSE
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,230,* <a href=http://www.xycoon.com/SumOfSquares.htm>here</a>. <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,232,* At least two distinct data pairs (with at least two different x values)
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,233,* must have been added before invoking this method. If this method is
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,234,"* invoked before a model can be estimated, <code>Double,NaN</code> is"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,235,* returned.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,237,* @return sum of squared errors associated with the regression model
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,239,public double getSumSquaredErrors() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,240,return getSumSquaredErrors(getSlope());
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,244,* Returns the sum of squared deviations of the y values about their mean.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,245,* This is defined as SSTO
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,246,* <a href=http://www.xycoon.com/SumOfSquares.htm>here</a>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,247,* <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,248,"* If n < 2, this returns NaN."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,250,* @return sum of squared deviations of y values
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,252,public double getTotalSumSquares() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,253,if (n < 2) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,254,return Double.NaN;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,256,return sumSqY - sumY*sumY/(double) n;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,260,* Returns the sum of squared deviations of the predicted y values about
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,261,* their mean (which equals the mean of y).
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,262,* This is usually abbreviated SSR or SSM.  It is defined as SSM
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,263,* <a href=http://www.xycoon.com/SumOfSquares.htm>here</a><p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,265,* At least two distinct data pairs (with at least two different x values)
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,266,* must have been added before invoking this method. If this method is
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,267,"* invoked before a model can be estimated, <code>Double,NaN</code> is"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,268,* returned.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,270,* @return sum of squared deviations of y values
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,272,public double getRegressionSumSquares() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,273,double b1 = getSlope();
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,274,if (b1 == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,275,return b1;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,277,return b1*(sumXY - sumX*sumY/(double) n);
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,281,* Returns the sum of squared errors divided by the degrees of freedom.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,282,* This is usually abbreviated MSE. <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,284,"* If there are fewer than <strong>three</strong> data pairs in the model,"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,285,"* or if there is no variation in x, this returns <code>NaN</code>."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,287,* @return sum of squared deviations of y values
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,289,public double getMeanSquareError() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,290,if (n < 3) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,291,return Double.NaN;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,293,double sse = getSumSquaredErrors();
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,294,if (sse == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,295,return sse;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,297,return sse/(double) (n - 2);
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,301,* Returns <a href=http://www.stt.msu.edu/~xiaoyimi/STT200/Lecture5.pdf>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,302,* Pearson's product moment correlation coefficient</a>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,303,* This is usually denoted r. <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,305,* At least two observations (with at least two different x values)
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,306,* must have been added before invoking this method. If this method is
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,307,"* invoked before a model can be estimated, <code>Double,NaN</code> is"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,308,* returned.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,310,* @return Pearson's r
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,312,public double getR() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,313,double b1 = getSlope();
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,314,if (b1 == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,315,return b1;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,317,double result = Math.sqrt(getRSquare(b1));
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,318,if (b1 < 0) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,319,result = -result;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,321,return result;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,325,* Returns the <a href=http://www.xycoon.com/coefficient1.htm> coefficient
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,326,* of determination</a>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,327,* This is usually denoted r-square. <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,329,* At least two observaions (with at least two different x values)
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,330,* must have been added before invoking this method. If this method is
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,331,"* invoked before a model can be estimated, <code>Double,NaN</code> is"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,332,* returned.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,334,* @return r-square
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,336,public double getRSquare() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,337,return getRSquare(getSlope());
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,342,* Returns the <a href=http://www.xycoon.com/standarderrorb0.htm>standard
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,343,* error of the intercept estimate</a>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,344,* This is usually denoted s(b0). <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,346,"* If there are fewer that <strong>three</strong> observations in the model,"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,347,"* or if there is no variation in x, this returns <code>NaN</code>."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,349,* @return standard error associated with intercept estimate
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,351,public double getInterceptStdErr() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,352,double ssx = getSumSquaresX();
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,353,if (ssx == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,354,return ssx;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,356,return Math.sqrt(getMeanSquareError()*sumSqX/(((double) n)*ssx));
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,360,* Returns the <a http://www.xycoon.com/standerrorb(1).htm>standard
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,361,* error of the slope estimate</a>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,362,* This is usually denoted s(b1). <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,364,"* If there are fewer that <strong>three</strong> data pairs in the model,"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,365,"* or if there is no variation in x, this returns <code>NaN</code>."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,367,* @return standard error associated with slope estimate
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,369,public double getSlopeStdErr() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,370,double ssx = getSumSquaresX();
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,371,if (ssx == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,372,return ssx;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,374,return Math.sqrt(getMeanSquareError()/ssx);
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,377,// ---------------------Private methods-----------------------------------
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,380,"* Returns the intercept of the estimated regression line, given the slope."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,381,* Will return <code>NaN</code> if slope is <code>NaN</code>.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,383,* @param slope current slope
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,384,* @return the intercept of the regression line
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,386,private double getIntercept(double slope) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,387,if (slope == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,388,return slope;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,390,return (sumY - slope*sumX)/((double) n);
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,394,* Returns the sum of squared errors</a> associated with the regression
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,395,"* model, using the slope of the regression line.  Returns NaN if the slope"
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,396,* is NaN.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,398,* @return sum of squared errors associated with the regression model
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,400,private double getSumSquaredErrors(double b1) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,401,if (b1 == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,402,return b1;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,404,double b0 = getIntercept(b1);
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,405,return sumSqY - b0*sumY - b1*sumXY;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,409,* Returns the sum of squared deviations of the x values about their mean.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,410,* <p>
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,411,"* If n < 2, this returns NaN."
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,413,* @return sum of squared deviations of x values
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,415,private double getSumSquaresX() {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,416,if (n < 2) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,417,return Double.NaN;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,419,return sumSqX - sumX*sumX/(double) n;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,423,* Computes r-square from the slope.
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,424,* will return NaN if slope is Nan
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,426,* @return r-square
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,428,private double getRSquare(double b1) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,429,if (b1 == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,430,return b1;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,432,double ssto = getTotalSumSquares();
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,433,if (ssto == Double.NaN) {
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,434,return ssto;
True,src/java/org/apache/commons/math/BivariateRegression.java,src/java/org/apache/commons/math/BivariateRegression.java,436,return (ssto - getSumSquaredErrors(b1))/ssto;
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,5,* reserved.
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,9,* are met:
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,17,*    distribution.
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,60,* Test cases for the TestStatistic class.
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,62,* @author Phil Steitz
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,63,* @version $Revision: 1.1 $ $Date: 2003/05/26 02:11:50 $
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,66,public final class BivariateRegressionTest extends TestCase {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,69,"* NIST ""Norris"" refernce data set from"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,70,* http://www.itl.nist.gov/div898/strd/lls/data/LINKS/DATA/Norris.dat
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,71,"* Strangely, order is {y,x}"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,73,"private double[][] data = {{0.1,0.2},{338.8,337.4},{118.1,118.2},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,74,"{888.0,884.6},{9.2,10.1},{228.1,226.5},{668.5,666.3},{998.5,996.3},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,75,"{449.1,448.6},{778.9,777.0},{559.2,558.2},{0.3,0.4},{0.1,0.6},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,76,"{778.1,775.5},{668.8,666.9},{339.3,338.0},{448.9,447.5},{10.8,11.6},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,77,"{557.7,556.0},{228.3,228.1},{998.0,995.8},{888.8,887.6},{119.6,120.2},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,78,"{0.3,0.3},{0.6,0.3},{557.6,556.8},{339.3,339.1},{888.0,887.2},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,79,"{998.5,999.0},{778.9,779.0},{10.2,11.1},{117.6,118.3},{228.9,229.2},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,80,"{668.4,669.1},{449.2,448.9},{0.2,0.5}};"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,83,* Correlation example from
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,84,* http://www.xycoon.com/correlation.htm
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,86,"private double[][] corrData = {{101.0,99.2},{100.1,99.0},{100.0,100.0},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,87,"{90.6,111.6},{86.5,122.2},{89.7,117.6},{90.6,121.1},{82.8,136.0},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,88,"{70.1,154.2},{65.4,153.6},{61.3,158.5},{62.5,140.6},{63.6,136.2},"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,89,"{52.6,168.0},{59.7,154.3},{59.5,149.0},{61.3,165.5}};"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,91,public BivariateRegressionTest(String name) {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,92,super(name);
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,95,public void setUp() {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,98,public static Test suite() {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,99,TestSuite suite = new TestSuite(BivariateRegressionTest.class);
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,100,"suite.setName(""BivariateRegression Tests"");"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,101,return suite;
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,104,public void testNorris() {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,105,BivariateRegression regression = new BivariateRegression();
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,106,for (int i = 0; i < data.length; i++) {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,107,"regression.addData(data[i][1],data[i][0]);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,109,"assertEquals(""slope"",1.00211681802045,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,110,"regression.getSlope(),10E-12);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,111,"assertEquals(""slope std err"",0.429796848199937E-03,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,112,"regression.getSlopeStdErr(),10E-12);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,113,"assertEquals(""number of observations"",36,regression.getN());"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,114,"assertEquals(""intercept"", -0.262323073774029,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,115,"regression.getIntercept(),10E-12);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,116,"assertEquals(""std err intercept"", 0.232818234301152,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,117,"regression.getInterceptStdErr(),10E-12);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,118,"assertEquals(""r-square"",0.999993745883712,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,119,"regression.getRSquare(),10E-12);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,120,"assertEquals(""SSR"",4255954.13232369,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,121,"regression.getRegressionSumSquares(),10E-8);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,122,"assertEquals(""MSE"",0.782864662630069,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,123,"regression.getMeanSquareError(),10E-8);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,124,"assertEquals(""SSE"",26.6173985294224,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,125,"regression.getSumSquaredErrors(),10E-8);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,126,"assertEquals(""predict(0)"",-0.262323073774029,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,127,"regression.predict(0),10E-12);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,128,"assertEquals(""predict(1)"",1.00211681802045-0.262323073774029,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,129,"regression.predict(1),10E-11);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,132,public void testCorr() {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,133,BivariateRegression regression = new BivariateRegression();
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,134,regression.addData(corrData);
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,135,"assertEquals(""number of observations"",17,regression.getN());"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,136,"assertEquals(""r-square"",.896123,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,137,"regression.getRSquare(),10E-6);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,138,"assertEquals(""r"",-.946638,"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,139,"regression.getR(),10E-6);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,142,public void testNaNs() {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,144,BivariateRegression regression = new BivariateRegression();
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,146,"assertTrue(""intercept not NaN"",Double.isNaN(regression.getIntercept()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,147,"assertTrue(""slope not NaN"",Double.isNaN(regression.getSlope()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,148,"assertTrue(""slope std err not NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,149,Double.isNaN(regression.getSlopeStdErr()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,150,"assertTrue(""intercept std err not NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,151,Double.isNaN(regression.getInterceptStdErr()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,152,"assertTrue(""MSE not NaN"",Double.isNaN(regression.getMeanSquareError()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,153,"assertTrue(""e not NaN"",Double.isNaN(regression.getR()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,154,"assertTrue(""r-square not NaN"",Double.isNaN(regression.getRSquare()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,155,"assertTrue(""RSS not NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,156,Double.isNaN(regression.getRegressionSumSquares()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,157,"assertTrue(""SSE not NaN"",Double.isNaN(regression.getSumSquaredErrors()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,158,"assertTrue(""SSTO not NaN"",Double.isNaN(regression.getTotalSumSquares()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,159,"assertTrue(""predict not NaN"",Double.isNaN(regression.predict(0)));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,161,"regression.addData(1,2);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,162,"regression.addData(1,3);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,164,"// No x variation, so these should still blow..."
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,165,"assertTrue(""intercept not NaN"",Double.isNaN(regression.getIntercept()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,166,"assertTrue(""slope not NaN"",Double.isNaN(regression.getSlope()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,167,"assertTrue(""slope std err not NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,168,Double.isNaN(regression.getSlopeStdErr()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,169,"assertTrue(""intercept std err not NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,170,Double.isNaN(regression.getInterceptStdErr()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,171,"assertTrue(""MSE not NaN"",Double.isNaN(regression.getMeanSquareError()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,172,"assertTrue(""e not NaN"",Double.isNaN(regression.getR()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,173,"assertTrue(""r-square not NaN"",Double.isNaN(regression.getRSquare()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,174,"assertTrue(""RSS not NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,175,Double.isNaN(regression.getRegressionSumSquares()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,176,"assertTrue(""SSE not NaN"",Double.isNaN(regression.getSumSquaredErrors()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,177,"assertTrue(""predict not NaN"",Double.isNaN(regression.predict(0)));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,179,// but SSTO should be OK
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,180,"assertTrue(""SSTO NaN"",!Double.isNaN(regression.getTotalSumSquares()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,182,regression = new BivariateRegression();
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,184,"regression.addData(1,2);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,185,"regression.addData(3,3);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,187,"// All should be OK except MSE, s(b0), s(b1) which need one more df"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,188,"assertTrue(""interceptNaN"",!Double.isNaN(regression.getIntercept()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,189,"assertTrue(""slope NaN"",!Double.isNaN(regression.getSlope()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,190,"assertTrue(""slope std err not NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,191,Double.isNaN(regression.getSlopeStdErr()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,192,"assertTrue(""intercept std err not NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,193,Double.isNaN(regression.getInterceptStdErr()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,194,"assertTrue(""MSE not NaN"",Double.isNaN(regression.getMeanSquareError()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,195,"assertTrue(""r NaN"",!Double.isNaN(regression.getR()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,196,"assertTrue(""r-square NaN"",!Double.isNaN(regression.getRSquare()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,197,"assertTrue(""RSS NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,198,!Double.isNaN(regression.getRegressionSumSquares()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,199,"assertTrue(""SSE NaN"",!Double.isNaN(regression.getSumSquaredErrors()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,200,"assertTrue(""SSTO NaN"",!Double.isNaN(regression.getTotalSumSquares()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,201,"assertTrue(""predict NaN"",!Double.isNaN(regression.predict(0)));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,203,"regression.addData(1,4);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,205,"// MSE, MSE, s(b0), s(b1) should all be OK now"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,206,"assertTrue(""MSE NaN"",!Double.isNaN(regression.getMeanSquareError()));"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,207,"assertTrue(""slope std err NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,208,!Double.isNaN(regression.getSlopeStdErr()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,209,"assertTrue(""intercept std err NaN"","
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,210,!Double.isNaN(regression.getInterceptStdErr()));
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,213,public void testClear() {
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,214,BivariateRegression regression = new BivariateRegression();
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,215,regression.addData(corrData);
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,216,"assertEquals(""number of observations"",17,regression.getN());"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,217,regression.clear();
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,218,"assertEquals(""number of observations"",0,regression.getN());"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,219,regression.addData(corrData);
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,220,"assertEquals(""r-square"",.896123,regression.getRSquare(),10E-6);"
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,221,regression.addData(data);
True,src/test/org/apache/commons/math/BivariateRegressionTest.java,src/test/org/apache/commons/math/BivariateRegressionTest.java,222,"assertEquals(""number of observations"",53,regression.getN());"
