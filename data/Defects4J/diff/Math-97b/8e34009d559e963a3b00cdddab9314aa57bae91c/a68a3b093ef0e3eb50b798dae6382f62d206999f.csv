is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,448,public void testMaxIterations() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,449,"Circle circle = new Circle(98.680, 47.345);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,450,"circle.addPoint( 30.0,  68.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,451,"circle.addPoint( 50.0,  -6.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,452,"circle.addPoint(110.0, -20.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,453,"circle.addPoint( 35.0,  15.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,454,"circle.addPoint( 45.0,  97.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,455,try {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,456,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(4, 1.0e-14, 1.0e-14);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,457,estimator.estimate(circle);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,458,"fail(""an exception should have been caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,459,} catch (EstimationException ee) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,460,// expected behavior
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,461,} catch (Exception e) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,462,"fail(""wrong exception type caught"");"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,449,"ircle circle = new Circle(98.680, 47.345);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,450,"ircle.addPoint( 30.0,  68.0);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,451,"ircle.addPoint( 50.0,  -6.0);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,452,"ircle.addPoint(110.0, -20.0);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,453,"ircle.addPoint( 35.0,  15.0);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,454,"ircle.addPoint( 45.0,  97.0);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,455,"aussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-10, 1.0e-10);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,456,stimator.estimate(circle);
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,457,ouble rms = estimator.getRMS(circle);
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,458,"ssertEquals(1.768262623567235,  Math.sqrt(circle.getM()) * rms,  1.0e-10);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,459,"ssertEquals(69.96016176931406, circle.getRadius(), 1.0e-10);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,460,"ssertEquals(96.07590211815305, circle.getX(),      1.0e-10);"
False,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,461,"ssertEquals(48.13516790438953, circle.getY(),      1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,467,"Circle circle = new Circle(98.680, 47.345);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,468,"circle.addPoint( 30.0,  68.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,469,"circle.addPoint( 50.0,  -6.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,470,"circle.addPoint(110.0, -20.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,471,"circle.addPoint( 35.0,  15.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,472,"circle.addPoint( 45.0,  97.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,473,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-10, 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,474,estimator.estimate(circle);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,475,double rms = estimator.getRMS(circle);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,476,"assertEquals(1.768262623567235,  Math.sqrt(circle.getM()) * rms,  1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,477,"assertEquals(69.96016176931406, circle.getRadius(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,478,"assertEquals(96.07590211815305, circle.getX(),      1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,479,"assertEquals(48.13516790438953, circle.getY(),      1.0e-10);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,449,ublic void testCircleFitting() throws EstimationException {
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,450,"ircle circle = new Circle(98.680, 47.345);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,451,"ircle.addPoint( 30.0,  68.0);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,452,"ircle.addPoint( 50.0,  -6.0);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,453,"ircle.addPoint(110.0, -20.0);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,454,"ircle.addPoint( 35.0,  15.0);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,455,"ircle.addPoint( 45.0,  97.0);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,456,evenbergMarquardtEstimator estimator = new LevenbergMarquardtEstimator();
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,457,stimator.estimate(circle);
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,458,ssertTrue(estimator.getCostEvaluations() < 10);
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,459,ssertTrue(estimator.getJacobianEvaluations() < 10);
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,460,ouble rms = estimator.getRMS(circle);
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,461,"ssertEquals(1.768262623567235,  Math.sqrt(circle.getM()) * rms,  1.0e-10);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,462,"ssertEquals(69.96016176931406, circle.getRadius(), 1.0e-10);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,463,"ssertEquals(96.07590211815305, circle.getX(),      1.0e-10);"
False,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,464,"ssertEquals(48.13516790438953, circle.getY(),      1.0e-10);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,449,public void testControlParameters() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,450,"Circle circle = new Circle(98.680, 47.345);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,451,"circle.addPoint( 30.0,  68.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,452,"circle.addPoint( 50.0,  -6.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,453,"circle.addPoint(110.0, -20.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,454,"circle.addPoint( 35.0,  15.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,455,"circle.addPoint( 45.0,  97.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,456,"checkEstimate(circle, 100.0, 1000, 1.0e-10, 1.0e-10, 1.0e-10, false);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,457,"checkEstimate(circle, 1.0e-12, 10, 1.0e-20, 1.0e-20, 1.0e-20, true);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,460,"private void checkEstimate(EstimationProblem problem,"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,461,"double initialStepBoundFactor, int maxCostEval,"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,462,"double costRelativeTolerance, double parRelativeTolerance,"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,463,"double orthoTolerance, boolean shouldFail) {"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,464,try {
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,465,LevenbergMarquardtEstimator estimator = new LevenbergMarquardtEstimator();
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,466,estimator.setInitialStepBoundFactor(initialStepBoundFactor);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,467,estimator.setMaxCostEval(maxCostEval);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,468,estimator.setCostRelativeTolerance(costRelativeTolerance);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,469,estimator.setParRelativeTolerance(parRelativeTolerance);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,470,estimator.setOrthoTolerance(orthoTolerance);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,471,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,472,assertTrue(! shouldFail);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,473,} catch (EstimationException ee) {
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,474,"System.out.println(ee.getClass().getName() + "" "" + ee.getMessage());"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,475,assertTrue(shouldFail);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,476,} catch (Exception e) {
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,477,"fail(""wrong exception type caught"");"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,481,public void testCircleFitting() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,482,"Circle circle = new Circle(98.680, 47.345);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,483,"circle.addPoint( 30.0,  68.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,484,"circle.addPoint( 50.0,  -6.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,485,"circle.addPoint(110.0, -20.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,486,"circle.addPoint( 35.0,  15.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,487,"circle.addPoint( 45.0,  97.0);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,488,LevenbergMarquardtEstimator estimator = new LevenbergMarquardtEstimator();
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,489,estimator.estimate(circle);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,490,assertTrue(estimator.getCostEvaluations() < 10);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,491,assertTrue(estimator.getJacobianEvaluations() < 10);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,492,double rms = estimator.getRMS(circle);
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,493,"assertEquals(1.768262623567235,  Math.sqrt(circle.getM()) * rms,  1.0e-10);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,494,"assertEquals(69.96016176931406, circle.getRadius(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,495,"assertEquals(96.07590211815305, circle.getX(),      1.0e-10);"
True,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,496,"assertEquals(48.13516790438953, circle.getY(),      1.0e-10);"
