is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,30," Supports nesting, emulating JDK 1.4 behavior if necessary."
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,30,"* Supports nesting, emulating JDK 1.4 behavior if necessary.</p>"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,32, Adapted from {@link org.apache.commons.collections.FunctorException}.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,32,* Adapted from {@link org.apache.commons.collections.FunctorException}.</p>
False,src/java/org/apache/commons/math/analysis/BisectionSolver.java,src/java/org/apache/commons/math/analysis/BisectionSolver.java,26, The function should be continuous but not necessarily smooth.
True,src/java/org/apache/commons/math/analysis/BisectionSolver.java,src/java/org/apache/commons/math/analysis/BisectionSolver.java,26,* The function should be continuous but not necessarily smooth.</p>
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,27, The function should be continuous but not necessarily smooth.
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,27,* The function should be continuous but not necessarily smooth.</p>
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,114, the case.
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,114,* the case.</p>
False,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,31, this class provides an easy-to-use interface to it.
True,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,31,* this class provides an easy-to-use interface to it.</p>
False,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,67," Note x[], y[], a[] have the same length but c[]'s size is one less."
True,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,67,"* Note x[], y[], a[] have the same length but c[]'s size is one less.</p>"
False,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,86, </pre><p>
False,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,87, The computational complexity is O(N^2).
True,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,86,* </pre></p>
True,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,87,* <p>
True,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java,88,* The computational complexity is O(N^2).</p>
False,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,31, approximation and be able to solve all roots from that point.
True,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,31,* approximation and be able to solve all roots from that point.</p>
False,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,72, Requires bracketing condition.
True,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,72,* Requires bracketing condition.</p>
False,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,108, all roots and pick up the one that we're looking for.
True,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/LaguerreSolver.java,108,* all roots and pick up the one that we're looking for.</p>
False,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,31," real zeros, using different ways to bypass complex arithmetics."
True,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,31,"* real zeros, using different ways to bypass complex arithmetics.</p>"
False,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,52, Requires bracketing condition.
True,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,52,* Requires bracketing condition.</p>
False,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,87, the newly computed approximation is guaranteed to be real.
True,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,87,* the newly computed approximation is guaranteed to be real.</p>
False,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,92, bisection as a safety backup if it performs very poorly.
True,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,92,* bisection as a safety backup if it performs very poorly.</p>
False,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,94, The formulas here use divided differences directly.
True,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,94,* The formulas here use divided differences directly.</p>
False,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,191, approximation.
True,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,191,* approximation.</p>
False,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,196, approximation is often negligible.
True,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,196,* approximation is often negligible.</p>
False,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,198, The formulas here do not use divided differences directly.
True,src/java/org/apache/commons/math/analysis/MullerSolver.java,src/java/org/apache/commons/math/analysis/MullerSolver.java,198,* The formulas here do not use divided differences directly.</p>
False,src/java/org/apache/commons/math/analysis/NevilleInterpolator.java,src/java/org/apache/commons/math/analysis/NevilleInterpolator.java,29, this class provides an easy-to-use interface to it.
True,src/java/org/apache/commons/math/analysis/NevilleInterpolator.java,src/java/org/apache/commons/math/analysis/NevilleInterpolator.java,29,* this class provides an easy-to-use interface to it.</p>
False,src/java/org/apache/commons/math/analysis/NewtonSolver.java,src/java/org/apache/commons/math/analysis/NewtonSolver.java,28, The function should be continuous but not necessarily smooth.
True,src/java/org/apache/commons/math/analysis/NewtonSolver.java,src/java/org/apache/commons/math/analysis/NewtonSolver.java,28,* The function should be continuous but not necessarily smooth.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,25,  is used to evaluate the function.
True,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,25,*  is used to evaluate the function.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,48,  the coefficients property.
True,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,48,* the coefficients property.</p>
True,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,68,* </p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,91, the polynomial.
True,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,92,* the polynomial.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,31," to work well. Otherwise, consider using splines instead."
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,31,"* to work well. Otherwise, consider using splines instead.</p>"
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,62, The constructor makes copy of the input arrays and assigns them.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,62,* The constructor makes copy of the input arrays and assigns them.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,107, Changes made to the returned copy will not affect the polynomial.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,107,* Changes made to the returned copy will not affect the polynomial.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,120, Changes made to the returned copy will not affect the polynomial.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,120,* Changes made to the returned copy will not affect the polynomial.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,133, Changes made to the returned copy will not affect the polynomial.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,133,* Changes made to the returned copy will not affect the polynomial.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,152, without instantiating PolynomialFunctionLagrangeForm object.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,152,* without instantiating PolynomialFunctionLagrangeForm object.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,219, and only when it is necessary.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,219,* and only when it is necessary.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,277," verified here, it is checked in evaluate() and computeCoefficients()."
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,277,"* verified here, it is checked in evaluate() and computeCoefficients().</p>"
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,30, Note that the length of a[] is one more than the length of c[]
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,30,* Note that the length of a[] is one more than the length of c[]</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,64, The constructor makes copy of the input arrays and assigns them.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,64,* The constructor makes copy of the input arrays and assigns them.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,105, Changes made to the returned copy will not affect the polynomial.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,105,* Changes made to the returned copy will not affect the polynomial.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,118, Changes made to the returned copy will not affect the polynomial.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,118,* Changes made to the returned copy will not affect the polynomial.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,131, Changes made to the returned copy will not affect the polynomial.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,131,* Changes made to the returned copy will not affect the polynomial.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,197, for general use. Thus it is not verified here.
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java,197,* for general use. Thus it is not verified here.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,34, the polynomials and knot points passed to the constructor.
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,34,* the polynomials and knot points passed to the constructor.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,37, centered on the knot points to compute the spline function values.  See below.
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,37,* centered on the knot points to compute the spline function values.
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,38,* See below.</p>
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,43,* </p>
False,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,52, <code>polynomials[j](x - knot[j])</code></li></ol>
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,54,* <code>polynomials[j](x - knot[j])</code></li></ol></p>
False,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,86," and polynomials properties, respectively."
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,88,"* and polynomials properties, respectively.</p>"
False,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,121," function.  The domain is [smallest knot, largest knot]."
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,123,"* function.  The domain is [smallest knot, largest knot].</p>"
False,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,124, computing the value of the function.
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,126,* computing the value of the function.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,184, not affect the polynomials property.
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,186,* not affect the polynomials property.</p>
False,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,198, will not affect the knots property.
True,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,200,* will not affect the knots property.</p>
False,src/java/org/apache/commons/math/analysis/RiddersSolver.java,src/java/org/apache/commons/math/analysis/RiddersSolver.java,30, The function should be continuous but not necessarily smooth.
True,src/java/org/apache/commons/math/analysis/RiddersSolver.java,src/java/org/apache/commons/math/analysis/RiddersSolver.java,30,* The function should be continuous but not necessarily smooth.</p>
False,src/java/org/apache/commons/math/analysis/RiddersSolver.java,src/java/org/apache/commons/math/analysis/RiddersSolver.java,51, Requires bracketing condition.
True,src/java/org/apache/commons/math/analysis/RiddersSolver.java,src/java/org/apache/commons/math/analysis/RiddersSolver.java,51,* Requires bracketing condition.</p>
False,src/java/org/apache/commons/math/analysis/RiddersSolver.java,src/java/org/apache/commons/math/analysis/RiddersSolver.java,82, Requires bracketing condition.
True,src/java/org/apache/commons/math/analysis/RiddersSolver.java,src/java/org/apache/commons/math/analysis/RiddersSolver.java,82,* Requires bracketing condition.</p>
False,src/java/org/apache/commons/math/analysis/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/RombergIntegrator.java,30, is a special case of k = 2.
True,src/java/org/apache/commons/math/analysis/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/RombergIntegrator.java,30,* is a special case of k = 2.</p>
False,src/java/org/apache/commons/math/analysis/SecantSolver.java,src/java/org/apache/commons/math/analysis/SecantSolver.java,35, regula falsi method.</a>
True,src/java/org/apache/commons/math/analysis/SecantSolver.java,src/java/org/apache/commons/math/analysis/SecantSolver.java,35,* regula falsi method.</a></p>
False,src/java/org/apache/commons/math/analysis/SecantSolver.java,src/java/org/apache/commons/math/analysis/SecantSolver.java,37, The function is assumed to be continuous but not necessarily smooth.
True,src/java/org/apache/commons/math/analysis/SecantSolver.java,src/java/org/apache/commons/math/analysis/SecantSolver.java,37,* The function is assumed to be continuous but not necessarily smooth.</p>
False,src/java/org/apache/commons/math/analysis/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/SimpsonIntegrator.java,29, calculate the Simpson's rule of alternating 2/3 and 4/3.
True,src/java/org/apache/commons/math/analysis/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/SimpsonIntegrator.java,29,* calculate the Simpson's rule of alternating 2/3 and 4/3.</p>
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,24," x[0] < x[i] ... < x[n].  The x values are referred to as ""knot points."""
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,24,"* x[0] < x[i] ... < x[n].  The x values are referred to as ""knot points.""</p>"
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,30,* </p>
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,36, </ol>
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,37,* </ol></p>
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,41,* </p>
False,src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java,28, The function should be integrable.
True,src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java,28,* The function should be integrable.</p>
False,src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java,56, alrealy computed values.
True,src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java,56,* alrealy computed values.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,34, advised to use the default value.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,34,* advised to use the default value.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,37, is exceeded.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,37,* is exceeded.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,53, The default value is supplied by the implementation.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,53,* The default value is supplied by the implementation.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,64, use the default value or choose one that they see as appropriate.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,64,* use the default value or choose one that they see as appropriate.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,67, is not met.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,67,* is not met.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,83, The default value is supplied by the implementation.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,83,* The default value is supplied by the implementation.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,92, This is used to stop iterations.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,92,* This is used to stop iterations.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,110, The default value is provided by the implementation.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,110,* The default value is provided by the implementation.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,148, problem.
True,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java,148,* problem.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,26, Implementations will search for only one zero in the given interval.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,26,* Implementations will search for only one zero in the given interval.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,37, advised to use the default value supplied by the solver.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,37,* advised to use the default value supplied by the solver.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,40, is exceeded.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,40,* is exceeded.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,56, The default value is supplied by the solver implementation.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,56,* The default value is supplied by the solver implementation.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,68, this to a smaller value.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,68,* this to a smaller value.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,71," accuracy, but clients should not rely on this."
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,71,"* accuracy, but clients should not rely on this.</p>"
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,89, The default value is provided by the solver implementation.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,89,* The default value is provided by the solver implementation.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,97, achieved due to large values or short mantissa length.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,97,* achieved due to large values or short mantissa length.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,101, like 1E-1000.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,101,* like 1E-1000.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,125, value which is used as divisor is zero.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,125,* value which is used as divisor is zero.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,128, general.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,128,* general.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,199, problem.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java,199,* problem.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java,31, are returned by <code>newDefaultSolver()</code>.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java,31,* are returned by <code>newDefaultSolver()</code>.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java,34, SolverFactory factory = UnivariateRealSolverFactory.newInstance();
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java,34,* SolverFactory factory = UnivariateRealSolverFactory.newInstance();</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java,23, The default solver returned by this factory is a {@link BrentSolver}.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java,23,* The default solver returned by this factory is a {@link BrentSolver}.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,102, </ul>
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,102,* </ul></p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,110, explicitly specifying the maximum number of iterations.
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,110,* explicitly specifying the maximum number of iterations.</p>
False,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,149, -- ConvergenceException </li></ul>
True,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java,149,* -- ConvergenceException </li></ul></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,31, See individual method javadocs for details.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,31,* See individual method javadocs for details.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,35, <code>1 + NaNi  == NaN + i == NaN + NaNi.</code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,35,* <code>1 + NaNi  == NaN + i == NaN + NaNi.</code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,84, value.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,84,* value.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,118, </pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,118,* </pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,123, {@link java.lang.Double} arithmetic.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,123,* {@link java.lang.Double} arithmetic.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,139, part of this Complex number equals <code>Double.NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,139,* part of this Complex number equals <code>Double.NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,144, is <code>1 - NEGATIVE_INFINITY i</code>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,144,* is <code>1 - NEGATIVE_INFINITY i</code></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,167, underflows in the computation.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,167,* underflows in the computation.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,184, </ul>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,184,* </ul></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,229, Complex objects are considered to be equal.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,229,* Complex objects are considered to be equal.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,234, <code>Complex.NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,234,* <code>Complex.NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,272, All NaN values have the same hash code.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,272,* All NaN values have the same hash code.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,371, part of this Complex number equals <code>Double.NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,371,* part of this Complex number equals <code>Double.NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,390, </pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,390,* </pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,395, {@link java.lang.Double} arithmetic.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,395,* {@link java.lang.Double} arithmetic. </p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,416, <code> acos(z) = -i (log(z + i (sqrt(1 - z<sup>2</sup>))))</code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,416,* <code> acos(z) = -i (log(z + i (sqrt(1 - z<sup>2</sup>))))</code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,419, input argument is <code>NaN</code> or infinite.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,419,* input argument is <code>NaN</code> or infinite.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,439, <code> asin(z) = -i (log(sqrt(1 - z<sup>2</sup>) + iz)) </code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,439,* <code> asin(z) = -i (log(sqrt(1 - z<sup>2</sup>) + iz)) </code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,442, input argument is <code>NaN</code> or infinite.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,442,* input argument is <code>NaN</code> or infinite.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,462, <code> atan(z) = (i/2) log((i + z)/(i - z)) </code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,462,* <code> atan(z) = (i/2) log((i + z)/(i - z)) </code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,465, input argument is <code>NaN</code> or infinite.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,465,* input argument is <code>NaN</code> or infinite.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,489, {@link MathUtils#cosh} and {@link MathUtils#sinh}.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,489,* {@link MathUtils#cosh} and {@link MathUtils#sinh}.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,492, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,492,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,500, cos(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,500,* cos(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,523, {@link MathUtils#cosh} and {@link MathUtils#sinh}.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,523,* {@link MathUtils#cosh} and {@link MathUtils#sinh}.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,526, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,526,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,534, cosh(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,534,* cosh(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,557, {@link java.lang.Math#sin}.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,557,* {@link java.lang.Math#sin}.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,560, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,560,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,569, exp(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,569,* exp(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,592," <code>arg(a + bi) = {@link java.lang.Math#atan2}(b, a)</code>"
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,592,"* <code>arg(a + bi) = {@link java.lang.Math#atan2}(b, a)</code></p>"
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,595, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,595,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,607, </code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,607,* </code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,627," {@link #log}, respectively."
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,627,"* {@link #log}, respectively.</p>"
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,631, equals {@link Complex#ZERO}.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,631,* equals {@link Complex#ZERO}.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,655, {@link MathUtils#cosh} and {@link MathUtils#sinh}.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,655,* {@link MathUtils#cosh} and {@link MathUtils#sinh}.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,658, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,658,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,666, sin(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,666,* sin(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,689, {@link MathUtils#cosh} and {@link MathUtils#sinh}.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,689,* {@link MathUtils#cosh} and {@link MathUtils#sinh}.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,692, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,692,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,700, sinh(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,700,* sinh(&plusmn;INFINITY &plusmn; INFINITY i) = NaN + NaN i</code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,728, </ul>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,728,* </ul></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,731, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,731,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,742, </code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,742,* </code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,772, <code>sqrt(Complex.ONE.subtract(z.multiply(z)))</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,772,* <code>sqrt(Complex.ONE.subtract(z.multiply(z)))</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,775, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,775,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,778, infinite or NaN values returned in parts of the result.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,778,* infinite or NaN values returned in parts of the result.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,796, {@link MathUtils#cosh} and {@link MathUtils#sinh}.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,796,* {@link MathUtils#cosh} and {@link MathUtils#sinh}.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,799, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,799,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,808, tan(&plusmn;&pi;/2 + 0 i) = &plusmn;INFINITY + NaN i</code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,808,* tan(&plusmn;&pi;/2 + 0 i) = &plusmn;INFINITY + NaN i</code></pre></p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,834, {@link MathUtils#cosh} and {@link MathUtils#sinh}.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,834,* {@link MathUtils#cosh} and {@link MathUtils#sinh}.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,837, input argument is <code>NaN</code>.
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,837,* input argument is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,846, tanh(0 + (&pi;/2)i) = NaN + INFINITY i</code></pre>
True,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,846,* tanh(0 + (&pi;/2)i) = NaN + INFINITY i</code></pre></p>
False,src/java/org/apache/commons/math/complex/ComplexUtils.java,src/java/org/apache/commons/math/complex/ComplexUtils.java,245, computed as <code>r&middot;cos(theta) + r&middot;sin(theta)i</code>
True,src/java/org/apache/commons/math/complex/ComplexUtils.java,src/java/org/apache/commons/math/complex/ComplexUtils.java,245,* computed as <code>r&middot;cos(theta) + r&middot;sin(theta)i</code></p>
False,src/java/org/apache/commons/math/complex/ComplexUtils.java,src/java/org/apache/commons/math/complex/ComplexUtils.java,248," <code>theta</code> is infinite, {@link Complex#NaN} is returned."
True,src/java/org/apache/commons/math/complex/ComplexUtils.java,src/java/org/apache/commons/math/complex/ComplexUtils.java,248,"* <code>theta</code> is infinite, {@link Complex#NaN} is returned.</p>"
False,src/java/org/apache/commons/math/complex/ComplexUtils.java,src/java/org/apache/commons/math/complex/ComplexUtils.java,258," polar2Complex(INFINITY, 5&pi;/4) = -INFINITY - INFINITY i </code></pre>"
True,src/java/org/apache/commons/math/complex/ComplexUtils.java,src/java/org/apache/commons/math/complex/ComplexUtils.java,258,"* polar2Complex(INFINITY, 5&pi;/4) = -INFINITY - INFINITY i </code></pre></p>"
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,28, supplies them.
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,28,* supplies them.</p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,69, implementation of this method.
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,69,* implementation of this method.</p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,81, random integers generated using {@link #nextInt}.
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,81,* random integers generated using {@link #nextInt}.</p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,111, </pre>
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,111,* </pre></p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,128, </pre>
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,128,* </pre></p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,153, </pre>
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,153,* </pre></p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,170, </pre>
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,170,* </pre></p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,188, </pre>
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,188,* </pre></p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,204, other methods.
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,204,* other methods.</p>
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,219," D. Knuth, <u>The Art of Computer Programming</u>, 3.4.1C."
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,219,"* D. Knuth, <u>The Art of Computer Programming</u>, 3.4.1C.</p>"
False,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,225, implementation of {@link #setSeed(long)}.
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,225,* implementation of {@link #setSeed(long)}.</p>
False,src/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/java/org/apache/commons/math/random/EmpiricalDistribution.java,43, build grouped frequnecy histograms representing the input data or to
True,src/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/java/org/apache/commons/math/random/EmpiricalDistribution.java,43,* build grouped frequency histograms representing the input data or to
False,src/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/java/org/apache/commons/math/random/EmpiricalDistribution.java,45, generated will follow the distribution of the values in the file.
True,src/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/java/org/apache/commons/math/random/EmpiricalDistribution.java,45,* generated will follow the distribution of the values in the file.</p>
False,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,22,** This class represents exceptions thrown by the correlated random
True,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,23,* This class represents exceptions thrown by the correlated random
False,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,24, @version $Revision:$ $Date$
True,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,26,* @since 1.2
True,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,27,* @version $Revision$ $Date$
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,32, <code>nextSecureHexString</code>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,32,* <code>nextSecureHexString</code></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,37, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,37,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,50, <code>nextSecureInt</code>.
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,50,* <code>nextSecureInt</code>.</p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,55, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,55,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,71, <code>nextSecureLong</code>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,71,* <code>nextSecureLong</code></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,76, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,76,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,90, use <code>nextHexString()</code>.
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,90,* use <code>nextHexString()</code>.</p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,95, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,95,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,108, <code>nextInt</code> should be used instead of this method.
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,108,* <code>nextInt</code> should be used instead of this method.</p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,112, Secure Random Sequence</a>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,112,* Secure Random Sequence</a></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,117, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,117,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,128, and <code>upper</code> (endpoints included).<p>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,128,* and <code>upper</code> (endpoints included).
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,129,* <p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,131, <code>nextLong</code> should be used instead of this method.
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,132,* <code>nextLong</code> should be used instead of this method.</p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,135, Secure Random Sequence</a>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,136,* Secure Random Sequence</a></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,140, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,141,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,155, Poisson Distribution</a>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,156,* Poisson Distribution</a></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,160, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,161,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,173, Normal Distribution</a>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,174,* Normal Distribution</a></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,178, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,179,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,192, Exponential Distribution</a>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,193,* Exponential Distribution</a></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,197, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,198,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,212," location and scale parameters</a>, respectively."
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,213,"* location and scale parameters</a>, respectively.</p>"
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,217, </ul>
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,218,* </ul></p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,232, of <code>n</code> taken <code>k</code> at a time.
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,233,* of <code>n</code> taken <code>k</code> at a time.</p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,239, thrown.
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,240,* thrown.</p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,257, <code>k</code> from the elements of <code>c</code>.
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,258,* <code>k</code> from the elements of <code>c</code>.</p>
False,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,264, thrown.
True,src/java/org/apache/commons/math/random/RandomData.java,src/java/org/apache/commons/math/random/RandomData.java,265,* thrown.</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,39, used by the <code>SecureRandom</code> instance can also be reset.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,39,* used by the <code>SecureRandom</code> instance can also be reset.</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,42, {@link java.security.SecureRandom}.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,42,* {@link java.security.SecureRandom}.</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,78, </ul>
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,78,* </ul></p>
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,112,* {@inheritDoc}<p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,117, Each binary byte is translated into 2 hex digits</li></ol>
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,118,* Each binary byte is translated into 2 hex digits</li></ol></p>
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,195,* {@inheritDoc}<p>
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,205,* </p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,291, Generates a random long value from the Poisson distribution with the
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,292, given mean.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,295,* {@inheritDoc}
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,298, here.</a>
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,301,* here.</a></p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,301, 1000 * mean.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,304,* 1000 * mean.</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,351, from uniform deviates.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,354,* from uniform deviates.</p>
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,373,* {@inheritDoc}<p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,374, (both endpoints excluded).
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,378,* (both endpoints excluded).</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,400, Creates and initializes a default generator if null.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,404,* Creates and initializes a default generator if null.</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,416, Creates and initializes if null.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,420,* Creates and initializes if null.</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,431, Will create and initialize if null.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,435,* Will create and initialize if null.</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,446, Will create and initialize if null.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,450,* Will create and initialize if null.</p>
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,458, Will create and initialize if null.
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,462,* Will create and initialize if null.</p>
True,src/java/org/apache/commons/math/random/RandomVectorGenerator.java,src/java/org/apache/commons/math/random/RandomVectorGenerator.java,22,* @since 1.2
True,src/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/java/org/apache/commons/math/random/UniformRandomGenerator.java,27,* @since 1.2
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,29, property.
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,29,* property.</p>
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,41, <li> CONSTANT_MODE -- returns <code>mu</code> every time.</li></ul>
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,41,* <li> CONSTANT_MODE -- returns <code>mu</code> every time.</li></ul></p>
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,145, readable by *this at runtime.
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,145,* readable by *this at runtime.</p>
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,148, with <code>mode = DIGEST_MODE</code>
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,148,* with <code>mode = DIGEST_MODE</code></p>
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,161, <code>valuesFileURL</code> must exist and be
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,162, readable by *this at runtime.
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,161,* <code>valuesFileURL</code> must exist and be readable by this process
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,162,* at runtime.</p>
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,165, with <code>mode = DIGEST_MODE</code>
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,165,* with <code>mode = DIGEST_MODE</code></p>
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,290, <code>IllegalStateException</code> will be thrown</li></ul>
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,290,* <code>IllegalStateException</code> will be thrown</li></ul></p>
