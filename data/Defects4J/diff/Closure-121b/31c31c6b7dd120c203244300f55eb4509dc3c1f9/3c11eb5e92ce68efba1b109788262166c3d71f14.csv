is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,2, Copyright 2006 The Closure Compiler Authors.
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,5, you may not use this file except in compliance with the License.
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,6, You may obtain a copy of the License at
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,13, See the License for the specific language governing permissions and
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,14, limitations under the License.
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,17,ackage com.google.javascript.jscomp;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,19,mport com.google.javascript.jscomp.CheckLevel;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,20,mport com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,21,mport com.google.javascript.rhino.Node;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,25," Checks for misplaced semicolons, such as"
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,26, <pre>
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,27, if (foo()); act_now();
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,28, </pre>
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,29, and generates warnings.
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,32,inal class CheckAccidentalSemicolon extends AbstractPostOrderCallback {
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,34,tatic final DiagnosticType SUSPICIOUS_SEMICOLON = DiagnosticType.warning(
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,35,"JSC_SUSPICIOUS_SEMICOLON"","
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,36,"If this if/for/while really shouldn't have a body, use {}"");"
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,38,rivate final CheckLevel level;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,40,heckAccidentalSemicolon(CheckLevel level) {
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,41,his.level = level;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,44,Override
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,45,"ublic void visit(NodeTraversal t, Node n, Node parent) {"
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,46,ode child;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,47,witch (n.getType()) {
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,48,ase Token.IF:
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,49,hild = n.getFirstChild().getNext();  // skip the condition child
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,50,reak;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,52,ase Token.WHILE:
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,53,ase Token.FOR:
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,54,hild = NodeUtil.getLoopCodeBlock(n);
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,55,reak;
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,57,efault:
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,58,eturn;  // don't check other types
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,61,/ semicolons cause VOID children. Empty blocks are allowed because
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,62,"/ that's usually intentional, especially with loops."
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,63,or (; child != null; child = child.getNext()) {
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,64,f ((child.isBlock()) && (!child.hasChildren())) {
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,65,/ Only warn on empty blocks that replaced EMPTY nodes.  BLOCKs with no
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,66,/ children are considered OK.
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,67,f (child.wasEmptyNode()) {
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,68,.getCompiler().report(
False,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,69,".makeError(n, level, SUSPICIOUS_SEMICOLON));"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,2,* Copyright 2012 The Closure Compiler Authors.
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,20,import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,21,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,22,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,25,"* Checks for common errors, such as misplaced semicolons:"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,26,* <pre>
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,27,* if (x); act_now();
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,28,* </pre>
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,29,*  or comparison against NaN:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,30,* <pre>
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,31,* if (x === NaN) act();
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,32,* </pre>
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,33,* and generates warnings.
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,35,* @author johnlenz@google.com (John Lenz)
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,37,final class CheckSuspiciousCode extends AbstractPostOrderCallback {
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,39,static final DiagnosticType SUSPICIOUS_SEMICOLON = DiagnosticType.warning(
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,40,"""JSC_SUSPICIOUS_SEMICOLON"","
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,41,"""If this if/for/while really shouldn't have a body, use {}"");"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,43,static final DiagnosticType SUSPICIOUS_COMPARISON_WITH_NAN =
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,44,DiagnosticType.warning(
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,45,"""JSC_SUSPICIOUS_NAN"","
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,46,"""Comparison again NaN is always false. Did you mean isNaN()?"");"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,48,CheckSuspiciousCode() {
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,51,@Override
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,52,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,53,"checkMissingSemicolon(t, n);"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,54,"checkNaN(t, n);"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,57,"private void checkMissingSemicolon(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,58,switch (n.getType()) {
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,59,case Token.IF:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,60,Node trueCase = n.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,61,"reportIfWasEmpty(t, trueCase);"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,62,Node elseCase = trueCase.getNext();
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,63,if (elseCase != null) {
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,64,"reportIfWasEmpty(t, elseCase);"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,66,break;
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,68,case Token.WHILE:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,69,case Token.FOR:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,70,"reportIfWasEmpty(t, NodeUtil.getLoopCodeBlock(n));"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,71,break;
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,75,"private void reportIfWasEmpty(NodeTraversal t, Node block) {"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,76,Preconditions.checkState(block.isBlock());
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,78,// A semicolon is distinguished from a block without children by
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,79,// annotating it with EMPTY_BLOCK.  Blocks without children are
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,80,"// usually intentional, especially with loops."
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,81,if (!block.hasChildren() && block.wasEmptyNode()) {
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,82,t.getCompiler().report(
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,83,"t.makeError(block, SUSPICIOUS_SEMICOLON));"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,87,"private void checkNaN(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,88,switch (n.getType()) {
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,89,case Token.EQ:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,90,case Token.GE:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,91,case Token.GT:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,92,case Token.LE:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,93,case Token.LT:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,94,case Token.NE:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,95,case Token.SHEQ:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,96,case Token.SHNE:
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,97,"reportIfNaN(t, n.getFirstChild());"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,98,"reportIfNaN(t, n.getLastChild());"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,102,"private void reportIfNaN(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,103,if (NodeUtil.isNaN(n)) {
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,104,t.getCompiler().report(
True,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,105,"t.makeError(n.getParent(), SUSPICIOUS_COMPARISON_WITH_NAN));"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,797,haredCallbacks.add(new CheckAccidentalSemicolon(CheckLevel.WARNING));
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,797,sharedCallbacks.add(new CheckSuspiciousCode());
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,85,"nonStandardJsDocs, strictModuleDepCheck, typeInvalidation, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,85,"""nonStandardJsDocs, suspiciousCode, strictModuleDepCheck, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,86,"""typeInvalidation, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,119,ublic static DiagnosticGroup ACCESS_CONTROLS =
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,120,public static final DiagnosticGroup ACCESS_CONTROLS =
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,139,ublic static DiagnosticGroup EXTERNS_VALIDATION =
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,140,public static final DiagnosticGroup EXTERNS_VALIDATION =
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,162,/ TODO: add more IE specific checks here.
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,241,public static final DiagnosticGroup SUSPICIOUS_CODE =
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,242,"DiagnosticGroups.registerGroup(""suspiciousCode"","
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,243,"CheckSuspiciousCode.SUSPICIOUS_SEMICOLON,"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,244,CheckSuspiciousCode.SUSPICIOUS_COMPARISON_WITH_NAN);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,121, getExpressionBooleanValue if you don't care about side-effects.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,121,* getImpureBooleanValue if you don't care about side-effects.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3240,static boolean isNaN(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3241,"if ((n.isName() && n.getString().equals(""NaN"")) ||"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3242,(n.getType() == Token.DIV &&
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3243,n.getFirstChild().isNumber() && n.getFirstChild().getDouble() == 0 &&
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3244,n.getLastChild().isNumber() && n.getLastChild().getDouble() == 0)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3245,return true;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3247,return false;
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,2, Copyright 2006 The Closure Compiler Authors.
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,5, you may not use this file except in compliance with the License.
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,6, You may obtain a copy of the License at
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,13, See the License for the specific language governing permissions and
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,14, limitations under the License.
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,17,ackage com.google.javascript.jscomp;
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,19,mport com.google.javascript.jscomp.CheckLevel;
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,21,ublic class CheckAccidentalSemicolonTest extends CompilerTestCase {
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,22,ublic CheckAccidentalSemicolonTest() {
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,23,his.parseTypeInfo = true;
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,26,Override
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,27,rotected CompilerPass getProcessor(Compiler compiler) {
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,28,"eturn new CombinedCompilerPass(compiler,"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,29,ew CheckAccidentalSemicolon(CheckLevel.ERROR));
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,32,"ublic void test(String js, DiagnosticType error) {"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,33,"est(js, error == null ? js : null, error);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,36,ublic void testSuspiciousSemi() {
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,37,inal DiagnosticType e = CheckAccidentalSemicolon.SUSPICIOUS_SEMICOLON;
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,38,"inal DiagnosticType ok = null;  //  code is 'ok', verify no warning"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,40,"est(""if(x()) x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,41,"est(""if(x()); x = y;"", e);  // I've had this bug, damned ;"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,42,"est(""if(x()){} x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,44,"est(""if(x()) x = y; else y=z;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,45,"est(""if(x()); else y=z;"", e);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,46,"est(""if(x()){} else y=z;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,47,"est(""if(x()) x = y; else;"", e);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,48,"est(""if(x()) x = y; else {}"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,50,"est(""while(x()) x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,51,"est(""while(x()); x = y;"", e);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,52,"est(""while(x()){} x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,53,"est(""while(x()); {x = y}"", e);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,54,"est(""while(x()){} {x = y}"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,56,"est(""for(;;) x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,57,"est(""for(;;); x = y;"", e);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,58,"est(""for(;;){} x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,59,"est(""for(x in y) x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,60,"est(""for(x in y); x = y;"", e);"
False,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,61,"est(""for(x in y){} x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,2,* Copyright 2012 The Closure Compiler Authors.
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,20,* Tests for CheckSuspiciousCode
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,22,public class CheckSuspiciousCodeTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,23,public CheckSuspiciousCodeTest() {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,24,this.parseTypeInfo = true;
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,27,@Override
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,28,protected CompilerPass getProcessor(Compiler compiler) {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,29,"return new CombinedCompilerPass(compiler,"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,30,new CheckSuspiciousCode());
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,33,@Override
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,34,protected int getNumRepetitions() {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,35,return 1;
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,38,"public void test(String js, DiagnosticType error) {"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,39,"test(js, js, null, error);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,42,public void testSuspiciousSemi() {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,43,final DiagnosticType e = CheckSuspiciousCode.SUSPICIOUS_SEMICOLON;
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,44,"final DiagnosticType ok = null;  //  code is 'ok', verify no warning"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,46,"test(""if(x()) x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,47,"test(""if(x()); x = y;"", e);  // I've had this bug, damned ;"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,48,"test(""if(x()){} x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,50,"test(""if(x()) x = y; else y=z;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,51,"test(""if(x()); else y=z;"", e);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,52,"test(""if(x()){} else y=z;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,53,"test(""if(x()) x = y; else;"", e);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,54,"test(""if(x()) x = y; else {}"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,56,"test(""while(x()) x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,57,"test(""while(x()); x = y;"", e);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,58,"test(""while(x()){} x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,59,"test(""while(x()); {x = y}"", e);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,60,"test(""while(x()){} {x = y}"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,62,"test(""for(;;) x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,63,"test(""for(;;); x = y;"", e);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,64,"test(""for(;;){} x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,65,"test(""for(x in y) x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,66,"test(""for(x in y); x = y;"", e);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,67,"test(""for(x in y){} x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,70,private void testReportNaN(String js) {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,71,"testSame(js, CheckSuspiciousCode.SUSPICIOUS_COMPARISON_WITH_NAN);"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,74,public void testComparison1() {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,75,"testReportNaN(""x == NaN"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,76,"testReportNaN(""x != NaN"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,77,"testReportNaN(""x === NaN"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,78,"testReportNaN(""x !== NaN"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,79,"testReportNaN(""x < NaN"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,80,"testReportNaN(""x <= NaN"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,81,"testReportNaN(""x > NaN"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,82,"testReportNaN(""x >= NaN"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,85,public void testComparison2() {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,86,"testReportNaN(""NaN == x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,87,"testReportNaN(""NaN != x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,88,"testReportNaN(""NaN === x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,89,"testReportNaN(""NaN !== x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,90,"testReportNaN(""NaN < x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,91,"testReportNaN(""NaN <= x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,92,"testReportNaN(""NaN > x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,93,"testReportNaN(""NaN >= x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,96,public void testComparison3() {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,97,"testReportNaN(""x == 0/0"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,98,"testReportNaN(""x != 0/0"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,99,"testReportNaN(""x === 0/0"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,100,"testReportNaN(""x !== 0/0"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,101,"testReportNaN(""x < 0/0"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,102,"testReportNaN(""x <= 0/0"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,103,"testReportNaN(""x > 0/0"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,104,"testReportNaN(""x >= 0/0"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,107,public void testComparison4() {
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,108,"testReportNaN(""0/0 == x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,109,"testReportNaN(""0/0 != x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,110,"testReportNaN(""0/0 === x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,111,"testReportNaN(""0/0 !== x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,112,"testReportNaN(""0/0 < x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,113,"testReportNaN(""0/0 <= x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,114,"testReportNaN(""0/0 > x"");"
True,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,115,"testReportNaN(""0/0 >= x"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,24,import com.google.javascript.rhino.IR;
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,35,* Tests for NodeUtil
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,330,"rivate void assertSideEffect(boolean se, String js, boolean GlobalRegExp) {"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,334,"private void assertSideEffect(boolean se, String js, boolean globalRegExp) {"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,333,ompiler.setHasRegExpGlobalReferences(GlobalRegExp);
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,337,compiler.setHasRegExpGlobalReferences(globalRegExp);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,679,"ssertNodeNames(Sets.newHashSet(""foo"",""goo""),"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,683,"assertNodeNames(Sets.newHashSet(""foo"", ""goo""),"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1268,"ode script = parse(""var test = "" + js +"";"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1272,"Node script = parse(""var test = "" + js + "";"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1602,public void testIsNaN() {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1603,"assertEquals(true, NodeUtil.isNaN(getNode(""NaN"")));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1604,"assertEquals(false, NodeUtil.isNaN(getNode(""Infinity"")));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1605,"assertEquals(false, NodeUtil.isNaN(getNode(""x"")));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1606,"assertEquals(true, NodeUtil.isNaN(getNode(""0/0"")));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1607,"assertEquals(false, NodeUtil.isNaN(getNode(""1/0"")));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1608,"assertEquals(false, NodeUtil.isNaN(getNode(""0/1"")));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1609,"assertEquals(false, NodeUtil.isNaN(IR.number(0.0)));"
