is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,2,* Copyright 2011 The Closure Compiler Authors.
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,19,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,20,import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,21,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,22,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,24,import java.util.List;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,27,* <p>Compiler pass that converts all calls to:
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,28,"*   goog.object.create(key1, val1, key2, val2, ...) where all of the keys"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,29,*   are literals into object literals.</p>
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,31,* @author agrieve@google.com (Andrew Grieve)
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,33,final class ClosureOptimizePrimitives implements CompilerPass {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,35,/** Reference to the JS compiler */
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,36,private final AbstractCompiler compiler;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,39,* Identifies all calls to goog.object.create.
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,41,private class FindObjectCreateCalls extends AbstractPostOrderCallback {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,42,List<Node> callNodes = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,44,@Override
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,45,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,46,if (n.getType() == Token.CALL) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,47,String fnName = n.getFirstChild().getQualifiedName();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,48,"if (""goog$object$create"".equals(fnName) ||"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,49,"""goog.object.create"".equals(fnName)) {"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,50,callNodes.add(n);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,57,* @param compiler The AbstractCompiler
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,59,ClosureOptimizePrimitives(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,60,this.compiler = compiler;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,63,@Override
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,64,"public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,65,FindObjectCreateCalls pass = new FindObjectCreateCalls();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,66,"NodeTraversal.traverse(compiler, root, pass);"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,67,processObjectCreateCalls(pass.callNodes);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,71,* Converts all of the given call nodes to object literals that are safe to
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,72,* do so.
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,74,private void processObjectCreateCalls(List<Node> callNodes) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,75,for (Node callNode : callNodes) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,76,Node curParam = callNode.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,77,if (canOptimizeObjectCreate(curParam)) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,78,Node objNode = new Node(Token.OBJECTLIT)
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,79,.copyInformationFrom(callNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,80,while (curParam != null) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,81,Node keyNode = curParam;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,82,Node valueNode = curParam.getNext();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,83,curParam = valueNode.getNext();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,85,callNode.removeChild(keyNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,86,callNode.removeChild(valueNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,88,if (keyNode.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,89,keyNode = Node.newString(NodeUtil.getStringValue(keyNode))
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,90,.copyInformationFrom(keyNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,91,keyNode.setQuotedString();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,93,keyNode.addChildToBack(valueNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,94,objNode.addChildToBack(keyNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,96,"callNode.getParent().replaceChild(callNode, objNode);"
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,97,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,103,* Returns whether the given call to goog.object.create can be converted to an
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,104,* object literal.
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,106,private boolean canOptimizeObjectCreate(Node firstParam) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,107,Node curParam = firstParam;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,108,while (curParam != null) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,109,// All keys must be strings or numbers.
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,110,if (curParam.getType() != Token.STRING &&
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,111,curParam.getType() != Token.NUMBER) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,112,return false;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,114,curParam = curParam.getNext();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,116,// Check for an odd number of parameters.
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,117,if (curParam == null) {
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,118,return false;
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,120,curParam = curParam.getNext();
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,122,return true;
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,411,"// This needs to come after the inline constants pass, which is run within"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,412,// the code removing passes.
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,413,if (options.closurePass) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,414,passes.add(closureOptimizePrimitives);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1296,/** Special case optimizations for closure functions. */
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1297,private final PassFactory closureOptimizePrimitives =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1298,"new PassFactory(""closureOptimizePrimitives"", true) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1299,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1300,protected CompilerPass createInternal(final AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1301,return new ClosureOptimizePrimitives(compiler);
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,2,* Copyright 2011 The Closure Compiler Authors.
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,20,* Tests for {@link ClosureOptimizePrimitives}.
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,22,* @author agrieve@google.com (Andrew Grieve)
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,24,public class ClosureOptimizePrimitivesTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,26,@Override public CompilerPass getProcessor(final Compiler compiler) {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,27,return new ClosureOptimizePrimitives(compiler);
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,30,public void testObjectCreateNonConstKey() {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,31,"testSame(""goog.object.create('a',1,2,3,foo,bar);"");"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,34,public void testObjectCreateOddParams() {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,35,"testSame(""goog.object.create('a',1,2);"");"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,38,public void testObjectCreate1() {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,39,"test(""var a = goog.object.create()"", ""var a = {}"");"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,42,public void testObjectCreate2() {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,43,"test(""var a = goog$object$create('b',goog$object$create('c','d'))"","
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,44,"""var a = {b:{c:'d'}};"");"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,47,public void testObjectCreate3() {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,48,"test(""var a = goog.object.create(1,2)"", ""var a = {1:2}"");"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,51,public void testObjectCreate4() {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,52,"test(""alert(goog.object.create(1,2).toString())"","
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,53,"""alert({1:2}.toString())"");"
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,56,public void testObjectCreate5() {
True,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,test/com/google/javascript/jscomp/ClosureOptimizePrimitivesTest.java,57,"test(""goog.object.create('a',2).toString()"", ""({a:2}).toString()"");"
