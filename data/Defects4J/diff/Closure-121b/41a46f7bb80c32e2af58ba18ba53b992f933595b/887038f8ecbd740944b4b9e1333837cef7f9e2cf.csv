is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1968,if (getOptions().errorHandler != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1969,"getOptions().errorHandler.report(level, error);"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,764,* Handler for compiler warnings and errors.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,766,transient ErrorHandler errorHandler;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,911,errorHandler = null;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1396,* Set a custom handler for warnings and errors.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1398,* This is mostly used for piping the warnings and errors to
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1399,* a file behind the scenes.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1401,"* If you want to filter warnings and errors, you should use a WarningsGuard."
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1403,"* If you want to change how warnings and errors are reported to the user,"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1404,* you should set a ErrorManager on the Compiler. An ErrorManager is
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1405,* intended to summarize the errors for a single compile job.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1407,public void setErrorHandler(ErrorHandler handler) {
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1408,this.errorHandler = handler;
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,2,* Copyright 2012 The Closure Compiler Authors.
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,19,import com.google.javascript.jscomp.CheckLevel;
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,22,"* The error handler is any generic sink for warnings and errors,"
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,23,* after they've passed through any filtering {@code WarningsGuard}s.
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,25,* @author nicksantos@google.com (Nick Santos)
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,27,public interface ErrorHandler {
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,29,* @param level the reporting level
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,30,* @param error the error to report
True,src/com/google/javascript/jscomp/ErrorHandler.java,src/com/google/javascript/jscomp/ErrorHandler.java,32,"void report(CheckLevel level, JSError error);"
False,src/com/google/javascript/jscomp/ErrorManager.java,src/com/google/javascript/jscomp/ErrorManager.java,26,ublic interface ErrorManager {
True,src/com/google/javascript/jscomp/ErrorManager.java,src/com/google/javascript/jscomp/ErrorManager.java,26,public interface ErrorManager extends ErrorHandler {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,21,import com.google.common.collect.Multimap;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,22,import com.google.common.collect.Sets;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,23,import com.google.common.collect.TreeMultimap;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,27,import com.google.javascript.jscomp.CheckLevel;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,32,import java.io.PrintStream;
False,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,42,ublic abstract class WhitelistWarningsGuard extends WarningsGuard {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,47,public class WhitelistWarningsGuard extends WarningsGuard {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,66,@Override
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,67,public CheckLevel level(JSError error) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,68,if (containWarning(formatWarning(error))) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,69,"// If the message matches the guard we use WARNING, so that it"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,70,"// - Shows up on stderr, and"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,71,// - Gets caught by the WhitelistBuilder downstream in the pipeline
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,72,return CheckLevel.WARNING;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,75,return null;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,93,/** Creates a warnings guard from a file. */
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,94,public static WhitelistWarningsGuard fromFile(File file) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,95,return new WhitelistWarningsGuard(loadWhitelistedJsWarnings(file));
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,165,public static class WhitelistBuilder implements ErrorHandler {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,166,private final Set<JSError> warnings = Sets.newLinkedHashSet();
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,167,private String productName = null;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,168,private String generatorTarget = null;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,169,private boolean withLineNumber = false;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,171,/** Fill in your product name to get a fun message! */
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,172,public WhitelistBuilder setProductName(String name) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,173,this.productName = name;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,174,return this;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,177,/** Fill in instructions on how to generate this whitelist. */
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,178,public WhitelistBuilder setGeneratorTarget(String name) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,179,this.generatorTarget = name;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,180,return this;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,184,* Sets whether line number are recorded in the whitelist.
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,185,"* This means that if lines are added below the warning, the warning"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,186,* will need to be fixed or the whitelist will need to be regenerated.
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,188,public WhitelistBuilder setWithLineNumber(boolean line) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,189,this.withLineNumber = line;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,190,return this;
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,193,@Override
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,194,"public void report(CheckLevel level, JSError error) {"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,195,warnings.add(error);
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,199,* Writes the warnings collected in a format that the WhitelistWarningsGuard
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,200,* can read back later.
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,202,public void writeWhitelist(File out) throws IOException {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,203,PrintStream stream = new PrintStream(out);
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,204,appendWhitelist(stream);
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,205,stream.close();
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,209,* Writes the warnings collected in a format that the WhitelistWarningsGuard
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,210,* can read back later.
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,212,public void appendWhitelist(PrintStream out) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,213,out.append(
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,214,"""# This is a list of legacy warnings that have yet to be fixed.\n"");"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,216,if (productName != null) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,217,"out.append(""# Please find some time and fix at least one of them """
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,218,"+ ""and it will be the happiest day for "" + productName + "".\n"");"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,221,if (generatorTarget != null) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,222,"out.append(""# When you fix any of these warnings, run """
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,223,"+ generatorTarget + "" task.\n"");"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,226,"Multimap<DiagnosticType, String> warningsByType = TreeMultimap.create();"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,227,for (JSError warning : warnings) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,228,warningsByType.put(
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,229,"warning.getType(), formatWarning(warning, withLineNumber));"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,232,for (DiagnosticType type : warningsByType.keySet()) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,233,"out.append(""\n# Warning "")"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,234,.append(type.key)
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,235,".append("": "")"
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,236,.println(getFirstLine(type.format.toPattern()));
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,238,for (String warning : warningsByType.get(type)) {
True,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,src/com/google/javascript/jscomp/WhitelistWarningsGuard.java,239,out.println(warning);
