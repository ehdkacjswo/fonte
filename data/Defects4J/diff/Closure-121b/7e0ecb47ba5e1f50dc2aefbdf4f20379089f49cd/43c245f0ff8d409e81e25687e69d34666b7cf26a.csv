is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,21,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,659,Node value = transform(el.getRight());
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,662,Preconditions.checkState(value.getType() == Token.FUNCTION);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,663,if (getFnParamNode(value).hasChildren()) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,664,reportGetterParam(el.getLeft());
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,668,Preconditions.checkState(value.getType() == Token.FUNCTION);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,669,if (!getFnParamNode(value).hasOneChild()) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,670,reportSetterParam(el.getLeft());
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,663,ey.addChildToFront(transform(el.getRight()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,673,key.addChildToFront(value);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,680,* @param fnNode The function.
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,681,* @return The Node containing the Function parameters.
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,683,Node getFnParamNode(Node fnNode) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,684,"// Function NODE: [ FUNCTION -> NAME, LP -> ARG1, ARG2, ... ]"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,685,Preconditions.checkArgument(fnNode.getType() == Token.FUNCTION);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,686,return fnNode.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,921,void reportGetterParam(AstNode node) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,922,errorReporter.error(
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,923,"""getters may not have parameters"","
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,924,"sourceName,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,925,"node.getLineno(), """", 0);"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,928,void reportSetterParam(AstNode node) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,929,errorReporter.error(
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,930,"""setters must have exactly one parameter"","
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,931,"sourceName,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,932,"node.getLineno(), """", 0);"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,743,"parseError(""var x = {get a(b){}};"", ""getters may not have parameters"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,752,"parseError(""var x = {set a(){}};"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,753,"""setters must have exactly one parameter"");"
