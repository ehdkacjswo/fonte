is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1351,f (propType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1351,if (propType.isEquivalentTo(typeRegistry.getNativeType(UNKNOWN_TYPE))) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1359,bjectType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1359,objectType.isEquivalentTo(
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1360,typeRegistry.getNativeType(UNKNOWN_TYPE))) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,802, else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,802,} else if (functionType.isEquivalentTo(
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,803,getNativeType(CHECKED_UNKNOWN_TYPE))) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1252, else if (propertyType.equals(unknownType) && isLocallyInferred) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1253,} else if (propertyType.isEquivalentTo(unknownType) && isLocallyInferred) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,472,f (!declaredSuper.equals(superObject)) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,473,f (declaredSuper.equals(getNativeType(OBJECT_TYPE))) {
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,472,if (!declaredSuper.isEquivalentTo(superObject)) {
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,473,if (declaredSuper.isEquivalentTo(getNativeType(OBJECT_TYPE))) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,572,newType.equals(varType)) {
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,572,!newType.isEquivalentTo(varType)) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,820,eturn (that.typeA.equals(this.typeA) && that.typeB.equals(this.typeB))
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,821,| (that.typeB.equals(this.typeA) && that.typeA.equals(this.typeB));
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,820,return (that.typeA.isEquivalentTo(this.typeA)
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,821,&& that.typeB.isEquivalentTo(this.typeB))
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,822,|| (that.typeB.isEquivalentTo(this.typeA)
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,823,&& that.typeA.isEquivalentTo(this.typeB));
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1158,fnType.equals(getNativeType(U2U_CONSTRUCTOR_TYPE))) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1158,!fnType.isEquivalentTo(getNativeType(U2U_CONSTRUCTOR_TYPE))) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1187,uperClassCtor.getInstanceType().equals(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1187,superClassCtor.getInstanceType().isEquivalentTo(
False,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,191,f (type != null && enumElementType.getPrimitiveType().equals(type)) {
True,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,191,if (type != null && enumElementType.getPrimitiveType().isEquivalentTo(type)) {
False,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,279,f (type != null && enumElementType.getPrimitiveType().equals(type)) {
True,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,279,if (type != null &&
True,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,280,enumElementType.getPrimitiveType().isEquivalentTo(type)) {
False,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,418,f (type != null && enumElementType.getPrimitiveType().equals(type)) {
True,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,419,if (type != null &&
True,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,420,enumElementType.getPrimitiveType().isEquivalentTo(type)) {
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,42,import com.google.common.collect.Iterables;
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,49,import java.util.Iterator;
False,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,72,"ssert.assertEquals(""JSType#resolve should not affect hash codes"","
False,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,73,"ype.hashCode(), resolvedType.hashCode());"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,100,Assert.assertTrue(
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,101,"""Both types must be null, or both must be non-null "" + a + "","" + b,"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,102,(a == null) == (b == null));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,103,if (a == null) {
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,104,return;
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,120,"public static <T extends JSType, S extends JSType> void"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,121,"assertTypeCollectionEquals(Iterable<T> a, Iterable<S> b) {"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,122,"Assert.assertEquals(Iterables.size(a), Iterables.size(b));"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,123,Iterator<T> aIterator = a.iterator();
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,124,Iterator<S> bIterator = b.iterator();
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,125,while (aIterator.hasNext()) {
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,126,"assertTypeEquals(aIterator.next(), bIterator.next());"
True,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,24,import com.google.javascript.rhino.testing.Asserts;
False,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,166,"ssertEquals(trueType,"
True,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,167,Asserts.assertTypeEquals(
True,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,168,"trueType,"
False,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,171,"ssertEquals(falseType,"
True,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,173,Asserts.assertTypeEquals(
True,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java,174,"falseType,"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,19,import static com.google.javascript.rhino.testing.Asserts.assertTypeEquals;
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,77,"ssertEquals(STRING_TYPE, childAB.getSlot(""localB"").getType());"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,78,"ssertEquals(BOOLEAN_TYPE, childB.getSlot(""localB"").getType());"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,79,"assertTypeEquals(STRING_TYPE, childAB.getSlot(""localB"").getType());"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,80,"assertTypeEquals(BOOLEAN_TYPE, childB.getSlot(""localB"").getType());"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,82,"ssertEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,84,"assertTypeEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,87,"ssertEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,89,"assertTypeEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,102,"ssertEquals(STRING_TYPE, childA.getSlot(""localA"").getType());"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,103,"ssertEquals(BOOLEAN_TYPE, childB.getSlot(""globalB"").getType());"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,104,"assertTypeEquals(STRING_TYPE, childA.getSlot(""localA"").getType());"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,105,"assertTypeEquals(BOOLEAN_TYPE, childB.getSlot(""globalB"").getType());"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,107,"ssertEquals(STRING_TYPE, joined.getSlot(""localA"").getType());"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,108,"ssertEquals(BOOLEAN_TYPE, joined.getSlot(""globalB"").getType());"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,109,"assertTypeEquals(STRING_TYPE, joined.getSlot(""localA"").getType());"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,110,"assertTypeEquals(BOOLEAN_TYPE, joined.getSlot(""globalB"").getType());"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,111,"ssertEquals(STRING_TYPE, joined.getSlot(""localA"").getType());"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,112,"ssertEquals(BOOLEAN_TYPE, joined.getSlot(""globalB"").getType());"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,113,"assertTypeEquals(STRING_TYPE, joined.getSlot(""localA"").getType());"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,114,"assertTypeEquals(BOOLEAN_TYPE, joined.getSlot(""globalB"").getType());"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,129,"ssertEquals(createUnionType(STRING_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,131,"assertTypeEquals(createUnionType(STRING_TYPE, NUMBER_TYPE),"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,131,"ssertEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,133,"assertTypeEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,135,"ssertEquals(createUnionType(STRING_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,137,"assertTypeEquals(createUnionType(STRING_TYPE, NUMBER_TYPE),"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,137,"ssertEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,139,"assertTypeEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,216,ssertEquals(
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,218,assertTypeEquals(
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,219,ssertEquals(
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,221,assertTypeEquals(
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,225,"ssertEquals(createUnionType(STRING_TYPE, NUMBER_TYPE), joinedSlotType);"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,227,"assertTypeEquals(createUnionType(STRING_TYPE, NUMBER_TYPE), joinedSlotType);"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,227,"ssertEquals(createUnionType(NUMBER_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,229,"assertTypeEquals(createUnionType(NUMBER_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,230,"ssertEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,232,"assertTypeEquals(createUnionType(STRING_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,233,"ssertEquals(BOOLEAN_TYPE, joinedSlotType);"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,235,"assertTypeEquals(BOOLEAN_TYPE, joinedSlotType);"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,253,"ssertEquals(BOOLEAN_TYPE,"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,255,"assertTypeEquals(BOOLEAN_TYPE,"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,258,"ssertEquals(STRING_TYPE,"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,260,"assertTypeEquals(STRING_TYPE,"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,260,"ssertEquals(STRING_TYPE,"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,262,"assertTypeEquals(STRING_TYPE,"
False,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,263,"ssertEquals(NUMBER_TYPE,"
True,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,test/com/google/javascript/jscomp/LinkedFlowScopeTest.java,265,"assertTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,19,import static com.google.javascript.rhino.testing.Asserts.assertTypeEquals;
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,34,import com.google.javascript.rhino.testing.Asserts;
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,58,"ssertEquals(ARRAY_FUNCTION_TYPE, s.getVar(""Array"").getType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,59,"ssertEquals(BOOLEAN_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,61,"assertTypeEquals(ARRAY_FUNCTION_TYPE, s.getVar(""Array"").getType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,62,"assertTypeEquals(BOOLEAN_OBJECT_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,61,"ssertEquals(DATE_FUNCTION_TYPE, s.getVar(""Date"").getType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,62,"ssertEquals(ERROR_FUNCTION_TYPE, s.getVar(""Error"").getType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,63,"ssertEquals(EVAL_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,64,"assertTypeEquals(DATE_FUNCTION_TYPE, s.getVar(""Date"").getType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,65,"assertTypeEquals(ERROR_FUNCTION_TYPE, s.getVar(""Error"").getType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,66,"assertTypeEquals(EVAL_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,65,"ssertEquals(NUMBER_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,68,"assertTypeEquals(NUMBER_OBJECT_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,67,"ssertEquals(OBJECT_FUNCTION_TYPE, s.getVar(""Object"").getType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,68,"ssertEquals(RANGE_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,70,"assertTypeEquals(OBJECT_FUNCTION_TYPE, s.getVar(""Object"").getType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,71,"assertTypeEquals(RANGE_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,70,"ssertEquals(REFERENCE_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,73,"assertTypeEquals(REFERENCE_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,72,"ssertEquals(REGEXP_FUNCTION_TYPE, s.getVar(""RegExp"").getType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,73,"ssertEquals(STRING_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,75,"assertTypeEquals(REGEXP_FUNCTION_TYPE, s.getVar(""RegExp"").getType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,76,"assertTypeEquals(STRING_OBJECT_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,75,"ssertEquals(SYNTAX_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,78,"assertTypeEquals(SYNTAX_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,77,"ssertEquals(TYPE_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,80,"assertTypeEquals(TYPE_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,79,"ssertEquals(URI_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,82,"assertTypeEquals(URI_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3186,"ssertEquals(createUnionType(STRING_TYPE, NULL_TYPE),"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3189,"assertTypeEquals(createUnionType(STRING_TYPE, NULL_TYPE),"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3197,"ssertEquals(NUMBER_TYPE, p.scope.getVar(""a"").getType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3200,"assertTypeEquals(NUMBER_TYPE, p.scope.getVar(""a"").getType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3204,"ssertEquals(createUnionType(STRING_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,3207,"assertTypeEquals(createUnionType(STRING_TYPE, NUMBER_TYPE),"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4150,"ssertEquals(NUMBER_TYPE, n.getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4153,"assertTypeEquals(NUMBER_TYPE, n.getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4156,"ssertEquals(STRING_TYPE, n.getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4159,"assertTypeEquals(STRING_TYPE, n.getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4162,"ssertEquals(BOOLEAN_TYPE, trueNode.getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4165,"assertTypeEquals(BOOLEAN_TYPE, trueNode.getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4168,"ssertEquals(BOOLEAN_TYPE, falseNode.getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4171,"assertTypeEquals(BOOLEAN_TYPE, falseNode.getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4178,"ssertEquals(VOID_TYPE, n.getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4181,"assertTypeEquals(VOID_TYPE, n.getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4654,"ssertEquals(ARRAY_TYPE, a.getType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4657,"assertTypeEquals(ARRAY_TYPE, a.getType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4702,"ssertEquals(VOID_TYPE, testNameNode(""undefined""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4705,"assertTypeEquals(VOID_TYPE, testNameNode(""undefined""));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4706,"ssertEquals(OBJECT_FUNCTION_TYPE, testNameNode(""Object""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4709,"assertTypeEquals(OBJECT_FUNCTION_TYPE, testNameNode(""Object""));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4710,"ssertEquals(ARRAY_FUNCTION_TYPE, testNameNode(""Array""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4713,"assertTypeEquals(ARRAY_FUNCTION_TYPE, testNameNode(""Array""));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4714,"ssertEquals(DATE_FUNCTION_TYPE, testNameNode(""Date""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4717,"assertTypeEquals(DATE_FUNCTION_TYPE, testNameNode(""Date""));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4718,"ssertEquals(REGEXP_FUNCTION_TYPE, testNameNode(""RegExp""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4721,"assertTypeEquals(REGEXP_FUNCTION_TYPE, testNameNode(""RegExp""));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5361,"ssertEquals(""bar property on goog.foo type incorrectly inferred"","
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5364,"assertTypeEquals(""bar property on goog.foo type incorrectly inferred"","
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5431,"ssertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5434,"assertTypeEquals(UNKNOWN_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5433,"ssertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5436,"assertTypeEquals(UNKNOWN_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5488,"ssertEquals(STRING_TYPE, node.getFirstChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5491,"assertTypeEquals(STRING_TYPE, node.getFirstChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5497,"ssertEquals(STRING_TYPE, node.getLastChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5500,"assertTypeEquals(STRING_TYPE, node.getLastChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5510,"ssertEquals(STRING_TYPE, n1.getLastChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5513,"assertTypeEquals(STRING_TYPE, n1.getLastChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5523,"ssertEquals(STRING_TYPE, n2.getLastChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5526,"assertTypeEquals(STRING_TYPE, n2.getLastChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5531,"ssertEquals(NUMBER_TYPE, type);"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5534,"assertTypeEquals(NUMBER_TYPE, type);"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5539,"ssertEquals(NUMBER_TYPE, type);"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5542,"assertTypeEquals(NUMBER_TYPE, type);"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5882,"ssertEquals(NUMBER_TYPE, objectType.getPropertyType(""m1""));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5883,"ssertEquals(STRING_TYPE, objectType.getPropertyType(""m2""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5885,"assertTypeEquals(NUMBER_TYPE, objectType.getPropertyType(""m1""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5886,"assertTypeEquals(STRING_TYPE, objectType.getPropertyType(""m2""));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5886,"ssertEquals(objectType, nameNode.getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5889,"assertTypeEquals(objectType, nameNode.getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5902,"ssertEquals(STRING_TYPE, n.getFirstChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5905,"assertTypeEquals(STRING_TYPE, n.getFirstChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5910,"ssertEquals(ERROR_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5913,"assertTypeEquals(ERROR_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5916,"ssertEquals(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,5919,"assertTypeEquals(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6208,ssertEquals(
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6211,Asserts.assertTypeCollectionEquals(
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6220,"ssertEquals(type, OBJECT_TYPE);"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6223,"assertTypeEquals(type, OBJECT_TYPE);"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6224,ssertEquals(
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6227,Asserts.assertTypeCollectionEquals(
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6833,ssertEquals(registry.createOptionalType(
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6836,assertTypeEquals(registry.createOptionalType(
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6878,"ssertEquals(""Expected "" + objectType.getReferenceName() +"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6881,"assertTypeEquals(""Expected "" + objectType.getReferenceName() +"
True,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,19,import static com.google.javascript.rhino.testing.Asserts.assertTypeEquals;
False,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,60,"ssertEquals(STRING_TYPE, getVarType(informedTrue, ""a""));"
True,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,62,"assertTypeEquals(STRING_TYPE, getVarType(informedTrue, ""a""));"
False,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,65,"ssertEquals(createNullableType(STRING_TYPE),"
True,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,67,"assertTypeEquals(createNullableType(STRING_TYPE),"
False,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,81,"ssertEquals(createNullableType(STRING_TYPE),"
True,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,83,"assertTypeEquals(createNullableType(STRING_TYPE),"
False,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,87,"ssertEquals(STRING_TYPE, getVarType(informedFalse, ""a""));"
True,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,89,"assertTypeEquals(STRING_TYPE, getVarType(informedFalse, ""a""));"
False,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,532,"ssertEquals(p.name, p.type, getVarType(informedTrue, p.name));"
True,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,534,"assertTypeEquals(p.name, p.type, getVarType(informedTrue, p.name));"
False,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,539,"ssertEquals(p.type, getVarType(informedFalse, p.name));"
True,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java,541,"assertTypeEquals(p.type, getVarType(informedFalse, p.name));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,19,import static com.google.javascript.rhino.testing.Asserts.assertTypeEquals;
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,33,import com.google.javascript.rhino.testing.Asserts;
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,54,"ssertEquals(ARRAY_FUNCTION_TYPE, s.getVar(""Array"").getType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,55,"ssertEquals(BOOLEAN_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,57,"assertTypeEquals(ARRAY_FUNCTION_TYPE, s.getVar(""Array"").getType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,58,"assertTypeEquals(BOOLEAN_OBJECT_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,57,"ssertEquals(DATE_FUNCTION_TYPE, s.getVar(""Date"").getType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,58,"ssertEquals(ERROR_FUNCTION_TYPE, s.getVar(""Error"").getType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,59,"ssertEquals(EVAL_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,60,"assertTypeEquals(DATE_FUNCTION_TYPE, s.getVar(""Date"").getType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,61,"assertTypeEquals(ERROR_FUNCTION_TYPE, s.getVar(""Error"").getType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,62,"assertTypeEquals(EVAL_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,61,"ssertEquals(NUMBER_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,64,"assertTypeEquals(NUMBER_OBJECT_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,63,"ssertEquals(OBJECT_FUNCTION_TYPE, s.getVar(""Object"").getType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,64,"ssertEquals(RANGE_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,66,"assertTypeEquals(OBJECT_FUNCTION_TYPE, s.getVar(""Object"").getType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,67,"assertTypeEquals(RANGE_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,66,"ssertEquals(REFERENCE_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,69,"assertTypeEquals(REFERENCE_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,68,"ssertEquals(REGEXP_FUNCTION_TYPE, s.getVar(""RegExp"").getType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,69,"ssertEquals(STRING_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,71,"assertTypeEquals(REGEXP_FUNCTION_TYPE, s.getVar(""RegExp"").getType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,72,"assertTypeEquals(STRING_OBJECT_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,71,"ssertEquals(SYNTAX_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,74,"assertTypeEquals(SYNTAX_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,73,"ssertEquals(TYPE_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,76,"assertTypeEquals(TYPE_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,75,"ssertEquals(URI_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,78,"assertTypeEquals(URI_ERROR_FUNCTION_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4028,"ssertEquals(createUnionType(STRING_TYPE, NULL_TYPE),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4031,"assertTypeEquals(createUnionType(STRING_TYPE, NULL_TYPE),"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4039,"ssertEquals(NUMBER_TYPE, p.scope.getVar(""a"").getType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4042,"assertTypeEquals(NUMBER_TYPE, p.scope.getVar(""a"").getType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4046,"ssertEquals(createUnionType(STRING_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4049,"assertTypeEquals(createUnionType(STRING_TYPE, NUMBER_TYPE),"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5601,"ssertEquals(NUMBER_TYPE, n.getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5604,"assertTypeEquals(NUMBER_TYPE, n.getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5607,"ssertEquals(STRING_TYPE, n.getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5610,"assertTypeEquals(STRING_TYPE, n.getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5613,"ssertEquals(BOOLEAN_TYPE, trueNode.getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5616,"assertTypeEquals(BOOLEAN_TYPE, trueNode.getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5619,"ssertEquals(BOOLEAN_TYPE, falseNode.getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5622,"assertTypeEquals(BOOLEAN_TYPE, falseNode.getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5629,"ssertEquals(VOID_TYPE, n.getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5632,"assertTypeEquals(VOID_TYPE, n.getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6546,"ssertEquals(ARRAY_TYPE, a.getType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6549,"assertTypeEquals(ARRAY_TYPE, a.getType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6605,"ssertEquals(VOID_TYPE, testNameNode(""undefined""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6608,"assertTypeEquals(VOID_TYPE, testNameNode(""undefined""));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6609,"ssertEquals(OBJECT_FUNCTION_TYPE, testNameNode(""Object""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6612,"assertTypeEquals(OBJECT_FUNCTION_TYPE, testNameNode(""Object""));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6613,"ssertEquals(ARRAY_FUNCTION_TYPE, testNameNode(""Array""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6616,"assertTypeEquals(ARRAY_FUNCTION_TYPE, testNameNode(""Array""));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6617,"ssertEquals(DATE_FUNCTION_TYPE, testNameNode(""Date""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6620,"assertTypeEquals(DATE_FUNCTION_TYPE, testNameNode(""Date""));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6621,"ssertEquals(REGEXP_FUNCTION_TYPE, testNameNode(""RegExp""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6624,"assertTypeEquals(REGEXP_FUNCTION_TYPE, testNameNode(""RegExp""));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7425,"ssertEquals(""bar property on goog.foo type incorrectly inferred"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7428,"assertTypeEquals(""bar property on goog.foo type incorrectly inferred"","
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7495,"ssertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7498,"assertTypeEquals(UNKNOWN_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7497,"ssertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7500,"assertTypeEquals(UNKNOWN_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7552,"ssertEquals(STRING_TYPE, node.getFirstChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7555,"assertTypeEquals(STRING_TYPE, node.getFirstChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7561,"ssertEquals(STRING_TYPE, node.getLastChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7564,"assertTypeEquals(STRING_TYPE, node.getLastChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7574,"ssertEquals(STRING_TYPE, n1.getLastChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7577,"assertTypeEquals(STRING_TYPE, n1.getLastChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7587,"ssertEquals(STRING_TYPE, n2.getLastChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7590,"assertTypeEquals(STRING_TYPE, n2.getLastChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7595,"ssertEquals(NUMBER_TYPE, type);"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7598,"assertTypeEquals(NUMBER_TYPE, type);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7603,"ssertEquals(NUMBER_TYPE, type);"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7606,"assertTypeEquals(NUMBER_TYPE, type);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8025,"ssertEquals(NUMBER_TYPE, objectType.getPropertyType(""m1""));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8026,"ssertEquals(STRING_TYPE, objectType.getPropertyType(""m2""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8028,"assertTypeEquals(NUMBER_TYPE, objectType.getPropertyType(""m1""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8029,"assertTypeEquals(STRING_TYPE, objectType.getPropertyType(""m2""));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8029,"ssertEquals(objectType, nameNode.getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8032,"assertTypeEquals(objectType, nameNode.getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8121,"ssertEquals(STRING_TYPE, n.getFirstChild().getFirstChild().getJSType());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8124,"assertTypeEquals(STRING_TYPE, n.getFirstChild().getFirstChild().getJSType());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8129,"ssertEquals(ERROR_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8132,"assertTypeEquals(ERROR_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8135,"ssertEquals(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8138,"assertTypeEquals(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8469,ssertEquals(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8472,Asserts.assertTypeCollectionEquals(
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8481,"ssertEquals(type, OBJECT_TYPE);"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8484,"assertTypeEquals(type, OBJECT_TYPE);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8485,ssertEquals(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8488,Asserts.assertTypeCollectionEquals(
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9467,"ssertEquals(registry.getNativeType(JSTypeNative.OBJECT_FUNCTION_TYPE),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9470,"assertTypeEquals(registry.getNativeType(JSTypeNative.OBJECT_FUNCTION_TYPE),"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9473,"ssertEquals(registry.getNativeType(JSTypeNative.VOID_TYPE),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9476,"assertTypeEquals(registry.getNativeType(JSTypeNative.VOID_TYPE),"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9486,"ssertEquals(registry.getNativeType(JSTypeNative.NUMBER_TYPE),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9489,"assertTypeEquals(registry.getNativeType(JSTypeNative.NUMBER_TYPE),"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9507,"ssertEquals(registry.createNullableType(registry.getType(""Foo"")),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9510,"assertTypeEquals(registry.createNullableType(registry.getType(""Foo"")),"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9945,"ssertEquals(""Expected "" + objectType.getReferenceName() +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9948,"assertTypeEquals(""Expected "" + objectType.getReferenceName() +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,41,import com.google.javascript.rhino.testing.Asserts;
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,95,"ssertEquals(registry.getNativeType(UNKNOWN_TYPE),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,96,"Asserts.assertTypeEquals(registry.getNativeType(UNKNOWN_TYPE),"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,97,"ssertEquals(Lists.newArrayList(foo), registry.getTypesWithProperty(""bar""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,98,Asserts.assertTypeCollectionEquals(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,99,"Lists.newArrayList(foo), registry.getTypesWithProperty(""bar""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,108,"ssertEquals(Lists.newArrayList(foo), registry.getTypesWithProperty(""Bar""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,110,Asserts.assertTypeCollectionEquals(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,111,"Lists.newArrayList(foo), registry.getTypesWithProperty(""Bar""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,140,"ssertEquals(Lists.newArrayList(foo), registry.getTypesWithProperty(""Bar""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,143,Asserts.assertTypeCollectionEquals(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,144,"Lists.newArrayList(foo), registry.getTypesWithProperty(""Bar""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,290,"ssertEquals(registry.getType(""FooAlias""),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,294,"Asserts.assertTypeEquals(registry.getType(""FooAlias""),"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,305,"ssertEquals(registry.getType(""goog.Foo""),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,309,"Asserts.assertTypeEquals(registry.getType(""goog.Foo""),"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,350,"ssertEquals(globalScope.getVar(""goog.foo"").getType(),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,354,"Asserts.assertTypeEquals(globalScope.getVar(""goog.foo"").getType(),"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,367,"ssertEquals(lastLocalScope.getVar(""goog.foo"").getType(),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,371,"Asserts.assertTypeEquals(lastLocalScope.getVar(""goog.foo"").getType(),"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,464,"ssertEquals(getNativeType(NUMBER_TYPE),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,468,"Asserts.assertTypeEquals(getNativeType(NUMBER_TYPE),"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,466,"ssertEquals(getNativeType(BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,470,"Asserts.assertTypeEquals(getNativeType(BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,468,"ssertEquals(getNativeType(STRING_TYPE),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,472,"Asserts.assertTypeEquals(getNativeType(STRING_TYPE),"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,526,"ssertEquals(iPrototype, globalScope.getVar(""I.prototype"").getType());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,530,"Asserts.assertTypeEquals(iPrototype, globalScope.getVar(""I.prototype"").getType());"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,639,"ssertTypeEquals(""function (): number"","
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,640,"xternInstance.getPropertyType(""one""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,643,"assertEquals(""function (): number"","
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,644,"externInstance.getPropertyType(""one"").toString());"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,668,"ssertTypeEquals(""number"", obj.getPropertyType(""one""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,672,"assertEquals(""number"", obj.getPropertyType(""one"").toString());"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,740,ssertFalse(x.equals(windowCtor.getInstanceType()));
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,744,assertFalse(x.isEquivalentTo(windowCtor.getInstanceType()));
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,755,ssertFalse(x.equals(windowCtor.getInstanceType()));
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,759,assertFalse(x.isEquivalentTo(windowCtor.getInstanceType()));
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,806,"ssertEquals(registry.getType(""Foo""), registry.getType(""FooAlias""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,810,"Asserts.assertTypeEquals(registry.getType(""Foo""), registry.getType(""FooAlias""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,815,"ssertEquals(registry.getType(""goog.Foo""),"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,819,"Asserts.assertTypeEquals(registry.getType(""goog.Foo""),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4744,"ssertEquals(a.hashCode(), realA.hashCode());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4746,"ssertEquals(b.hashCode(), realB.hashCode());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4754,"ssertEquals(a.hashCode(), realA.hashCode());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4756,"ssertEquals(b.hashCode(), realB.hashCode());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4778,"ssertEquals(a.hashCode(), b.hashCode());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4786,"ssertEquals(a.hashCode(), b.hashCode());"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,71,"ssertEquals(nullOrString, stringOrNull);"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,72,"ssertEquals(stringOrNull, nullOrString);"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,71,"Asserts.assertTypeEquals(nullOrString, stringOrNull);"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,72,"Asserts.assertTypeEquals(stringOrNull, nullOrString);"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,83,"ssertEquals(nullOrUnknown, NULL_TYPE.getLeastSupertype(nullOrUnknown));"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,84,"ssertEquals(nullOrUnknown, nullOrUnknown.getLeastSupertype(NULL_TYPE));"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,85,"ssertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,83,"Asserts.assertTypeEquals(nullOrUnknown, NULL_TYPE.getLeastSupertype(nullOrUnknown));"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,84,"Asserts.assertTypeEquals(nullOrUnknown, nullOrUnknown.getLeastSupertype(NULL_TYPE));"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,85,"Asserts.assertTypeEquals(UNKNOWN_TYPE,"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,87,"ssertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,87,"Asserts.assertTypeEquals(UNKNOWN_TYPE,"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,98,"ssertEquals(unresolvedNamedType,"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,98,"Asserts.assertTypeEquals(unresolvedNamedType,"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,102,"ssertEquals(NUMBER_TYPE, nullOrString.findPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,102,"Asserts.assertTypeEquals(NUMBER_TYPE, nullOrString.findPropertyType(""length""));"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,112,"ssertEquals(NULL_TYPE, createNullableType(STRING_TYPE).getGreatestSubtype("
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,112,"Asserts.assertTypeEquals(NULL_TYPE, createNullableType(STRING_TYPE).getGreatestSubtype("
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,123,"ssertEquals(evalUriError,"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,123,"Asserts.assertTypeEquals(evalUriError,"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,138,"ssertEquals(nullUndefined,"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,138,"Asserts.assertTypeEquals(nullUndefined,"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,140,"ssertEquals(nullUndefined,"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,140,"Asserts.assertTypeEquals(nullUndefined,"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,150,"ssertEquals(createUnionType(EVAL_ERROR_TYPE, URI_ERROR_TYPE),"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,150,"Asserts.assertTypeEquals(createUnionType(EVAL_ERROR_TYPE, URI_ERROR_TYPE),"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,159,"ssertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,159,"Asserts.assertTypeEquals(NO_OBJECT_TYPE,"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,277,"ssertEquals(STRING_TYPE, numStr.getRestrictedUnion(NUMBER_TYPE));"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,277,"Asserts.assertTypeEquals(STRING_TYPE, numStr.getRestrictedUnion(NUMBER_TYPE));"
False,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,283,"ssertEquals(NULL_TYPE, numStr.getRestrictedUnion(ERROR_TYPE));"
True,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,test/com/google/javascript/rhino/jstype/UnionTypeTest.java,283,"Asserts.assertTypeEquals(NULL_TYPE, numStr.getRestrictedUnion(ERROR_TYPE));"
