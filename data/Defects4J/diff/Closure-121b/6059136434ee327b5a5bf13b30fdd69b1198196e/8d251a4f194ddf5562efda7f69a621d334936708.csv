is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,86,"* It is OK if this class tears up the original tree, because"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,87,* we're going to throw the tree out anyway.
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,86,tatic final class CopySideEffectSubexpressions
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,89,static final class GetReplacementSideEffectSubexpressions
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,97,"opySideEffectSubexpressions(AbstractCompiler compiler,"
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,98,ist<Node> replacements) {
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,100,"GetReplacementSideEffectSubexpressions(AbstractCompiler compiler,"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,101,List<Node> replacements) {
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,110,eplacements.add(original.cloneTree());
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,113,if (original.getParent() != null) {
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,114,original.detachFromParent();
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,116,replacements.add(original);
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,122,ode simplified = original.cloneNode();
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,123,implified.addChildToBack(left.cloneTree());
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,124,implified.addChildToBack(simplifiedRight);
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,125,eplacements.add(simplified);
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,127,original.detachChildren();
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,128,original.addChildToBack(left);
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,129,original.addChildToBack(simplifiedRight);
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,130,keepSubTree(original);
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,138,ode simplified = hook.cloneNode();
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,139,implified.addChildToBack(condition.cloneTree());
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,140,implified.addChildToBack(simplifyShortCircuitBranch(thenBranch));
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,141,implified.addChildToBack(simplifyShortCircuitBranch(elseBranch));
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,142,eplacements.add(simplified);
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,143,hook.detachChildren();
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,144,hook.addChildToBack(condition);
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,145,hook.addChildToBack(simplifyShortCircuitBranch(thenBranch));
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,146,hook.addChildToBack(simplifyShortCircuitBranch(elseBranch));
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,147,keepSubTree(hook);
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,147,"ype, condition.cloneTree(), simplifyShortCircuitBranch(body))"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,152,"type, condition.detachFromParent(),"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,153,simplifyShortCircuitBranch(body))
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,149,eplacements.add(simplified);
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,155,keepSubTree(simplified);
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,162,"ew CopySideEffectSubexpressions(compiler, parts)));"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,168,"new GetReplacementSideEffectSubexpressions(compiler, parts)));"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,26,mport com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback.CopySideEffectSubexpressions;
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,26,import com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback.GetReplacementSideEffectSubexpressions;
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,364,arent.getLastChild().cloneTree());
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,364,parent.getLastChild().detachFromParent());
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,379,** The parent of {@code node} */
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,380,ode parent;
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,382,** The parent of {@code parent} */
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,383,ode gramps;
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,390, @param parent The parent of {@code node}
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,391, @param gramps The parent of {@code parent}
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,393,"pecialReferenceNode(JsName name, Node node, Node parent,"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,394,ode gramps) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,385,"SpecialReferenceNode(JsName name, Node node) {"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,397,his.parent = parent;
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,398,his.gramps = gramps;
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,395,Node getParent() {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,396,return node.getParent();
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,399,Node getGramps() {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,400,return node.getParent() == null ? null : node.getParent().getParent();
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,422,"lassDefiningFunctionNode(JsName name, Node node, Node parent,"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,423,ode gramps) {
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,424,"uper(name, node, parent, gramps);"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,419,"ClassDefiningFunctionNode(JsName name, Node node) {"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,420,"super(name, node);"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,427,Node parent = getParent();
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,432,"hangeProxy.removeChild(gramps, parent);"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,429,"changeProxy.removeChild(getGramps(), parent);"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,454,"nstanceOfCheckNode(JsName name, Node node, Node parent, Node gramps) {"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,455,"uper(name, node, parent, gramps);"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,451,"InstanceOfCheckNode(JsName name, Node node) {"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,452,"super(name, node);"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,457,reconditions.checkState(parent.isInstanceOf());
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,454,Preconditions.checkState(getParent().isInstanceOf());
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,462,"hangeProxy.replaceWith(gramps, parent, IR.falseNode());"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,459,"changeProxy.replaceWith(getGramps(), getParent(), IR.falseNode());"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,636,efNodes.add(new ClassDefiningFunctionNode(
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,637,"ame, n, parent, parent.getParent()));"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,633,"refNodes.add(new ClassDefiningFunctionNode(name, n));"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,852,efNodes.add(
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,853,ew InstanceOfCheckNode(
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,854,"heckedClass, n, parent, parent.getParent()));"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,848,"refNodes.add(new InstanceOfCheckNode(checkedClass, n));"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1622,"ew CopySideEffectSubexpressions(compiler, subexpressions)));"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1616,new GetReplacementSideEffectSubexpressions(
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1617,"compiler, subexpressions)));"
False,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,21,mport com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback.CopySideEffectSubexpressions;
True,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,21,import com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback.GetReplacementSideEffectSubexpressions;
False,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,164,opySideEffectSubexpressions accumulator =
False,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,165,"ew CopySideEffectSubexpressions(compiler, replacements);"
True,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,164,GetReplacementSideEffectSubexpressions accumulator =
True,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,165,"new GetReplacementSideEffectSubexpressions(compiler, replacements);"
False,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,181,opySideEffectSubexpressions accumulator =
False,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,182,"ew CopySideEffectSubexpressions(compiler, replacements);"
True,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,181,GetReplacementSideEffectSubexpressions accumulator =
True,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,182,"new GetReplacementSideEffectSubexpressions(compiler, replacements);"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,924,public void testDoNotChangeLocalScopeReferencedLocalScopedInstanceOf2() {
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,925,test(
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,926,"""function Foo() {}"" +"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,927,"""var createAxis = function(f) { return window.passThru(f); };"" +"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,928,"""var axis = createAxis(function(test) {"" +"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,929,"""  return test instanceof Foo;"" +"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,931,"""var createAxis = function(f) { return window.passThru(f); };"" +"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,932,"""createAxis(function(test) {"" +"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,933,"""  return false;"" +"
