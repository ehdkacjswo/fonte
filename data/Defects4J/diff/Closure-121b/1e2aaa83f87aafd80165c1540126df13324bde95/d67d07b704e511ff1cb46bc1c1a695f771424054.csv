is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,266,ode id = n.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,268,/ TODO(user): Error on id not a string literal.
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,269,f (!id.isString()) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,270,eturn;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,266,Node arg = n.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,268,if (arg.isString()) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,269,"String rename = getObfuscatedName(arg, callName, nameGenerator, arg.getString());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,270,"parent.replaceChild(n, IR.string(rename));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,271,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,272,} else if (arg.isObjectLit()) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,273,for (Node key : arg.children()) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,274,"String rename = getObfuscatedName(key, callName, nameGenerator, key.getString());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,275,key.setString(rename);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,276,// Prevent standard renaming by marking the key as quoted.
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,277,"key.putBooleanProp(Node.QUOTED_PROP, true);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,279,arg.detachFromParent();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,280,"parent.replaceChild(n, arg);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,281,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,283,// TODO(user): Error on id not a string or object literal.
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,273,"ap<String, String> idGeneratorMap = idGeneratorMaps.get(callName);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,286,"private String getObfuscatedName(Node id, String callName, NameSupplier nameGenerator,"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,287,String name) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,276,tring name = id.getString();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,289,"Map<String, String> idGeneratorMap = idGeneratorMaps.get(callName);"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,290,"arent.replaceChild(n, IR.string(rename));"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,293,ompiler.reportCodeChange();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,303,return rename;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,383,reconditions.checkState(n.isString());
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,394,Preconditions.checkState(n.isString() || n.isStringKey());
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,184,public void testObjectLit() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,185,"test(""/** @idGenerator */ goog.xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,186,"""things = goog.xid({foo1: 'test', 'foo bar': 'test'})"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,188,"""goog.xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,189,"""things = {'a': 'test', 'b': 'test'}"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,191,"""goog.xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,192,"""things = {'foo1$0': 'test', 'foo bar$1': 'test'}"");"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,195,public void testObjectLit_empty() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,196,"test(""/** @idGenerator */ goog.xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,197,"""things = goog.xid({})"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,199,"""goog.xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,200,"""things = {}"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,202,"""goog.xid = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,203,"""things = {}"");"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,258,ublic void testObjLit() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,280,public void testInObjLit() {
