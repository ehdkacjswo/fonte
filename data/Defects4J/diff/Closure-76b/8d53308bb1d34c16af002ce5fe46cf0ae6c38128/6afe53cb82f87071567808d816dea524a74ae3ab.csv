is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,55,f (parent != null && parent.getType() == Token.SCRIPT &&
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,56,.getType() == Token.FUNCTION) {
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,57,tring functionName = NodeUtil.getFunctionName(n);
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,58,"f (isTestFunction(n, functionName) && t.inGlobalScope()) {"
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,59,"xportTestFunction(functionName, n, parent);"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,55,if (parent != null && parent.getType() == Token.SCRIPT
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,56,&& t.inGlobalScope()) {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,57,if (NodeUtil.isFunctionDeclaration(n)) {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,58,// Check for a test function statement.
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,59,String functionName = NodeUtil.getFunctionName(n);
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,60,"if (isTestFunction(n, functionName)) {"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,61,"exportTestFunction(functionName, n, parent);"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,63,} else if (isVarDeclaredFunction(n)) {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,64,// Check for a test function expression.
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,65,Node functionNode = n.getFirstChild().getFirstChild();
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,66,String functionName = NodeUtil.getFunctionName(functionNode);
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,67,"if (isTestFunction(functionNode, functionName)) {"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,68,"exportTestFunction(functionName, n, parent);"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,75,"* Whether node corresponds to a function expression declared with var,"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,76,* which is of the form:
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,77,* <pre>
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,78,* var functionName = function() {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,79,*   // Implementation
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,81,* </pre>
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,82,* This has the AST structure VAR -> NAME -> FUNCTION
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,83,* @param node
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,85,private boolean isVarDeclaredFunction(Node node) {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,86,if (node.getType() != Token.VAR) {
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,87,return false;
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,89,Node grandchild = node.getFirstChild().getFirstChild();
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,90,return grandchild != null && grandchild.getType() == Token.FUNCTION;
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,84,* Make sure this works for global functions declared as function expressions:
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,85,* <pre>
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,86,* var testFunctionName = function() {
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,87,*   // Implementation
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,89,* </pre>
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,90,* This format should be supported in addition to function statements.
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,92,public void testFunctionExpressionsAreExported() {
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,93,"test(""var Foo = function() {var testA = function() {}}"","
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,94,"""var Foo = function() {var testA = function() {}}"");"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,95,"test(""var setUp = function() {}"","
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,96,"""var setUp = function() {}; "" +"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,97,"""google_exportSymbol(\""setUp\"",setUp)"");"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,98,"test(""var setUpPage = function() {}"","
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,99,"""var setUpPage = function() {}; "" +"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,100,"""google_exportSymbol(\""setUpPage\"",setUpPage)"");"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,101,"test(""var tearDown = function() {}"","
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,102,"""var tearDown = function() {}; "" +"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,103,"""google_exportSymbol(\""tearDown\"",tearDown)"");"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,104,"test(""var tearDownPage = function() {}"","
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,105,"""var tearDownPage = function() {}; "" +"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,106,"""google_exportSymbol(\""tearDownPage\"", tearDownPage)"");"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,107,"test(""var testBar = function() { var testB = function() {}}"","
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,108,"""var testBar = function(){ var testB = function() {}}; "" +"
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,109,"""google_exportSymbol(\""testBar\"",testBar)"");"
