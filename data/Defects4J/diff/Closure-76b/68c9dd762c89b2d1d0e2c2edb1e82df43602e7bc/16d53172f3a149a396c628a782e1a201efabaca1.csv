is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,252,"node,"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,23,import com.google.javascript.jscomp.mozilla.rhino.ast.Comment;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,100,"Comment commentNode,"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,107,if (commentNode != null) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,108,this.jsdocBuilder.recordOriginalCommentString(commentNode.getValue());
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,128,"null,"
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,107,/ TODO(nicksantos): Use UIntProps to clean up all of this. It takes
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,108,/ care of all the lazy-instantiation internally.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,107,String sourceComment = null;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1301,* Returns the original JSDoc comment string. Returns null unless
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1302,* parseJsDocDocumentation is enabled via the ParserConfig.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1304,public String getOriginalCommentString() {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1305,return documentation == null ? null : documentation.sourceComment;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1308,void setOriginalCommentString(String sourceComment) {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1309,if (!lazyInitDocumentation()) {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1310,return;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,1312,documentation.sourceComment = sourceComment;
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,73,* Sets the original JSDoc comment string. This is a no-op if the builder
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,74,* isn't configured to record documentation.
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,76,public void recordOriginalCommentString(String sourceComment) {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,77,if (parseDocumentation) {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,78,currentInfo.setOriginalCommentString(sourceComment);
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,22,import com.google.javascript.jscomp.mozilla.rhino.Token.CommentType;
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2304,public void testGetOriginalCommentString() throws Exception {
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2305,"String comment = ""* @desc This is a comment */"";"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2306,JSDocInfo info = parse(comment);
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2307,assertNull(info.getOriginalCommentString());
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2308,"info = parse(comment, true /* parseDocumentation */);"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2309,"assertEquals(comment, info.getOriginalCommentString());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2489,"comment,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2515,"sDocInfoParser jsdocParser = new JsDocInfoParser(stream(comment),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2525,JsDocInfoParser jsdocParser = new JsDocInfoParser(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2526,"stream(comment),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2527,"new Comment(0, 0, CommentType.JSDOC, comment),"
