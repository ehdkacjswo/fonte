is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,37,"tatic Definition getDefinition(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,37,"static Definition getDefinition(Node n, boolean isExtern) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,41,Node parent = n.getParent();
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,45,eturn new VarDefinition(n);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,47,"return new VarDefinition(n, isExtern);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,48,eturn new NamedFunctionDefinition(parent);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,50,"return new NamedFunctionDefinition(parent, isExtern);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,50,eturn new FunctionExpressionDefinition(parent);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,52,"return new FunctionExpressionDefinition(parent, isExtern);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,53,eturn new AssignmentDefinition(parent);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,55,"return new AssignmentDefinition(parent, isExtern);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,55,"eturn new ObjectLiteralPropertyDefinition(parent, n, n.getNext());"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,57,"return new ObjectLiteralPropertyDefinition(parent, n, n.getNext(),"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,58,isExtern);
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,58,"eturn new FunctionArgumentDefinition(function, n);"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,61,"return new FunctionArgumentDefinition(function, n, isExtern);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,63,tatic interface Definition {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,64,oid remove();
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,66,static abstract class Definition {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,68,private final boolean isExtern;
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,70,Definition(boolean isExtern) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,71,this.isExtern = isExtern;
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,75,* Removes this definition from the AST if it is not an extern.
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,77,* This method should not be called on a definition for which isExtern()
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,78,* is true.
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,80,public void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,81,if (!isExtern) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,82,performRemove();
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,83,} else {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,84,"throw new IllegalStateException(""Attempt to remove() an extern"" +"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,85,""" definition."");"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,90,* Subclasses should override to remove the definition from the AST.
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,92,protected abstract void performRemove();
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,75,ode getLValue();
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,103,public abstract Node getLValue();
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,81,ode getRValue();
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,109,public abstract Node getRValue();
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,112,* Returns true if the definition is an extern.
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,114,public boolean isExtern() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,115,return isExtern;
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,88,bstract static class IncompleteDefinition implements Definition {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,123,abstract static class IncompleteDefinition extends Definition {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,93,ncompleteDefinition(Node lValue) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,128,"IncompleteDefinition(Node lValue, boolean inExterns) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,129,super(inExterns);
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,117,nknownDefinition(Node lValue) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,118,uper(lValue);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,152,"UnknownDefinition(Node lValue, boolean inExterns) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,153,"super(lValue, inExterns);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,122,ublic void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,157,public void performRemove() {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,134,uper(lValue);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,169,"super(lValue, true);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,138,ublic void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,173,public void performRemove() {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,145, Represents an name-only external definition.  The definition's
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,146, rhs is missing.
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,180,* Represents a function formal parameter. The definition's rhs is missing.
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,149,"unctionArgumentDefinition(Node function, Node argumentName) {"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,150,uper(argumentName);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,183,"FunctionArgumentDefinition(Node function,"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,184,"Node argumentName,"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,185,boolean inExterns) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,186,"super(argumentName, inExterns);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,156,ublic void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,192,public void performRemove() {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,165,tatic abstract class FunctionDefinition implements Definition {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,201,abstract static class FunctionDefinition extends Definition {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,169,unctionDefinition(Node node) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,205,"FunctionDefinition(Node node, boolean inExterns) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,206,super(inExterns);
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,190,amedFunctionDefinition(Node node) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,191,uper(node);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,227,"NamedFunctionDefinition(Node node, boolean inExterns) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,228,"super(node, inExterns);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,195,ublic void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,232,public void performRemove() {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,205,unctionExpressionDefinition(Node node) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,206,uper(node);
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,242,"FunctionExpressionDefinition(Node node, boolean inExterns) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,243,"super(node, inExterns);"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,212,ublic void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,249,public void performRemove() {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,222,tatic final class AssignmentDefinition implements Definition {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,259,static final class AssignmentDefinition extends Definition {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,225,ssignmentDefinition(Node node) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,262,"AssignmentDefinition(Node node, boolean inExterns) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,263,super(inExterns);
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,231,ublic void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,269,public void performRemove() {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,254,tatic final class ObjectLiteralPropertyDefinition implements Definition {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,292,static final class ObjectLiteralPropertyDefinition extends Definition {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,298,"ObjectLiteralPropertyDefinition(Node lit, Node name, Node value,"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,299,boolean isExtern) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,300,super(isExtern);
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,261,"bjectLiteralPropertyDefinition(Node lit, Node name, Node value) {"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,268,ublic void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,308,public void performRemove() {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,294,tatic final class VarDefinition implements Definition {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,334,static final class VarDefinition extends Definition {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,296,arDefinition(Node node) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,336,"VarDefinition(Node node, boolean inExterns) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,337,super(inExterns);
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,305,ublic void remove() {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,346,public void performRemove() {
False,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,144,esult.add(new UnknownDefinition(useSite));
True,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,144,"result.add(new UnknownDefinition(useSite, false));"
False,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,222,eclarations.add(new AssignmentDefinition(node));
True,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,222,"declarations.add(new AssignmentDefinition(node, isExtern));"
False,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,226,eclarations.add(new NamedFunctionDefinition(node));
True,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,226,"declarations.add(new NamedFunctionDefinition(node, isExtern));"
False,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,242,ublic void remove() {
True,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,242,public final void remove() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,216,// TODO(user) Change SimpleDefinitionFinder so it is possible to query for
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,217,// function expressions by function node.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,219,// isExtern is false in the call to the constructor for the
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,220,// FunctionExpressionDefinition below because we know that
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,221,// getCallableDefinitions() will only be called on the first
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,222,// child of a call and thus the function expression
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,223,// definition will never be an extern.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,218,ew DefinitionsRemover.FunctionExpressionDefinition(name));
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,226,"new DefinitionsRemover.FunctionExpressionDefinition(name, false));"
True,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,39,private final boolean canModifyExterns;
True,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,49,this.canModifyExterns = canModifyExterns;
False,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,65,ame.remove();
False,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,66,ompiler.reportCodeChange();
False,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,67,"ogger.fine(""Removed unused name"" + name);"
True,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,68,if (canModifyExterns || !name.isExtern()) {
True,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,69,name.remove();
True,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,70,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/RemoveUnusedNames.java,src/com/google/javascript/jscomp/RemoveUnusedNames.java,71,"logger.fine(""Removed unused name"" + name);"
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,159,"efinitionsRemover.getDefinition(node, parent);"
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,159,"DefinitionsRemover.getDefinition(node, inExterns);"
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,169,efinition unknownDef = new UnknownDefinition(def.getLValue());
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,169,Definition unknownDef =
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,170,"new UnknownDefinition(def.getLValue(), inExterns);"
False,test/com/google/javascript/jscomp/DefinitionsRemoverTest.java,test/com/google/javascript/jscomp/DefinitionsRemoverTest.java,87,"efinition def = DefinitionsRemover.getDefinition(n, parent);"
True,test/com/google/javascript/jscomp/DefinitionsRemoverTest.java,test/com/google/javascript/jscomp/DefinitionsRemoverTest.java,87,"Definition def = DefinitionsRemover.getDefinition(n, false);"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,147,"mmutableSet.of(""DEF NAME f -> FUNCTION"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,148,"USE NAME f -> [FUNCTION]""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,147,"ImmutableSet.of(""DEF NAME f -> EXTERN FUNCTION"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,148,"""USE NAME f -> [EXTERN FUNCTION]""));"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,215,"mmutableSet.of(""DEF NAME a -> NUMBER""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,215,"ImmutableSet.of(""DEF NAME a -> EXTERN NUMBER""));"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,220,"mmutableSet.of(""DEF NAME a -> NUMBER"", ""DEF NAME b -> NUMBER""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,220,"ImmutableSet.of(""DEF NAME a -> EXTERN NUMBER"", ""DEF NAME b -> NUMBER""));"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,225,"mmutableSet.of(""DEF NAME a -> NUMBER"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,225,"ImmutableSet.of(""DEF NAME a -> EXTERN NUMBER"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,227,"USE NAME a -> [NUMBER, STRING]""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,227,"""USE NAME a -> [EXTERN NUMBER, STRING]""));"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,231,"mmutableSet.of(""DEF GETPROP a.b -> NUMBER"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,232,"DEF NAME a -> <null>"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,233,"USE NAME a -> [<null>]""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,231,"ImmutableSet.of(""DEF GETPROP a.b -> EXTERN NUMBER"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,232,"""DEF NAME a -> EXTERN <null>"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,233,"""USE NAME a -> [EXTERN <null>]""));"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,237,"mmutableSet.of(""DEF GETPROP a.b -> <null>"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,238,"DEF NAME a -> <null>"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,239,"USE NAME a -> [<null>]""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,237,"ImmutableSet.of(""DEF GETPROP a.b -> EXTERN <null>"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,238,"""DEF NAME a -> EXTERN <null>"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,239,"""USE NAME a -> [EXTERN <null>]""));"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,245,"DEF NAME a -> <null>"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,246,"USE NAME a -> [<null>]""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,245,"""DEF NAME a -> EXTERN <null>"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,246,"""USE NAME a -> [EXTERN <null>]""));"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,251,"mmutableSet.of(""DEF NAME a -> <null>"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,252,"USE NAME a -> [<null>]""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,251,"ImmutableSet.of(""DEF NAME a -> EXTERN <null>"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,252,"""USE NAME a -> [EXTERN <null>]""));"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,256,"mmutableSet.of(""DEF NAME a -> NUMBER""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,256,"ImmutableSet.of(""DEF NAME a -> EXTERN NUMBER""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,307,if (definition.isExtern()) {
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,308,"sb.append(""EXTERN "");"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,335,String defstr;
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,333,efstrs.add(Token.name(rValue.getType()));
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,339,defstr = Token.name(rValue.getType());
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,335,"efstrs.add(""<null>"");"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,341,"defstr = ""<null>"";"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,344,if (def.isExtern()) {
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,345,"defstr = ""EXTERN "" + defstr;"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,348,defstrs.add(defstr);
