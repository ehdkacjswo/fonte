is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,245,nt zIndex = n + j;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,245,final int startIndex = n + j;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,246,int zIndex = startIndex;
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,248,Index += l;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,249,zIndex += n;
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,250,Dot[n + i * n + j] = s;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,251,zDot[startIndex + i * n] = s;
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,254,/ variational equations: d[dy/dt]/dy0 and d[dy/dt]/dp to d[dy/dp]/dt
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,255,// variational equations: from d[dy/dt]/dy0 and d[dy/dt]/dp to d[dy/dp]/dt
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,260,nt zIndex = n * (n + 1)+ j;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,261,final int startIndex = n * (n + 1) + j;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,262,int zIndex = startIndex;
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,265,Dot[n * (n + 1) + i * k + j] = s;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,267,zDot[startIndex + i * k] = s;
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,552,"eturn new StepInterpolatorWrapper(interpolator.copy(),"
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,553,".length, dydy0[0].length);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,554,final int n = y.length;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,555,final int k = dydp[0].length;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,556,StepInterpolatorWrapper copied =
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,557,"new StepInterpolatorWrapper(interpolator.copy(), n, k);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,558,"System.arraycopy(y,    0, copied.y,    0, n);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,559,"System.arraycopy(yDot, 0, copied.yDot, 0, n);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,560,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,561,"System.arraycopy(dydy0[i], 0, copied.dydy0[i], 0, n);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,563,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,564,"System.arraycopy(dydp[i], 0, copied.dydp[i], 0, k);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,566,return copied;
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,23,mport org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians;
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,24,mport org.apache.commons.math.ode.jacobians.ParameterizedODEWithJacobians;
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,24,import org.apache.commons.math.optimization.OptimizationException;
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,38,ummaryStatistics residuals0 = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,39,ummaryStatistics residuals1 = new SummaryStatistics();
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,37,SummaryStatistics residualsP0 = new SummaryStatistics();
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,38,SummaryStatistics residualsP1 = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,47,esiduals0.addValue((yP[0] - y[0]) / hP - brusselator.dYdP0());
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,48,esiduals1.addValue((yP[1] - y[1]) / hP - brusselator.dYdP1());
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,46,residualsP0.addValue((yP[0] - y[0]) / hP - brusselator.dYdP0());
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,47,residualsP1.addValue((yP[1] - y[1]) / hP - brusselator.dYdP1());
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,50,ssert.assertTrue((residuals0.getMax() - residuals0.getMin()) > 600);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,51,ssert.assertTrue(residuals0.getStandardDeviation() > 30);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,52,ssert.assertTrue((residuals1.getMax() - residuals1.getMin()) > 800);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,53,ssert.assertTrue(residuals1.getStandardDeviation() > 50);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,49,Assert.assertTrue((residualsP0.getMax() - residualsP0.getMin()) > 600);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,50,Assert.assertTrue(residualsP0.getStandardDeviation() > 30);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,51,Assert.assertTrue((residualsP1.getMax() - residualsP1.getMin()) > 800);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,52,Assert.assertTrue(residualsP1.getStandardDeviation() > 50);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,62,ummaryStatistics residuals0 = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,63,ummaryStatistics residuals1 = new SummaryStatistics();
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,61,SummaryStatistics residualsP0 = new SummaryStatistics();
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,62,SummaryStatistics residualsP1 = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,71,esiduals0.addValue((yP[0] - y[0]) / hP - brusselator.dYdP0());
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,72,esiduals1.addValue((yP[1] - y[1]) / hP - brusselator.dYdP1());
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,70,residualsP0.addValue((yP[0] - y[0]) / hP - brusselator.dYdP0());
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,71,residualsP1.addValue((yP[1] - y[1]) / hP - brusselator.dYdP1());
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,74,ssert.assertTrue((residuals0.getMax() - residuals0.getMin()) > 0.02);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,75,ssert.assertTrue((residuals0.getMax() - residuals0.getMin()) < 0.03);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,76,ssert.assertTrue(residuals0.getStandardDeviation() > 0.003);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,77,ssert.assertTrue(residuals0.getStandardDeviation() < 0.004);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,78,ssert.assertTrue((residuals1.getMax() - residuals1.getMin()) > 0.04);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,79,ssert.assertTrue((residuals1.getMax() - residuals1.getMin()) < 0.05);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,80,ssert.assertTrue(residuals1.getStandardDeviation() > 0.006);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,81,ssert.assertTrue(residuals1.getStandardDeviation() < 0.007);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,73,Assert.assertTrue((residualsP0.getMax() - residualsP0.getMin()) > 0.02);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,74,Assert.assertTrue((residualsP0.getMax() - residualsP0.getMin()) < 0.03);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,75,Assert.assertTrue(residualsP0.getStandardDeviation() > 0.003);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,76,Assert.assertTrue(residualsP0.getStandardDeviation() < 0.004);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,77,Assert.assertTrue((residualsP1.getMax() - residualsP1.getMin()) > 0.04);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,78,Assert.assertTrue((residualsP1.getMax() - residualsP1.getMin()) < 0.05);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,79,Assert.assertTrue(residualsP1.getStandardDeviation() > 0.006);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,80,Assert.assertTrue(residualsP1.getStandardDeviation() < 0.007);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,90,ummaryStatistics residuals0 = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,91,ummaryStatistics residuals1 = new SummaryStatistics();
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,89,SummaryStatistics residualsP0 = new SummaryStatistics();
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,90,SummaryStatistics residualsP1 = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,103,esiduals0.addValue(dZdP[0][0] - brusselator.dYdP0());
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,104,esiduals1.addValue(dZdP[1][0] - brusselator.dYdP1());
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,102,residualsP0.addValue(dZdP[0][0] - brusselator.dYdP0());
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,103,residualsP1.addValue(dZdP[1][0] - brusselator.dYdP1());
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,106,ssert.assertTrue((residuals0.getMax() - residuals0.getMin()) < 0.006);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,107,ssert.assertTrue(residuals0.getStandardDeviation() < 0.0009);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,108,ssert.assertTrue((residuals1.getMax() - residuals1.getMin()) < 0.006);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,109,ssert.assertTrue(residuals1.getStandardDeviation() < 0.0012);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,105,Assert.assertTrue((residualsP0.getMax() - residualsP0.getMin()) < 0.006);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,106,Assert.assertTrue(residualsP0.getStandardDeviation() < 0.0009);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,107,Assert.assertTrue((residualsP1.getMax() - residualsP1.getMin()) < 0.009);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,108,Assert.assertTrue(residualsP1.getStandardDeviation() < 0.0014);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,114,"hrows IntegratorException, DerivativeException {"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,113,"throws IntegratorException, DerivativeException, OptimizationException {"
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,116,"ew DormandPrince54Integrator(1.0e-8, 100.0, 1.0e-4, 1.0e-4);"
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,117,ummaryStatistics residuals0 = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,118,ummaryStatistics residuals1 = new SummaryStatistics();
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,115,"new DormandPrince54Integrator(1.0e-8, 100.0, 1.0e-10, 1.0e-10);"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,116,SummaryStatistics residualsP0 = new SummaryStatistics();
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,117,SummaryStatistics residualsP1 = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,128,esiduals0.addValue(dZdP[0][0] - brusselator.dYdP0());
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,129,esiduals1.addValue(dZdP[1][0] - brusselator.dYdP1());
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,131,ssert.assertTrue((residuals0.getMax() - residuals0.getMin()) < 0.004);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,132,ssert.assertTrue(residuals0.getStandardDeviation() < 0.001);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,133,ssert.assertTrue((residuals1.getMax() - residuals1.getMin()) < 0.005);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,134,ssert.assertTrue(residuals1.getStandardDeviation() < 0.001);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,127,residualsP0.addValue(dZdP[0][0] - brusselator.dYdP0());
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,128,residualsP1.addValue(dZdP[1][0] - brusselator.dYdP1());
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,130,Assert.assertTrue((residualsP0.getMax() - residualsP0.getMin()) < 0.004);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,131,Assert.assertTrue(residualsP0.getStandardDeviation() < 0.0008);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,132,Assert.assertTrue((residualsP1.getMax() - residualsP1.getMin()) < 0.005);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,133,Assert.assertTrue(residualsP1.getStandardDeviation() < 0.0010);
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,175,eturn -1087.8787631970476 + (1050.4387741821572 + (-338.90621620263096 + 36.51793006801084 * b) * b) * b;
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,174,return -1088.232716447743 + (1050.775747149553 + (-339.012934631828 + 36.52917025056327 * b) * b) * b;
False,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,179,eturn 1499.0904666097015 + (-1434.9574631810726 + (459.71079478756945 - 49.29949940968588 * b) * b) * b;
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,178,return 1502.824469929139 + (-1438.6974831849952 + (460.959476642384 - 49.43847385647082 * b) * b) * b;
