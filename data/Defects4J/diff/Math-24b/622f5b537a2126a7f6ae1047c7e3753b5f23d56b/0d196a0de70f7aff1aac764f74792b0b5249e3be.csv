is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,19,mport org.apache.commons.math.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,19,mport org.apache.commons.math.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,22,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,40,"hrows MathException, IllegalArgumentException {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,40,throws MathException {
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,27,mport org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,28,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,29,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,31,import org.apache.commons.math.exception.NoDataException;
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,172, Formats a object to produce a string.  <code>obj</code> must be either a
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,174,* Formats a object to produce a string.  {@code obj} must be either a
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,182, @throws IllegalArgumentException is <code>obj</code> is not a valid type.
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,184,* @throws IllegalArgumentException is {@code obj} is not a valid type.
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,196,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,197,"ocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX,"
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,198,bj.getClass().getName());
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,198,"throw new MathIllegalArgumentException(LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX,"
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,199,obj.getClass().getName());
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,348, @throws IllegalArgumentException if <code>imaginaryCharacter</code> is
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,349,         <code>null</code> or an empty string.
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,349,* @throws NullArgumentException if {@code imaginaryCharacter} is
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,350,* {@code null}.
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,351,* @throws NoDataException if {@code imaginaryCharacter} is an
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,352,* empty string.
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,352,f (imaginaryCharacter == null || imaginaryCharacter.length() == 0) {
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,353,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,354,ocalizedFormats.EMPTY_STRING_FOR_IMAGINARY_CHARACTER);
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,355,if (imaginaryCharacter == null) {
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,356,throw new NullArgumentException();
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,358,if (imaginaryCharacter.length() == 0) {
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,359,throw new NoDataException();
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,23,mport org.apache.commons.math.analysis.solvers.BrentSolver;
False,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,22,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,22,import org.apache.commons.math.exception.NumberIsTooLargeException;
False,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,54," will take a value between <code>x0</code> and <code>x1</code>,"
True,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,54,"* will take a value between {@code x0} and {@code x1},"
False,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,58, @throws IllegalArgumentException if <code>x0 > x1</code>
True,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,58,* @throws NumberIsTooLargeException if {@code x0 > x1}
False,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,63,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,64,"ocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,"
False,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,65,"0, x1);"
True,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,63,"throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,"
True,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,64,"x0, x1, true);"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,89,"0, x1, true);"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,89,"x1, x0, true);"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,146,"0, x1, true);"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,146,"x1, x0, true);"
False,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,125,f (FastMath.abs(dev) > 40 * standardDeviation) {
True,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,125,if (FastMath.abs(dev) > 40 * standardDeviation) {
False,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,128,eturn 0.5 * (1.0 + Erf.erf((dev) /
False,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,129,standardDeviation * FastMath.sqrt(2.0))));
True,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,128,return 0.5 * (1 + Erf.erf(dev / (standardDeviation * FastMath.sqrt(2))));
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,19,mport java.util.Locale;
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,21,mport org.apache.commons.math.exception.util.ArgUtils;
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,22,mport org.apache.commons.math.exception.util.MessageFactory;
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,35,ublic class MathArithmeticException extends ArithmeticException {
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,31,public class MathArithmeticException extends MathRuntimeException {
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,41, Pattern used to build the message (specific context).
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,43,rivate final Localizable specific;
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,45, Arguments used to build the message.
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,47,rivate final Object[] arguments;
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,62,his.specific = specific;
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,63,rguments = ArgUtils.flatten(args);
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,67, Get the message in a specified locale.
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,69, @param locale Locale in which the message should be translated.
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,71, @return the localized message.
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,73,ublic String getMessage(final Locale locale) {
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,74,"eturn MessageFactory.buildMessage(locale,"
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,75,"pecific,"
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,76,"ocalizedFormats.UNSUPPORTED_OPERATION,"
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,77,rguments);
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,80,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,81,Override
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,82,ublic String getMessage() {
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,83,eturn getMessage(Locale.US);
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,86,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,87,Override
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,88,ublic String getLocalizedMessage() {
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,89,eturn getMessage(Locale.getDefault());
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,48,"super(null, specific, LocalizedFormats.ARITHMETIC_EXCEPTION, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,19,mport java.util.Locale;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,21,mport org.apache.commons.math.exception.util.ArgUtils;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,22,mport org.apache.commons.math.exception.util.MessageFactory;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,35,ublic class MathIllegalArgumentException extends IllegalArgumentException implements MathThrowable {
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,31,public class MathIllegalArgumentException extends MathRuntimeException {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,41, Pattern used to build the message (specific context).
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,43,rivate final Localizable specific;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,45, Pattern used to build the message (general problem description).
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,47,rivate final Localizable general;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,49, Arguments used to build the message.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,51,rivate final Object[] arguments;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,62,his.specific = specific;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,63,his.general = general;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,64,rguments = ArgUtils.flatten(args);
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,44,"super(null, specific, general, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,75,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,76,ublic Localizable getSpecificPattern() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,77,eturn specific;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,80,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,81,ublic Localizable getGeneralPattern() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,82,eturn general;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,85,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,86,ublic Object[] getArguments() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,87,eturn arguments.clone();
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,91, Get the message in a specified locale.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,93, @param locale Locale in which the message should be translated.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,94, @return the localized message.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,96,ublic String getMessage(final Locale locale) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,97,"eturn MessageFactory.buildMessage(locale, specific, general, arguments);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,100,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,101,Override
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,102,ublic String getMessage() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,103,eturn getMessage(Locale.US);
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,106,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,107,Override
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,108,ublic String getLocalizedMessage() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,109,eturn getMessage(Locale.getDefault());
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,19,mport java.util.Locale;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,21,mport org.apache.commons.math.exception.util.ArgUtils;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,22,mport org.apache.commons.math.exception.util.MessageFactory;
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,20,import org.apache.commons.math.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,32,ublic class MathIllegalStateException extends IllegalStateException implements MathThrowable {
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,29,public class MathIllegalStateException extends MathRuntimeException {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,38, Pattern used to build the message (specific context).
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,40,rivate final Localizable specific;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,42, Pattern used to build the message (general problem description).
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,44,rivate final Localizable general;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,46, Arguments used to build the message.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,48,rivate final Object[] arguments;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,59,his.specific = specific;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,60,his.general = general;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,61,rguments = ArgUtils.flatten(args);
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,42,"super(null, specific, general, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,64, @param general Message pattern explaining the cause of the error.
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,45,* @param specific Message pattern explaining the cause of the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,67,"ublic MathIllegalStateException(Localizable general,"
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,48,"public MathIllegalStateException(Localizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,69,"his(null, general, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,72,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,73,ublic Localizable getSpecificPattern() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,74,eturn specific;
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,77,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,78,ublic Localizable getGeneralPattern() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,79,eturn general;
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,50,"this(specific, LocalizedFormats.ILLEGAL_STATE, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,82,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,83,ublic Object[] getArguments() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,84,eturn arguments.clone();
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,88, Get the message in a specified locale.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,90, @param locale Locale in which the message should be translated.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,92, @return the localized message.
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,53,* @param args Arguments.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,94,ublic String getMessage(final Locale locale) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,95,"eturn MessageFactory.buildMessage(locale, specific, general, arguments);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,98,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,99,Override
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,100,ublic String getMessage() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,101,eturn getMessage(Locale.US);
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,55,public MathIllegalStateException(Object ... args) {
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,56,"this(null, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,104,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,105,Override
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,106,ublic String getLocalizedMessage() {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,107,eturn getMessage(Locale.getDefault());
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,26, This class is intended as a base class for exceptions that must wrap
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,27, low-level exceptions in order to propagate an exception that better
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,28, corresponds to the high-level action that triggered the problem.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,26,* This class is primarily intended as a base class for exceptions
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,27,* that must wrap low-level exceptions in order to propagate an
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,28,* exception that better corresponds to the high-level action that
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,29,* triggered the problem.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,51, Builds an exception from two patterns (specific and general) and
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,52,* Build an exception from two patterns (specific and general) and
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,60,"rotected MathRuntimeException(final Throwable cause,"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,61,"inal Localizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,62,"inal Localizable general,"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,63,inal Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,61,"public MathRuntimeException(final Throwable cause,"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,62,"final Localizable specific,"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,63,"final Localizable general,"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,64,final Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,72,* Wrap an exception.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,74,* @param cause Cause of the error (may be null).
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,76,public MathRuntimeException(final Throwable cause) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,77,"this(cause, null, null);"
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,19,mport java.util.Locale;
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,21,mport org.apache.commons.math.exception.util.ArgUtils;
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,22,mport org.apache.commons.math.exception.util.MessageFactory;
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,35,ublic class MathUnsupportedOperationException extends UnsupportedOperationException implements MathThrowable {
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,31,public class MathUnsupportedOperationException extends MathRuntimeException {
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,41, Pattern used to build the message (specific context).
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,43,rivate final Localizable specific;
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,45, Arguments used to build the message.
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,47,rivate final Object[] arguments;
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,62,his.specific = specific;
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,63,rguments = ArgUtils.flatten(args);
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,66,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,67,ublic Localizable getSpecificPattern() {
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,68,eturn specific;
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,71,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,72,ublic Localizable getGeneralPattern() {
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,73,eturn LocalizedFormats.UNSUPPORTED_OPERATION;
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,76,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,77,ublic Object[] getArguments() {
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,78,eturn arguments.clone();
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,82, Get the message in a specified locale.
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,84, @param locale Locale in which the message should be translated.
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,86, @return the localized message.
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,88,ublic String getMessage(final Locale locale) {
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,89,"eturn MessageFactory.buildMessage(locale,"
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,90,"pecific,"
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,91,"ocalizedFormats.UNSUPPORTED_OPERATION,"
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,92,rguments);
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,95,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,96,Override
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,97,ublic String getMessage() {
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,98,eturn getMessage(Locale.US);
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,101,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,102,Override
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,103,ublic String getLocalizedMessage() {
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,104,eturn getMessage(Locale.getDefault());
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,48,"super(null, specific, LocalizedFormats.UNSUPPORTED_OPERATION, args);"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,307,"ARITHMETIC_EXCEPTION(""arithmetic exception""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,308,"ILLEGAL_STATE(""illegal state""), /* keep */"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,23,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,24,import org.apache.commons.math.exception.MathArithmeticException;
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,113,"        <code>epsilon</code> of <code>value</code>, in absolute terms."
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,113,"*        {@code epsilon} of {@code value}, in absolute terms."
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,169,"        <code>epsilon</code> of <code>value</code>, in absolute terms."
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,169,"*        {@code epsilon} of {@code value}, in absolute terms."
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,254, @throws ArithmeticException if the denominator is <code>zero</code>
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,254,* @throws MathArithmeticException if the denominator is {@code zero}
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,258,hrow MathRuntimeException.createArithmeticException(
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,259,"ocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION, num, den);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,258,"throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION,"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,259,"num, den);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,262,f (num == Integer.MIN_VALUE || den == Integer.MIN_VALUE) {
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,263,hrow MathRuntimeException.createArithmeticException(
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,264,"ocalizedFormats.OVERFLOW_IN_FRACTION, num, den);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,262,if (num == Integer.MIN_VALUE ||
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,263,den == Integer.MIN_VALUE) {
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,264,"throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,265,"num, den);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,406,hrow MathRuntimeException.createArithmeticException(
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,407,"ocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,407,"throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,424," @param fraction  the fraction to add, must not be <code>null</code>"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,425, @return a <code>Fraction</code> instance with the resulting values
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,426, @throws IllegalArgumentException if the fraction is <code>null</code>
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,427, @throws ArithmeticException if the resulting numerator or denominator exceeds
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,428,  <code>Integer.MAX_VALUE</code>
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,424,"* @param fraction  the fraction to add, must not be {@code null}"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,425,* @return a {@code Fraction} instance with the resulting values
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,426,* @throws NullArgumentException if the fraction is {@code null}
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,427,* @throws MathArithmeticException if the resulting numerator or denominator exceeds
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,428,*  {@code Integer.MAX_VALUE}
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,447," @param fraction  the fraction to subtract, must not be <code>null</code>"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,448, @return a <code>Fraction</code> instance with the resulting values
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,449, @throws IllegalArgumentException if the fraction is <code>null</code>
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,450, @throws ArithmeticException if the resulting numerator or denominator
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,451,   cannot be represented in an <code>int</code>.
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,447,"* @param fraction  the fraction to subtract, must not be {@code null}"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,448,* @return a {@code Fraction} instance with the resulting values
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,449,* @throws NullArgumentException if the fraction is {@code null}
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,450,* @throws MathArithmeticException if the resulting numerator or denominator
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,451,*   cannot be represented in an {@code int}.
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,469," @param fraction the fraction to subtract, must not be <code>null</code>"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,469,"* @param fraction the fraction to subtract, must not be {@code null}"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,471, @return a <code>Fraction</code> instance with the resulting values
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,472, @throws IllegalArgumentException if the fraction is <code>null</code>
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,473, @throws ArithmeticException if the resulting numerator or denominator
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,474,   cannot be represented in an <code>int</code>.
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,471,* @return a {@code Fraction} instance with the resulting values
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,472,* @throws NullArgumentException if the fraction is {@code null}
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,473,* @throws MathArithmeticException if the resulting numerator or denominator
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,474,*   cannot be represented in an {@code int}.
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,515,"hrow MathRuntimeException.createArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,516,);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,515,"throw new MathArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,516,w);
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,527," @param fraction  the fraction to multiply by, must not be <code>null</code>"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,528, @return a <code>Fraction</code> instance with the resulting values
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,529, @throws IllegalArgumentException if the fraction is <code>null</code>
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,530, @throws ArithmeticException if the resulting numerator or denominator exceeds
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,531,  <code>Integer.MAX_VALUE</code>
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,527,"* @param fraction  the fraction to multiply by, must not be {@code null}"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,528,* @return a {@code Fraction} instance with the resulting values
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,529,* @throws NullArgumentException if the fraction is {@code null}
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,530,* @throws MathArithmeticException if the resulting numerator or denominator exceeds
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,531,*  {@code Integer.MAX_VALUE}
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,561," @param fraction  the fraction to divide by, must not be <code>null</code>"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,562, @return a <code>Fraction</code> instance with the resulting values
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,563, @throws IllegalArgumentException if the fraction is <code>null</code>
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,564, @throws ArithmeticException if the fraction to divide by is zero
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,565, @throws ArithmeticException if the resulting numerator or denominator exceeds
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,566,  <code>Integer.MAX_VALUE</code>
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,561,"* @param fraction  the fraction to divide by, must not be {@code null}"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,562,* @return a {@code Fraction} instance with the resulting values
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,563,* @throws IllegalArgumentException if the fraction is {@code null}
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,564,* @throws MathArithmeticException if the fraction to divide by is zero
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,565,* @throws MathArithmeticException if the resulting numerator or denominator exceeds
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,566,*  {@code Integer.MAX_VALUE}
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,573,hrow MathRuntimeException.createArithmeticException(
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,574,"ocalizedFormats.ZERO_FRACTION_TO_DIVIDE_BY,"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,575,"raction.numerator, fraction.denominator);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,573,"throw new MathArithmeticException(LocalizedFormats.ZERO_FRACTION_TO_DIVIDE_BY,"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,574,"fraction.numerator, fraction.denominator);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,590, <p>Creates a <code>Fraction</code> instance with the 2 parts
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,589,* <p>Creates a {@code Fraction} instance with the 2 parts
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,598, @throws ArithmeticException if the denominator is <code>zero</code>
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,597,* @throws MathArithmeticException if the denominator is {@code zero}
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,602,hrow MathRuntimeException.createArithmeticException(
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,603,"ocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION, numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,601,"throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION,"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,602,"numerator, denominator);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,615,hrow MathRuntimeException.createArithmeticException(
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,616,"ocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,614,"throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,615,"numerator, denominator);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,630," Returns the <code>String</code> representing this fraction, ie"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,629,"* Returns the {@code String} representing this fraction, ie"
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,30,mport org.apache.commons.math.analysis.function.Power;
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,21,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,25,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,19,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,19,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,21,import org.apache.commons.math.exception.NoDataException;
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,563, @throws IllegalArgumentException if the arrays do not have the same
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,564, (positive) length
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,565,* @throws DimensionMismatchException if the arrays do not have the same
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,566,* (positive) length.
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,567,* @throws NoDataException if the sample arrays are empty.
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,566,"ublic static double sumDifference(final double[] sample1, final double[] sample2)"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,567,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,569,"public static double sumDifference(final double[] sample1, final double[] sample2) {"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,569,f (n  != sample2.length) {
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,570,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,571,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, n, sample2.length);"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,571,if (n != sample2.length) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,572,"throw new DimensionMismatchException(n, sample2.length);"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,573,f (n < 1) {
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,574,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,575,"ocalizedFormats.INSUFFICIENT_DIMENSION, sample2.length, 1);"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,574,if (n <= 0) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,575,throw new NoDataException(LocalizedFormats.INSUFFICIENT_DIMENSION);
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,591, @throws IllegalArgumentException if the arrays do not have the same
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,592, (positive) length
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,591,* @throws DimensionMismatchException if the arrays do not have the same
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,592,* (positive) length.
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,593,* @throws NoDataException if the sample arrays are empty.
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,594,"ublic static double meanDifference(final double[] sample1, final double[] sample2)"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,595,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,595,"public static double meanDifference(final double[] sample1, final double[] sample2) {"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,608, @throws IllegalArgumentException if the arrays do not have the same
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,609, length or their common length is less than 2.
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,608,* @throws DimensionMismatchException if the arrays do not have the same
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,609,* length.
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,610,* @throws NumberIsTooSmallException if the arrays length is less than 2.
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,611,"ublic static double varianceDifference(final double[] sample1, final double[] sample2,"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,612,ouble meanDifference)  throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,612,"public static double varianceDifference(final double[] sample1,"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,613,"final double[] sample2,"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,614,double meanDifference) {
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,618,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,619,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, n, sample2.length);"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,620,"throw new DimensionMismatchException(n, sample2.length);"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,622,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,623,"ocalizedFormats.INSUFFICIENT_DIMENSION, n, 2);"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,623,"throw new NumberIsTooSmallException(n, 2, true);"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,635," Normalize (standardize) the series, so in the end it is having a mean of 0 and a standard deviation of 1."
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,637, @param sample sample to normalize
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,638, @return normalized (standardized) sample
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,640,ublic static double[] normalize(final double[] sample) {
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,641,escriptiveStatistics stats = new DescriptiveStatistics();
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,643,/ Add the data from the series to stats
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,644,or (int i = 0; i < sample.length; i++) {
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,645,tats.addValue(sample[i]);
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,648,/ Compute mean and standard deviation
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,649,ouble mean = stats.getMean();
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,650,ouble standardDeviation = stats.getStandardDeviation();
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,652,"/ initialize the standardizedSample, which has the same length as the sample"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,653,ouble[] standardizedSample = new double[sample.length];
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,655,or (int i = 0; i < sample.length; i++) {
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,656,/ z = (x- mean)/standardDeviation
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,657,tandardizedSample[i] = (sample[i] - mean) / standardDeviation;
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,659,eturn standardizedSample;
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,634,"* Normalize (standardize) the series, so in the end it is having a mean of 0 and a standard deviation of 1."
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,636,* @param sample Sample to normalize.
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,637,* @return normalized (standardized) sample.
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,639,public static double[] normalize(final double[] sample) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,640,DescriptiveStatistics stats = new DescriptiveStatistics();
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,642,// Add the data from the series to stats
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,643,for (int i = 0; i < sample.length; i++) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,644,stats.addValue(sample[i]);
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,647,// Compute mean and standard deviation
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,648,double mean = stats.getMean();
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,649,double standardDeviation = stats.getStandardDeviation();
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,651,"// initialize the standardizedSample, which has the same length as the sample"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,652,double[] standardizedSample = new double[sample.length];
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,654,for (int i = 0; i < sample.length; i++) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,655,// z = (x- mean)/standardDeviation
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,656,standardizedSample[i] = (sample[i] - mean) / standardDeviation;
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,658,return standardizedSample;
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,19,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,22,import org.apache.commons.math.exception.NumberIsTooLargeException;
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,23,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,175,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,176,ocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END);
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,176,"throw new NumberIsTooLargeException(LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END,"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,177,"begin + length, values.length, true);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,268,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,269,"ocalizedFormats.NAN_ELEMENT_AT_INDEX, i);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,269,"throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX, i);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,272,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,273,"ocalizedFormats.INFINITE_ARRAY_ELEMENT, weights[i], i);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,272,"throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, weights[i], i);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,276,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,277,"ocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX, i, weights[i]);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,275,"throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX, i, weights[i]);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,285,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,286,ocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,283,throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,22,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,22,import org.apache.commons.math.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,261,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,262,"ocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE, p);"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,261,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE, p, 0, 100);"
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,465,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,466,"ocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE, p);"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,464,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE, p, 0, 100);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,20,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,20,import org.apache.commons.math.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,21,import org.apache.commons.math.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,22,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,23,import org.apache.commons.math.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,24,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,25,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,63, @throws IllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,64, or length is less than 2
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,68,* @throws DimensionMismatchException if the arrays length is less than 2.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,66,"ublic double chiSquare(double[] expected, long[] observed)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,67,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,70,"public double chiSquare(double[] expected, long[] observed) {"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,69,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,70,"ocalizedFormats.INSUFFICIENT_DIMENSION, expected.length, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,72,"throw new DimensionMismatchException(expected.length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,73,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,74,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, expected.length, observed.length);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,75,"throw new DimensionMismatchException(expected.length, observed.length);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,112, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,113,* @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,116,"hrows IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,117,throws MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,133, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,134,* @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,137,"ouble alpha) throws IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,138,double alpha)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,139,throws MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,139,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,140,"ocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,141,"lpha, 0, 0.5);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,141,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,142,"alpha, 0, 0.5);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,149, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,150,* @throws MathIllegalArgumentException if preconditions are not met.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,151,ublic double chiSquare(long[][] counts) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,152,public double chiSquare(long[][] counts) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,185, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,185,* @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,189,"hrows IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,189,throws MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,201, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,201,* @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,205,"hrows IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,205,throws MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,207,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,208,"ocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,209,"lpha, 0.0, 0.5);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,207,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,208,"alpha, 0, 0.5);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,218, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,217,* @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,221,"ublic double chiSquareDataSetsComparison(long[] observed1, long[] observed2)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,222,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,220,"public double chiSquareDataSetsComparison(long[] observed1, long[] observed2) {"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,226,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,227,"ocalizedFormats.INSUFFICIENT_DIMENSION, observed1.length, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,223,"throw new DimensionMismatchException(observed1.length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,230,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,231,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,232,"bserved1.length, observed2.length);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,226,"throw new DimensionMismatchException(observed1.length, observed2.length);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,250,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,251,"ocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 1);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,244,"throw new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 1);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,254,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,255,"ocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,247,"throw new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,269,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,270,"ocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY, i);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,261,"throw new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY, i);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,289, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,280,* @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,294,"hrows IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,285,throws MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,306, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,297,* @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,311,"ouble alpha) throws IllegalArgumentException, MathException {"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,312,f ((alpha <= 0) || (alpha > 0.5)) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,313,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,314,"ocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,315,"lpha, 0.0, 0.5);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,302,double alpha)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,303,throws MathException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,304,if (alpha <= 0 ||
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,305,alpha > 0.5) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,306,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,307,"alpha, 0, 0.5);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,323, throwing IllegalArgumentException if any of these checks fail.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,315,* throwing MathIllegalArgumentException if any of these checks fail.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,326, @throws IllegalArgumentException if the array is not valid
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,318,* @throws MathIllegalArgumentException if the array is not valid
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,328,rivate void checkArray(long[][] in) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,320,private void checkArray(long[][] in) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,331,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,332,"ocalizedFormats.INSUFFICIENT_DIMENSION, in.length, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,322,"throw new NumberIsTooSmallException(in.length, 2, true);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,336,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,337,"ocalizedFormats.INSUFFICIENT_DIMENSION, in[0].length, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,326,"throw new NumberIsTooSmallException(in[0].length, 2, true);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,348, Throws IllegalArgumentException if the input array is not rectangular.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,337,* Throws MathIllegalArgumentException if the input array is not rectangular.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,352, @throws IllegalArgumentException if input array is not rectangular
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,341,* @throws MathIllegalArgumentException if input array is not rectangular
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,357,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,358,"ocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,359,"n[i].length, in[0].length);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,346,"throw new DimensionMismatchException(LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,347,"in[i].length, in[0].length);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,365, Check all entries of the input array are > 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,353,* Check all entries of the input array are strictly postive.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,367, @param in array to be tested
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,368, @exception IllegalArgumentException if one entry is not positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,355,* @param in Array to be tested.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,356,* @exception NotStrictlyPositiveException if one entry is not positive.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,370,rivate void checkPositive(double[] in) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,358,private void checkPositive(double[] in) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,373,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,374,"ocalizedFormats.NOT_POSITIVE_ELEMENT_AT_INDEX,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,375,", in[i]);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,361,throw new NotStrictlyPositiveException(in[i]);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,383, @param in array to be tested
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,384, @exception IllegalArgumentException if one entry is negative
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,369,* @param in Array to be tested.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,370,* @exception NotPositiveException if one entry is negative.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,386,rivate void checkNonNegative(long[] in) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,372,private void checkNonNegative(long[] in) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,389,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,390,"ocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,391,", in[i]);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,375,throw new NotPositiveException(in[i]);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,399, @param in array to be tested
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,400, @exception IllegalArgumentException if one entry is negative
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,383,* @param in Array to be tested.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,384,* @exception NotPositiveException if one entry is negative.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,402,rivate void checkNonNegative(long[][] in) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,386,private void checkNonNegative(long[][] in) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,406,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,407,"ocalizedFormats.NEGATIVE_ELEMENT_AT_2D_INDEX,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,408,", j, in[i][j]);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,390,throw new NotPositiveException(in[i][j]);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,28,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,36,import org.apache.commons.math.exception.MathRuntimeException;
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,106, @return the sum <code>x+y</code>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,106,* @return the sum {@code x+y}
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,124, @return the sum <code>a+b</code>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,125, @throws ArithmeticException if the result can not be represented as an
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,124,* @return the sum {@code a+b}
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,125,* @throws MathArithmeticException if the result can not be represented as an
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,182," Coefficient</a>, ""<code>n choose k</code>"", the number of"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,183, <code>k</code>-element subsets that can be selected from an
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,184, <code>n</code>-element set.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,182,"* Coefficient</a>, ""{@code n choose k}"", the number of"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,183,* {@code k}-element subsets that can be selected from an
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,184,* {@code n}-element set.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,188, <li> <code>0 <= k <= n </code> (otherwise
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,189, <code>IllegalArgumentException</code> is thrown)</li>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,190, <li> The result is small enough to fit into a <code>long</code>. The
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,191, largest value of <code>n</code> for which all coefficients are
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,192, <code> < Long.MAX_VALUE</code> is 66. If the computed value exceeds
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,193, <code>Long.MAX_VALUE</code> an <code>ArithMeticException</code> is
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,188,* <li> {@code 0 <= k <= n } (otherwise
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,189,* {@code IllegalArgumentException} is thrown)</li>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,190,* <li> The result is small enough to fit into a {@code long}. The
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,191,* largest value of {@code n} for which all coefficients are
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,192,* {@code  < Long.MAX_VALUE} is 66. If the computed value exceeds
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,193,* {@code Long.MAX_VALUE} an {@code ArithMeticException} is
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,199, @return <code>n choose k</code>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,200, @throws IllegalArgumentException if preconditions are not met.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,201, @throws ArithmeticException if the result is too large to be represented
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,202,         by a long integer.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,199,* @return {@code n choose k}
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,200,* @throws MathIllegalArgumentException if preconditions are not met.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,201,* @throws MathArithmeticException if the result is too large to be
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,202,* represented by a long integer.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,259, Returns a <code>double</code> representation of the <a
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,259,* Returns a {@code double} representation of the <a
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,261," Coefficient</a>, ""<code>n choose k</code>"", the number of"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,262, <code>k</code>-element subsets that can be selected from an
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,263, <code>n</code>-element set.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,261,"* Coefficient</a>, ""{@code n choose k}"", the number of"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,262,* {@code k}-element subsets that can be selected from an
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,263,* {@code n}-element set.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,267, <li> <code>0 <= k <= n </code> (otherwise
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,268, <code>IllegalArgumentException</code> is thrown)</li>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,269, <li> The result is small enough to fit into a <code>double</code>. The
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,270, largest value of <code>n</code> for which all coefficients are <
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,267,* <li> {@code 0 <= k <= n } (otherwise
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,268,* {@code IllegalArgumentException} is thrown)</li>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,269,* <li> The result is small enough to fit into a {@code double}. The
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,270,* largest value of {@code n} for which all coefficients are <
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,277, @return <code>n choose k</code>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,277,* @return {@code n choose k}
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,304, Returns the natural <code>log</code> of the <a
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,304,* Returns the natural {@code log} of the <a
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,306," Coefficient</a>, ""<code>n choose k</code>"", the number of"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,307, <code>k</code>-element subsets that can be selected from an
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,308, <code>n</code>-element set.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,306,"* Coefficient</a>, ""{@code n choose k}"", the number of"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,307,* {@code k}-element subsets that can be selected from an
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,308,* {@code n}-element set.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,312, <li> <code>0 <= k <= n </code> (otherwise
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,313, <code>IllegalArgumentException</code> is thrown)</li>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,312,* <li> {@code 0 <= k <= n } (otherwise
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,313,* {@code IllegalArgumentException} is thrown)</li>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,318, @return <code>n choose k</code>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,318,* @return {@code n choose k}
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,571, Returns n!. Shorthand for <code>n</code> <a
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,571,* Returns n!. Shorthand for {@code n} <a
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,573," product of the numbers <code>1,...,n</code>."
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,573,"* product of the numbers {@code 1,...,n}."
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,577, <li> <code>n >= 0</code> (otherwise
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,578, <code>IllegalArgumentException</code> is thrown)</li>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,579, <li> The result is small enough to fit into a <code>long</code>. The
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,580, largest value of <code>n</code> for which <code>n!</code> <
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,581, Long.MAX_VALUE</code> is 20. If the computed value exceeds <code>Long.MAX_VALUE</code>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,582, an <code>ArithMeticException </code> is thrown.</li>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,577,* <li> {@code n >= 0} (otherwise
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,578,* {@code IllegalArgumentException} is thrown)</li>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,579,* <li> The result is small enough to fit into a {@code long}. The
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,580,* largest value of {@code n} for which {@code n!} <
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,581,* Long.MAX_VALUE} is 20. If the computed value exceeds {@code Long.MAX_VALUE}
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,582,* an {@code ArithMeticException } is thrown.</li>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,587, @return <code>n!</code>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,587,* @return {@code n!}
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,661," <code>gcd(Integer.MIN_VALUE, Integer.MIN_VALUE)</code>,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,662," <code>gcd(Integer.MIN_VALUE, 0)</code> and"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,663," <code>gcd(0, Integer.MIN_VALUE)</code> throw an"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,664," <code>ArithmeticException</code>, because the result would be 2^31, which"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,661,"* {@code gcd(Integer.MIN_VALUE, Integer.MIN_VALUE)},"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,662,"* {@code gcd(Integer.MIN_VALUE, 0)} and"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,663,"* {@code gcd(0, Integer.MIN_VALUE)} throw an"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,664,"* {@code ArithmeticException}, because the result would be 2^31, which"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,666," <li>The result of <code>gcd(x, x)</code>, <code>gcd(0, x)</code> and"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,667," <code>gcd(x, 0)</code> is the absolute value of <code>x</code>, except"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,666,"* <li>The result of {@code gcd(x, x)}, {@code gcd(0, x)} and"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,667,"* {@code gcd(x, 0)} is the absolute value of {@code x}, except"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,669," <li>The invocation <code>gcd(0, 0)</code> is the only one which returns"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,670, <code>0</code>.</li>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,669,"* <li>The invocation {@code gcd(0, 0)} is the only one which returns"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,670,* {@code 0}.</li>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,748," <code>gcd(Long.MIN_VALUE, Long.MIN_VALUE)</code>,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,749," <code>gcd(Long.MIN_VALUE, 0L)</code> and"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,750," <code>gcd(0L, Long.MIN_VALUE)</code> throw an"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,751," <code>ArithmeticException</code>, because the result would be 2^63, which"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,748,"* {@code gcd(Long.MIN_VALUE, Long.MIN_VALUE)},"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,749,"* {@code gcd(Long.MIN_VALUE, 0L)} and"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,750,"* {@code gcd(0L, Long.MIN_VALUE)} throw an"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,751,"* {@code ArithmeticException}, because the result would be 2^63, which"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,753," <li>The result of <code>gcd(x, x)</code>, <code>gcd(0L, x)</code> and"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,754," <code>gcd(x, 0L)</code> is the absolute value of <code>x</code>, except"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,753,"* <li>The result of {@code gcd(x, x)}, {@code gcd(0L, x)} and"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,754,"* {@code gcd(x, 0L)} is the absolute value of {@code x}, except"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,756," <li>The invocation <code>gcd(0L, 0L)</code> is the only one which returns"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,757, <code>0L</code>.</li>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,756,"* <li>The invocation {@code gcd(0L, 0L)} is the only one which returns"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,757,* {@code 0L}.</li>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,859, -1.0 if x < 0. Returns <code>NaN</code> if <code>x</code> is
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,860, <code>NaN</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,859,* -1.0 if x < 0. Returns {@code NaN} if {@code x} is
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,860,* {@code NaN}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,874, 0. Returns <code>NaN</code> if <code>x</code> is <code>NaN</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,874,* 0. Returns {@code NaN} if {@code x} is {@code NaN}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,920," using the formula <code>lcm(a,b) = (a / gcd(a,b)) * b</code>."
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,920,"* using the formula {@code lcm(a,b) = (a / gcd(a,b)) * b}."
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,924," <li>The invocations <code>lcm(Integer.MIN_VALUE, n)</code> and"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,925," <code>lcm(n, Integer.MIN_VALUE)</code>, where <code>abs(n)</code> is a"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,926," power of 2, throw an <code>ArithmeticException</code>, because the result"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,924,"* <li>The invocations {@code lcm(Integer.MIN_VALUE, n)} and"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,925,"* {@code lcm(n, Integer.MIN_VALUE)}, where {@code abs(n)} is a"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,926,"* power of 2, throw an {@code ArithmeticException}, because the result"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,928," <li>The result of <code>lcm(0, x)</code> and <code>lcm(x, 0)</code> is"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,929, <code>0</code> for any <code>x</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,928,"* <li>The result of {@code lcm(0, x)} and {@code lcm(x, 0)} is"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,929,* {@code 0} for any {@code x}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,954," using the formula <code>lcm(a,b) = (a / gcd(a,b)) * b</code>."
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,954,"* using the formula {@code lcm(a,b) = (a / gcd(a,b)) * b}."
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,958," <li>The invocations <code>lcm(Long.MIN_VALUE, n)</code> and"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,959," <code>lcm(n, Long.MIN_VALUE)</code>, where <code>abs(n)</code> is a"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,960," power of 2, throw an <code>ArithmeticException</code>, because the result"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,958,"* <li>The invocations {@code lcm(Long.MIN_VALUE, n)} and"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,959,"* {@code lcm(n, Long.MIN_VALUE)}, where {@code abs(n)} is a"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,960,"* power of 2, throw an {@code ArithmeticException}, because the result"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,962," <li>The result of <code>lcm(0L, x)</code> and <code>lcm(x, 0L)</code> is"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,963, <code>0L</code> for any <code>x</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,962,"* <li>The result of {@code lcm(0L, x)} and {@code lcm(x, 0L)} is"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,963,* {@code 0L} for any {@code x}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,988, for base <code>b</code> of <code>x</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,988,* for base {@code b} of {@code x}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,990, <p>Returns <code>NaN<code> if either argument is negative.  If
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,991," <code>base</code> is 0 and <code>x</code> is positive, 0 is returned."
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,992," If <code>base</code> is positive and <code>x</code> is 0,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,993, <code>Double.NEGATIVE_INFINITY</code> is returned.  If both arguments
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,994," are 0, the result is <code>NaN</code>.</p>"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,990,* <p>Returns {@code NaN} if either argument is negative. If
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,991,"* {@code base} is 0 and {@code x} is positive, 0 is returned."
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,992,"* If {@code base} is positive and {@code x} is 0,"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,993,* {@code Double.NEGATIVE_INFINITY} is returned.  If both arguments
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,994,"* are 0, the result is {@code NaN}.</p>"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1079," <p>If <code>d</code> is 0 or NaN or Infinite, it is returned unchanged.</p>"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1079,"* <p>If {@code d} is 0 or NaN or Infinite, it is returned unchanged.</p>"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1109,"       <code>a = MathUtils.normalizeAngle(a, FastMath.PI);</code></li>"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1109,"*       {@code a = MathUtils.normalizeAngle(a, FastMath.PI);}</li>"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1111,"       <code>a = MathUtils.normalizeAngle(a, 0.0);</code></li>"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1111,"*       {@code a = MathUtils.normalizeAngle(a, 0.0);}</li>"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1113,"       <code>angle = MathUtils.normalizeAngle(end, start) - start;</code></li>"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1113,"*       {@code angle = MathUtils.normalizeAngle(end, start) - start;}</li>"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1135, <p>Throws IllegalArgumentException if <code>normalizedSum</code> is infinite
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1135,* <p>Throws IllegalArgumentException if {@code normalizedSum} is infinite
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1144, @throws ArithmeticException if the input array contains infinite elements or sums to zero
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1145, @throws IllegalArgumentException if the target sum is infinite or NaN
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1144,* @throws MathArithmeticException if the input array contains infinite elements or sums to zero
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1145,* @throws MathIllegalArgumentException if the target sum is infinite or NaN
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1150,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1151,ocalizedFormats.NORMALIZE_INFINITE);
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1150,throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_INFINITE);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1154,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1155,ocalizedFormats.NORMALIZE_NAN);
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1153,throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_NAN);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1162,hrow MathRuntimeException.createArithmeticException(
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1163,"ocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1160,"throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1170,hrow MathRuntimeException.createArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1167,throw new MathArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1216,} catch (RuntimeException ex) {
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1217,throw new MathRuntimeException(ex);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1347, for byte value <code>x</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1346,* for byte value {@code x}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1361, for double precision <code>x</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1360,* for double precision {@code x}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1363," For a double value <code>x</code>, this method returns"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1364," <code>+1.0</code> if <code>x > 0</code>, <code>0.0</code> if"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1365," <code>x = 0.0</code>, and <code>-1.0</code> if <code>x < 0</code>."
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1366, Returns <code>NaN</code> if <code>x</code> is <code>NaN</code>.</p>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1362,"* For a double value {@code x}, this method returns"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1363,"* {@code +1.0} if {@code x > 0}, {@code 0.0} if"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1364,"* {@code x = 0.0}, and {@code -1.0} if {@code x < 0}."
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1365,* Returns {@code NaN} if {@code x} is {@code NaN}.</p>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1380, for float value <code>x</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1379,* for float value {@code x}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1383," 0.0F, and -1.0F if x < 0. Returns <code>NaN</code> if <code>x</code>"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1384, is <code>NaN</code>.</p>
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1382,"* 0.0F, and -1.0F if x < 0. Returns {@code NaN} if {@code x}"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1383,* is {@code NaN}.</p>
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1398, for int value <code>x</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1397,* for int value {@code x}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1412, for long value <code>x</code>.
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1411,* for long value {@code x}.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1481,hrow new ArithmeticException(msg);
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1480,throw new MathArithmeticException(msg);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1873,     <code>This product includes software developed by the University of
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1874,"           Chicago, as Operator of Argonne National Laboratory.</code>"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1872,*     {@code This product includes software developed by the University of
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1873,"*           Chicago, as Operator of Argonne National Laboratory.}"
False,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,20,mport org.apache.commons.math.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,48, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,49,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,55, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,56,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,20,mport org.apache.commons.math.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,49, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,50,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,57, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,58,} catch (MathIllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,50, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,51,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,58, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,59,} catch (MathIllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,52, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,53,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,61, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,62,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,70, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,71,} catch (MathIllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,51, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,52,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,59, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,60,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,67, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,68,} catch (MathIllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,134,"ail(""Expecting IllegalArgumentException - bad input array length"");"
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,135, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,135,"fail(""Expecting MathIllegalArgumentException - bad input array length"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,136,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,143,"ail(""Expecting IllegalArgumentException - mismatch input arrays"");"
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,144, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,144,"fail(""Expecting MathIllegalArgumentException - mismatch input arrays"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,145,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,19,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,133,"ail(""Expecting IllegalArgumentException - bad input array length"");"
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,134, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,135,"fail(""Expecting MathIllegalArgumentException - bad input array length"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,136,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,142,"ail(""Expecting IllegalArgumentException - mismatch input arrays"");"
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,143, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,144,"fail(""Expecting MathIllegalArgumentException - mismatch input arrays"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,145,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,24,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,25,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,68,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,69, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,70,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,71,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,75,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,76, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,77,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,78,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,82,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,83, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,84,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,85,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,138,"hrow new IllegalArgumentException(""x is out of range"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,140,"throw new OutOfRangeException(x, knots[0], knots[knots.length -1]);"
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,142,eturn i -1;
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,144,return i - 1;
False,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,145,"hrow new IllegalArgumentException(""x is out of range"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,147,throw new MathIllegalStateException();
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,39, catch(IllegalArgumentException ex){
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,40,} catch(MathIllegalArgumentException ex){
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,49,"ssert.fail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,50, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,50,"Assert.fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,51,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,59,"/             Assert.fail(""Expecting IllegalArgumentException""); // TODO needs rework since convergence behaviour was changed"
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,60, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,60,"//             Assert.fail(""Expecting MathIllegalArgumentException""); // TODO needs rework since convergence behaviour was changed"
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,61,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,77, catch(IllegalArgumentException ex){
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,78,} catch(MathIllegalArgumentException ex){
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,94,"ssert.fail(""Expecting IllegalArgumentException "");"
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,95, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,95,"Assert.fail(""Expecting MathIllegalArgumentException "");"
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,96,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,119,"ssert.fail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,120, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,120,"Assert.fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,121,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,129,"ssert.fail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,130, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,130,"Assert.fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,131,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,139,"ssert.fail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,140, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,140,"Assert.fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,141,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,149,"ssert.fail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,150, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,150,"Assert.fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,151,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,27,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,28,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,295, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,297,} catch (NullArgumentException ex) {
False,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,305, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,307,} catch (NullArgumentException ex) {
False,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,324, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,326,} catch (NullArgumentException ex) {
False,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,334, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,336,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,352, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,354,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,23,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,243,"ail(""Expecting IllegalArgumentException for bad cumulativeProbability interval"");"
False,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,244, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,244,"fail(""Expecting MathIllegalArgumentException for bad cumulativeProbability interval"");"
True,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,245,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,249,"ail(""Expecting IllegalArgumentException for p = -1"");"
False,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,250, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,250,"fail(""Expecting MathIllegalArgumentException for p = -1"");"
True,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,251,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,255,"ail(""Expecting IllegalArgumentException for p = 2"");"
False,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,256, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,256,"fail(""Expecting MathIllegalArgumentException for p = 2"");"
True,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,257,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,258,"ail(""Expecting IllegalArgumentException for bad cumulativeProbability interval"");"
False,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,259, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,259,"fail(""Expecting MathIllegalArgumentException for bad cumulativeProbability interval"");"
True,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,260,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,264,"ail(""Expecting IllegalArgumentException for p = -1"");"
False,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,265, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,265,"fail(""Expecting MathIllegalArgumentException for p = -1"");"
True,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,266,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,270,"ail(""Expecting IllegalArgumentException for p = 2"");"
False,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,271, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,271,"fail(""Expecting MathIllegalArgumentException for p = 2"");"
True,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,272,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,21,import org.apache.commons.math.exception.MathArithmeticException;
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,50, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,52,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,56, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,58,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,259,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,260, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,261,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,262,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,291,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,292, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,293,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,294,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,321,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,322, catch (IllegalArgumentException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,323,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,324,} catch (MathIllegalArgumentException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,346,"ail(""expecting ArithmeticException but got: "" + f.toString());"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,347, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,348,"fail(""expecting MathArithmeticException but got: "" + f.toString());"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,349,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,354,"ail(""expecting ArithmeticException but got: "" + f.toString());"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,355, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,356,"fail(""expecting MathArithmeticException but got: "" + f.toString());"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,357,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,360,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,361, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,362,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,363,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,366,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,367, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,368,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,369,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,373,"ail(""expecting ArithmeticException but got: "" + f.toString());"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,374, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,375,"fail(""expecting MathArithmeticException but got: "" + f.toString());"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,376,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,390,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,391, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,392,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,393,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,417,"ail(""IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,418, catch (IllegalArgumentException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,419,"fail(""MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,420,} catch (MathIllegalArgumentException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,423,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,424, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,425,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,426,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,428,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,429, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,430,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,431,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,455,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,456, catch (IllegalArgumentException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,457,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,458,} catch (MathIllegalArgumentException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,476,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,477, catch (IllegalArgumentException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,478,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,479,} catch (MathIllegalArgumentException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,506,"ail(""expecting ArithmeticException"");  //should overflow"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,507, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,508,"fail(""expecting MathArithmeticException"");  //should overflow"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,509,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,514,"ail(""expecting ArithmeticException but got: "" + f.toString());"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,515, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,516,"fail(""expecting MathArithmeticException but got: "" + f.toString());"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,517,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,520,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,521, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,522,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,523,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,526,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,527, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,528,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,529,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,533,"ail(""expecting ArithmeticException but got: "" + f.toString());"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,534, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,535,"fail(""expecting MathArithmeticException but got: "" + f.toString());"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,536,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,556,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,557, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,558,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,559,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,22,mport org.apache.commons.math.exception.MathUserException;
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,23,import org.apache.commons.math.exception.MathUserException;
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,24,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,30,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,31,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,145,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,146, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,148,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,149,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,176, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,179,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,200, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,203,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,249, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,252,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,287,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,288, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,290,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,291,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,313, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,316,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,851,"ail(""expecting IllegalStateException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,852, catch (IllegalStateException e) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,854,"fail(""expecting MathIllegalStateException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,855,} catch (MathIllegalStateException e) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,857,"ail(""expecting IllegalStateException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,858, catch (IllegalStateException e) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,860,"fail(""expecting MathIllegalStateException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,861,} catch (MathIllegalStateException e) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,865,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,866, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,868,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,869,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,873,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,874, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,876,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,877,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,995,f (!lu.isSquare() ||
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,996,owerData.length != lowerData[0].length ||
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,997,pperData.length != upperData[0].length ||
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,998,owerData.length != upperData.length ||
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,999,owerData.length != lu.getRowDimension()) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1000,"hrow new IllegalArgumentException(""incorrect dimensions"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,998,if (!lu.isSquare()) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,999,"throw new NonSquareMatrixException(lu.getRowDimension(), lu.getColumnDimension());"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1001,if (lowerData.length != lowerData[0].length) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1002,"throw new DimensionMismatchException(lowerData.length, lowerData[0].length);"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1004,if (upperData.length != upperData[0].length) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1005,"throw new DimensionMismatchException(upperData.length, upperData[0].length);"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1007,if (lowerData.length != upperData.length) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1008,"throw new DimensionMismatchException(lowerData.length, upperData.length);"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1010,if (lowerData.length != lu.getRowDimension()) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1011,"throw new DimensionMismatchException(lowerData.length, lu.getRowDimension());"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1021,f (!matrix.isSquare() || matrix.getRowDimension() != permutation.length) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1022,"hrow new IllegalArgumentException(""dimension mismatch"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1033,if (!matrix.isSquare()) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1034,"throw new NonSquareMatrixException(matrix.getRowDimension(),"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1035,matrix.getColumnDimension());
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1037,if (matrix.getRowDimension() != permutation.length) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1038,"throw new DimensionMismatchException(matrix.getRowDimension(), permutation.length);"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,30,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,278,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,279, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,279,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,280,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,296,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,297, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,297,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,298,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,568,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,569, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,569,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,570,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,575,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,576, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,576,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,577,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,582,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,583, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,583,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,584,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,599,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,600, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,600,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,601,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,605,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,606, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,606,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,607,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,611,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,612, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,612,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,613,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,28,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,29,import org.apache.commons.math.exception.MathArithmeticException;
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,371,"ssert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,372, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,373,"Assert.fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,374,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,389,"ssert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,390, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,391,"Assert.fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,392,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,999,"ssert.fail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1000, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1001,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1002,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1009,"ssert.fail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1010, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1011,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1012,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1043,"ssert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1044, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1045,"Assert.fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1046,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1050,"ssert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1051, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1052,"Assert.fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1053,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1057,"ssert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1058, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1059,"Assert.fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1060,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,34,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,206,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,207, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,207,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,208,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,220, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,221,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,239, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,240,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,379, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,380,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,444,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,445, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,445,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,446,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,466, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,467,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1186,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1187, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1187,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1188,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1194,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1195, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1195,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1196,} catch (MathIllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,32,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,149,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,150, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,150,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,151,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,179, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,180,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,198, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,199,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,328, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,329,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,391,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,392, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,392,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,393,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,413, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,414,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1088,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1089, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1089,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1090,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1096,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1097, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1097,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1098,} catch (MathIllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,44, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,46,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,50, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,52,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,56, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,58,} catch (MathIllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,22,import org.apache.commons.math.util.MathUtils;
False,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,23,mport junit.framework.TestCase;
True,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,24,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,25,mport org.apache.commons.math.util.MathUtils;
True,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,26,import junit.framework.TestCase;
False,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,71, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,72,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,77, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,78,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,83, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,84,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,22,mport org.apache.commons.math.exception.MathUserException;
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,24,import org.apache.commons.math.exception.MathUserException;
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,25,import org.apache.commons.math.exception.MathIllegalStateException;
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,26,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,34,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,146,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,147, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,149,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,150,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,160, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,163,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,179, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,182,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,225, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,228,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,262,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,263, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,265,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,266,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,284, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,287,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,859,"ail(""expecting IllegalStateException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,860, catch (IllegalStateException e) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,862,"fail(""expecting MathIllegalStateException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,863,} catch (MathIllegalStateException e) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,865,"ail(""expecting IllegalStateException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,866, catch (IllegalStateException e) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,868,"fail(""expecting MathIllegalStateException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,869,} catch (MathIllegalStateException e) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,873,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,874, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,876,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,877,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,881,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,882, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,884,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,885,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1012,f (!lu.isSquare() ||
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1013,owerData.length != lowerData[0].length ||
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1014,pperData.length != upperData[0].length ||
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1015,owerData.length != upperData.length ||
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1016,owerData.length != lu.getRowDimension()) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1017,"hrow new IllegalArgumentException(""incorrect dimensions"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1015,if (!lu.isSquare()) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1016,"throw new NonSquareMatrixException(lu.getRowDimension(), lu.getColumnDimension());"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1018,if (lowerData.length != lowerData[0].length) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1019,"throw new DimensionMismatchException(lowerData.length, lowerData[0].length);"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1021,if (upperData.length != upperData[0].length) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1022,"throw new DimensionMismatchException(upperData.length, upperData[0].length);"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1024,if (lowerData.length != upperData.length) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1025,"throw new DimensionMismatchException(lowerData.length, upperData.length);"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1027,if (lowerData.length != lu.getRowDimension()) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1028,"throw new DimensionMismatchException(lowerData.length, lu.getRowDimension());"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1038,f (!matrix.isSquare() || matrix.getRowDimension() != permutation.length) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1039,"hrow new IllegalArgumentException(""dimension mismatch"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1049,if (!matrix.isSquare()) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1050,"throw new NonSquareMatrixException(matrix.getRowDimension(),"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1051,matrix.getColumnDimension());
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1053,if (matrix.getRowDimension() != permutation.length) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1054,"throw new DimensionMismatchException(matrix.getRowDimension(), permutation.length);"
True,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,81, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,82,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,87, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,88,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,93, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,src/test/java/org/apache/commons/math/linear/LUSolverTest.java,94,} catch (MathIllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,29,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,76,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,77, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,77,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,78,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,82,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,83, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,83,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,84,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,101,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,102, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,102,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,103,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,107,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,108, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,108,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,109,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,143,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,144, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,144,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,145,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,160,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,161, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,161,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,162,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,180,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,181, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,181,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,182,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,213,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,214, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,214,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,215,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,240,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,241, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,241,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,242,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,24,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,81, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,83,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,87, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,89,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,93, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,src/test/java/org/apache/commons/math/linear/QRSolverTest.java,95,} catch (MathIllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,27,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,361, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,362,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,41, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,43,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,47, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,49,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,53, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,55,} catch (MathIllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,30,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,178,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,179, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,179,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,180,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,194, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,195,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,220, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,221,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,269, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,270,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,307,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,308, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,308,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,309,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,333, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,334,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,631,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,632, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,632,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,633,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,639,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,640, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,640,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,641,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,647,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,648, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,648,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,649,} catch (MathIllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,23,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,178,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,179, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,178,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,179,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,26,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,158,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,159, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,159,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,160,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,181, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,182,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,207, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,208,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,256, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,257,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,294,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,295, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,295,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,296,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,320, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,321,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,616,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,617, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,617,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,618,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,624,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,625, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,625,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,626,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,632,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,633, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,633,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,634,} catch (MathIllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,27,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,28,import org.apache.commons.math.exception.MathArithmeticException;
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,367,"/    Assert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,368,/} catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,369,"//    Assert.fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,370,//} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,904,"ssert.fail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,905, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,906,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,907,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,914,"ssert.fail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,915, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,916,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,917,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,937,"ssert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,938, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,939,"Assert.fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,940,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,27,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,121, catch (IllegalStateException ise) {
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,122,} catch (MathIllegalStateException ise) {
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,22,mport org.apache.commons.math.exception.MathUserException;
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,22,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,24,mport org.apache.commons.math.optimization.general.
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,25,evenbergMarquardtOptimizer;
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,24,import org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer;
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,188, @throws MathUserException in the event of a test case error
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,192,"hrows OptimizationException, MathUserException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,191,throws OptimizationException {
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,206, @throws MathUserException in the event of a test case error
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,208,Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,206,@Test(expected=MathIllegalArgumentException.class)
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,210,"hrows OptimizationException, MathUserException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,208,throws OptimizationException {
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,219, @throws MathUserException in the event of a test case error
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,221,Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,218,@Test(expected=MathIllegalArgumentException.class)
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,223,"hrows OptimizationException, MathUserException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,220,throws OptimizationException {
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,236, @throws MathUserException in the event of a test case error
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,240,"hrows OptimizationException, MathUserException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,236,throws OptimizationException {
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,254, @throws MathUserException in the event of a test case error
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,258,"hrows OptimizationException, MathUserException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,253,throws OptimizationException {
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,272, @throws MathUserException in the event of a test case error
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,276,"hrows OptimizationException, MathUserException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,270,throws OptimizationException {
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,290, @throws MathUserException in the event of a test case error
False,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,294,"hrows OptimizationException, MathUserException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,287,throws OptimizationException {
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,22,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,24,mport org.apache.commons.math.optimization.general.
False,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,25,evenbergMarquardtOptimizer;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,25,import org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer;
False,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,114,Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,114,@Test(expected=MathIllegalArgumentException.class)
False,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,125,Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,125,@Test(expected=MathIllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,41,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,42, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,41,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,42,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,24,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,65,Test(expected=java.lang.IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,67,@Test(expected=MathIllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,50,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,89,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,90, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,90,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,91,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,117,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,118, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,118,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,119,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,145,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,146, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,146,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,147,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,173,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,174, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,174,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,175,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,206,"ail(""zero mean -- expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,207, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,207,"fail(""zero mean -- expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,208,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,222,"ail(""negative mean supplied -- IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,223, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,223,"fail(""negative mean supplied -- MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,224,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,228,"ail(""0 mean supplied -- IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,229, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,229,"fail(""0 mean supplied -- MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,230,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,391,"ail(""negative length supplied -- IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,392, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,392,"fail(""negative length supplied -- MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,393,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,397,"ail(""zero length supplied -- IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,398, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,398,"fail(""zero length supplied -- MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,399,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,411,"ail(""zero length requested -- expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,412, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,412,"fail(""zero length requested -- expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,413,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,446,"ail(""negative length -- IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,447, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,447,"fail(""negative length -- MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,448,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,452,"ail(""zero length -- IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,453, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,453,"fail(""zero length -- MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,454,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,466,"ail(""zero length requested -- expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,467, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,467,"fail(""zero length requested -- expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,468,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,501,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,502, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,502,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,503,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,507,"ail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,508, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,508,"fail(""MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,509,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,548,"ail(""zero sigma -- IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,549, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,549,"fail(""zero sigma -- MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,550,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,570,"ail(""negative mean -- expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,571, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,571,"fail(""negative mean -- expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,572,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,576,"ail(""zero mean -- expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,577, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,577,"fail(""zero mean -- expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,578,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,691,"ail(""sample size > set size, expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,692, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,692,"fail(""sample size > set size, expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,693,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,700,"ail(""n = k = 0, expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,701, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,701,"fail(""n = k = 0, expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,702,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,749,"ail(""permutation k > n, expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,750, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,750,"fail(""permutation k > n, expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,751,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,757,"ail(""permutation k = n = 0, expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,758, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,758,"fail(""permutation k = n = 0, expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,759,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,765,"ail(""permutation k < n < 0, expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,766, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,766,"fail(""permutation k < n < 0, expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,767,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/random/Well1024aTest.java,src/test/java/org/apache/commons/math/random/Well1024aTest.java,22,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/random/Well1024aTest.java,src/test/java/org/apache/commons/math/random/Well1024aTest.java,64,Test(expected=java.lang.IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/random/Well1024aTest.java,src/test/java/org/apache/commons/math/random/Well1024aTest.java,65,@Test(expected=MathIllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,24,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,122, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,123,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,129, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,130,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,156, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,157,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,163, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,164,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,190, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,191,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,197, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,198,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,223, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,224,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,246, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,247,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,273, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,274,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,312, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,313,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,352, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,353,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,359, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,360,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,391,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,392, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,392,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,393,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,397,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,398, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,398,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,399,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,404,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,405, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,405,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,406,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,414,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,415, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,415,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,416,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,56,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,57, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,57,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,58,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,62,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,63, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,63,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,64,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,68,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,69, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,69,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,70,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,74,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,75, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,75,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,76,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,80,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,81, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,81,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,82,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,86,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,87, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,87,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,88,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,92,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,93, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,93,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,94,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,98,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,99, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,99,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,100,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,22,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,33, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,34,} catch (MathIllegalArgumentException iae) {
False,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,40, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,41,} catch (MathIllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,74, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,75,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,80, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,81,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,105,"ail(""Expecting IllegalArgumentException for null array"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,106, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,106,"fail(""Expecting MathIllegalArgumentException for null array"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,107,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,147,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,148, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,148,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,149,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,153,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,154, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,154,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,155,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,19,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,56,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,57, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,58,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,59,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,65,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,66, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,67,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,68,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,75,"ail(""arrays have different lengths, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,76, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,77,"fail(""arrays have different lengths, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,78,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,84,"ail(""bad expected count, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,85, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,86,"fail(""bad expected count, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,87,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,94,"ail(""bad expected count, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,95, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,96,"fail(""bad expected count, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,97,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,120,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,121, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,122,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,123,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,129,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,130, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,131,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,132,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,136,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,137, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,138,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,139,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,145,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,146, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,147,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,148,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,153,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,154, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,155,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,156,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,228,"ail(""Expecting IllegalArgumentException - negative count"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,229, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,230,"fail(""Expecting MathIllegalArgumentException - negative count"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,231,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,237,"ail(""Expecting IllegalArgumentException - double 0's"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,238, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,239,"fail(""Expecting MathIllegalArgumentException - double 0's"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,240,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,246,"ail(""Expecting IllegalArgumentException - vanishing counts"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,247, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,248,"fail(""Expecting MathIllegalArgumentException - vanishing counts"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,249,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,69,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,70, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,70,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,71,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,76,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,77, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,77,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,78,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,83,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,84, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,84,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,85,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,90,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,91, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,91,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,92,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,97,"ail(""insufficient data to compute t statistic, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,98, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,98,"fail(""insufficient data to compute t statistic, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,99,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,103,"ail(""insufficient data to perform t test, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,104, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,104,"fail(""insufficient data to perform t test, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,105,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,110,"ail(""insufficient data to compute t statistic, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,111, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,111,"fail(""insufficient data to compute t statistic, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,112,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,116,"ail(""insufficient data to perform t test, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,117, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,117,"fail(""insufficient data to perform t test, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,118,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,145,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,146, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,146,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,147,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,152,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,153, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,153,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,154,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,191,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,192, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,192,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,193,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,198,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,199, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,199,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,200,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,205,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,206, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,206,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,207,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,212,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,213, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,213,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,214,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,219,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,220, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,220,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,221,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,226,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,227, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,227,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,228,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,233,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,234, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,234,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,235,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,240,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,241, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,241,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,242,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,22,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,23,import org.apache.commons.math.stat.descriptive.SummaryStatistics;
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,24,mport org.apache.commons.math.stat.descriptive.SummaryStatistics;
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,58,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,59, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,59,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,60,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,67,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,68, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,68,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,69,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,77,"ail(""arrays have different lengths, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,78, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,78,"fail(""arrays have different lengths, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,79,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,86,"ail(""bad expected count, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,87, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,87,"fail(""bad expected count, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,88,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,96,"ail(""bad expected count, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,97, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,97,"fail(""bad expected count, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,98,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,122,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,123, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,123,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,124,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,131,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,132, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,132,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,133,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,138,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,139, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,139,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,140,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,147,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,148, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,148,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,149,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,155,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,156, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,156,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,157,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,214,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,215, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,215,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,216,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,221,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,222, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,222,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,223,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,228,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,229, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,229,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,230,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,235,"ail(""arguments too short, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,236, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,236,"fail(""arguments too short, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,237,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,242,"ail(""insufficient data to compute t statistic, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,243, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,243,"fail(""insufficient data to compute t statistic, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,244,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,248,"ail(""insufficient data to perform t test, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,249, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,249,"fail(""insufficient data to perform t test, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,250,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,255,"ail(""insufficient data to compute t statistic, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,256, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,256,"fail(""insufficient data to compute t statistic, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,257,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,261,"ail(""insufficient data to perform t test, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,262, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,262,"fail(""insufficient data to perform t test, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,263,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,290,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,291, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,291,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,292,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,297,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,298, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,298,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,299,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,336,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,337, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,337,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,338,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,343,"ail(""alpha out of range, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,344, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,344,"fail(""alpha out of range, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,345,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,350,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,351, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,351,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,352,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,357,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,358, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,358,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,359,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,364,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,365, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,365,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,366,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,371,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,372, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,372,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,373,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,378,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,379, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,379,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,380,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,385,"ail(""insufficient data, IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,386, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,386,"fail(""insufficient data, MathIllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,387,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,225,"ail(""expecting IllegalArgumentException for alpha = 1"");"
False,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,226, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,227,"fail(""expecting MathIllegalArgumentException for alpha = 1"");"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,228,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,27,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,28,import org.apache.commons.math.exception.MathArithmeticException;
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,29,import org.apache.commons.math.exception.MathRuntimeException;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,46,"rivate long binomialCoefficient(int n, int k) throws ArithmeticException {"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,49,"private long binomialCoefficient(int n, int k) throws MathArithmeticException {"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,70,hrow new ArithmeticException(
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,73,throw new MathArithmeticException(
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,104,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,105, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,107,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,108,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,109,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,110, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,112,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,113,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,134,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,135, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,137,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,138,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,198, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,201,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,203, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,206,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,230,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,231, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,233,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,234,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,247,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,248, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,250,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,251,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,254,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,255, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,257,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,258,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,261,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,262, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,264,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,265,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,268,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,269, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,271,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,272,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,274,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,275, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,277,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,278,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,280,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,281, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,283,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,284,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,287,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,288, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,290,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,291,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,293,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,294, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,296,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,297,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,501,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,502, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,504,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,505,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,507,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,508, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,510,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,511,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,513,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,514, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,516,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,517,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,519,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,520, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,522,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,523,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,556,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,557, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,559,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,560,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,563,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,564, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,566,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,567,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,570,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,571, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,573,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,574,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,608,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,609, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,611,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,612,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,615,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,616, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,618,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,619,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,622,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,623, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,625,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,626,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,784,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,785, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,787,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,788,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,792,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,793, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,795,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,796,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,799,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,800, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,802,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,803,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,832,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,833, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,835,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,836,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,840,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,841, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,843,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,844,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,849,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,850, catch (ArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,852,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,853,} catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,871,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,872, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,874,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,875,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,876,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,877, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,879,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,880,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,905,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,906, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,908,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,909,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1028,/ Zero sum -> ArithmeticException
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1031,// Zero sum -> MathArithmeticException
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1032,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1033, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1035,"fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1036,} catch (MathArithmeticException ex) {}
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1035,/ Infinite elements -> ArithmeticException
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1038,// Infinite elements -> MathArithmeticException
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1039,"ail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1040, catch (ArithmeticException ex) {}
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1042,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1043,} catch (MathIllegalArgumentException ex) {}
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1042,/ Infinite target -> IllegalArgumentException
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1045,// Infinite target -> MathIllegalArgumentException
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1045,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1046, catch (IllegalArgumentException ex) {}
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1048,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1049,} catch (MathIllegalArgumentException ex) {}
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1048,/ NaN target -> IllegalArgumentException
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1051,// NaN target -> MathIllegalArgumentException
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1051,"ail(""expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1052, catch (IllegalArgumentException ex) {}
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1054,"fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1055,} catch (MathIllegalArgumentException ex) {}
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1136, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1139,} catch (MathRuntimeException ex) { // XXX Loosing semantics?
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1150, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1153,} catch (MathRuntimeException ex) { // XXX Loosing semantics?
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1235, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1238,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1249, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1252,} catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1318,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1319, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1321,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1322,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1323,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1324, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1326,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1327,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1332,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1333, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1335,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1336,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1356,"ail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1357, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1359,"fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1360,} catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1369,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1370, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1372,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1373,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1378,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1379, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1381,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1382,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1387,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1388, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1390,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1391,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1396,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1397, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1399,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1400,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1406,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1407, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1409,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1410,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1415,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1416, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1418,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1419,} catch (MathIllegalArgumentException e) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1424,"ail(""Expecting IllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1425, catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1427,"fail(""Expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1428,} catch (MathIllegalArgumentException e) {
