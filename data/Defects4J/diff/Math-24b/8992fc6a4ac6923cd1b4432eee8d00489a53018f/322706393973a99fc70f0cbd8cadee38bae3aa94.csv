is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,18,import java.io.Serializable;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,20,import java.util.ArrayList;
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,33, @version $Revision: 1.2 $ $Date: 2004/04/24 21:43:26 $
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,35,* @version $Revision: 1.1 $ $Date: 2004/06/01 21:28:06 $
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,35,ublic class BeanListUnivariateImpl extends ListUnivariateImpl {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,37,public class BeanListUnivariateImpl extends ListUnivariateImpl implements Serializable {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,39,/** Serializable version identifier */
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,40,static final long serialVersionUID = -6428201899045406285L;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,48,* No argument Constructor
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,50,public BeanListUnivariateImpl(){
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,51,this(new ArrayList());
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,25,import org.apache.commons.math.TestUtils;
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,26,mport org.apache.commons.math.beans.VitalStats;
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,27,mport org.apache.commons.math.beans.Patient;
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,32, @version $Revision: 1.2 $ $Date: 2004/04/24 21:43:26 $
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,31,* @version $Revision: 1.1 $ $Date: 2004/06/01 21:28:06 $
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,36,private double one = 1;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,37,private float two = 2;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,38,private int three = 3;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,39,private double mean = 2;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,40,private double sumSq = 18;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,41,private double sum = 8;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,42,private double var = 0.666666666666666666667;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,43,private double std = Math.sqrt(var);
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,44,private double n = 4;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,45,private double min = 1;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,46,private double max = 3;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,47,private double skewness = 0;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,48,private double kurtosis = 0.5;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,49,private double tolerance = 10E-15;
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,38,rivate double tolerance = Double.MIN_VALUE;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,139,/** test stats */
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,140,public void testSerialization() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,142,"double[] values = {35d, 23d, 42d};"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,144,"DescriptiveStatistics u = new BeanListUnivariateImpl( patientList, ""age"" );"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,145,"assertEquals(""total count"",3,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,146,"assertEquals(""mean"", StatUtils.mean(values), u.getMean(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,147,"assertEquals(""min"", StatUtils.min(values), u.getMin(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,148,"assertEquals(""max"", StatUtils.max(values), u.getMax(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,149,"assertEquals(""var"", StatUtils.variance(values), u.getVariance(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,152,DescriptiveStatistics u2 = (DescriptiveStatistics)TestUtils.serializeAndRecover(u);
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,153,"assertEquals(""total count"",3,u2.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,154,"assertEquals(""mean"", StatUtils.mean(values), u2.getMean(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,155,"assertEquals(""min"", StatUtils.min(values), u2.getMin(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,156,"assertEquals(""max"", StatUtils.max(values), u2.getMax(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,157,"assertEquals(""var"", StatUtils.variance(values), u2.getVariance(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,159,u.clear();
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,160,"assertEquals(""total count"",0,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,162,u2.clear();
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,163,"assertEquals(""total count"",0,u2.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,167,public class VitalStats {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,169,private Double heartrate;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,170,private Double temperature;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,172,public VitalStats() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,175,"public VitalStats(Double heartrate, Double temperature) {"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,176,setHeartRate( heartrate );
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,177,setTemperature( temperature );
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,180,public Double getHeartRate() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,181,return heartrate;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,184,public void setHeartRate(Double heartrate) {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,185,this.heartrate = heartrate;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,188,public Double getTemperature() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,189,return temperature;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,192,public void setTemperature(Double temperature) {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,193,this.temperature = temperature;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,197,public class Patient {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,199,private VitalStats vitalStats;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,200,private Integer age;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,202,public Patient() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,205,"public Patient(VitalStats vitalStats, Integer age) {"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,206,setVitalStats( vitalStats );
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,207,setAge( age );
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,210,public VitalStats getVitalStats() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,211,return( vitalStats );
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,214,public void setVitalStats(VitalStats vitalStats) {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,215,this.vitalStats = vitalStats;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,218,public Integer getAge() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,219,return age;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,222,public void setAge(Integer age) {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,223,this.age = age;
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,18,import java.io.Serializable;
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,19,import java.util.ArrayList;
False,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,22,mport org.apache.commons.math.stat.univariate.AbstractDescriptiveStatistics;
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,24,import org.apache.commons.math.stat.univariate.DescriptiveStatistics;
False,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,27, @version $Revision: 1.3 $ $Date: 2004/05/23 00:33:41 $
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,29,* @version $Revision: 1.4 $ $Date: 2004/06/01 21:28:06 $
False,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,29,ublic class ListUnivariateImpl extends AbstractDescriptiveStatistics {
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,31,public class ListUnivariateImpl extends DescriptiveStatistics implements Serializable {
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,33,/** Serializable version identifier */
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,34,static final long serialVersionUID = -8837442489133392138L;
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,49,* No argument Constructor
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,51,public ListUnivariateImpl(){
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,52,this(new ArrayList());
False,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,199,ublic int getWindowSize() {
False,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,200,eturn windowSize;
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,211,public int getWindowSize() {
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,212,return windowSize;
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,21,import org.apache.commons.math.TestUtils;
False,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,28, @version $Revision: 1.2 $ $Date: 2004/05/23 00:56:15 $
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,30,* @version $Revision: 1.3 $ $Date: 2004/06/01 21:28:06 $
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,141,/** test stats */
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,142,public void testSerialization() {
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,144,DescriptiveStatistics u = null;
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,146,try {
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,147,u = DescriptiveStatistics.newInstance(ListUnivariateImpl.class);
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,148,} catch (InstantiationException e) {
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,149,fail(e.getMessage());
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,150,} catch (IllegalAccessException e) {
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,151,fail(e.getMessage());
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,154,"assertEquals(""total count"",0,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,155,u.addValue(one);
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,156,u.addValue(two);
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,158,DescriptiveStatistics u2 = (DescriptiveStatistics)TestUtils.serializeAndRecover(u);
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,160,u2.addValue(two);
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,161,u2.addValue(three);
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,163,"assertEquals(""N"",n,u2.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,164,"assertEquals(""sum"",sum,u2.getSum(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,165,"assertEquals(""sumsq"",sumSq,u2.getSumsq(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,166,"assertEquals(""var"",var,u2.getVariance(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,167,"assertEquals(""std"",std,u2.getStandardDeviation(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,168,"assertEquals(""mean"",mean,u2.getMean(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,169,"assertEquals(""min"",min,u2.getMin(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,170,"assertEquals(""max"",max,u2.getMax(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,172,u2.clear();
True,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImplTest.java,173,"assertEquals(""total count"",0,u2.getN(),tolerance);"
