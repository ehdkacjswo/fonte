is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,18,ackage org.apache.commons.math.ode;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,18,package org.apache.commons.math.ode.jacobians;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,20,import java.io.IOException;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,21,import java.io.ObjectInput;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,22,import java.io.ObjectOutput;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,24,import java.util.ArrayList;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,25,import java.util.Collection;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,28,import org.apache.commons.math.ode.DerivativeException;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,29,import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,30,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,31,import org.apache.commons.math.ode.IntegratorException;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,32,import org.apache.commons.math.ode.sampling.StepHandler;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,33,import org.apache.commons.math.ode.sampling.StepInterpolator;
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,32, @see ParameterizedFirstOrderDifferentialEquations
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,33, @see ParameterizedFirstOrderDifferentialEquationsWithPartials
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,43,* @see ParameterizedODE
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,44,* @see ParameterizedODEWithJacobians
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,37,ublic class EnhancedFirstOrderIntegrator {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,48,public class FirstOrderIntegratorWithJacobians {
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,43,rivate final ParameterizedFirstOrderDifferentialEquationsWithPartials ode;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,54,private final ParameterizedODEWithJacobians ode;
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,49, ParameterizedFirstOrderDifferentialEquations#getParametersDimension()
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,60,* ParameterizedODE#getParametersDimension()
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,56, ParameterizedFirstOrderDifferentialEquationsWithPartials)
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,67,* ParameterizedODEWithJacobians)
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,58,"ublic EnhancedFirstOrderIntegrator(final FirstOrderIntegrator integrator,"
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,59,"inal ParameterizedFirstOrderDifferentialEquations ode,"
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,60,"inal double[] p, final double[] hY, final double[] hP) {"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,69,"public FirstOrderIntegratorWithJacobians(final FirstOrderIntegrator integrator,"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,70,"final ParameterizedODE ode,"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,71,"final double[] p, final double[] hY, final double[] hP) {"
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,72," ParameterizedFirstOrderDifferentialEquations, double[], double[], double[])"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,83,"* ParameterizedODE, double[], double[], double[])"
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,74,"ublic EnhancedFirstOrderIntegrator(final FirstOrderIntegrator integrator,"
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,75,inal ParameterizedFirstOrderDifferentialEquationsWithPartials ode) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,85,"public FirstOrderIntegratorWithJacobians(final FirstOrderIntegrator integrator,"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,86,final ParameterizedODEWithJacobians ode) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,91,/** Add a step handler to this integrator.
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,92,* <p>The handler will be called by the integrator for each accepted
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,93,* step.</p>
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,94,* @param handler handler for the accepted steps
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,95,* @see #getStepHandlers()
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,96,* @see #clearStepHandlers()
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,98,public void addStepHandler(StepHandlerWithJacobians handler) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,99,integrator.addStepHandler(new StepHandlerWrapper(handler));
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,102,/** Get all the step handlers that have been added to the integrator.
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,103,* @return an unmodifiable collection of the added events handlers
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,104,* @see #addStepHandler(StepHandlerWithJacobians)
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,105,* @see #clearStepHandlers()
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,107,public Collection<StepHandlerWithJacobians> getStepHandlers() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,108,final Collection<StepHandlerWithJacobians> handlers =
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,109,new ArrayList<StepHandlerWithJacobians>();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,110,for (final StepHandler handler : integrator.getStepHandlers()) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,111,if (handler instanceof StepHandlerWrapper) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,112,handlers.add(((StepHandlerWrapper) handler).getHandler());
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,115,return handlers;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,118,/** Remove all the step handlers that have been added to the integrator.
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,119,* @see #addStepHandler(StepHandlerWithJacobians)
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,120,* @see #getStepHandlers()
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,122,public void clearStepHandlers() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,124,// preserve the handlers we did not add ourselves
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,125,final Collection<StepHandler> otherHandlers = new ArrayList<StepHandler>();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,126,for (final StepHandler handler : integrator.getStepHandlers()) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,127,if (!(handler instanceof StepHandlerWrapper)) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,128,otherHandlers.add(handler);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,132,// clear all handlers
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,133,integrator.clearStepHandlers();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,135,// put back the preserved handlers
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,136,for (final StepHandler handler : otherHandlers) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,137,integrator.addStepHandler(handler);
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,240,mplements ParameterizedFirstOrderDifferentialEquationsWithPartials {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,302,implements ParameterizedODEWithJacobians {
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,243,rivate final ParameterizedFirstOrderDifferentialEquations ode;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,305,private final ParameterizedODE ode;
False,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,263,"ublic FiniteDifferencesWrapper(final ParameterizedFirstOrderDifferentialEquations ode,"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,325,"public FiniteDifferencesWrapper(final ParameterizedODE ode,"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,387,/** Wrapper for step handlers. */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,388,private class StepHandlerWrapper implements StepHandler {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,390,/** Underlying step handler with jacobians. */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,391,private final StepHandlerWithJacobians handler;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,393,/** Simple constructor.
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,394,* @param handler underlying step handler with jacobians
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,396,public StepHandlerWrapper(final StepHandlerWithJacobians handler) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,397,this.handler = handler;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,400,/** Get the underlying step handler with jacobians.
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,401,* @return underlying step handler with jacobians
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,403,public StepHandlerWithJacobians getHandler() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,404,return handler;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,407,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,408,"public void handleStep(StepInterpolator interpolator, boolean isLast)"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,409,throws DerivativeException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,410,"handler.handleStep(new StepInterpolatorWrapper(interpolator,"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,411,"ode.getDimension(),"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,412,"ode.getParametersDimension()),"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,413,isLast);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,416,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,417,public boolean requiresDenseOutput() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,418,return handler.requiresDenseOutput();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,421,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,422,public void reset() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,423,handler.reset();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,428,/** Wrapper for step interpolators. */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,429,private static class StepInterpolatorWrapper
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,430,implements StepInterpolatorWithJacobians {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,432,/** Wrapped interpolator. */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,433,private StepInterpolator interpolator;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,435,/** State array. */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,436,private double[] y;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,438,/** State derivative array. */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,439,private double[] yDot;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,441,/** Jacobian with respect to initial state dy/dy0. */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,442,private double[][] dydy0;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,444,/** Jacobian with respect to parameters dy/dp. */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,445,private double[][] dydp;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,447,/** Simple constructor.
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,448,* @param interpolator wrapped interpolator
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,449,* @param n dimension of the original ODE
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,450,* @param k number of parameters
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,452,"public StepInterpolatorWrapper(final StepInterpolator interpolator,"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,453,"final int n, final int k) {"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,454,this.interpolator = interpolator;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,455,y     = new double[n];
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,456,yDot  = new double[n];
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,457,dydy0 = new double[n][n];
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,458,dydp  = new double[n][k];
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,461,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,462,public void setInterpolatedTime(double time) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,463,interpolator.setInterpolatedTime(time);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,466,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,467,public boolean isForward() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,468,return interpolator.isForward();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,471,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,472,public double getPreviousTime() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,473,return interpolator.getPreviousTime();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,476,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,477,public double getInterpolatedTime() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,478,return interpolator.getInterpolatedTime();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,481,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,482,public double[] getInterpolatedY() throws DerivativeException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,483,double[] extendedState = interpolator.getInterpolatedState();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,484,"System.arraycopy(extendedState, 0, y, 0, y.length);"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,485,return y;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,488,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,489,public double[][] getInterpolatedDyDy0() throws DerivativeException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,490,double[] extendedState = interpolator.getInterpolatedState();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,491,final int n = y.length;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,492,int start = n;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,493,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,494,"System.arraycopy(extendedState, start, dydy0[i], 0, n);"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,495,start += n;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,497,return dydy0;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,500,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,501,public double[][] getInterpolatedDyDp() throws DerivativeException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,502,double[] extendedState = interpolator.getInterpolatedState();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,503,final int n = y.length;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,504,final int k = dydp[0].length;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,505,int start = n * (n + 1);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,506,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,507,"System.arraycopy(extendedState, start, dydp[i], 0, k);"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,508,start += k;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,510,return dydp;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,513,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,514,public double[] getInterpolatedYDot() throws DerivativeException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,515,double[] extendedDerivatives = interpolator.getInterpolatedDerivatives();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,516,"System.arraycopy(extendedDerivatives, 0, yDot, 0, yDot.length);"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,517,return yDot;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,520,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,521,public double[][] getInterpolatedDyDy0Dot() throws DerivativeException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,522,double[] extendedDerivatives = interpolator.getInterpolatedDerivatives();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,523,final int n = y.length;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,524,int start = n;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,525,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,526,"System.arraycopy(extendedDerivatives, start, dydy0[i], 0, n);"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,527,start += n;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,529,return dydy0;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,532,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,533,public double[][] getInterpolatedDyDpDot() throws DerivativeException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,534,double[] extendedDerivatives = interpolator.getInterpolatedDerivatives();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,535,final int n = y.length;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,536,final int k = dydp[0].length;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,537,int start = n * (n + 1);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,538,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,539,"System.arraycopy(extendedDerivatives, start, dydp[i], 0, k);"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,540,start += k;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,542,return dydp;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,545,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,546,public double getCurrentTime() {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,547,return interpolator.getCurrentTime();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,550,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,551,public StepInterpolatorWithJacobians copy() throws DerivativeException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,552,"return new StepInterpolatorWrapper(interpolator.copy(),"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,553,"y.length, dydy0[0].length);"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,556,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,557,public void writeExternal(ObjectOutput out) throws IOException {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,558,out.writeObject(interpolator);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,559,final int n = y.length;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,560,final int k = dydp[0].length;
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,561,out.writeInt(n);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,562,out.writeInt(k);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,563,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,564,out.writeDouble(y[i]);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,566,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,567,out.writeDouble(yDot[i]);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,569,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,570,for (int j = 0; j < n; ++j) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,571,out.writeDouble(dydy0[i][j]);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,574,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,575,for (int j = 0; j < k; ++j) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,576,out.writeDouble(dydp[i][j]);
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,581,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,582,"public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {"
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,583,interpolator = (StepInterpolator) in.readObject();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,584,final int n = in.readInt();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,585,final int k = in.readInt();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,586,y = new double[n];
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,587,dydy0 = new double[n][n];
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,588,dydp = new double[n][k];
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,589,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,590,y[i] = in.readDouble();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,592,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,593,yDot[i] = in.readDouble();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,595,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,596,for (int j = 0; j < n; ++j) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,597,dydy0[i][j] = in.readDouble();
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,600,for (int i = 0; i < n; ++i) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,601,for (int j = 0; j < k; ++j) {
True,src/main/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,602,dydp[i][j] = in.readDouble();
False,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODE.java,18,ackage org.apache.commons.math.ode;
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODE.java,18,package org.apache.commons.math.ode.jacobians;
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODE.java,20,import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
False,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODE.java,24, @see EnhancedFirstOrderIntegrator
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODE.java,26,* @see FirstOrderIntegratorWithJacobians
False,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODE.java,30,ublic interface ParameterizedFirstOrderDifferentialEquations
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODE.java,32,public interface ParameterizedODE
False,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,18,ackage org.apache.commons.math.ode;
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,18,package org.apache.commons.math.ode.jacobians;
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,20,import org.apache.commons.math.ode.DerivativeException;
False,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,21,** This interface represents {@link ParameterizedFirstOrderDifferentialEquations
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,23,/** This interface represents {@link ParameterizedODE
False,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,24, @see EnhancedFirstOrderIntegrator
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,26,* @see FirstOrderIntegratorWithJacobians
False,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,30,ublic interface ParameterizedFirstOrderDifferentialEquationsWithPartials
False,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,31,xtends ParameterizedFirstOrderDifferentialEquations {
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,32,public interface ParameterizedODEWithJacobians
True,src/main/java/org/apache/commons/math/ode/ParameterizedFirstOrderDifferentialEquationsWithPartials.java,src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODEWithJacobians.java,33,extends ParameterizedODE {
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,18,package org.apache.commons.math.ode.jacobians;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,20,import org.apache.commons.math.ode.DerivativeException;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,23,* This interface represents a handler that should be called after
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,24,* each successful step.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,26,* <p>The ODE integrators compute the evolution of the state vector at
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,27,* some grid points that depend on their own internal algorithm. Once
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,28,* they have found a new grid point (possibly after having computed
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,29,"* several evaluation of the derivative at intermediate points), they"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,30,* provide it to objects implementing this interface. These objects
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,31,* typically either ignore the intermediate steps and wait for the
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,32,"* last one, store the points in an ephemeris, or forward them to"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,33,* specialized processing or output methods.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,35,* @see FirstOrderIntegratorWithJacobians
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,36,* @see StepInterpolatorWithJacobians
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,37,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,38,* @since 2.1
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,41,public interface StepHandlerWithJacobians {
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,43,/** Determines whether this handler needs dense output.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,44,* <p>This method allows the integrator to avoid performing extra
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,45,* computation if the handler does not need dense output. If this
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,46,"* method returns false, the integrator will call the {@link"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,47,* #handleStep} method with a {@link DummyStepInterpolator} rather
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,48,* than a custom interpolator.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,49,* @return true if the handler needs dense output
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,51,boolean requiresDenseOutput();
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,53,/** Reset the step handler.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,54,* Initialize the internal data as required before the first step is
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,55,* handled.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,57,void reset();
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,60,* Handle the last accepted step
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,61,* @param interpolator interpolator for the last accepted step. For
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,62,"* efficiency purposes, the various integrators reuse the same"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,63,"* object on each call, so if the instance wants to keep it across"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,64,* all calls (for example to provide at the end of the integration a
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,65,"* continuous model valid throughout the integration range, as the"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,66,* {@link org.apache.commons.math.ode.ContinuousOutputModel
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,67,"* ContinuousOutputModel} class does), it should build a local copy"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,68,* using the clone method of the interpolator and store this copy.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,69,* Keeping only a reference to the interpolator and reusing it will
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,70,* result in unpredictable behavior (potentially crashing the application).
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,71,* @param isLast true if the step is the last one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,72,* @throws DerivativeException this exception is propagated to the
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,73,* caller if the underlying user function triggers one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java,75,"void handleStep(StepInterpolatorWithJacobians interpolator, boolean isLast) throws DerivativeException;"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,18,package org.apache.commons.math.ode.jacobians;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,20,import java.io.Externalizable;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,22,import org.apache.commons.math.ode.DerivativeException;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,24,/** This interface represents an interpolator over the last step
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,25,* during an ODE integration.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,27,* <p>The various ODE integrators provide objects implementing this
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,28,* interface to the step handlers. These objects are often custom
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,29,* objects tightly bound to the integrator internal algorithms. The
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,30,* handlers can use these objects to retrieve the state vector at
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,31,* intermediate times between the previous and the current grid points
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,32,* (this feature is often called dense output).</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,33,* <p>One important thing to note is that the step handlers may be so
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,34,* tightly bound to the integrators that they often share some internal
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,35,* state arrays. This imply that one should <em>never</em> use a direct
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,36,"* reference to a step interpolator outside of the step handler, either"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,37,"* for future use or for use in another thread. If such a need arise, the"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,38,* step interpolator <em>must</em> be copied using the dedicated
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,39,* {@link #copy()} method.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,40,* </p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,42,* @see FirstOrderIntegratorWithJacobians
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,43,* @see StepHandlerWithJacobians
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,44,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,45,* @since 2.1
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,48,public interface StepInterpolatorWithJacobians extends Externalizable {
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,51,* Get the previous grid point time.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,52,* @return previous grid point time
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,54,double getPreviousTime();
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,57,* Get the current grid point time.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,58,* @return current grid point time
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,60,double getCurrentTime();
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,63,* Get the time of the interpolated point.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,64,"* If {@link #setInterpolatedTime} has not been called, it returns"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,65,* the current grid point time.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,66,* @return interpolation point time
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,68,double getInterpolatedTime();
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,71,* Set the time of the interpolated point.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,72,"* <p>Setting the time outside of the current step is now allowed, but"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,73,* should be used with care since the accuracy of the interpolator will
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,74,* probably be very poor far from this step. This allowance has been
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,75,* added to simplify implementation of search algorithms near the
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,76,* step endpoints.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,77,* <p>Setting the time changes the instance internal state. If a
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,78,"* specific state must be preserved, a copy of the instance must be"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,79,* created using {@link #copy()}.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,80,* @param time time of the interpolated point
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,82,void setInterpolatedTime(double time);
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,85,* Get the state vector of the interpolated point.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,86,"* <p>The returned vector is a reference to a reused array, so"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,87,* it should not be modified and it should be copied if it needs
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,88,* to be preserved across several calls.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,89,* @return state vector at time {@link #getInterpolatedTime}
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,90,* @see #getInterpolatedYDot()
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,91,* @throws DerivativeException if this call induces an automatic
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,92,* step finalization that throws one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,94,double[] getInterpolatedY() throws DerivativeException;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,97,* Get the partial derivatives of the state vector with respect to
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,98,* the initial state of the interpolated point.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,99,"* <p>The returned vector is a reference to a reused array, so"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,100,* it should not be modified and it should be copied if it needs
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,101,* to be preserved across several calls.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,102,* @return partial derivatives of the state vector with respect to
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,103,* the initial state at time {@link #getInterpolatedTime}
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,104,* @see #getInterpolatedY()
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,105,* @throws DerivativeException if this call induces an automatic
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,106,* step finalization that throws one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,108,double[][] getInterpolatedDyDy0() throws DerivativeException;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,111,* Get the partial derivatives of the state vector with respect to
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,112,* the ODE parameters of the interpolated point.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,113,"* <p>The returned vector is a reference to a reused array, so"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,114,* it should not be modified and it should be copied if it needs
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,115,* to be preserved across several calls.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,116,* @return partial derivatives of the state vector with respect to
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,117,* the ODE parameters at time {@link #getInterpolatedTime}
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,118,* @see #getInterpolatedY()
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,119,* @throws DerivativeException if this call induces an automatic
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,120,* step finalization that throws one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,122,double[][] getInterpolatedDyDp() throws DerivativeException;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,125,* Get the time derivatives of the state vector of the interpolated point.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,126,"* <p>The returned vector is a reference to a reused array, so"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,127,* it should not be modified and it should be copied if it needs
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,128,* to be preserved across several calls.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,129,* @return derivatives of the state vector at time {@link #getInterpolatedTime}
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,130,* @see #getInterpolatedY()
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,131,* @throws DerivativeException if this call induces an automatic
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,132,* step finalization that throws one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,134,double[] getInterpolatedYDot() throws DerivativeException;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,137,* Get the time derivatives of the jacobian of the state vector
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,138,* with respect to the initial state of the interpolated point.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,139,"* <p>The returned vector is a reference to a reused array, so"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,140,* it should not be modified and it should be copied if it needs
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,141,* to be preserved across several calls.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,142,* @return time derivatives of the jacobian of the state vector
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,143,* with respect to the initial state at time {@link #getInterpolatedTime}
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,144,* @see #getInterpolatedY()
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,145,* @throws DerivativeException if this call induces an automatic
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,146,* step finalization that throws one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,148,double[][] getInterpolatedDyDy0Dot() throws DerivativeException;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,151,* Get the time derivatives of the jacobian of the state vector
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,152,* with respect to the ODE parameters of the interpolated point.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,153,"* <p>The returned vector is a reference to a reused array, so"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,154,* it should not be modified and it should be copied if it needs
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,155,* to be preserved across several calls.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,156,* @return time derivatives of the jacobian of the state vector
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,157,* with respect to the ODE parameters at time {@link #getInterpolatedTime}
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,158,* @see #getInterpolatedY()
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,159,* @throws DerivativeException if this call induces an automatic
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,160,* step finalization that throws one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,162,double[][] getInterpolatedDyDpDot() throws DerivativeException;
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,164,/** Check if the natural integration direction is forward.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,165,* <p>This method provides the integration direction as specified by
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,166,"* the integrator itself, it avoid some nasty problems in"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,167,* degenerated cases like null steps due to cancellation at step
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,168,"* initialization, step control or discrete events"
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,169,* triggering.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,170,* @return true if the integration variable (time) increases during
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,171,* integration
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,173,boolean isForward();
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,175,/** Copy the instance.
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,176,* <p>The copied instance is guaranteed to be independent from the
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,177,* original one. Both can be used with different settings for
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,178,* interpolated time without any side effect.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,179,"* @return a deep copy of the instance, which can be used independently."
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,180,* @throws DerivativeException if this call induces an automatic
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,181,* step finalization that throws one
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,182,* @see #setInterpolatedTime(double)
True,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java,184,StepInterpolatorWithJacobians copy() throws DerivativeException;
False,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,18,ackage org.apache.commons.math.ode;
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,18,package org.apache.commons.math.ode.jacobians;
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,20,import org.apache.commons.math.ode.DerivativeException;
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,21,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,22,import org.apache.commons.math.ode.IntegratorException;
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,23,import org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians;
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,24,import org.apache.commons.math.ode.jacobians.ParameterizedODEWithJacobians;
False,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,25,ublic class EnhancedFirstOrderIntegratorTest {
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,30,public class FirstOrderIntegratorWithJacobiansTest {
False,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,94,nhancedFirstOrderIntegrator extInt =
False,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,95,"ew EnhancedFirstOrderIntegrator(integ, brusselator, new double[] { b },"
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,99,FirstOrderIntegratorWithJacobians extInt =
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,100,"new FirstOrderIntegratorWithJacobians(integ, brusselator, new double[] { b },"
False,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,120,nhancedFirstOrderIntegrator extInt =
False,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,121,"ew EnhancedFirstOrderIntegrator(integ, brusselator);"
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,125,FirstOrderIntegratorWithJacobians extInt =
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,126,"new FirstOrderIntegratorWithJacobians(integ, brusselator);"
False,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,132,rivate static class Brusselator implements ParameterizedFirstOrderDifferentialEquationsWithPartials {
True,src/test/java/org/apache/commons/math/ode/EnhancedFirstOrderIntegratorTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,137,private static class Brusselator implements ParameterizedODEWithJacobians {
