is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java,569,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java,570,Override
False,src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java,571,ublic RealVector projection(RealVector v) {
False,src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java,572,eturn v.mapMultiply(dotProduct(v) / v.dotProduct(v));
False,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,589,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,590,Override
False,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,591,ublic RealVector projection(RealVector v) {
False,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,592,heckVectorDimensions(v.getDimension());
False,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,593,eturn v.mapMultiply(dotProduct(v) / v.dotProduct(v));
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,674,* @throws MathArithmeticException if {@code this} or {@code v} is the null
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,675,* vector
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,677,ublic abstract RealVector projection(RealVector v);
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,679,public RealVector projection(final RealVector v) {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,680,final double norm2 = v.dotProduct(v);
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,681,if (norm2 == 0.0) {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,682,throw new MathArithmeticException(LocalizedFormats.ZERO_NORM);
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,684,return v.mapMultiply(dotProduct(v) / v.dotProduct(v));
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,1372,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,1373,Override
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,1374,ublic RealVector projection(RealVector w) {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,1375,eturn v.projection(w);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,262,Override
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,263,ublic RealVector projection(RealVector v) {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,264,hrow unsupported();
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,967,private void doTestProjection(final boolean mixed) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,968,final double x = getPreferredEntryValue();
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,969,final double[] data1 = {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,970,"x, 1d, x, x, 2d, x, x, x, 3d, x, x, x, x"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,972,final double[] data2 = {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,973,"5d, -6d, 7d, x, x, -8d, -9d, 10d, 11d, x, 12d, 13d, -15d"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,975,double dotProduct = 0d;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,976,double norm2 = 0d;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,977,for (int i = 0; i < data1.length; i++){
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,978,dotProduct += data1[i] * data2[i];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,979,norm2 += data2[i] * data2[i];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,981,final double s = dotProduct / norm2;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,982,final double[] expected = new double[data1.length];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,983,for (int i = 0; i < data2.length; i++) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,984,expected[i] = s * data2[i];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,986,final RealVector v1 = create(data1);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,987,final RealVector v2;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,988,if (mixed) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,989,v2 = createAlien(data2);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,990,} else {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,991,v2 = create(data2);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,993,final RealVector actual = v1.projection(v2);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,994,"TestUtils.assertEquals("""", expected, actual, 0d);"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,997,@Test
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,998,public void testProjectionSameType() {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,999,doTestProjection(false);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1002,@Test
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1003,public void testProjectionMixedTypes() {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1004,doTestProjection(true);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1007,@Test(expected = MathArithmeticException.class)
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1008,public void testProjectionNullVector() {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1009,create(new double[4]).projection(create(new double[4]));
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1012,@Test(expected = DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1013,public void testProjectionDimensionMismatch() {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1014,final RealVector v1 = create(new double[4]);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1015,final RealVector v2 = create(new double[5]);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1016,v2.set(1.0);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,1017,v1.projection(v2);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,111,Override
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,112,ublic RealVector projection(RealVector v) {
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,113,hrow unsupported();
False,src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java,188,Override
False,src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java,189,ublic RealVector projection(RealVector v) {
False,src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java,190,hrow unsupported();
