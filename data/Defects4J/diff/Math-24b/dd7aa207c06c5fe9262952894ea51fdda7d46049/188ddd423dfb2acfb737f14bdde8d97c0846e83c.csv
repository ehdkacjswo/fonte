is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,19,import org.apache.commons.math.exception.MaxCountExceededException;
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,22,"* Utility that increments a counter until a maximum is reached, at which"
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,23,* point it will throw an exception.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,28,public class Incrementor {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,30,* Upper limit for the counter.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,32,private int maximalCount;
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,34,* Current count.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,36,private int count;
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,39,* Set the upper limit for the counter.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,41,* @param count Upper limit of the counter.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,43,public void setMaximalCount(int count) {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,44,maximalCount = count;
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,48,* Get the upper limit of the counter.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,50,* @return the counter upper limit.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,52,public int getMaximalCount() {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,53,return maximalCount;
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,57,* Get the current count.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,59,* @return the current count.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,61,public int getCount() {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,62,return count;
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,66,* Perform multiple increments.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,67,* See the other {@link #incrementCount() incrementCount} method).
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,69,* @param value Number of increments.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,70,* @throws MaxCountExceededException at counter exhaustion.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,72,public void incrementCount(int value) {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,73,for (int i = 0; i < value; i++) {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,74,incrementCount();
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,79,* Add one to the current iteration count.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,81,* @throws MaxCountExceededException at counter exhaustion.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,83,public void incrementCount() {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,84,if (++count > maximalCount) {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,85,throw new MaxCountExceededException(maximalCount);
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,90,* Reset the counter to 0.
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,92,public void resetCount() {
True,src/main/java/org/apache/commons/math/util/Incrementor.java,src/main/java/org/apache/commons/math/util/Incrementor.java,93,count = 0;
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,3,* contributor license agreements. See the NOTICE file distributed with this
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,4,* work for additional information regarding copyright ownership. The ASF
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,5,"* licenses this file to You under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,6,"* ""License""); you may not use this file except in compliance with the License."
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,7,* You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,9,"* or agreed to in writing, software distributed under the License is"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,10,"* distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,11,"* KIND, either express or implied. See the License for the specific language"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,12,* governing permissions and limitations under the License.
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,14,package org.apache.commons.math.util;
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,16,import org.apache.commons.math.exception.MaxCountExceededException;
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,17,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,18,import org.junit.Test;
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,21,* Test for {@link Incrementor}.
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,23,public class IncrementorTest {
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,25,@Test
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,26,public void testAccessor() {
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,27,final Incrementor i = new Incrementor();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,29,i.setMaximalCount(10);
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,30,"Assert.assertEquals(10, i.getMaximalCount());"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,31,"Assert.assertEquals(0, i.getCount());"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,34,@Test
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,35,public void testBelowMaxCount() {
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,36,final Incrementor i = new Incrementor();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,38,i.setMaximalCount(3);
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,39,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,40,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,41,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,43,"Assert.assertEquals(3, i.getCount());"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,46,@Test(expected = MaxCountExceededException.class)
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,47,public void testAboveMaxCount() {
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,48,final Incrementor i = new Incrementor();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,50,i.setMaximalCount(3);
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,51,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,52,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,53,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,54,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,57,@Test
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,58,public void testReset() {
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,59,final Incrementor i = new Incrementor();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,61,i.setMaximalCount(3);
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,62,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,63,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,64,i.incrementCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,65,"Assert.assertEquals(3, i.getCount());"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,66,i.resetCount();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,67,"Assert.assertEquals(0, i.getCount());"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,70,@Test
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,71,public void testBulkIncrement() {
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,72,final Incrementor i = new Incrementor();
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,74,i.setMaximalCount(3);
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,75,i.incrementCount(2);
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,76,"Assert.assertEquals(2, i.getCount());"
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,77,i.incrementCount(1);
True,src/test/java/org/apache/commons/math/util/IncrementorTest.java,src/test/java/org/apache/commons/math/util/IncrementorTest.java,78,"Assert.assertEquals(3, i.getCount());"
