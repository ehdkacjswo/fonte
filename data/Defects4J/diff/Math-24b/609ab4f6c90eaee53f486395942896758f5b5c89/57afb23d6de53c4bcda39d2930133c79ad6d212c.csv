is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,509,Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,510,ublic void testCombinePreconditionSameType() {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,511,inal double a = 1d;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,512,inal double b = 2d;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,513,"ouble[] aux = new double[] { 3d, 4d, 5d };"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,514,"inal RealVector x = new ArrayRealVector(aux, false);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,515,"ux = new double[] { 6d, 7d };"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,516,"inal RealVector y = new ArrayRealVector(aux, false);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,517,".combine(a, b, y);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,520,Test
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,521,ublic void testCombineSameType() {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,522,inal Random random = new Random(20110726);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,523,inal int dim = 10;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,524,inal double a = (2 * random.nextDouble() - 1);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,525,inal double b = (2 * random.nextDouble() - 1);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,526,inal RealVector x = new ArrayRealVector(dim);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,527,inal RealVector y = new ArrayRealVector(dim);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,528,inal double[] expected = new double[dim];
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,529,or (int i = 0; i < dim; i++) {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,530,inal double xi = 2 * random.nextDouble() - 1;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,531,inal double yi = 2 * random.nextDouble() - 1;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,532,".setEntry(i, xi);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,533,".setEntry(i, yi);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,534,xpected[i] = a * xi + b * yi;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,536,"inal double[] actual = x.combine(a, b, y).toArray();"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,537,or (int i = 0; i < dim; i++) {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,538,inal double delta;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,539,f (expected[i] == 0d) {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,540,elta = Math.ulp(1d);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,541, else {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,542,elta = Math.ulp(expected[i]);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,544,"ssert.assertEquals(""elements ["" + i + ""] differ"","
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,545,"xpected[i],"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,546,"ctual[i],"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,547,elta);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,551,Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,552,ublic void testCombinePreconditionMixedType() {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,553,inal double a = 1d;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,554,inal double b = 2d;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,555,"ouble[] aux = new double[] { 3d, 4d, 5d };"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,556,"inal RealVector x = new ArrayRealVector(aux, false);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,557,"ux = new double[] { 6d, 7d };"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,558,inal RealVector y = new OpenMapRealVector(aux);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,559,".combine(a, b, y);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,562,Test
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,563,ublic void testCombineMixedTypes() {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,564,inal Random random = new Random(20110726);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,565,inal int dim = 10;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,566,inal double a = (2 * random.nextDouble() - 1);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,567,inal double b = (2 * random.nextDouble() - 1);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,568,inal RealVector x = new ArrayRealVector(dim);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,569,"inal RealVector y = new OpenMapRealVector(dim, 0d);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,570,inal double[] expected = new double[dim];
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,571,or (int i = 0; i < dim; i++) {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,572,inal double xi = 2 * random.nextDouble() - 1;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,573,inal double yi = 2 * random.nextDouble() - 1;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,574,".setEntry(i, xi);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,575,".setEntry(i, yi);"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,576,xpected[i] = a * xi + b * yi;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,578,"inal double[] actual = x.combine(a, b, y).toArray();"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,579,or (int i = 0; i < dim; i++) {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,580,inal double delta;
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,581,f (expected[i] == 0d) {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,582,elta = Math.ulp(1d);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,583, else {
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,584,elta = Math.ulp(expected[i]);
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,586,"ssert.assertEquals(""elements ["" + i + ""] differ"","
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,587,"xpected[i],"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,588,"ctual[i],"
False,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java,589,elta);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,20,import java.util.Random;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,836,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,837,public void testCombinePreconditionSameType() {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,838,final double a = 1d;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,839,final double b = 2d;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,840,"double[] aux = new double[] { 3d, 4d, 5d };"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,841,final RealVector x = create(aux);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,842,"aux = new double[] { 6d, 7d };"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,843,final RealVector y = create(aux);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,844,"x.combine(a, b, y);"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,847,@Test
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,848,public void testCombineSameType() {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,849,final Random random = new Random(20110726);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,850,final int dim = 10;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,851,final double a = (2 * random.nextDouble() - 1);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,852,final double b = (2 * random.nextDouble() - 1);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,853,final double[] dataX = new double[dim];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,854,final double[] dataY = new double[dim];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,855,final double[] expected = new double[dim];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,856,for (int i = 0; i < dim; i++) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,857,dataX[i] = 2 * random.nextDouble() - 1;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,858,dataY[i] = 2 * random.nextDouble() - 1;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,859,expected[i] = a * dataX[i] + b * dataY[i];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,861,final RealVector x = create(dataX);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,862,final RealVector y = create(dataY);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,863,"final double[] actual = x.combine(a, b, y).toArray();"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,864,for (int i = 0; i < dim; i++) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,865,final double delta;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,866,if (expected[i] == 0d) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,867,delta = Math.ulp(1d);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,868,} else {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,869,delta = Math.ulp(expected[i]);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,871,"Assert.assertEquals(""elements ["" + i + ""] differ"","
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,872,"expected[i],"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,873,"actual[i],"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,874,delta);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,878,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,879,public void testCombinePreconditionMixedType() {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,880,final double a = 1d;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,881,final double b = 2d;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,882,"double[] aux = new double[] { 3d, 4d, 5d };"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,883,final RealVector x = create(aux);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,884,"aux = new double[] { 6d, 7d };"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,885,final RealVector y = create(aux);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,886,"x.combine(a, b, y);"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,889,@Test
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,890,public void testCombineMixedTypes() {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,891,final Random random = new Random(20110726);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,892,final int dim = 10;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,893,final double a = (2 * random.nextDouble() - 1);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,894,final double b = (2 * random.nextDouble() - 1);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,895,final double[] dataX = new double[dim];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,896,final double[] dataY = new double[dim];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,897,final double[] expected = new double[dim];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,898,for (int i = 0; i < dim; i++) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,899,dataX[i] = 2 * random.nextDouble() - 1;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,900,dataY[i] = 2 * random.nextDouble() - 1;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,901,expected[i] = a * dataX[i] + b * dataY[i];
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,903,final RealVector x = create(dataX);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,904,final RealVector y = createAlien(dataY);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,906,"final double[] actual = x.combine(a, b, y).toArray();"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,907,for (int i = 0; i < dim; i++) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,908,final double delta;
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,909,if (expected[i] == 0d) {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,910,delta = Math.ulp(1d);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,911,} else {
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,912,delta = Math.ulp(expected[i]);
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,914,"Assert.assertEquals(""elements ["" + i + ""] differ"","
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,915,"expected[i],"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,916,"actual[i],"
True,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java,917,delta);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,243,Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,244,ublic void testCombinePrecondition() {
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,245,inal double a = 1d;
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,246,inal double b = 2d;
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,247,"ouble[] aux = new double[] { 3d, 4d, 5d };"
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,248,inal TestVectorImpl x = new TestVectorImpl(aux);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,249,"ux = new double[] { 6d, 7d };"
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,250,inal TestVectorImpl y = new TestVectorImpl(aux);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,251,".combine(a, b, y);"
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,254,Test
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,255,ublic void testCombine() {
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,256,inal Random random = new Random(20110726);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,257,inal int dim = 10;
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,258,inal double a = (2 * random.nextDouble() - 1);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,259,inal double b = (2 * random.nextDouble() - 1);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,260,inal RealVector x = new TestVectorImpl(new double[dim]);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,261,inal RealVector y = new TestVectorImpl(new double[dim]);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,262,inal double[] expected = new double[dim];
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,263,or (int i = 0; i < dim; i++) {
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,264,inal double xi = 2 * random.nextDouble() - 1;
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,265,inal double yi = 2 * random.nextDouble() - 1;
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,266,".setEntry(i, xi);"
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,267,".setEntry(i, yi);"
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,268,xpected[i] = a * xi + b * yi;
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,270,"inal RealVector z = x.combine(a, b, y);"
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,271,ssert.assertTrue(z != x);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,272,inal double[] actual = z.toArray();
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,273,or (int i = 0; i < dim; i++) {
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,274,inal double delta;
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,275,f (expected[i] == 0d) {
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,276,elta = Math.ulp(1d);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,277, else {
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,278,elta = Math.ulp(expected[i]);
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,280,"ssert.assertEquals(""elements ["" + i + ""] differ"", expected[i],"
False,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorTest.java,281,"ctual[i], delta);"
