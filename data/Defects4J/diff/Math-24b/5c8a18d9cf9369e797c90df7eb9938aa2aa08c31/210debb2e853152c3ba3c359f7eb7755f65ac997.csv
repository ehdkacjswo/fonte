is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,2, Copyright 2003-2004 The Apache Software Foundation.
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,14, limitations under the License.
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,17,ackage org.apache.commons.math.stat.inference;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,19,mport java.io.Serializable;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,21,mport org.apache.commons.math.MathException;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,22,mport org.apache.commons.math.distribution.DistributionFactory;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,23,mport org.apache.commons.math.distribution.TDistribution;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,24,mport org.apache.commons.math.distribution.ChiSquaredDistribution;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,25,mport org.apache.commons.math.stat.StatUtils;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,26,mport org.apache.commons.math.stat.univariate.StatisticalSummary;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,29, Implements test statistics defined in the TestStatistic interface.
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,31, @version $Revision: 1.5 $ $Date: 2004/04/27 16:42:34 $
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,33,"ublic class TestStatisticImpl implements TestStatistic, Serializable {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,35,** Serializable version identifier */
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,36,tatic final long serialVersionUID = 3357444126133491679L;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,39, @param observed array of observed frequency counts
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,40, @param expected array of expected frequency counts
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,41, @return chi-square test statistic
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,42, @throws IllegalArgumentException if preconditions are not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,43, or length is less than 2
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,45,"ublic double chiSquare(double[] expected, double[] observed)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,46,hrows IllegalArgumentException {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,47,ouble sumSq = 0.0d;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,48,ouble dev = 0.0d;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,49,f ((expected.length < 2) || (expected.length != observed.length)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,50,"hrow new IllegalArgumentException(""observed, expected array lengths incorrect"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,52,f ((StatUtils.min(expected) <= 0) || (StatUtils.min(observed) < 0)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,53,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,54,"observed counts must be non-negative expected counts must be postive"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,56,or (int i = 0; i < observed.length; i++) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,57,ev = (observed[i] - expected[i]);
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,58,umSq += dev * dev / expected[i];
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,60,eturn sumSq;
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,64, @param observed array of observed frequency counts
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,65, @param expected array of exptected frequency counts
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,66, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,67, @throws IllegalArgumentException if preconditions are not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,68, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,70,"ublic double chiSquareTest(double[] expected, double[] observed)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,71,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,72,hiSquaredDistribution chiSquaredDistribution =
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,73,istributionFactory.newInstance().createChiSquareDistribution((double) expected.length - 1);
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,74,"eturn 1 - chiSquaredDistribution.cumulativeProbability(chiSquare(expected, observed));"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,78, @param observed array of observed frequency counts
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,79, @param expected array of exptected frequency counts
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,80, @param alpha significance level of the test
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,81, @return true iff null hypothesis can be rejected with confidence
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,82, 1 - alpha
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,83, @throws IllegalArgumentException if preconditions are not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,84, @throws MathException if an error occurs performing the test
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,86,"ublic boolean chiSquareTest(double[] expected, double[] observed, double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,87,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,88,f ((alpha <= 0) || (alpha > 0.5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,89,"hrow new IllegalArgumentException(""bad significance level: "" + alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,91,"eturn (chiSquareTest(expected, observed) < alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,95, @param mu comparison constant
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,96, @param observed array of values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,97, @return t statistic
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,98, @throws IllegalArgumentException if input array length is less than 5
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,100,"ublic double t(double mu, double[] observed)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,101,hrows IllegalArgumentException {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,102,f ((observed == null) || (observed.length < 5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,103,"hrow new IllegalArgumentException(""insufficient data for t statistic"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,105,"eturn t(StatUtils.mean(observed), mu, StatUtils.variance(observed), observed.length);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,109, @param mu constant value to compare sample mean against
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,110, @param sample array of sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,111, @param alpha significance level of the test
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,112, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,113, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,114, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,116,"ublic boolean tTest(double mu, double[] sample, double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,117,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,118,f ((alpha <= 0) || (alpha > 0.5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,119,"hrow new IllegalArgumentException(""bad significance level: "" + alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,121,"eturn (tTest(mu, sample) < alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,125, @param sample1 array of sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,126, @param sample2 array of sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,127, @return t-statistic
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,128, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,130,"ublic double t(double[] sample1, double[] sample2)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,131,hrows IllegalArgumentException {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,132,f ((sample1 == null) || (sample2 == null ||
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,133,"ath.min(sample1.length, sample2.length) < 5)) {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,134,"hrow new IllegalArgumentException(""insufficient data for t statistic"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,136,"eturn t(StatUtils.mean(sample1), StatUtils.mean(sample2), StatUtils.variance(sample1),"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,137,"tatUtils.variance(sample2),  (double) sample1.length, (double) sample2.length);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,142, @param sample1 array of sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,143, @param sample2 array of sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,144, @return tTest p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,145, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,146, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,148,"ublic double tTest(double[] sample1, double[] sample2)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,149,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,150,f ((sample1 == null) || (sample2 == null ||
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,151,"ath.min(sample1.length, sample2.length) < 5)) {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,152,"hrow new IllegalArgumentException(""insufficient data"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,154,"eturn tTest(StatUtils.mean(sample1), StatUtils.mean(sample2), StatUtils.variance(sample1),"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,155,"tatUtils.variance(sample2), (double) sample1.length, (double) sample2.length);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,159, @param sample1 array of sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,160, @param sample2 array of sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,161, @param alpha significance level
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,162, @return true if the null hypothesis can be rejected with
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,163,     confidence 1 - alpha
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,164, @throws IllegalArgumentException if the preconditions are not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,165, @throws MathException if an error occurs performing the test
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,167,"ublic boolean tTest(double[] sample1, double[] sample2, double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,168,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,169,f ((alpha <= 0) || (alpha > 0.5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,170,"hrow new IllegalArgumentException(""bad significance level: "" + alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,172,"eturn (tTest(sample1, sample2) < alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,176, @param mu constant value to compare sample mean against
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,177, @param sample array of sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,178, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,179, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,180, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,182,"ublic double tTest(double mu, double[] sample)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,183,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,184,f ((sample == null) || (sample.length < 5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,185,"hrow new IllegalArgumentException(""insufficient data for t statistic"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,187,"eturn tTest( StatUtils.mean(sample), mu, StatUtils.variance(sample), sample.length);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,191, @param mu comparison constant
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,192, @param sampleStats StatisticalSummary holding sample summary statitstics
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,193, @return t statistic
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,194, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,196,"ublic double t(double mu, StatisticalSummary sampleStats)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,197,hrows IllegalArgumentException {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,198,f ((sampleStats == null) || (sampleStats.getN() < 5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,199,"hrow new IllegalArgumentException(""insufficient data for t statistic"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,201,"eturn t(sampleStats.getMean(), mu, sampleStats.getVariance(), sampleStats.getN());"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,205, @param sampleStats1 StatisticalSummary describing data from the first sample
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,206, @param sampleStats2 StatisticalSummary describing data from the second sample
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,207, @return t statistic
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,208, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,210,"ublic double t(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,211,hrows IllegalArgumentException {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,212,f ((sampleStats1 == null) ||
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,213,sampleStats2 == null ||
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,214,"ath.min(sampleStats1.getN(), sampleStats2.getN()) < 5)) {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,215,"hrow new IllegalArgumentException(""insufficient data for t statistic"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,217,"eturn t(sampleStats1.getMean(), sampleStats2.getMean(), sampleStats1.getVariance(),"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,218,"ampleStats2.getVariance(), (double) sampleStats1.getN(), (double) sampleStats2.getN());"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,222, @param sampleStats1 StatisticalSummary describing data from the first sample
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,223, @param sampleStats2 StatisticalSummary describing data from the second sample
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,224, @return p-value for t-test
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,225, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,226, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,228,"ublic double tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,229,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,230,f ((sampleStats1 == null) || (sampleStats2 == null ||
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,231,"ath.min(sampleStats1.getN(), sampleStats2.getN()) < 5)) {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,232,"hrow new IllegalArgumentException(""insufficient data for t statistic"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,234,"eturn tTest(sampleStats1.getMean(), sampleStats2.getMean(), sampleStats1.getVariance(),"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,235,"ampleStats2.getVariance(), (double) sampleStats1.getN(), (double) sampleStats2.getN());"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,239, @param sampleStats1 StatisticalSummary describing sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,240, @param sampleStats2 StatisticalSummary describing sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,241, @param alpha significance level of the test
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,242, @return true if the null hypothesis can be rejected with
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,243,     confidence 1 - alpha
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,244, @throws IllegalArgumentException if the preconditions are not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,245, @throws MathException if an error occurs performing the test
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,247,"ublic boolean tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,248,ouble alpha)
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,249,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,250,f ((alpha <= 0) || (alpha > 0.5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,251,"hrow new IllegalArgumentException(""bad significance level: "" + alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,253,"eturn (tTest(sampleStats1, sampleStats2) < alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,257, @param mu constant value to compare sample mean against
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,258, @param sampleStats StatisticalSummary describing sample data values
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,259, @param alpha significance level of the test
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,260, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,261, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,262, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,264,"ublic boolean tTest( double mu, StatisticalSummary sampleStats,double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,265,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,266,f ((alpha <= 0) || (alpha > 0.5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,267,"hrow new IllegalArgumentException(""bad significance level: "" + alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,269,"eturn (tTest(mu, sampleStats) < alpha);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,273, @param mu constant value to compare sample mean against
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,274, @param sampleStats StatisticalSummary describing sample data
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,275, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,276, @throws IllegalArgumentException if the precondition is not met
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,277, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,279,"ublic double tTest(double mu, StatisticalSummary sampleStats)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,280,"hrows IllegalArgumentException, MathException {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,281,f ((sampleStats == null) || (sampleStats.getN() < 5)) {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,282,"hrow new IllegalArgumentException(""insufficient data for t statistic"");"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,284,"eturn tTest(sampleStats.getMean(), mu, sampleStats.getVariance(), sampleStats.getN());"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,287,/----------------------------------------------- Private methods
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,290, Computes approximate degrees of freedom for 2-sample t-test.
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,292, @param v1 first sample variance
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,293, @param v2 second sample variance
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,294, @param n1 first sample n
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,295, @param n2 second sample n
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,296, @return approximate degrees of freedom
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,298,"rivate double df(double v1, double v2, double n1, double n2) {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,299,eturn (((v1 / n1) + (v2 / n2)) * ((v1 / n1) + (v2 / n2))) /
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,300,(v1 * v1) / (n1 * n1 * (n1 - 1d)) + (v2 * v2) /
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,301,n2 * n2 * (n2 - 1d)));
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,305, Computes t test statistic for 2-sample t-test.
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,307, @param m1 first sample mean
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,308, @param m2 second sample mean
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,309, @param v1 first sample variance
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,310, @param v2 second sample variance
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,311, @param n1 first sample n
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,312, @param n2 second sample n
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,313, @return t test statistic
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,315,"rivate double t(double m1, double m2,  double v1, double v2, double n1,double n2)  {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,316,eturn (m1 - m2) / Math.sqrt((v1 / n1) + (v2 / n2));
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,320, Computes t test statistic for 1-sample t-test.
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,322, @param m sample mean
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,323, @param mu constant to test against
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,324, @param v sample variance
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,325, @param n sample n
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,326, @return t test statistic
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,328,"rivate double t(double m, double mu, double v, double n) {"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,329,eturn (m - mu) / Math.sqrt(v / n);
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,333," Computes p-value for 2-sided, 2-sample t-test."
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,335, @param m1 first sample mean
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,336, @param m2 second sample mean
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,337, @param v1 first sample variance
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,338, @param v2 second sample variance
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,339, @param n1 first sample n
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,340, @param n2 second sample n
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,341, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,342, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,344,"rivate double tTest(double m1, double m2, double v1, double v2, double n1, double n2)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,345,hrows MathException {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,346,"ouble t = Math.abs(t(m1, m2, v1, v2, n1, n2));"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,347,Distribution tDistribution =
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,348,"istributionFactory.newInstance().createTDistribution(df(v1, v2, n1, n2));"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,349,"eturn 1.0 - tDistribution.cumulativeProbability(-t, t);"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,353," Computes p-value for 2-sided, 1-sample t-test."
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,355, @param m sample mean
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,356, @param mu constant to test against
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,357, @param v sample variance
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,358, @param n sample n
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,359, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,360, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,362,"rivate double tTest(double m, double mu, double v, double n)"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,363,hrows MathException {
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,364,"ouble t = Math.abs(t(m, mu, v, n));"
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,365,Distribution tDistribution =
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,366,istributionFactory.newInstance().createTDistribution(n - 1);
False,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/inference/TestStatisticImpl.java,367,"eturn 1.0 - tDistribution.cumulativeProbability(-t, t);"
