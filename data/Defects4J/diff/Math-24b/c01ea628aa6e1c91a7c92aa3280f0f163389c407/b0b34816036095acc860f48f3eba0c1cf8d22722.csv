is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,22,import static org.junit.Assert.fail;
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,25,import org.apache.commons.math.analysis.QuinticFunction;
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,44,double[] optimaValues = minimizer.getOptimaValues();
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,49,"assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,55,@Test
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,56,public void testQuinticMin() throws MathException {
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,57,"// The quintic function has zeros at 0, +-0.5 and +-1."
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,58,"// The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,59,UnivariateRealFunction f = new QuinticFunction();
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,60,UnivariateRealOptimizer underlying = new BrentOptimizer();
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,61,JDKRandomGenerator g = new JDKRandomGenerator();
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,62,g.setSeed(4312000053l);
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,63,MultiStartUnivariateRealOptimizer minimizer =
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,64,"new MultiStartUnivariateRealOptimizer(underlying, 5, g);"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,65,minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,66,minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,68,try {
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,69,minimizer.getOptima();
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,70,"fail(""an exception should have been thrown"");"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,71,} catch (IllegalStateException ise) {
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,72,// expected
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,73,} catch (Exception e) {
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,74,"fail(""wrong exception caught"");"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,76,try {
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,77,minimizer.getOptimaValues();
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,78,"fail(""an exception should have been thrown"");"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,79,} catch (IllegalStateException ise) {
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,80,// expected
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,81,} catch (Exception e) {
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,82,"fail(""wrong exception caught"");"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,85,"assertEquals(-0.27195612846834, minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2), 1.0e-13);"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,86,"assertEquals(-0.27194301946870, minimizer.getResult(), 1.0e-13);"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,87,"assertEquals(-0.04433426940878, minimizer.getFunctionValue(), 1.0e-13);"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,89,double[] optima = minimizer.getOptima();
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,90,double[] optimaValues = minimizer.getOptimaValues();
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,91,for (int i = 0; i < optima.length; ++i) {
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,92,"assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);"
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,95,assertTrue(minimizer.getEvaluations()    >= 510);
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,96,assertTrue(minimizer.getEvaluations()    <= 530);
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,97,assertTrue(minimizer.getIterationCount() >= 150);
True,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,src/test/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java,98,assertTrue(minimizer.getIterationCount() <= 170);
