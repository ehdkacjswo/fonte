is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,17,package org.apache.commons.math.stat.correlation;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,19,import org.apache.commons.math.MathRuntimeException;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,20,import org.apache.commons.math.linear.RealMatrix;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,21,import org.apache.commons.math.linear.DenseRealMatrix;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,22,import org.apache.commons.math.stat.descriptive.moment.Mean;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,23,import org.apache.commons.math.stat.descriptive.moment.Variance;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,26,* Computes covariances for pairs of arrays or columns of a matrix.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,28,* <p>The constructors that take <code>RealMatrix</code> or
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,29,* <code>double[][]</code> arguments generate correlation matrices.  The
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,30,* columns of the input matrices are assumed to represent variable values.</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,32,* <p>The constructor argument <code>biasCorrected</code> determines whether or
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,33,* not computed covariances are bias-corrected.</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,35,* <p>Unbiased covariances are given by the formula</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,36,"* <code>cov(X, Y) = &Sigma;[(x<sub>i</sub> - E(X))(y<sub>i</sub> - E(Y))] / (n - 1)</code>"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,37,* where <code>E(x)</code> is the mean of <code>X</code> and <code>E(Y)</code>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,38,* is the mean of the <code>Y</code> values.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,40,* <p>Non-bias-corrected estimates use <code>n</code> in place of <code>n - 1</code>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,42,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,43,* @since 2.0
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,45,public class Covariance {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,47,/** covariance matrix */
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,48,private final RealMatrix covarianceMatrix;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,50,public Covariance() {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,51,super();
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,52,covarianceMatrix = null;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,56,* Create a Covariance matrix from a rectangular array
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,57,* whose columns represent covariates.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,59,* <p>The <code>biasCorrected</code> parameter determines whether or not
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,60,* covariance estimates are bias-corrected.</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,62,* <p>The input array must be rectangular with at least two columns
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,63,* and two rows.</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,65,* @param data rectangular array with columns representing covariates
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,66,* @param biasCorrected true means covariances are bias-corrected
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,67,* @throws IllegalArgumentException if the input data array is not
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,68,* rectangular with at least two rows and two columns.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,70,"public Covariance(double[][] data, boolean biasCorrected) {"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,71,"this(new DenseRealMatrix(data), biasCorrected);"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,75,* Create a Covariance matrix from a rectangular array
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,76,* whose columns represent covariates.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,78,* <p>The input array must be rectangular with at least two columns
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,79,* and two rows</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,81,* @param data rectangular array with columns representing covariates
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,82,* @throws IllegalArgumentException if the input data array is not
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,83,* rectangular with at least two rows and two columns.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,85,public Covariance(double[][] data) {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,86,"this(data, true);"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,90,* Create a covariance matrix from a matrix whose columns
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,91,* represent covariates.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,93,* <p>The <code>biasCorrected</code> parameter determines whether or not
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,94,* covariance estimates are bias-corrected.</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,96,* <p>The matrix must have at least two columns and two rows</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,98,* @param matrix matrix with columns representing covariates
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,99,* @param biasCorrected true means covariances are bias-corrected
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,100,* @throws IllegalArgumentException if the input matrix does not have
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,101,* at least two rows and two columns
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,103,"public Covariance(RealMatrix matrix, boolean biasCorrected) {"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,104,checkSufficientData(matrix);
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,105,"covarianceMatrix = computeCovariance(matrix, biasCorrected);"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,109,* Create a covariance matrix from a matrix whose columns
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,110,* represent covariates.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,112,* <p>The matrix must have at least two columns and two rows</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,114,* @param matrix matrix with columns representing covariates
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,115,* @throws IllegalArgumentException if the input matrix does not have
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,116,* at least two rows and two columns
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,118,public Covariance(RealMatrix matrix) {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,119,"this(matrix, true);"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,123,* Returns the covariance matrix
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,125,* @return covariance matrix
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,127,public RealMatrix getCovarianceMatrix() {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,128,return covarianceMatrix;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,132,* Create a covariance matrix from a matrix whose columns represent
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,133,* covariates.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,135,* <p>The input matrix must have at least two columns and two rows</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,137,* <p>The <code>biasCorrected</code> parameter determines whether or not
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,138,* covariance estimates are bias-corrected.</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,140,* @return covariance matrix
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,142,"protected RealMatrix computeCovariance(RealMatrix matrix, boolean biasCorrected) {"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,143,int dimension = matrix.getColumnDimension();
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,144,Variance variance = new Variance(biasCorrected);
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,145,"RealMatrix outMatrix = new DenseRealMatrix(dimension, dimension);"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,146,for (int i = 0; i < dimension; i++) {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,147,for (int j = 0; j < i; j++) {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,148,"double cov = covariance(matrix.getColumn(i), matrix.getColumn(j), biasCorrected);"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,149,"outMatrix.setEntry(i, j, cov);"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,150,"outMatrix.setEntry(j, i, cov);"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,152,"outMatrix.setEntry(i, i, variance.evaluate(matrix.getColumn(i)));"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,154,return outMatrix;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,158,* Computes the covariance between the two arrays.
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,160,* <p>Array lengths must match and the common length must be at least 2.</p>
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,162,* @param xArray first data array
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,163,* @param yArray second data array
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,164,"* @param biasCorrected if true, returned value will be bias-corrected"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,165,* @return returns the covariance for the two arrays
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,166,* @throws  IllegalArgumentException if the arrays lengths do not match or
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,167,* there is insufficient data
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,169,"public double covariance(final double[] xArray, final double[] yArray, boolean biasCorrected)"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,170,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,171,Mean mean = new Mean();
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,172,double result = 0d;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,173,long length = xArray.length;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,174,if(length == yArray.length && length > 1) {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,175,double xMean = mean.evaluate(xArray);
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,176,double yMean = mean.evaluate(yArray);
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,177,for (int i = 0; i < xArray.length; i++) {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,178,double xDev = xArray[i] - xMean;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,179,double yDev = yArray[i] - yMean;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,180,result += (xDev * yDev - result) / (i + 1);
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,183,else {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,184,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,185,"""Arrays must have the same length and both must have at "" +"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,186,"""least two elements. xArray has size {0}, yArray has {1} elements"","
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,187,"new Object[] {xArray.length, yArray.length});"
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,189,return biasCorrected ? result * ((double) length / (double)(length - 1)) : result;
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,193,* Throws IllegalArgumentException of the matrix does not have at least
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,194,* two columns and two rows
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,196,private void checkSufficientData(final RealMatrix matrix) {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,197,int nRows = matrix.getRowDimension();
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,198,int nCols = matrix.getColumnDimension();
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,199,if (nRows < 2 || nCols < 2) {
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,200,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,201,"""Insufficient data:  only {0} rows and {1} columns."","
True,src/java/org/apache/commons/math/stat/correlation/Covariance.java,src/java/org/apache/commons/math/stat/correlation/Covariance.java,202,"new Object[]{nRows, nCols});"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,17,package org.apache.commons.math.stat.correlation;
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,19,import org.apache.commons.math.TestUtils;
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,20,import org.apache.commons.math.linear.RealMatrix;
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,21,import org.apache.commons.math.linear.RealMatrixImpl;
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,22,import org.apache.commons.math.stat.descriptive.moment.Variance;
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,24,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,26,public class CovarianceTest extends TestCase {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,28,protected final double[] longleyData = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,29,"60323,83.0,234289,2356,1590,107608,1947,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,30,"61122,88.5,259426,2325,1456,108632,1948,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,31,"60171,88.2,258054,3682,1616,109773,1949,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,32,"61187,89.5,284599,3351,1650,110929,1950,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,33,"63221,96.2,328975,2099,3099,112075,1951,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,34,"63639,98.1,346999,1932,3594,113270,1952,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,35,"64989,99.0,365385,1870,3547,115094,1953,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,36,"63761,100.0,363112,3578,3350,116219,1954,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,37,"66019,101.2,397469,2904,3048,117388,1955,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,38,"67857,104.6,419180,2822,2857,118734,1956,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,39,"68169,108.4,442769,2936,2798,120445,1957,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,40,"66513,110.8,444546,4681,2637,121950,1958,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,41,"68655,112.6,482704,3813,2552,123366,1959,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,42,"69564,114.2,502601,3931,2514,125368,1960,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,43,"69331,115.7,518173,4806,2572,127852,1961,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,44,"70551,116.9,554894,4007,2827,130081,1962"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,47,protected final double[] swissData = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,48,"80.2,17.0,15,12,9.96,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,49,"83.1,45.1,6,9,84.84,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,50,"92.5,39.7,5,5,93.40,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,51,"85.8,36.5,12,7,33.77,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,52,"76.9,43.5,17,15,5.16,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,53,"76.1,35.3,9,7,90.57,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,54,"83.8,70.2,16,7,92.85,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,55,"92.4,67.8,14,8,97.16,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,56,"82.4,53.3,12,7,97.67,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,57,"82.9,45.2,16,13,91.38,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,58,"87.1,64.5,14,6,98.61,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,59,"64.1,62.0,21,12,8.52,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,60,"66.9,67.5,14,7,2.27,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,61,"68.9,60.7,19,12,4.43,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,62,"61.7,69.3,22,5,2.82,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,63,"68.3,72.6,18,2,24.20,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,64,"71.7,34.0,17,8,3.30,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,65,"55.7,19.4,26,28,12.11,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,66,"54.3,15.2,31,20,2.15,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,67,"65.1,73.0,19,9,2.84,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,68,"65.5,59.8,22,10,5.23,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,69,"65.0,55.1,14,3,4.52,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,70,"56.6,50.9,22,12,15.14,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,71,"57.4,54.1,20,6,4.20,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,72,"72.5,71.2,12,1,2.40,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,73,"74.2,58.1,14,8,5.23,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,74,"72.0,63.5,6,3,2.56,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,75,"60.5,60.8,16,10,7.72,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,76,"58.3,26.8,25,19,18.46,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,77,"65.4,49.5,15,8,6.10,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,78,"75.5,85.9,3,2,99.71,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,79,"69.3,84.9,7,6,99.68,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,80,"77.3,89.7,5,2,100.00,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,81,"70.5,78.2,12,6,98.96,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,82,"79.4,64.9,7,3,98.22,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,83,"65.0,75.9,9,9,99.06,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,84,"92.2,84.6,3,3,99.46,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,85,"79.3,63.1,13,13,96.83,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,86,"70.4,38.4,26,12,5.62,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,87,"65.7,7.7,29,11,13.79,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,88,"72.7,16.7,22,13,11.22,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,89,"64.4,17.6,35,32,16.92,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,90,"77.6,37.6,15,7,4.97,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,91,"67.6,18.7,25,7,8.65,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,92,"35.0,1.2,37,53,42.34,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,93,"44.7,46.6,16,29,50.43,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,94,"42.8,27.7,22,29,58.33"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,99,* Test Longley dataset against R.
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,100,"* Data Source: J. Longley (1967) ""An Appraisal of Least Squares"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,101,"* Programs for the Electronic Computer from the Point of View of the User"""
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,102,"* Journal of the American Statistical Association, vol. 62. September,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,103,* pp. 819-841.
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,105,* Data are from NIST:
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,106,* http://www.itl.nist.gov/div898/strd/lls/data/LINKS/DATA/Longley.dat
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,108,public void testLongly() {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,109,"RealMatrix matrix = createRealMatrix(longleyData, 16, 7);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,110,RealMatrix covarianceMatrix = new Covariance(matrix).getCovarianceMatrix();
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,111,double[] rData = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,112,"12333921.73333333246, 3.679666000000000e+04, 343330206.333333313,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,113,"1649102.666666666744, 1117681.066666666651, 23461965.733333334, 16240.93333333333248,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,114,"36796.66000000000, 1.164576250000000e+02, 1063604.115416667,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,115,"6258.666250000000, 3490.253750000000, 73503.000000000, 50.92333333333334,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,116,"343330206.33333331347, 1.063604115416667e+06, 9879353659.329166412,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,117,"56124369.854166664183, 30880428.345833335072, 685240944.600000024, 470977.90000000002328,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,118,"1649102.66666666674, 6.258666250000000e+03, 56124369.854166664,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,119,"873223.429166666698, -115378.762499999997, 4462741.533333333, 2973.03333333333330,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,120,"1117681.06666666665, 3.490253750000000e+03, 30880428.345833335,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,121,"-115378.762499999997, 484304.095833333326, 1764098.133333333, 1382.43333333333339,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,122,"23461965.73333333433, 7.350300000000000e+04, 685240944.600000024,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,123,"4462741.533333333209, 1764098.133333333302, 48387348.933333330, 32917.40000000000146,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,124,"16240.93333333333, 5.092333333333334e+01, 470977.900000000,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,125,"2973.033333333333, 1382.433333333333, 32917.40000000, 22.66666666666667"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,128,"TestUtils.assertEquals(""covariance matrix"", createRealMatrix(rData, 7, 7), covarianceMatrix, 10E-9);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,133,* Test R Swiss fertility dataset against R.
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,134,* Data Source: R datasets package
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,136,public void testSwissFertility() {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,137,"RealMatrix matrix = createRealMatrix(swissData, 47, 5);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,138,RealMatrix covarianceMatrix = new Covariance(matrix).getCovarianceMatrix();
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,139,double[] rData = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,140,"156.0424976873265, 100.1691489361702, -64.36692876965772, -79.7295097132285, 241.5632030527289,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,141,"100.169148936170251, 515.7994172062905, -124.39283071230344, -139.6574005550416, 379.9043755781684,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,142,"-64.3669287696577, -124.3928307123034, 63.64662349676226, 53.5758556891767, -190.5606105457909,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,143,"-79.7295097132285, -139.6574005550416, 53.57585568917669, 92.4560592044403, -61.6988297872340,"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,144,"241.5632030527289, 379.9043755781684, -190.56061054579092, -61.6988297872340, 1739.2945371877890"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,147,"TestUtils.assertEquals(""covariance matrix"", createRealMatrix(rData, 5, 5), covarianceMatrix, 10E-13);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,151,* Constant column
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,153,public void testConstant() {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,154,"double[] noVariance = new double[] {1, 1, 1, 1};"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,155,"double[] values = new double[] {1, 2, 3, 4};"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,156,"assertEquals(0d, new Covariance().covariance(noVariance, values, true), Double.MIN_VALUE);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,157,"assertEquals(0d, new Covariance().covariance(noVariance, noVariance, true), Double.MIN_VALUE);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,162,* Insufficient data
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,164,public void testInsufficientData() {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,165,double[] one = new double[] {1};
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,166,double[] two = new double[] {2};
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,167,try {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,168,"new Covariance().covariance(one, two, false);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,169,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,170,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,171,// Expected
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,173,"RealMatrix matrix = new RealMatrixImpl(new double[][] {{0},{1}});"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,174,try {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,175,new Covariance(matrix);
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,176,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,177,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,178,// Expected
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,183,* Verify that diagonal entries are consistent with Variance computation and matrix matches
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,184,* column-by-column covariances
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,186,public void testConsistency() {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,187,"RealMatrix matrix = createRealMatrix(swissData, 47, 5);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,188,RealMatrix covarianceMatrix = new Covariance(matrix).getCovarianceMatrix();
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,190,// Variances on the diagonal
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,191,Variance variance = new Variance();
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,192,for (int i = 0; i < 5; i++) {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,193,"assertEquals(variance.evaluate(matrix.getColumn(i)), covarianceMatrix.getEntry(i,i), 10E-14);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,196,"// Symmetry, column-consistency"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,197,"assertEquals(covarianceMatrix.getEntry(2, 3),"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,198,"new Covariance().covariance(matrix.getColumn(2), matrix.getColumn(3), true), 10E-14);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,199,"assertEquals(covarianceMatrix.getEntry(2, 3), covarianceMatrix.getEntry(3, 2), Double.MIN_VALUE);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,201,// All columns same -> all entries = column variance
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,202,"RealMatrix repeatedColumns = new RealMatrixImpl(47, 3);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,203,for (int i = 0; i < 3; i++) {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,204,"repeatedColumns.setColumnMatrix(i, matrix.getColumnMatrix(0));"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,206,covarianceMatrix = new Covariance(repeatedColumns).getCovarianceMatrix();
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,207,double columnVariance = variance.evaluate(matrix.getColumn(0));
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,208,for (int i = 0; i < 3; i++) {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,209,for (int j = 0; j < 3; j++) {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,210,"assertEquals(columnVariance, covarianceMatrix.getEntry(i, j), 10E-14);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,216,"protected RealMatrix createRealMatrix(double[] data, int nRows, int nCols) {"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,217,double[][] matrixData = new double[nRows][nCols];
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,218,int ptr = 0;
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,219,for (int i = 0; i < nRows; i++) {
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,220,"System.arraycopy(data, ptr, matrixData[i], 0, nCols);"
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,221,ptr += nCols;
True,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,src/test/org/apache/commons/math/stat/correlation/CovarianceTest.java,223,return new RealMatrixImpl(matrixData);
