is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,21,import org.apache.commons.math.linear.SingularMatrixException;
False,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,27,ouble[][] testData3x3NonSingular = {
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,28,private double[][] testData3x3NonSingular = {
False,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,32,ouble[][] testData3x3Singular = {
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,33,private double[][] testData3x3Singular = {
False,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,37,ouble[][] testData3x4 = {
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,38,private double[][] testData3x4 = {
False,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,42,ouble[][] testData4x3 = {
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,43,private double[][] testData4x3 = {
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,244,@Test(expected=SingularMatrixException.class)
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,245,public void testNonInvertible() {
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,246,QRDecomposition qr =
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,247,new QRDecomposition(MatrixUtils.createRealMatrix(testData3x3Singular));
True,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,249,final RealMatrix inv = qr.getSolver().getInverse();
