is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,20,import java.util.ArrayList;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,21,import java.util.Collections;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,25,import org.apache.commons.math3.analysis.UnivariateFunction;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,26,import org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,27,import org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,304,* Verify that density integrals match the distribution.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,305,"* The (filtered, sorted) cumulativeTestPoints array is used to source"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,306,* integration limits. The integral of the density (estimated using a
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,307,* Legendre-Gauss integrator) is compared with the cdf over the same
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,308,* interval. Test points outside of the domain of the density function
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,309,* are discarded.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,311,@Test
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,312,public void testDensityIntegrals() {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,313,final double tol = 1.0e-9;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,314,final BaseAbstractUnivariateIntegrator integrator =
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,315,"new IterativeLegendreGaussIntegrator(5, 1.0e-12, 1.0e-10);"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,316,final UnivariateFunction d = new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,317,public double value(double x) {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,318,return distribution.density(x);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,321,final ArrayList<Double> integrationTestPoints = new ArrayList<Double>();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,322,for (int i = 0; i < cumulativeTestPoints.length; i++) {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,323,if (Double.isNaN(cumulativeTestValues[i]) ||
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,324,cumulativeTestValues[i] < 1.0e-5 ||
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,325,cumulativeTestValues[i] > 1 - 1.0e-5) {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,326,continue; // exclude integrals outside domain.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,328,integrationTestPoints.add(cumulativeTestPoints[i]);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,330,Collections.sort(integrationTestPoints);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,331,for (int i = 1; i < integrationTestPoints.size(); i++) {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,332,Assert.assertEquals(
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,333,distribution.cumulativeProbability(  // FIXME @4.0 when rename happens
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,334,"integrationTestPoints.get(0), integrationTestPoints.get(i)),"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,335,integrator.integrate(
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,336,"1000000, // Triangle integrals are very slow to converge"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,337,"d, integrationTestPoints.get(0),"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,338,"integrationTestPoints.get(i)), tol);"
