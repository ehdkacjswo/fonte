is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,762,* Returns {@code true} if the default stopping criterion is fulfilled.
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,764,* @return {@code true} if convergence of the iterations has occured
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,766,public boolean hasConverged() {
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,767,return hasConverged;
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1160,arlyStop = (state.beta < MACH_PREC) || (state.hasConverged);
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1169,earlyStop = (state.beta < MACH_PREC) || (state.hasConverged());
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1168, while (!state.hasConverged);
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1177,} while (!state.hasConverged());
