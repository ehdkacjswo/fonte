is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,66,import org.apache.commons.lang.ClassUtils;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,206," @version $Id: Enum.java,v 1.15 2003/07/20 15:49:58 scolebourne Exp $"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,207,"* @version $Id: Enum.java,v 1.16 2003/07/30 23:13:09 scolebourne Exp $"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,211,/** Serialization id */
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,212,static final long serialVersionUID = -487045951170455942L;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,229,* The hashcode representation of the Enum.
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,231,private transient final int iHashCode;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,233,* The toString representation of the Enum.
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,235,protected transient String iToString = null;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,284,iHashCode = 7 + enumClass.hashCode() + 3 * name.hashCode();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,285,// cannot create toString here as subclasses may want to include other data
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,493,eturn 7 + iName.hashCode();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,508,return iHashCode;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,525,if (other == this) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,526,return 0;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,516, <p>For use when debugging.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,523,tring shortName = Enum.getEnumClass(getClass()).getName();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,524,nt pos = shortName.lastIndexOf('.');
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,525,f (pos != -1) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,526,hortName = shortName.substring(pos + 1);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,539,if (iToString == null) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,540,Class cls = Enum.getEnumClass(getClass());
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,541,String shortName = ClassUtils.getShortClassName(cls);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,542,"iToString = shortName + ""["" + getName() + ""]"";"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,528,"hortName = shortName.replace('$', '.');"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,529,"eturn shortName + ""["" + getName() + ""]"";"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,544,return iToString;
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,59,import org.apache.commons.lang.ClassUtils;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,134," @version $Id: ValuedEnum.java,v 1.8 2003/07/20 15:49:58 scolebourne Exp $"
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,136,"* @version $Id: ValuedEnum.java,v 1.9 2003/07/30 23:13:09 scolebourne Exp $"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,208, <p>For use when debugging.</p>
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,215,tring shortName = Enum.getEnumClass(getClass()).getName();
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,216,nt pos = shortName.lastIndexOf('.');
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,217,f (pos != -1) {
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,218,hortName = shortName.substring(pos + 1);
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,215,if (iToString == null) {
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,216,Class cls = Enum.getEnumClass(getClass());
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,217,String shortName = ClassUtils.getShortClassName(cls);
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,218,"iToString = shortName + ""["" + getName() + ""="" + getValue() + ""]"";"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,220,"hortName = shortName.replace('$', '.');"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,221,"eturn shortName + ""["" + getName() + ""="" + getValue() + ""]"";"
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,220,return iToString;
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,4,* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,5,* reserved.
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,9,* are met:
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,17,*    distribution.
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,54,package org.apache.commons.lang.enum;
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,57,* Dummy enumeration - no values.
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,59,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,60,"* @version $Id: DummyEnum.java,v 1.1 2003/07/30 23:13:09 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,62,public abstract class DummyEnum extends Enum {
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,64,private DummyEnum(String name) {
True,src/test/org/apache/commons/lang/enum/DummyEnum.java,src/test/org/apache/commons/lang/enum/DummyEnum.java,65,super(name);
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,70," @version $Id: EnumTest.java,v 1.7 2003/05/22 22:00:06 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,70,"* @version $Id: EnumTest.java,v 1.8 2003/07/30 23:13:09 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,98,try {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,99,ColorEnum.RED.compareTo(null);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,100,fail();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,101,} catch (NullPointerException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,102,try {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,103,ColorEnum.RED.compareTo(new Object());
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,104,fail();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,105,} catch (ClassCastException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,111,"assertEquals(false, ColorEnum.RED.equals(null));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,112,"assertEquals(true, ColorEnum.RED.equals(ColorEnum.RED));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,113,"assertEquals(true, ColorEnum.RED.equals(ColorEnum.getEnum(""Red"")));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,116,public void testHashCode() {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,117,"assertEquals(ColorEnum.RED.hashCode(), ColorEnum.RED.hashCode());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,118,"assertEquals(7 + ColorEnum.class.hashCode() + 3 * ""Red"".hashCode(), ColorEnum.RED.hashCode());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,170,int hashCode = ColorEnum.RED.hashCode();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,172,"assertEquals(hashCode, SerializationUtils.clone(ColorEnum.RED).hashCode());"
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,68," @version $Id: EnumUtilsTest.java,v 1.3 2003/05/22 22:00:06 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,68,"* @version $Id: EnumUtilsTest.java,v 1.4 2003/07/30 23:13:09 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,91,it = EnumUtils.iterator(DummyEnum.class);
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,92,"assertEquals(false, it.hasNext());"
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,96, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,97,eturn;
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,99,ail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,98,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,99,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,100,try {
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,101,EnumUtils.iterator(Object.class);
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,102,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,103,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,112,list = EnumUtils.getEnumList(DummyEnum.class);
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,113,"assertEquals(0, list.size());"
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,113, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,114,eturn;
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,116,ail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,119,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,120,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,121,try {
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,122,EnumUtils.getEnumList(Object.class);
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,123,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,124,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,135,map = EnumUtils.getEnumMap(DummyEnum.class);
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,136,"assertEquals(0, map.size());"
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,132, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,133,eturn;
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,135,ail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,142,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,143,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,144,try {
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,145,EnumUtils.getEnumMap(Object.class);
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,146,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,147,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,155,"assertSame(null, EnumUtils.getEnum(DummyEnum.class, ""Pink""));"
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,148, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,149,eturn;
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,151,ail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,161,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,162,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,163,try {
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,164,"EnumUtils.getEnum(Object.class, ""Red"");"
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,165,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,166,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,174,"assertSame(null, EnumUtils.getEnum(DummyEnum.class, 5));"
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,164, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,165,eturn;
False,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,167,ail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,180,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,181,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,182,try {
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,183,"EnumUtils.getEnum(Object.class, 2);"
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,184,fail();
True,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,src/test/org/apache/commons/lang/enum/EnumUtilsTest.java,185,} catch (IllegalArgumentException ex) {}
