is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,22,import java.util.List;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1946, Creates a tokenizer using the current contents of this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1947,* Creates a tokenizer that can tokenize the contents of this builder.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1948, This method allows the contents of the builder to be tokenized.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1949," The tokenizer will be setup to tokenize on space, tab, newline"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1950, and formfeed (as per StringTokenizer). These values can be changed
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1951," on the tokenizer class, before retrieving the tokens."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1949,* This method allows the contents of this builder to be tokenized.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1950,"* The tokenizer will be setup by default to tokenize on space, tab,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1951,* newline and formfeed (as per StringTokenizer). These values can be
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1952,"* changed on the tokenizer class, before retrieving the tokens."
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1953, Note that the internal character array is shared between the two
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1954, objects and no synchronization occurs. Once you call this method
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1955, you must complete the tokenization before altering this buffer again.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1954,* The returned tokenizer is linked to this builder. You may intermix
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1955,"* calls to the buider and tokenizer within certain limits, however"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1956,"* there is no synchronization. Once the tokenizer has been used once,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1957,* it must be {@link StrTokenizer#reset() reset} to pickup the latest
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1958,* changes in the builder. For example:
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1959,* <pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1960,* StrBuilder b = new StrBuilder();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1961,"* b.append(""a b "");"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1962,* StrTokenizer t = b.asTokenizer();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1963,"* String[] tokens1 = t.getTokenArray();  // returns a,b"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1964,"* b.append(""c d "");"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1965,"* String[] tokens2 = t.getTokenArray();  // returns a,b (c and d ignored)"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1966,* t.reset();              // reset causes builder changes to be picked up
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1967,"* String[] tokens3 = t.getTokenArray();  // returns a,b,c,d"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1968,* </pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1969,"* In addition to simply intermixing appends and tokenization, you can also"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1970,* call the set methods on the tokenizer to alter how it tokenizes. Just
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1971,* remember to call reset when you want to pickup builder changes.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1972,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1973,* Calling {@link StrTokenizer#reset(String)} or {@link StrTokenizer#reset(char[])}
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1974,* with a non-null value will break the link with the builder.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1957, @return a StrTokenizer instance
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1976,* @return a tokenizer that is linked to this builder
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1960,eturn new StrTokenizer(buffer);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1979,return new StrBuilderTokenizer();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2201,* Inner class to allow StrBuilder to operate as a tokenizer.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2203,class StrBuilderTokenizer extends StrTokenizer {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2205,/** {@inheritDoc} */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2206,StrBuilderTokenizer() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2207,super();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2210,/** {@inheritDoc} */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2211,"protected List tokenize(char[] chars, int offset, int count) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2212,if (chars == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2213,"return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2214,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2215,"return super.tokenize(chars, offset, count);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2219,/** {@inheritDoc} */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2220,public String getContent() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2221,String str = super.getContent();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2222,if (str == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2223,return StrBuilder.this.toString();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2224,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2225,return str;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2205,eturn charAt(pos++);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2255,return StrBuilder.this.charAt(pos++);
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2217,f (pos >= size()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2267,if (pos >= StrBuilder.this.size()) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2221,en = size() - pos;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2271,len = StrBuilder.this.size() - pos;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2223,"etChars(pos, pos + len, b, off);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2273,"StrBuilder.this.getChars(pos, pos + len, b, off);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2230,f (pos + n > size()) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2231, = size() - pos;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2280,if (pos + n > StrBuilder.this.size()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2281,n = StrBuilder.this.size() - pos;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2242,eturn pos < size();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2292,return pos < StrBuilder.this.size();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1510,public void testAsTokenizer() throws Exception {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1511,// from Javadoc
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1512,StrBuilder b = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1513,"b.append(""a b "");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1514,StrTokenizer t = b.asTokenizer();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1516,String[] tokens1 = t.getTokenArray();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1517,"assertEquals(2, tokens1.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1518,"assertEquals(""a"", tokens1[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1519,"assertEquals(""b"", tokens1[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1520,"assertEquals(2, t.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1522,"b.append(""c d "");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1523,String[] tokens2 = t.getTokenArray();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1524,"assertEquals(2, tokens2.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1525,"assertEquals(""a"", tokens2[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1526,"assertEquals(""b"", tokens2[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1527,"assertEquals(2, t.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1528,"assertEquals(""a"", t.next());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1529,"assertEquals(""b"", t.next());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1531,t.reset();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1532,String[] tokens3 = t.getTokenArray();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1533,"assertEquals(4, tokens3.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1534,"assertEquals(""a"", tokens3[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1535,"assertEquals(""b"", tokens3[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1536,"assertEquals(""c"", tokens3[2]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1537,"assertEquals(""d"", tokens3[3]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1538,"assertEquals(4, t.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1539,"assertEquals(""a"", t.next());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1540,"assertEquals(""b"", t.next());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1541,"assertEquals(""c"", t.next());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1542,"assertEquals(""d"", t.next());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1544,"assertEquals(""a b c d "", t.getContent());"
