is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,70, <li>Closure - performs a Closure and returns the input object
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,70,* <li>Executor - performs a Executor and returns the input object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,85," @version $Id: TransformerUtils.java,v 1.1 2002/11/05 16:44:28 bayard Exp $"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,85,"* @version $Id: TransformerUtils.java,v 1.2 2002/11/06 19:16:33 bayard Exp $"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,175, Creates a Transformer that calls a Closure each time the transformer is used.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,175,* Creates a Transformer that calls a Executor each time the transformer is used.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,181,ublic static Transformer asTransformer(Closure command) {
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,181,public static Transformer asTransformer(Executor command) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,183,"hrow new IllegalArgumentException(""ClosureTransformer: The command must not be null"");"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,183,"throw new IllegalArgumentException(""ExecutorTransformer: The command must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,185,eturn new ClosureTransformer(command);
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,185,return new ExecutorTransformer(command);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,658,/ ClosureTransformer
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,658,// ExecutorTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,662, ClosureTransformer executes a Closure object.
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,662,* ExecutorTransformer executes a Executor object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,664,"rivate static class ClosureTransformer implements Transformer, Serializable {"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,664,"private static class ExecutorTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,666,rivate final Closure iClosure;
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,666,private final Executor iExecutor;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,671,rivate ClosureTransformer(Closure command) {
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,671,private ExecutorTransformer(Executor command) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,673,Closure = command;
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,673,iExecutor = command;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,681,Closure.execute(input);
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,681,iExecutor.execute(input);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,684, catch (ClosureException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,685,"hrow new TransformerException(""ClosureTransformer: "" + ex.getMessage(), ex);"
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,684,} catch (ExecutorException ex) {
True,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,685,"throw new TransformerException(""ExecutorTransformer: "" + ex.getMessage(), ex);"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,65," @version $Id: FunctorTestSuite.java,v 1.1 2002/11/05 16:45:13 bayard Exp $"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,65,"* @version $Id: FunctorTestSuite.java,v 1.2 2002/11/06 19:16:15 bayard Exp $"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,77, Closure-line interface.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,77,* Executor-line interface.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,88,uite.addTest(TestClosureUtils.suite());
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,88,suite.addTest(TestExecutorUtils.suite());
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,5,* reserved.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,9,* are met:
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,17,*    distribution.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,54,package org.apache.commons.lang.functor;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,56,import java.util.ArrayList;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,57,import java.util.Collection;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,58,import java.util.Collections;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,59,import java.util.HashMap;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,60,import java.util.Map;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,62,import junit.framework.Test;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,63,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,65,import org.apache.commons.lang.functor.Predicate;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,66,import org.apache.commons.lang.functor.PredicateUtils;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,68,* Tests the org.apache.commons.lang.functor.ExecutorUtils class.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,70,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,71,"* @version $Id: TestExecutorUtils.java,v 1.1 2002/11/06 19:16:15 bayard Exp $"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,73,public class TestExecutorUtils extends junit.framework.TestCase {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,75,private static final Object cObject = new Object();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,76,"private static final Object cString = ""Hello"";"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,77,private static final Object cInteger = new Integer(6);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,80,* Construct
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,82,public TestExecutorUtils(String name) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,83,super(name);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,87,* Return class aa a test suite.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,89,public static Test suite() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,90,return new TestSuite(TestExecutorUtils.class);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,94,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,96,public void setUp() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,100,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,102,public void tearDown() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,105,static class MockExecutor implements Executor {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,106,int count = 0;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,109,* @see org.apache.commons.lang.functor.Executor#execute(Object)
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,111,public void execute(Object object) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,112,count++;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,117,// exceptionExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,120,public void testExceptionExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,121,assertNotNull(ExecutorUtils.exceptionExecutor());
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,122,"assertSame(ExecutorUtils.exceptionExecutor(), ExecutorUtils.exceptionExecutor());"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,123,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,124,ExecutorUtils.exceptionExecutor().execute(null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,125,} catch (ExecutorException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,126,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,127,ExecutorUtils.exceptionExecutor().execute(cString);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,128,} catch (ExecutorException ex2) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,129,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,132,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,135,// nopExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,138,public void testNopExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,139,"StringBuffer buf = new StringBuffer(""Hello"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,140,ExecutorUtils.nopExecutor().execute(null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,141,"assertEquals(""Hello"", buf.toString());"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,142,"ExecutorUtils.nopExecutor().execute(""Hello"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,143,"assertEquals(""Hello"", buf.toString());"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,146,// invokeExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,149,public void testInvokeExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,150,"StringBuffer buf = new StringBuffer(""Hello"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,151,"ExecutorUtils.invokerExecutor(""reverse"").execute(buf);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,152,"assertEquals(""olleH"", buf.toString());"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,153,"buf = new StringBuffer(""Hello"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,154,"ExecutorUtils.invokerExecutor(""setLength"", new Class[] {Integer.TYPE}, new Object[] {new Integer(2)}).execute(buf);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,155,"assertEquals(""He"", buf.toString());"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,158,// forExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,161,public void testForExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,162,MockExecutor cmd = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,163,"ExecutorUtils.forExecutor(5, cmd).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,164,"assertEquals(5, cmd.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,165,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,166,"ExecutorUtils.forExecutor(-1, new MockExecutor());"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,167,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,168,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,170,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,173,// whileExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,176,public void testWhileExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,177,MockExecutor cmd = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,178,"ExecutorUtils.whileExecutor(PredicateUtils.falsePredicate(), cmd).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,179,"assertEquals(0, cmd.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,180,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,181,"ExecutorUtils.whileExecutor(null, null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,182,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,183,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,185,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,188,// doWhileExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,191,public void testDoWhileExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,192,MockExecutor cmd = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,193,"ExecutorUtils.doWhileExecutor(cmd, PredicateUtils.falsePredicate()).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,194,"assertEquals(1, cmd.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,195,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,196,"ExecutorUtils.doWhileExecutor(null, null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,197,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,198,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,200,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,203,// chainedExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,206,public void testChainedExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,207,MockExecutor a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,208,MockExecutor b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,209,"ExecutorUtils.chainedExecutor(a, b).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,210,"assertEquals(1, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,211,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,213,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,214,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,215,"ExecutorUtils.chainedExecutor(new Executor[] {a, b, a}).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,216,"assertEquals(2, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,217,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,219,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,220,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,221,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,222,coll.add(b);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,223,coll.add(a);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,224,coll.add(b);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,225,ExecutorUtils.chainedExecutor(coll).execute(null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,226,"assertEquals(1, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,227,"assertEquals(2, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,230,public void testChainedExecutorEx1a() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,231,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,232,"ExecutorUtils.chainedExecutor(null, null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,233,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,234,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,236,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,239,public void testChainedExecutorEx1b() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,240,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,241,ExecutorUtils.chainedExecutor((Executor[]) null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,242,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,243,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,245,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,248,public void testChainedExecutorEx1c() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,249,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,250,ExecutorUtils.chainedExecutor((Collection) null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,251,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,252,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,254,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,257,public void testChainedExecutorEx2() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,258,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,259,ExecutorUtils.chainedExecutor(new Executor[0]);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,260,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,261,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,263,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,266,public void testChainedExecutorEx3() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,267,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,268,"ExecutorUtils.chainedExecutor(new Executor[] {null, null});"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,269,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,270,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,272,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,275,public void testChainedExecutorEx4() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,276,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,277,ExecutorUtils.chainedExecutor(Collections.EMPTY_LIST);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,278,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,279,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,281,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,284,public void testChainedExecutorEx5() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,285,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,286,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,287,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,288,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,289,ExecutorUtils.chainedExecutor(coll);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,290,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,291,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,293,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,296,// switchExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,299,public void testSwitchExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,300,MockExecutor a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,301,MockExecutor b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,302,"ExecutorUtils.switchExecutor(PredicateUtils.truePredicate(), a, b).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,303,"assertEquals(1, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,304,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,306,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,307,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,308,"ExecutorUtils.switchExecutor(PredicateUtils.falsePredicate(), a, b).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,309,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,310,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,312,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,313,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,314,ExecutorUtils.switchExecutor(
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,315,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,316,"new Executor[] {a, b}).execute(""WELL"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,317,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,318,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,320,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,321,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,322,ExecutorUtils.switchExecutor(
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,323,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,324,"new Executor[] {a, b}).execute(""HELLO"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,325,"assertEquals(1, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,326,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,328,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,329,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,330,MockExecutor c = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,331,ExecutorUtils.switchExecutor(
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,332,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,333,"new Executor[] {a, b}, c).execute(""WELL"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,334,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,335,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,336,"assertEquals(1, c.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,338,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,339,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,340,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,341,"map.put(PredicateUtils.equalPredicate(""HELLO""), a);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,342,"map.put(PredicateUtils.equalPredicate(""THERE""), b);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,343,ExecutorUtils.switchExecutor(map).execute(null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,344,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,345,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,347,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,348,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,349,map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,350,"map.put(PredicateUtils.equalPredicate(""HELLO""), a);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,351,"map.put(PredicateUtils.equalPredicate(""THERE""), b);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,352,"ExecutorUtils.switchExecutor(map).execute(""THERE"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,353,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,354,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,356,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,357,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,358,c = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,359,map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,360,"map.put(PredicateUtils.equalPredicate(""HELLO""), a);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,361,"map.put(PredicateUtils.equalPredicate(""THERE""), b);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,362,"map.put(null, c);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,363,"ExecutorUtils.switchExecutor(map).execute(""WELL"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,364,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,365,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,366,"assertEquals(1, c.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,369,public void testSwitchExecutorEx1a() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,370,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,371,"ExecutorUtils.switchExecutor(null, null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,372,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,373,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,375,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,378,public void testSwitchExecutorEx1b() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,379,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,380,"ExecutorUtils.switchExecutor((Predicate[]) null, (Executor[]) null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,381,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,382,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,384,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,387,public void testSwitchExecutorEx1c() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,388,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,389,ExecutorUtils.switchExecutor((Map) null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,390,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,391,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,393,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,396,public void testSwitchExecutorEx2() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,397,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,398,"ExecutorUtils.switchExecutor(new Predicate[0], new Executor[0]);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,399,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,400,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,402,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,405,public void testSwitchExecutorEx3() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,406,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,407,"ExecutorUtils.switchExecutor(new Predicate[2], new Executor[2]);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,408,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,409,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,411,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,414,public void testSwitchExecutorEx4() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,415,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,416,ExecutorUtils.switchExecutor(Collections.EMPTY_MAP);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,417,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,418,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,420,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,423,public void testSwitchExecutorEx5() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,424,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,425,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,426,"map.put(null, null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,427,"map.put(null, null);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,428,ExecutorUtils.switchExecutor(map);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,429,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,430,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,432,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,435,public void testSwitchExecutorEx6() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,436,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,437,"ExecutorUtils.switchExecutor(new Predicate[2], new Executor[1]);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,438,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,439,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,441,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,444,// switchMapExecutor
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,447,public void testSwitchMapExecutor() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,448,MockExecutor a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,449,MockExecutor b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,450,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,451,"map.put(""HELLO"", a);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,452,"map.put(""THERE"", b);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,453,ExecutorUtils.switchMapExecutor(map).execute(null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,454,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,455,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,457,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,458,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,459,map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,460,"map.put(""HELLO"", a);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,461,"map.put(""THERE"", b);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,462,"ExecutorUtils.switchMapExecutor(map).execute(""THERE"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,463,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,464,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,466,a = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,467,b = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,468,MockExecutor c = new MockExecutor();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,469,map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,470,"map.put(""HELLO"", a);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,471,"map.put(""THERE"", b);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,472,"map.put(null, c);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,473,"ExecutorUtils.switchMapExecutor(map).execute(""WELL"");"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,474,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,475,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,476,"assertEquals(1, c.count);"
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,479,public void testSwitchMapExecutorEx1() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,480,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,481,ExecutorUtils.switchMapExecutor(null);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,482,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,483,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,485,fail();
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,488,public void testSwitchMapExecutorEx2() {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,489,try {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,490,ExecutorUtils.switchMapExecutor(Collections.EMPTY_MAP);
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,491,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,492,return;
True,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,494,fail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,69,mport org.apache.commons.lang.functor.Closure;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,70,mport org.apache.commons.lang.functor.ClosureUtils;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,69,import org.apache.commons.lang.functor.Executor;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,70,import org.apache.commons.lang.functor.ExecutorUtils;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,79," @version $Id: TestTransformerUtils.java,v 1.1 2002/11/05 16:45:13 bayard Exp $"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,79,"* @version $Id: TestTransformerUtils.java,v 1.2 2002/11/06 19:16:15 bayard Exp $"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,197,ublic void testClosureTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,198,"ssertEquals(null, TransformerUtils.asTransformer(ClosureUtils.nopClosure()).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,199,"ssertEquals(cObject, TransformerUtils.asTransformer(ClosureUtils.nopClosure()).transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,200,"ssertEquals(cString, TransformerUtils.asTransformer(ClosureUtils.nopClosure()).transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,201,"ssertEquals(cInteger, TransformerUtils.asTransformer(ClosureUtils.nopClosure()).transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,197,public void testExecutorTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,198,"assertEquals(null, TransformerUtils.asTransformer(ExecutorUtils.nopExecutor()).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,199,"assertEquals(cObject, TransformerUtils.asTransformer(ExecutorUtils.nopExecutor()).transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,200,"assertEquals(cString, TransformerUtils.asTransformer(ExecutorUtils.nopExecutor()).transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,201,"assertEquals(cInteger, TransformerUtils.asTransformer(ExecutorUtils.nopExecutor()).transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,203,ransformerUtils.asTransformer((Closure) null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,203,TransformerUtils.asTransformer((Executor) null);
