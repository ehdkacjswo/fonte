is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,61, DateTimeComparator is the standard implementation of the Comparator
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,62, interface for various Joda and Java objects. The following types
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,63, are supported for comparison:
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,62,* DateTimeComparator provides comparators to compare one date with another.
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,63,* <p>
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,64,* Dates may be specified using any object recognised by the
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,65,* {@link org.joda.time.convert.ConverterManager ConverterManager} class.
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,66,* <p>
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,67,* The default objects recognised by the comparator are:
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,66, <li>java.util.Date
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,67, <li>java.util.Calendar
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,68, <li>java.util.Long (milliseconds)
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,70,* <li>PartialInstant
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,71,* <li>String
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,72,* <li>Calendar
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,73,* <li>Date
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,74,* <li>Long (milliseconds)
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,81,tatic final long serialVersionUID = -6097339773320178364L;
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,87,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,88,private static final long serialVersionUID = -6097339773320178364L;
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,90,/** Singleton instance */
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,93,"/** The lower limit of fields to compare, null if no limit */"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,94,private final DateTimeField iLowerLimit;
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,95,"/** The upper limit of fields to compare, null if no limit */"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,96,private final DateTimeField iUpperLimit;
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,134,rivate final DateTimeField iLowerLimit;
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,135,rivate final DateTimeField iUpperLimit;
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,150,* Restricted constructor.
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,153,super();
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,143, @return null if no lower limit
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,159,* Gets the field that represents the lower limit of comparison.
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,161,"* @return the field, null if no upper limit"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,150, @return null if no upper limit
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,168,* Gets the field that represents the upper limit of comparison.
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,170,"* @return the field, null if no upper limit"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,160," @param lhsObj The first object, logically on the left of a &lt;"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,161, comparison
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,162," @param rhsObj The second object, logically on the right of a &lt;"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,163, comparison
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,180,"* @param lhsObj The first object, logically on the left of a &lt; comparison"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,181,"* @param rhsObj The second object, logically on the right of a &lt; comparison"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,165," rhsObj, positive value otherwise."
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,183,"*  rhsObj, positive value otherwise."
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,216, Support serialization singletons
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,234,* Gets the millisecond value from an object using the converter system.
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,236,* @param obj  the object to convert
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,237,* @return millis since the epoch
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,239,private static long getMillisFromObject(Object obj) {
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,240,return ConverterManager.getInstance().getInstantConverter(obj).getInstantMillis(obj);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,245,* Support serialization singletons.
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,223, Developer's note: The 'equals' method specified by the interface is not
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,224," overridden here. It does not make sense to do so, since 'this' is a"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,225," DateTimeComparator, and 'that' would (presumably) be one of the"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,226, supported object types described elsewhere. The '==' logic provided by
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,227, java.lang.Object for a DateTimeComparator object suffices.
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,231, @param obj
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,232, @return millis since the epoch
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,252,* Gets a debugging string.
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,254,* @return a debugging string
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,234,rivate static long getMillisFromObject(Object obj) {
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,235,eturn ConverterManager.getInstance().getInstantConverter(obj).getInstantMillis(obj);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,256,public String toString() {
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,257,"return ""DateTimeComparator[lowerLimit:"""
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,258,"+ (iLowerLimit == null ? ""none"" : iLowerLimit.getName())"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,259,"+ "",upperLimit:"""
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,260,"+ (iUpperLimit == null ? ""none"" : iUpperLimit.getName())"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,70,"** Constant (1) representing January, the first month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,70,"/** Constant (1) representing January, the first month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,73,"** Constant (2) representing February, the second month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,73,"/** Constant (2) representing February, the second month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,76,"** Constant (3) representing March, the third month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,76,"/** Constant (3) representing March, the third month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,79,"** Constant (4) representing April, the fourth month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,79,"/** Constant (4) representing April, the fourth month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,82,"** Constant (5) representing May, the fifth month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,82,"/** Constant (5) representing May, the fifth month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,85,"** Constant (6) representing June, the sixth month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,85,"/** Constant (6) representing June, the sixth month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,88,"** Constant (7) representing July, the seventh month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,88,"/** Constant (7) representing July, the seventh month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,91,"** Constant (8) representing August, the eighth month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,91,"/** Constant (8) representing August, the eighth month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,94,"** Constant (9) representing September, the nineth month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,94,"/** Constant (9) representing September, the nineth month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,97,"** Constant (10) representing October, the tenth month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,97,"/** Constant (10) representing October, the tenth month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,100,"** Constant (11) representing November, the eleventh month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,100,"/** Constant (11) representing November, the eleventh month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,103,"** Constant (12) representing December, the twelfth month */"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,103,"/** Constant (12) representing December, the twelfth month (ISO) */"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,147,** Milliseconds in one second (1000) */
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,147,/** Milliseconds in one second (1000) (ISO) */
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,150,** Seconds in one minute (60) */
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,150,/** Seconds in one minute (60) (ISO) */
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,152,/** Milliseconds in one minute (ISO) */
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,154,** Minutes in one hour (60) */
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,155,/** Minutes in one hour (ISO) */
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,157,/** Milliseconds in one hour (ISO) */
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,159,/** Minutes in one hour (60) (ISO) */
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,159,"** Hours in a typical day (24). Due to time zone offset changes, the"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,162,"/** Hours in a typical day (24) (ISO). Due to time zone offset changes, the"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,162,"** Minutes in a typical day. Due to time zone offset changes, the number"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,165,"/** Minutes in a typical day (ISO). Due to time zone offset changes, the number"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,165,"** Seconds in a typical day. Due to time zone offset changes, the number"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,168,"/** Seconds in a typical day (ISO). Due to time zone offset changes, the number"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,168,"** Milliseconds in a typical day. Due to time zone offset changes, the"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,171,"/** Milliseconds in a typical day (ISO). Due to time zone offset changes, the"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,172,** Days in one week (7) */
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,175,/** Days in one week (7) (ISO) */
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,177,"** Minutes in a typical week. Due to time zone offset changes, the number"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,180,"/** Minutes in a typical week (ISO). Due to time zone offset changes, the number"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,180,"** Seconds in a typical week. Due to time zone offset changes, the number"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,183,"/** Seconds in a typical week (ISO). Due to time zone offset changes, the number"
False,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,183,"** Milliseconds in a typical week. Due to time zone offset changes, the"
True,JodaTime/src/java/org/joda/time/DateTimeConstants.java,JodaTime/src/java/org/joda/time/DateTimeConstants.java,186,"/** Milliseconds in a typical week (ISO). Due to time zone offset changes, the"
False,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,73, Base class for implementing chronologies based on Gregorian/Julian formulas.
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,73,* Abstract Chronology for implementing chronologies based on Gregorian/Julian formulae.
False,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,87,tatic final long serialVersionUID = 8283225332206808863L;
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,87,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,88,private static final long serialVersionUID = 8283225332206808863L;
False,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,65, Allows chronologies to be assembled from a container of fields.
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,65,* Abstract Chronology that enables chronologies to be assembled from
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,66,* a container of fields.
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,71,* @since 1.0
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,64,mport org.joda.time.DurationField;
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,70, <code>BuddhistChronology</code> provides access to the individual date
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,71, time fields for the Buddhist chronological calendar system.
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,69,"* Implements the Buddhist calendar system, which is similar to Gregorian/Julian,"
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,70,* except with the year offset by 543.
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,73, The Buddhist calendar differs from the GregorianJulian calendar only
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,72,* The Buddhist calendar differs from the Gregorian/Julian calendar only
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,85,tatic final long serialVersionUID = -3474595157769370126L;
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,84,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,85,private static final long serialVersionUID = -3474595157769370126L;
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,68," Implements a Coptic calendar system, which defines every fourth year as"
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,68,"* Implements the Coptic calendar system, which defines every fourth year as"
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,83,* @since 1.0
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,86,tatic final long serialVersionUID = -5972804258688333942L;
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,87,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,88,private static final long serialVersionUID = -5972804258688333942L;
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,75, GJChronology provides access to the individual date time fields for the
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,76, Gregorian/Julian defined chronological calendar system.
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,75,* Implements the Gregorian/Julian calendar system which is the calendar system
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,76,"* used in most of the world. Wherever possible, it is recommended to use the"
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,77,* {@link ISOChronology} instead.
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,90, This chronology differs from {@link java.util.GregorianCalendar
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,91, java.util.GregorianCalendar} in that years in BCE are returned
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,92, correctly. Thus year 1 BCE is returned as -1 instead of 1. The yearOfEra
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,93, field produces results compatible with GregorianCalendar.
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,91,* This chronology differs from
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,92,* {@link java.util.GregorianCalendar GregorianCalendar} in that years
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,93,* in BCE are returned correctly. Thus year 1 BCE is returned as -1 instead of 1.
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,94,* The yearOfEra field produces results compatible with GregorianCalendar.
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,112,tatic final long serialVersionUID = -2545574827706931671L;
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,113,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,114,private static final long serialVersionUID = -2545574827706931671L;
False,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,61,mport org.joda.time.DateTimeField;
False,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,63,mport org.joda.time.field.DividedDateTimeField;
False,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,64,mport org.joda.time.field.OffsetDateTimeField;
False,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,65,mport org.joda.time.field.RemainderDateTimeField;
True,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,81,* @since 1.0
False,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,88,tatic final long serialVersionUID = -861407383323710522L;
True,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,85,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,86,private static final long serialVersionUID = -861407383323710522L;
True,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,86,* @since 1.0
False,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,89,tatic final long serialVersionUID = -8731039522547897247L;
True,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,90,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,91,private static final long serialVersionUID = -8731039522547897247L;
False,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,62," Wraps another chronology, ensuring all the fields are lenient."
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,62,"* Wraps another Chronology, ensuring all the fields are lenient."
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,67,* @since 1.0
False,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,72,tatic final long serialVersionUID = -3148237568046877177L;
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,73,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,74,private static final long serialVersionUID = -3148237568046877177L;
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,56,mport java.io.IOException;
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,57,mport java.io.ObjectInputStream;
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,58,mport java.io.Serializable;
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,76, Imposes limits on the range of instants that the fields within a Chronology
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,77, may support. The limits are applied to both DateTimeFields and
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,78, DurationFields.
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,72,* Wraps another Chronology to impose limits on the range of instants that
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,73,* the fields within a Chronology may support. The limits are applied to both
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,74,* DateTimeFields and DurationFields.
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,92,tatic final long serialVersionUID = 7670866536893052522L;
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,88,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,89,private static final long serialVersionUID = 7670866536893052522L;
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,99, @param base base chronology to wrap
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,96,* @param base  base chronology to wrap
False,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,62," Wraps another chronology, ensuring all the fields are strict."
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,62,"* Wraps another Chronology, ensuring all the fields are strict."
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,67,* @since 1.0
False,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,72,tatic final long serialVersionUID = 6633006628097111960L;
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,73,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,74,private static final long serialVersionUID = 6633006628097111960L;
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,68, Wraps another Chronology for supporting time zones.
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,68,* Wraps another Chronology to add support for time zones.
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,78,/** Serialization lock */
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,79,private static final long serialVersionUID = -1079258847191166848L;
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,100,tatic final long serialVersionUID = -1079258847191166848L;
False,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,75, <li>Long
True,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,75,* <li>Long (milliseconds)
False,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,82, <li>Long
True,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,82,* <li>Long (milliseconds)
