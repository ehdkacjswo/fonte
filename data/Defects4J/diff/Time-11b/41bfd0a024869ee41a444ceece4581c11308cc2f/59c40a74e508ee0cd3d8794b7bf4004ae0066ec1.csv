is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,345," Calculates the number of decimal digits for the given value, ignoring"
False,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,346, sign.
True,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,345,"* Calculates the number of decimal digits for the given value,"
True,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,346,* including the sign.
False,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,348,ublic static int calculateDigitCount(int value) {
True,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,348,public static int calculateDigitCount(long value) {
False,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,350,f (value != Integer.MIN_VALUE) {
False,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,351,alue = -value;
True,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,350,if (value != Long.MIN_VALUE) {
True,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,351,return calculateDigitCount(-value) + 1;
False,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,353,eturn 10;
True,JodaTime/src/java/org/joda/time/format/FormatUtils.java,JodaTime/src/java/org/joda/time/format/FormatUtils.java,353,return 20;
False,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,110,appendSeconds()
True,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,110,.appendSecondsWithOptionalMillis()
False,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,133,appendSeconds()
True,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,133,.appendSecondsWithOptionalMillis()
False,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,159,appendSeconds()
True,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,159,.appendSecondsWithOptionalMillis()
False,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,182,appendSeconds()
True,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,182,.appendSecondsWithOptionalMillis()
False,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,209,appendSeconds()
True,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,209,.appendSecondsWithOptionalMillis()
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,61,import org.joda.time.DateTimeConstants;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,420,"* Instruct the printer to emit a combined seconds and millis field, if supported."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,421,* The millis will overflow into the seconds if necessary.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,422,* The millis are always output.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,424,* @return this PeriodFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,426,public PeriodFormatterBuilder appendSecondsWithMillis() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,427,appendField(9);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,428,return this;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,432,"* Instruct the printer to emit a combined seconds and millis field, if supported."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,433,* The millis will overflow into the seconds if necessary.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,434,* The millis are only output if non-zero.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,436,* @return this PeriodFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,438,public PeriodFormatterBuilder appendSecondsWithOptionalMillis() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,439,appendField(10);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,440,return this;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,940,f (iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) >= 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,965,if (iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,952,f (valueLong < 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,977,if (valueLong == Long.MAX_VALUE) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,956,nt value = (int)valueLong;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,958,nt sum = Math.max
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,959,"FormatUtils.calculateDigitCount(value), iMinPrintedDigits);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,960,f (value < 0) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,961,/ Account for sign character
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,962,um++;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,981,"int sum = Math.max(FormatUtils.calculateDigitCount(valueLong), iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,982,if (iFieldType >= 9) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,983,sum++; // decimal point
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,984,if (iFieldType == 10 && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,985,sum -= 4; // remove three digits and decimal point
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,987,valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,989,int value = (int) valueLong;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,978,f (valueLong < 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1004,if (valueLong == Long.MAX_VALUE) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,981,nt value = (int)valueLong;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1007,int value = (int) valueLong;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1008,if (iFieldType >= 9) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1009,value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1022,if (iFieldType >= 9) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1023,int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1024,if (iFieldType == 9 || dp > 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1025,buf.append('.');
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1026,"FormatUtils.appendPaddedInteger(buf, dp, 3);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1000,f (valueLong < 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1036,if (valueLong == Long.MAX_VALUE) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1003,nt value = (int)valueLong;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1039,int value = (int) valueLong;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1040,if (iFieldType >= 9) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1041,value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1054,if (iFieldType >= 9) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1055,int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1056,if (iFieldType == 9 || dp > 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1057,out.write('.');
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1058,"FormatUtils.writePaddedInteger(out, dp, 3);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1145," @return negative value if nothing to print, otherwise lower 32 bits"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1146, is signed int value.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1191,"* @return Long.MAX_VALUE if nothing to print, otherwise value"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1160,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1205,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1163,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1208,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1169,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1214,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1175,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1220,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1181,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1226,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1187,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1232,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1193,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1238,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1199,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1244,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1205,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1250,return Long.MAX_VALUE;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1254,case 9: // drop through
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1255,case 10:
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1256,if (type != null && type.seconds().isSupported() == false && type.millis().isSupported() == false) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1257,return Long.MAX_VALUE;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1259,value = period.getSeconds() * DateTimeConstants.MILLIS_PER_SECOND + period.getMillis();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1260,break;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1212,eturn -1;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1264,return Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1215,eturn value & 0xffffffffL;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1267,return value;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1290,case 9: // drop through
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1291,case 10:
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1292,return type.seconds().isSupported() ||  type.millis().isSupported();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,132,"ssertEquals(""P1Y2M3W4DT5H6M7.008S"", ISOPeriodFormat.getInstance().standard().print(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,133,"ssertEquals(""PT0S"", ISOPeriodFormat.getInstance().standard().print(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,132,"Period p = new Period(1, 2, 3, 4, 5, 6 ,7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,133,"assertEquals(""P1Y2M3W4DT5H6M7.008S"", ISOPeriodFormat.getInstance().standard().print(p));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,134,"p = new Period(1, 2, 3, 4, 5, 6 ,7, 0);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,135,"assertEquals(""P1Y2M3W4DT5H6M7S"", ISOPeriodFormat.getInstance().standard().print(p));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,137,p = new Period(0);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,138,"assertEquals(""PT0S"", ISOPeriodFormat.getInstance().standard().print(p));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,139,"p = new Period(0, PeriodType.getAllType().withMillisRemoved().withSecondsRemoved());"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,140,"assertEquals(""PT0M"", ISOPeriodFormat.getInstance().standard().print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,184,public void testFormatSecondsWithMillis() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,185,PeriodFormatter f = builder.appendSecondsWithMillis().toFormatter();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,186,"Period p = new Period(0, 0, 0, 0, 0, 0, 7, 0);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,187,"assertEquals(""7.000"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,188,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,189,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,191,"p = new Period(0, 0, 0, 0, 0, 0, 7, 1);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,192,"assertEquals(""7.001"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,193,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,194,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,196,"p = new Period(0, 0, 0, 0, 0, 0, 7, 999);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,197,"assertEquals(""7.999"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,198,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,199,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,201,"p = new Period(0, 0, 0, 0, 0, 0, 7, 1000);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,202,"assertEquals(""8.000"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,203,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,204,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,206,"p = new Period(0, 0, 0, 0, 0, 0, 7, 1001);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,207,"assertEquals(""8.001"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,208,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,209,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,211,"p = new Period(0, 0, 0, 0, 0, 0, 7, -1);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,212,"assertEquals(""6.999"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,213,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,214,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,216,"p = new Period(0, 0, 0, 0, 0, 0, -7, 1);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,217,"assertEquals(""-6.999"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,218,"assertEquals(6, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,219,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,221,"p = new Period(0, 0, 0, 0, 0, 0, -7, -1);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,222,"assertEquals(""-7.001"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,223,"assertEquals(6, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,224,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,227,public void testFormatSecondsWithOptionalMillis() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,228,PeriodFormatter f = builder.appendSecondsWithOptionalMillis().toFormatter();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,229,"Period p = new Period(0, 0, 0, 0, 0, 0, 7, 0);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,230,"assertEquals(""7"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,231,"assertEquals(1, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,232,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,234,"p = new Period(0, 0, 0, 0, 0, 0, 7, 1);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,235,"assertEquals(""7.001"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,236,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,237,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,239,"p = new Period(0, 0, 0, 0, 0, 0, 7, 999);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,240,"assertEquals(""7.999"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,241,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,242,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,244,"p = new Period(0, 0, 0, 0, 0, 0, 7, 1000);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,245,"assertEquals(""8"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,246,"assertEquals(1, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,247,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,249,"p = new Period(0, 0, 0, 0, 0, 0, 7, 1001);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,250,"assertEquals(""8.001"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,251,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,252,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,254,"p = new Period(0, 0, 0, 0, 0, 0, 7, -1);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,255,"assertEquals(""6.999"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,256,"assertEquals(5, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,257,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,259,"p = new Period(0, 0, 0, 0, 0, 0, -7, 1);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,260,"assertEquals(""-6.999"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,261,"assertEquals(6, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,262,"assertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,264,"p = new Period(0, 0, 0, 0, 0, 0, -7, -1);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,265,"assertEquals(""-7.001"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,266,"assertEquals(6, f.calculatePrintedLength(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,267,"assertEquals(1, f.countFieldsToPrint(p));"
