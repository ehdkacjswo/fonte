is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/tz/TestAll.java,JodaTime/src/test/org/joda/time/tz/TestAll.java,76,suite.addTest(TestBuilder.suite());
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,5,* Copyright (c) 2001-2005 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,10,* are met:
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,54,package org.joda.time.tz;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,56,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,57,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,59,import org.joda.time.DateTime;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,60,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,61,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,62,import org.joda.time.format.DateTimeFormatterBuilder;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,65,* Test cases for DateTimeZoneBuilder.
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,67,* @author Brian S O'Neill
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,69,public class TestBuilder extends TestCase {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,70,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,71,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,74,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,75,return new TestSuite(TestBuilder.class);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,78,static final DateTimeFormatter OFFSET_FORMATTER = new DateTimeFormatterBuilder()
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,79,".appendTimeZoneOffset(null, true, 2, 4)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,80,.toFormatter();
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,82,"// Each row is {transition, nameKey, standardOffset, offset}"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,83,static final String[][] AMERICA_LOS_ANGELES_DATA = {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,84,"{null,                            ""LMT"", ""-07:52:58"", ""-07:52:58""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,85,"{""1883-11-18T19:52:58.000Z"",      ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,86,"{""1918-03-31T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,87,"{""1918-10-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,88,"{""1919-03-30T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,89,"{""1919-10-26T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,90,"{""1942-02-09T02:00:00.000-08:00"", ""PWT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,91,"{""1945-08-14T23:00:00.000Z"",      ""PPT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,92,"{""1945-09-30T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,93,"{""1948-03-14T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,94,"{""1949-01-01T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,95,"{""1950-04-30T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,96,"{""1950-09-24T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,97,"{""1951-04-29T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,98,"{""1951-09-30T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,99,"{""1952-04-27T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,100,"{""1952-09-28T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,101,"{""1953-04-26T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,102,"{""1953-09-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,103,"{""1954-04-25T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,104,"{""1954-09-26T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,105,"{""1955-04-24T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,106,"{""1955-09-25T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,107,"{""1956-04-29T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,108,"{""1956-09-30T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,109,"{""1957-04-28T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,110,"{""1957-09-29T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,111,"{""1958-04-27T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,112,"{""1958-09-28T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,113,"{""1959-04-26T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,114,"{""1959-09-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,115,"{""1960-04-24T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,116,"{""1960-09-25T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,117,"{""1961-04-30T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,118,"{""1961-09-24T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,119,"{""1962-04-29T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,120,"{""1962-10-28T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,121,"{""1963-04-28T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,122,"{""1963-10-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,123,"{""1964-04-26T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,124,"{""1964-10-25T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,125,"{""1965-04-25T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,126,"{""1965-10-31T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,127,"{""1966-04-24T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,128,"{""1966-10-30T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,129,"{""1967-04-30T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,130,"{""1967-10-29T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,131,"{""1968-04-28T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,132,"{""1968-10-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,133,"{""1969-04-27T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,134,"{""1969-10-26T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,135,"{""1970-04-26T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,136,"{""1970-10-25T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,137,"{""1971-04-25T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,138,"{""1971-10-31T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,139,"{""1972-04-30T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,140,"{""1972-10-29T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,141,"{""1973-04-29T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,142,"{""1973-10-28T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,143,"{""1974-01-06T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,144,"{""1974-10-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,145,"{""1975-02-23T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,146,"{""1975-10-26T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,147,"{""1976-04-25T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,148,"{""1976-10-31T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,149,"{""1977-04-24T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,150,"{""1977-10-30T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,151,"{""1978-04-30T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,152,"{""1978-10-29T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,153,"{""1979-04-29T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,154,"{""1979-10-28T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,155,"{""1980-04-27T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,156,"{""1980-10-26T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,157,"{""1981-04-26T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,158,"{""1981-10-25T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,159,"{""1982-04-25T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,160,"{""1982-10-31T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,161,"{""1983-04-24T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,162,"{""1983-10-30T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,163,"{""1984-04-29T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,164,"{""1984-10-28T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,165,"{""1985-04-28T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,166,"{""1985-10-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,167,"{""1986-04-27T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,168,"{""1986-10-26T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,169,"{""1987-04-05T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,170,"{""1987-10-25T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,171,"{""1988-04-03T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,172,"{""1988-10-30T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,173,"{""1989-04-02T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,174,"{""1989-10-29T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,175,"{""1990-04-01T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,176,"{""1990-10-28T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,177,"{""1991-04-07T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,178,"{""1991-10-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,179,"{""1992-04-05T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,180,"{""1992-10-25T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,181,"{""1993-04-04T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,182,"{""1993-10-31T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,183,"{""1994-04-03T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,184,"{""1994-10-30T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,185,"{""1995-04-02T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,186,"{""1995-10-29T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,187,"{""1996-04-07T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,188,"{""1996-10-27T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,189,"{""1997-04-06T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,190,"{""1997-10-26T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,191,"{""1998-04-05T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,192,"{""1998-10-25T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,193,"{""1999-04-04T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,194,"{""1999-10-31T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,195,"{""2000-04-02T02:00:00.000-08:00"", ""PDT"", ""-08:00"", ""-07:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,196,"{""2000-10-29T02:00:00.000-07:00"", ""PST"", ""-08:00"", ""-08:00""},"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,199,static DateTimeZone buildAmericaLosAngeles() {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,200,return new DateTimeZoneBuilder()
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,201,".addCutover(-2147483648, 'w', 1, 1, 0, false, 0)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,202,.setStandardOffset(-28378000)
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,203,".setFixedSavings(""LMT"", 0)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,204,".addCutover(1883, 'w', 11, 18, 0, false, 43200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,205,.setStandardOffset(-28800000)
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,206,".addRecurringSavings(""PDT"", 3600000, 1918, 1919, 'w',  3, -1, 7, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,207,".addRecurringSavings(""PST"",       0, 1918, 1919, 'w', 10, -1, 7, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,208,".addRecurringSavings(""PWT"", 3600000, 1942, 1942, 'w',  2,  9, 0, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,209,".addRecurringSavings(""PPT"", 3600000, 1945, 1945, 'u',  8, 14, 0, false, 82800000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,210,".addRecurringSavings(""PST"",       0, 1945, 1945, 'w',  9, 30, 0, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,211,".addRecurringSavings(""PDT"", 3600000, 1948, 1948, 'w',  3, 14, 0, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,212,".addRecurringSavings(""PST"",       0, 1949, 1949, 'w',  1,  1, 0, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,213,".addRecurringSavings(""PDT"", 3600000, 1950, 1966, 'w',  4, -1, 7, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,214,".addRecurringSavings(""PST"",       0, 1950, 1961, 'w',  9, -1, 7, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,215,".addRecurringSavings(""PST"",       0, 1962, 1966, 'w', 10, -1, 7, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,216,".addRecurringSavings(""PST"",       0, 1967, 2147483647, 'w', 10, -1, 7, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,217,".addRecurringSavings(""PDT"", 3600000, 1967, 1973, 'w', 4, -1,  7, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,218,".addRecurringSavings(""PDT"", 3600000, 1974, 1974, 'w', 1,  6,  0, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,219,".addRecurringSavings(""PDT"", 3600000, 1975, 1975, 'w', 2, 23,  0, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,220,".addRecurringSavings(""PDT"", 3600000, 1976, 1986, 'w', 4, -1,  7, false, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,221,".addRecurringSavings(""PDT"", 3600000, 1987, 2147483647, 'w', 4, 1, 7, true, 7200000)"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,222,".toDateTimeZone(""America/Los_Angeles"");"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,225,private DateTimeZone originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,227,public TestBuilder(String name) {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,228,super(name);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,231,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,232,originalDateTimeZone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,233,DateTimeZone.setDefault(DateTimeZone.UTC);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,236,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,237,DateTimeZone.setDefault(originalDateTimeZone);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,240,public void testID() {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,241,DateTimeZone tz = buildAmericaLosAngeles();
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,242,"assertEquals(""America/Los_Angeles"", tz.getID());"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,245,public void testForwardTransitions() {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,246,DateTimeZone tz = buildAmericaLosAngeles();
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,247,"testForwardTransitions(tz, AMERICA_LOS_ANGELES_DATA);"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,250,"private void testForwardTransitions(DateTimeZone tz, String[][] data) {"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,251,long instant = Long.MIN_VALUE;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,252,for (int i=0; i<data.length; i++) {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,253,String[] row = data[i];
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,254,long expectedInstant = instant;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,255,if (row[0] != null) {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,256,instant = tz.nextTransition(instant);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,257,expectedInstant = new DateTime(row[0]).getMillis();
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,260,String expectedKey = row[1];
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,261,int expectedStandardOffset = -(int) OFFSET_FORMATTER.parseMillis(row[2]);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,262,int expectedOffset = -(int) OFFSET_FORMATTER.parseMillis(row[3]);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,264,"assertEquals(expectedInstant, instant);"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,265,"assertEquals(expectedKey, tz.getNameKey(instant));"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,266,"assertEquals(expectedStandardOffset, tz.getStandardOffset(instant));"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,267,"assertEquals(expectedOffset, tz.getOffset(instant));"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,269,// Sample a few instants between transitions.
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,270,if (i < data.length - 1) {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,271,long nextInstant = new DateTime(data[i + 1][0]).getMillis();
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,272,long span = (nextInstant - instant) / 10;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,273,for (int j=1; j<10; j++) {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,274,long between = instant + j * span;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,275,"assertEquals(expectedKey, tz.getNameKey(between));"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,276,"assertEquals(expectedStandardOffset, tz.getStandardOffset(between));"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,277,"assertEquals(expectedOffset, tz.getOffset(between));"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,283,public void testReverseTransitions() {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,284,DateTimeZone tz = buildAmericaLosAngeles();
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,285,"testReverseTransitions(tz, AMERICA_LOS_ANGELES_DATA);"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,288,"private void testReverseTransitions(DateTimeZone tz, String[][] data) {"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,289,long instant = new DateTime(data[data.length - 1][0]).getMillis();
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,290,for (int i=data.length; --i>=1; ) {
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,291,String[] row = data[i];
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,292,String[] prevRow = data[i - 1];
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,293,instant = tz.previousTransition(instant);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,295,long expectedInstant = new DateTime(row[0]).getMillis() - 1;
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,296,String expectedKey = prevRow[1];
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,297,int expectedStandardOffset = -(int) OFFSET_FORMATTER.parseMillis(prevRow[2]);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,298,int expectedOffset = -(int) OFFSET_FORMATTER.parseMillis(prevRow[3]);
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,300,"assertEquals(expectedInstant, instant);"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,301,"assertEquals(expectedKey, tz.getNameKey(instant));"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,302,"assertEquals(expectedStandardOffset, tz.getStandardOffset(instant));"
True,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,JodaTime/src/test/org/joda/time/tz/TestBuilder.java,303,"assertEquals(expectedOffset, tz.getOffset(instant));"
