is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,73,* Override to return the correct timzone instance.
True,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,74,* @since 1.5
True,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,77,String id = getID();
True,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,78,"if (id.length() == 6 && (id.startsWith(""+"") || id.startsWith(""-""))) {"
True,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,79,// standard format offset [+-]hh:mm
True,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,80,"// our ID is without any prefix, so we need to add the GMT back"
True,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,81,"return java.util.TimeZone.getTimeZone(""GMT"" + getID());"
True,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java,83,"// unusual offset, so setup a SimpleTimeZone as best we can"
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,319,public void testTimeZoneConversion() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,320,"TimeZone jdkTimeZone = TimeZone.getTimeZone(""GMT-10"");"
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,321,"assertEquals(""GMT-10:00"", jdkTimeZone.getID());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,323,DateTimeZone jodaTimeZone = DateTimeZone.forTimeZone(jdkTimeZone);
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,324,"assertEquals(""-10:00"", jodaTimeZone.getID());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,325,"assertEquals(jdkTimeZone.getRawOffset(), jodaTimeZone.getOffset(0L));"
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,327,TimeZone convertedTimeZone = jodaTimeZone.toTimeZone();
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,328,"assertEquals(""GMT-10:00"", jdkTimeZone.getID());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,330,"assertEquals(jdkTimeZone.getID(), convertedTimeZone.getID());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,JodaTime/src/test/org/joda/time/TestDateTimeZone.java,331,"assertEquals(jdkTimeZone.getRawOffset(), convertedTimeZone.getRawOffset());"
False,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,81,ublic void testToTimeZone() throws Exception {
False,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,82,"ixedDateTimeZone zone = new FixedDateTimeZone(""A"", ""B"", 1, 5);"
True,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,81,public void testToTimeZone1() throws Exception {
True,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,82,"FixedDateTimeZone zone = new FixedDateTimeZone(""+00:01"", ""+00:01"", 60000, 60000);"
True,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,85,"assertEquals(60000, tz.getRawOffset());"
True,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,86,"assertEquals(60000, tz.getOffset(1167638400000L));"
True,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,87,"assertEquals(60000, tz.getOffset(1185951600000L));"
True,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,90,public void testToTimeZone2() throws Exception {
True,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,91,"FixedDateTimeZone zone = new FixedDateTimeZone(""A"", ""B"", 1, 5);"
True,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java,92,java.util.TimeZone tz = zone.toTimeZone();
