is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,189,"field.getType(), new Integer(value),"
False,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,190,"ew Integer(field.getMinimumValue()), null);"
True,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,189,"(field.getType(), Integer.valueOf(value),"
True,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,190,"Integer.valueOf(field.getMinimumValue()), null);"
False,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,194,"field.getType(), new Integer(value),"
False,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,195,"ull, new Integer(field.getMaximumValue()));"
True,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,194,"(field.getType(), Integer.valueOf(value),"
True,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,195,"null, Integer.valueOf(field.getMaximumValue()));"
False,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,204,"field.getType(), new Integer(value),"
False,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,205,"ew Integer(field.getMinimumValue(partial, values)), null);"
True,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,204,"(field.getType(), Integer.valueOf(value),"
True,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,205,"Integer.valueOf(field.getMinimumValue(partial, values)), null);"
False,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,209,"field.getType(), new Integer(value),"
False,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,210,"ull, new Integer(field.getMaximumValue(partial, values)));"
True,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,209,"(field.getType(), Integer.valueOf(value),"
True,src/main/java/org/joda/time/chrono/BaseChronology.java,src/main/java/org/joda/time/chrono/BaseChronology.java,210,"null, Integer.valueOf(field.getMaximumValue(partial, values)));"
False,src/main/java/org/joda/time/chrono/GJChronology.java,src/main/java/org/joda/time/chrono/GJChronology.java,707,"iGregorianField.getType(), new Integer(value), null, null);"
True,src/main/java/org/joda/time/chrono/GJChronology.java,src/main/java/org/joda/time/chrono/GJChronology.java,707,"(iGregorianField.getType(), Integer.valueOf(value), null, null);"
False,src/main/java/org/joda/time/chrono/GJChronology.java,src/main/java/org/joda/time/chrono/GJChronology.java,720,"iJulianField.getType(), new Integer(value), null, null);"
True,src/main/java/org/joda/time/chrono/GJChronology.java,src/main/java/org/joda/time/chrono/GJChronology.java,720,"(iJulianField.getType(), Integer.valueOf(value), null, null);"
False,src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,143,ntegers[i] = new Integer(i);
True,src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,143,integers[i] = Integer.valueOf(i);
False,src/main/java/org/joda/time/chrono/JulianChronology.java,src/main/java/org/joda/time/chrono/JulianChronology.java,81,"DateTimeFieldType.year(), new Integer(year), null, null);"
True,src/main/java/org/joda/time/chrono/JulianChronology.java,src/main/java/org/joda/time/chrono/JulianChronology.java,81,"(DateTimeFieldType.year(), Integer.valueOf(year), null, null);"
False,src/main/java/org/joda/time/chrono/ZonedChronology.java,src/main/java/org/joda/time/chrono/ZonedChronology.java,469,"hrow new IllegalFieldValueException(iField.getType(), new Integer(value),"
True,src/main/java/org/joda/time/chrono/ZonedChronology.java,src/main/java/org/joda/time/chrono/ZonedChronology.java,469,"throw new IllegalFieldValueException(iField.getType(), Integer.valueOf(value),"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,216,"field.getType(), new Integer(value),"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,217,"ew Integer(lowerBound), new Integer(upperBound));"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,216,"(field.getType(), Integer.valueOf(value),"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,217,"Integer.valueOf(lowerBound), Integer.valueOf(upperBound));"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,234,"fieldType, new Integer(value),"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,235,"ew Integer(lowerBound), new Integer(upperBound));"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,234,"(fieldType, Integer.valueOf(value),"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,235,"Integer.valueOf(lowerBound), Integer.valueOf(upperBound));"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,251,"fieldName, new Integer(value),"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,252,"ew Integer(lowerBound), new Integer(upperBound));"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,251,"(fieldName, Integer.valueOf(value),"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,252,"Integer.valueOf(lowerBound), Integer.valueOf(upperBound));"
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,402,eturn withPivotYear(new Integer(pivotYear));
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,402,return withPivotYear(Integer.valueOf(pivotYear));
False,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,1799,"rray = new Object[] {validValues, new Integer(maxLength)};"
True,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,1799,"array = new Object[] {validValues, Integer.valueOf(maxLength)};"
