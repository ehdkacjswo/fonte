is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,5, Copyright (c) 2001-03 Stephen Colebourne.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,6, All rights reserved.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,10, are met:
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,18,    distribution.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,33,    permission of the Joda project.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,46, SUCH DAMAGE.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,54,ackage org.joda.time;
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,56,mport java.util.Locale;
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,57,mport java.io.Serializable;
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,60, AbstractDateTimeFieldProperty is a base class for binding a
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,61, ReadableDateTime to a DateTimeField.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,62, <p>
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,63, It allows the date and time manipulation code to be field based yet
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,64, still easy to use.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,65, <p>
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,66," AbstractDateTimeFieldPropery itself is thread-safe and immutable, but the"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,67, ReadableDateTime being operated on may be mutable and not thread-safe.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,69, @see ReadableInstant
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,70, @see DateTimeField
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,72, @author Stephen Colebourne
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,73, @author Brian S O'Neill
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,74, @since 1.0
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,76,ublic abstract class AbstractDateTimeFieldProperty implements Serializable {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,78,tatic final long serialVersionUID = 1971226328211649661L;
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,81, Constructor.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,83,ublic AbstractDateTimeFieldProperty() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,84,uper();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,89, Gets the field being used.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,91, @return the field
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,93,ublic abstract DateTimeField getField();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,96, Gets the name of the field.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,98, @return the field name
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,100,ublic String getName() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,101,eturn getField().getName();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,105, Gets the instant being used.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,107, @return the instant
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,109,ublic abstract ReadableDateTime getInstant();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,113, Gets a value from the instant.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,115, @return the current value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,116, @see DateTimeField#get
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,118,ublic int get() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,119,eturn getField().get(getInstant().getMillis());
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,123, Gets a text value from the instant.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,125, @param locale  optional locale to use for selecting a text symbol
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,126, @return the current text value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,127, @see DateTimeField#getAsText
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,129,ublic String getAsText(Locale locale) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,130,"eturn getField().getAsText(getInstant().getMillis(), locale);"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,134, Gets a text value from the instant.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,136, @return the current text value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,137, @see DateTimeField#getAsText
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,139,ublic final String getAsText() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,140,"eturn getField().getAsText(getInstant().getMillis(), null);"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,144, Gets a short text value from the instant.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,146, @param locale  optional locale to use for selecting a text symbol
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,147, @return the current text value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,148, @see DateTimeField#getAsShortText
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,150,ublic String getAsShortText(Locale locale) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,151,"eturn getField().getAsShortText(getInstant().getMillis(), locale);"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,155, Gets a short text value from the instant.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,157, @return the current text value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,158, @see DateTimeField#getAsShortText
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,160,ublic final String getAsShortText() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,161,eturn getAsShortText(null);
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,166, Returns the difference between this field property instant and the one
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,167," passed in, in the units of this field. The sign of the difference"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,168," matches that of compareTo. In other words, this field property's instant"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,169, is the minuend.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,171, @param instant the subtrahend
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,172, @return the difference in the units of this field
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,173, @see DateTimeField#getDifference
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,175,ublic int getDifference(ReadableInstant instant) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,176,f (instant == null) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,177,"hrow new IllegalArgumentException(""The instant must not be null"");"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,179,"eturn getField().getDifference(getInstant().getMillis(), instant.getMillis());"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,183, Returns the difference between this field property instant and the one
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,184," passed in, in the units of this field. The sign of the difference"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,185," matches that of compareTo. In other words, this field property's instant"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,186, is the minuend.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,188, @param instant the subtrahend
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,189, @return the difference in the units of this field
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,190, @see DateTimeField#getDifference
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,192,ublic long getDifferenceAsLong(ReadableInstant instant) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,193,f (instant == null) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,194,"hrow new IllegalArgumentException(""The instant must not be null"");"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,196,"eturn getField().getDifferenceAsLong(getInstant().getMillis(), instant.getMillis());"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,201," Returns the duration per unit value of this field. For example, if this"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,202," field represents ""hour of day"", then the duration is an hour."
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,204," @return the duration of this field, or UnsupportedDurationField"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,206,ublic DurationField getDurationField() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,207,eturn getField().getDurationField();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,211," Returns the range duration of this field. For example, if this field"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,212," represents ""hour of day"", then the range duration is a day."
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,214," @return the range duration of this field, or null if field has no range"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,216,ublic DurationField getRangeDurationField() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,217,eturn getField().getRangeDurationField();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,221, Gets whether this field is leap.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,223, @return true if a leap field
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,224, @see DateTimeField#isLeap
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,226,ublic boolean isLeap() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,227,eturn getField().isLeap(getInstant().getMillis());
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,231, Gets the amount by which this field is leap.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,233, @return the amount by which the field is leap
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,234, @see DateTimeField#getLeapAmount
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,236,ublic int getLeapAmount() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,237,eturn getField().getLeapAmount(getInstant().getMillis());
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,241," If this field were to leap, then it would be in units described by the"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,242," returned duration. If this field doesn't ever leap, null is returned."
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,244,ublic DurationField getLeapDurationField() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,245,eturn getField().getLeapDurationField();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,250, Gets the minimum value for the field ignoring the current time.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,252, @return the minimum value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,253, @see DateTimeField#getMinimumValue
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,255,ublic int getMinimumValueOverall() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,256,eturn getField().getMinimumValue();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,260, Gets the minimum value for the field.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,262, @return the minimum value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,263, @see DateTimeField#getMinimumValue
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,265,ublic int getMinimumValue() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,266,eturn getField().getMinimumValue(getInstant().getMillis());
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,270, Gets the maximum value for the field ignoring the current time.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,272, @return the maximum value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,273, @see DateTimeField#getMaximumValue
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,275,ublic int getMaximumValueOverall() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,276,eturn getField().getMaximumValue();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,280, Gets the maximum value for the field.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,282, @return the maximum value
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,283, @see DateTimeField#getMaximumValue
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,285,ublic int getMaximumValue() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,286,eturn getField().getMaximumValue(getInstant().getMillis());
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,290, Gets the maximum text length for the field.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,292, @param locale  optional locale to use for selecting a text symbol
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,293, @return the maximum length
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,294, @see DateTimeField#getMaximumTextLength
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,296,ublic int getMaximumTextLength(Locale locale) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,297,eturn getField().getMaximumTextLength(locale);
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,301, Gets the maximum short text length for the field.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,303, @param locale  optional locale to use for selecting a text symbol
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,304, @return the maximum length
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,305, @see DateTimeField#getMaximumShortTextLength
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,307,ublic int getMaximumShortTextLength(Locale locale) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,308,eturn getField().getMaximumShortTextLength(locale);
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,313, Returns the fractional duration milliseconds of this field.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,315, @see DateTimeField#remainder
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,316," @return remainder duration, in milliseconds"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,318,ublic long remainder() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,319,eturn getField().remainder(getInstant().getMillis());
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,324, Compare this field to the same field on another instant.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,325, <p>
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,326, The {@link #get()} method is used to obtain the value to compare for
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,327, this instant and the {@link ReadableInstant#get(DateTimeField)} method
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,328, is used for the specified instant.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,330, @param instant  the instant to compare to
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,331," @return negative value if this is less, 0 if equal, or positive value if greater"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,332, @throws IllegalArgumentException if the instant is null
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,334,ublic int compareTo(ReadableDateTime instant) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,335,f (instant == null) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,336,"hrow new IllegalArgumentException(""The instant must not be null"");"
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,338,nt thisValue = get();
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,339,nt otherValue = instant.get(getField());
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,340,f (thisValue < otherValue) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,341,eturn -1;
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,342, else if (thisValue > otherValue) {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,343,eturn 1;
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,344, else {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,345,eturn 0;
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,351, Output a debugging string.
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,353, @return debugging string
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,355,ublic String toString() {
False,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/AbstractDateTimeFieldProperty.java,356,"eturn ""Property["" + getName() + ""]"";"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,5, Copyright (c) 2001-03 Stephen Colebourne.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,6, All rights reserved.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,10, are met:
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,18,    distribution.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,33,    permission of the Joda project.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,46, SUCH DAMAGE.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,54,ackage org.joda.time;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,56,mport java.util.Locale;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,59, DateTimeFieldProperty binds a DateTime to a DateTimeField allowing powerful
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,60, datetime functionality to be easily accessed.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,61, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,62," The simplest use of this class is as an alternative get method, here used to"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,63, get the year '1972' (as an int) and the month 'December' (as a String).
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,64, <pre>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,65," DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,66, int year = dt.year().get();
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,67, String monthStr = dt.month().getAsText();
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,68, </pre>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,69, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,70, Methods are also provided that allow date modification. These return new instances
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,71, of DateTime - they do not modify the original. The example below yields two
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,72, independent immutable date objects 20 years apart.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,73, <pre>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,74," DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,75, DateTime dt20 = dt.year().addToCopy(20);
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,76, </pre>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,77, Serious modification of dates (ie. more than just changing one or two fields)
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,78, should use the {@link MutableDateTime} class.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,79, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,80," DateTimeFieldPropery itself is thread-safe and immutable, as well as the"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,81, DateTime being operated on.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,83, @see ReadableInstant
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,84, @see DateTimeField
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,86, @author Stephen Colebourne
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,87, @author Brian S O'Neill
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,88, @since 1.0
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,90,ublic class DateTimeFieldProperty extends AbstractDateTimeFieldProperty {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,92,tatic final long serialVersionUID = -6983323811635733510L;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,94,** The instant this property is working against */
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,95,rivate final DateTime iInstant;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,96,** The field this property is working against */
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,97,rivate final DateTimeField iField;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,100, Constructor.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,102, @param instant  the instant to set
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,103, @param field  the field to use
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,105,"ublic DateTimeFieldProperty(DateTime instant, DateTimeField field) {"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,106,uper();
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,107,Instant = instant;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,108,Field = field;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,113, Gets the field being used.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,115, @return the field
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,117,ublic DateTimeField getField() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,118,eturn iField;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,122, Gets the instant being used.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,124, @return the instant
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,126,ublic ReadableDateTime getInstant() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,127,eturn iInstant;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,131, Gets the instant being used.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,133, @return the instant
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,135,ublic DateTime getDateTime() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,136,eturn iInstant;
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,141, Adds to this field in a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,142, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,143, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,144, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,145," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,146, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,148, @param value  the value to add to the field in the copy
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,149, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,150, @throws IllegalArgumentException if the value isn't valid
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,152,ublic DateTime addToCopy(int value) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,153,"ong newMillis = iField.add(iInstant.getMillis(), value);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,154,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,158, Adds to this field in a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,159, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,160, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,161, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,162," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,163, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,165, @param value  the value to add to the field in the copy
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,166, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,167, @throws IllegalArgumentException if the value isn't valid
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,169,ublic DateTime addToCopy(long value) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,170,"ong newMillis = iField.add(iInstant.getMillis(), value);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,171,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,175," Adds to this field, possibly wrapped, in a copy of this DateTime."
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,176, A wrapped operation only changes this field.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,177, Thus 31st January addWrapped one day goes to the 1st January.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,178, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,179, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,180, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,181," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,182, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,184, @param value  the value to add to the field in the copy
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,185, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,186, @throws IllegalArgumentException if the value isn't valid
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,188,ublic DateTime addWrappedToCopy(int value) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,189,"ong newMillis = iField.addWrapped(iInstant.getMillis(), value);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,190,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,195, Sets this field in a copy of the DateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,196, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,197, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,198, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,199," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,200, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,202, @param value  the value to set the field in the copy to
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,203, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,204, @throws IllegalArgumentException if the value isn't valid
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,206,ublic DateTime setCopy(int value) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,207,"ong newMillis = iField.set(iInstant.getMillis(), value);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,208,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,212, Sets this field in a copy of the DateTime to a parsed text value.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,213, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,214, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,215, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,216," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,217, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,219, @param text  the text value to set
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,220, @param locale  optional locale to use for selecting a text symbol
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,221, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,222, @throws IllegalArgumentException if the text value isn't valid
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,224,"ublic DateTime setCopy(String text, Locale locale) {"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,225,"ong newMillis = iField.set(iInstant.getMillis(), text, locale);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,226,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,230, Sets this field in a copy of the DateTime to a parsed text value.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,231, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,232, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,233, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,234," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,235, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,237, @param text  the text value to set
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,238, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,239, @throws IllegalArgumentException if the text value isn't valid
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,241,ublic final DateTime setCopy(String text) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,242,"eturn setCopy(text, null);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,247, Rounds to the lowest whole unit of this field on a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,249, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,251,ublic DateTime roundFloorCopy() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,252,ong newMillis = iField.roundFloor(iInstant.getMillis());
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,253,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,257, Rounds to the highest whole unit of this field on a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,259, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,261,ublic DateTime roundCeilingCopy() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,262,ong newMillis = iField.roundCeiling(iInstant.getMillis());
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,263,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,267," Rounds to the nearest whole unit of this field on a copy of this DateTime,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,268, favoring the floor if halfway.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,270, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,272,ublic DateTime roundHalfFloorCopy() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,273,ong newMillis = iField.roundHalfFloor(iInstant.getMillis());
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,274,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,278," Rounds to the nearest whole unit of this field on a copy of this DateTime,"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,279, favoring the ceiling if halfway.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,281, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,283,ublic DateTime roundHalfCeilingCopy() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,284,ong newMillis = iField.roundHalfCeiling(iInstant.getMillis());
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,285,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,289, Rounds to the nearest whole unit of this field on a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,290," If halfway, the ceiling is favored over the floor only if it makes this field's value even."
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,292, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,294,ublic DateTime roundHalfEvenCopy() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,295,ong newMillis = iField.roundHalfEven(iInstant.getMillis());
False,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java,296,"eturn iInstant.createDateTime(newMillis, iInstant.getChronology());"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,5, Copyright (c) 2001-03 Stephen Colebourne.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,6, All rights reserved.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,10, are met:
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,18,    distribution.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,33,    permission of the Joda project.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,46, SUCH DAMAGE.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,54,ackage org.joda.time;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,56,mport java.util.Locale;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,59, MutableDateTimeFieldProperty binds a MutableDateTime to a DateTimeField
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,60, allowing powerful datetime functionality to be easily accessed.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,61, <p>
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,62, The example below shows how to use the property to change the value of a
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,63, MutableDateTime object.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,64, <pre>
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,65," MutableDateTime dt = new MutableDateTime(1972, 12, 3, 0, 0, 0, 0);"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,66, dt.year().add(20);
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,67, dt.second().roundFloor();
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,68, dt.minute().set(10);
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,69, </pre>
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,70, <p>
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,71," MutableDateTimeFieldPropery itself is thread-safe and immutable, but the"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,72, MutableDateTime being operated on may not be thread-safe.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,74, @see ReadWritableInstant
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,75, @see DateTimeField
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,77, @author Stephen Colebourne
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,78, @author Brian S O'Neill
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,79, @since 1.0
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,81,ublic class MutableDateTimeFieldProperty extends AbstractDateTimeFieldProperty {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,83,tatic final long serialVersionUID = -4481126543819298617L;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,85,** The instant this property is working against */
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,86,rivate final MutableDateTime iInstant;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,87,** The field this property is working against */
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,88,rivate final DateTimeField iField;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,91, Constructor.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,93, @param instant  the instant to set
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,94, @param field  the field to use
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,96,"ublic MutableDateTimeFieldProperty(MutableDateTime instant, DateTimeField field) {"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,97,uper();
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,98,Instant = instant;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,99,Field = field;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,104, Gets the field being used.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,106, @return the field
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,108,ublic DateTimeField getField() {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,109,eturn iField;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,113, Gets the instant being used.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,115, @return the instant
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,117,ublic ReadableDateTime getInstant() {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,118,eturn iInstant;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,122, Gets the instant being used.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,124, @return the instant
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,126,ublic MutableDateTime getMutableDateTime() {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,127,eturn iInstant;
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,132, Adds a value to the millis value.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,134, @param value  the value to add
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,135," @see DateTimeField#add(long,int)"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,137,ublic void add(int value) {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,138,"Instant.setMillis(getField().add(iInstant.getMillis(), value));"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,142, Adds a value to the millis value.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,144, @param value  the value to add
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,145," @see DateTimeField#add(long,long)"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,147,ublic void add(long value) {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,148,"Instant.setMillis(getField().add(iInstant.getMillis(), value));"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,152," Adds a value, possibly wrapped, to the millis value."
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,154, @param value  the value to add
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,155, @see DateTimeField#addWrapped
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,157,ublic void addWrapped(int value) {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,158,"Instant.setMillis(getField().addWrapped(iInstant.getMillis(), value));"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,163, Sets a value.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,165, @param value  the value to set.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,166," @see DateTimeField#set(long,int)"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,168,ublic void set(int value) {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,169,"Instant.setMillis(getField().set(iInstant.getMillis(), value));"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,173, Sets a text value.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,175, @param text  the text value to set
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,176, @param locale  optional locale to use for selecting a text symbol
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,177, @throws IllegalArgumentException if the text value isn't valid
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,178," @see DateTimeField#set(long,java.lang.String,java.util.Locale)"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,180,"ublic void set(String text, Locale locale) {"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,181,"Instant.setMillis(getField().set(iInstant.getMillis(), text, locale));"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,185, Sets a text value.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,187, @param text  the text value to set
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,188, @throws IllegalArgumentException if the text value isn't valid
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,189," @see DateTimeField#set(long,java.lang.String)"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,191,ublic final void set(String text) {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,192,"et(text, null);"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,197, Round to the lowest whole unit of this field.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,199, @see DateTimeField#roundFloor
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,201,ublic void roundFloor() {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,202,Instant.setMillis(getField().roundFloor(iInstant.getMillis()));
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,206, Round to the highest whole unit of this field.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,208, @see DateTimeField#roundCeiling
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,210,ublic void roundCeiling() {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,211,Instant.setMillis(getField().roundCeiling(iInstant.getMillis()));
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,215," Round to the nearest whole unit of this field, favoring the floor if"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,216, halfway.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,218, @see DateTimeField#roundHalfFloor
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,220,ublic void roundHalfFloor() {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,221,Instant.setMillis(getField().roundHalfFloor(iInstant.getMillis()));
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,225," Round to the nearest whole unit of this field, favoring the ceiling if"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,226, halfway.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,228, @see DateTimeField#roundHalfCeiling
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,230,ublic void roundHalfCeiling() {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,231,Instant.setMillis(getField().roundHalfCeiling(iInstant.getMillis()));
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,235," Round to the nearest whole unit of this field. If halfway, the ceiling"
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,236, is favored over the floor only if it makes this field's value even.
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,238, @see DateTimeField#roundHalfEven
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,240,ublic void roundHalfEven() {
False,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/MutableDateTimeFieldProperty.java,241,Instant.setMillis(getField().roundHalfEven(iInstant.getMillis()));
