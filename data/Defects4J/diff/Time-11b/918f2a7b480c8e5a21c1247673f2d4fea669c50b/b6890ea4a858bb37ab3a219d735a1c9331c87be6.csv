is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,149,public void testGetFieldType() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,150,MockPartial mock = new MockPartial();
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,151,"assertEquals(DateTimeFieldType.year(), mock.getFieldType(0));"
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,152,"assertEquals(DateTimeFieldType.monthOfYear(), mock.getFieldType(1));"
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,154,try {
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,155,mock.getFieldType(-1);
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,156,fail();
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,157,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,158,try {
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,159,mock.getFieldType(2);
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,160,fail();
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,161,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,164,public void testGetFieldTypes() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,165,MockPartial mock = new MockPartial();
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,166,DateTimeFieldType[] vals = mock.getFieldTypes();
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,167,"assertEquals(2, vals.length);"
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,168,"assertEquals(DateTimeFieldType.year(), vals[0]);"
True,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,JodaTime/src/test/org/joda/time/TestAbstractPartial.java,169,"assertEquals(DateTimeFieldType.monthOfYear(), vals[1]);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,780,public void testWithField1() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,781,"DateTime test = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,782,"DateTime result = test.withField(DateTimeFieldType.year(), 2006);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,784,"assertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0), test);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,785,"assertEquals(new DateTime(2006, 6, 9, 0, 0, 0, 0), result);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,788,public void testWithField2() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,789,"DateTime test = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,790,"DateTime result = test.withField(null, 6);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,791,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,795,public void testWithFieldAdded1() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,796,"DateTime test = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,797,"DateTime result = test.withFieldAdded(DurationFieldType.years(), 6);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,799,"assertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0), test);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,800,"assertEquals(new DateTime(2010, 6, 9, 0, 0, 0, 0), result);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,803,public void testWithFieldAdded2() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,804,"DateTime test = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,805,"DateTime result = test.withFieldAdded(null, 6);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,806,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,671,public void testConstructor_Object_Chronology1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,672,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,673,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,674,"Interval base = new Interval(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,676,"Interval test = new Interval(base, Chronology.getBuddhist());"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,677,"assertEquals(dt1.getMillis(), test.getStartMillis());"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,678,"assertEquals(dt2.getMillis(), test.getEndMillis());"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,679,"assertEquals(Chronology.getBuddhist(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,682,public void testConstructor_Object_Chronology2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,683,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,684,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,685,"Interval base = new Interval(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,687,"Interval test = new Interval(base, null);"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,688,"assertEquals(dt1.getMillis(), test.getStartMillis());"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,689,"assertEquals(dt2.getMillis(), test.getEndMillis());"
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,690,"assertEquals(Chronology.getISO(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,685,public void testConstructor_Object_Chronology1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,686,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,687,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,688,"Interval base = new Interval(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,690,"MutableInterval test = new MutableInterval(base, Chronology.getBuddhist());"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,691,"assertEquals(dt1.getMillis(), test.getStartMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,692,"assertEquals(dt2.getMillis(), test.getEndMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,693,"assertEquals(Chronology.getBuddhist(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,696,public void testConstructor_Object_Chronology2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,697,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,698,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,699,"Interval base = new Interval(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,701,"MutableInterval test = new MutableInterval(base, null);"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,702,"assertEquals(dt1.getMillis(), test.getStartMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,703,"assertEquals(dt2.getMillis(), test.getEndMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java,704,"assertEquals(Chronology.getISO(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,575,public void testConstructor_long_long_Chronology1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,576,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,577,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,578,"MutablePeriod test = new MutablePeriod(dt1.getMillis(), dt2.getMillis(), Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,579,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,580,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,581,"assertEquals(1, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,582,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,583,"assertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,584,"assertEquals(1, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,585,"assertEquals(1, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,586,"assertEquals(1, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,587,"assertEquals(1, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,590,public void testConstructor_long_long_Chronology2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,591,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,592,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,593,"MutablePeriod test = new MutablePeriod(dt1.getMillis(), dt2.getMillis(), (Chronology) null);"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,594,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,595,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,596,"assertEquals(1, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,597,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,598,"assertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,599,"assertEquals(1, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,600,"assertEquals(1, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,601,"assertEquals(1, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,602,"assertEquals(1, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,606,public void testConstructor_long_long_PeriodType_Chronology1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,607,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,608,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,609,"MutablePeriod test = new MutablePeriod(dt1.getMillis(), dt2.getMillis(), (PeriodType) null, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,610,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,611,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,612,"assertEquals(1, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,613,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,614,"assertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,615,"assertEquals(1, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,616,"assertEquals(1, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,617,"assertEquals(1, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,618,"assertEquals(1, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,621,public void testConstructor_long_long_PeriodType_Chronology2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,622,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,623,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,624,"MutablePeriod test = new MutablePeriod(dt1.getMillis(), dt2.getMillis(), (PeriodType) null, null);"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,625,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,626,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,627,"assertEquals(1, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,628,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,629,"assertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,630,"assertEquals(1, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,631,"assertEquals(1, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,632,"assertEquals(1, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,633,"assertEquals(1, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriodType.java,JodaTime/src/test/org/joda/time/TestPeriodType.java,695,public void testEquals() throws Exception {
True,JodaTime/src/test/org/joda/time/TestPeriodType.java,JodaTime/src/test/org/joda/time/TestPeriodType.java,696,PeriodType type = PeriodType.dayTime().withMillisRemoved();
True,JodaTime/src/test/org/joda/time/TestPeriodType.java,JodaTime/src/test/org/joda/time/TestPeriodType.java,697,"assertEquals(true, type.equals(type));"
True,JodaTime/src/test/org/joda/time/TestPeriodType.java,JodaTime/src/test/org/joda/time/TestPeriodType.java,698,"assertEquals(true, type.equals(PeriodType.dayTime().withMillisRemoved()));"
True,JodaTime/src/test/org/joda/time/TestPeriodType.java,JodaTime/src/test/org/joda/time/TestPeriodType.java,699,"assertEquals(false, type.equals(null));"
True,JodaTime/src/test/org/joda/time/TestPeriodType.java,JodaTime/src/test/org/joda/time/TestPeriodType.java,700,"assertEquals(false, type.equals(""""));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,60,import java.util.Arrays;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,167,public void testValueIndexMethods() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,168,"Period test = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,169,"assertEquals(6, test.size());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,170,"assertEquals(1, test.getValue(0));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,171,"assertEquals(4, test.getValue(1));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,172,"assertEquals(5, test.getValue(2));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,173,"assertEquals(6, test.getValue(3));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,174,"assertEquals(7, test.getValue(4));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,175,"assertEquals(8, test.getValue(5));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,176,"assertEquals(true, Arrays.equals(new int[] {1, 4, 5, 6, 7, 8}, test.getValues()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,179,public void testTypeIndexMethods() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,180,"Period test = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,181,"assertEquals(6, test.size());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,182,"assertEquals(DurationFieldType.years(), test.getFieldType(0));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,183,"assertEquals(DurationFieldType.days(), test.getFieldType(1));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,184,"assertEquals(DurationFieldType.hours(), test.getFieldType(2));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,185,"assertEquals(DurationFieldType.minutes(), test.getFieldType(3));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,186,"assertEquals(DurationFieldType.seconds(), test.getFieldType(4));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,187,"assertEquals(DurationFieldType.millis(), test.getFieldType(5));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,188,"assertEquals(true, Arrays.equals(new DurationFieldType[] {"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,189,"DurationFieldType.years(), DurationFieldType.days(), DurationFieldType.hours(),"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,190,"DurationFieldType.minutes(), DurationFieldType.seconds(), DurationFieldType.millis()},"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,191,test.getFieldTypes()));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,194,public void testIsSupported() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,195,"Period test = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,196,"assertEquals(true, test.isSupported(DurationFieldType.years()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,197,"assertEquals(false, test.isSupported(DurationFieldType.months()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,198,"assertEquals(false, test.isSupported(DurationFieldType.weeks()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,199,"assertEquals(true, test.isSupported(DurationFieldType.days()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,200,"assertEquals(true, test.isSupported(DurationFieldType.hours()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,201,"assertEquals(true, test.isSupported(DurationFieldType.minutes()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,202,"assertEquals(true, test.isSupported(DurationFieldType.seconds()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,203,"assertEquals(true, test.isSupported(DurationFieldType.millis()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,206,public void testIndexOf() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,207,"Period test = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,208,"assertEquals(0, test.indexOf(DurationFieldType.years()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,209,"assertEquals(-1, test.indexOf(DurationFieldType.months()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,210,"assertEquals(-1, test.indexOf(DurationFieldType.weeks()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,211,"assertEquals(1, test.indexOf(DurationFieldType.days()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,212,"assertEquals(2, test.indexOf(DurationFieldType.hours()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,213,"assertEquals(3, test.indexOf(DurationFieldType.minutes()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,214,"assertEquals(4, test.indexOf(DurationFieldType.seconds()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,215,"assertEquals(5, test.indexOf(DurationFieldType.millis()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,218,public void testGet() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,219,"Period test = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,220,"assertEquals(1, test.get(DurationFieldType.years()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,221,"assertEquals(0, test.get(DurationFieldType.months()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,222,"assertEquals(0, test.get(DurationFieldType.weeks()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,223,"assertEquals(4, test.get(DurationFieldType.days()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,224,"assertEquals(5, test.get(DurationFieldType.hours()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,225,"assertEquals(6, test.get(DurationFieldType.minutes()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,226,"assertEquals(7, test.get(DurationFieldType.seconds()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,227,"assertEquals(8, test.get(DurationFieldType.millis()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,558,public void testConstructor_long_long_Chronology1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,559,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,560,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,561,"Period test = new Period(dt1.getMillis(), dt2.getMillis(), Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,562,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,563,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,564,"assertEquals(1, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,565,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,566,"assertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,567,"assertEquals(1, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,568,"assertEquals(1, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,569,"assertEquals(1, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,570,"assertEquals(1, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,573,public void testConstructor_long_long_Chronology2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,574,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,575,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,576,"Period test = new Period(dt1.getMillis(), dt2.getMillis(), (Chronology) null);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,577,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,578,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,579,"assertEquals(1, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,580,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,581,"assertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,582,"assertEquals(1, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,583,"assertEquals(1, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,584,"assertEquals(1, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,585,"assertEquals(1, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,589,public void testConstructor_long_long_PeriodType_Chronology1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,590,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,591,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,592,"Period test = new Period(dt1.getMillis(), dt2.getMillis(), (PeriodType) null, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,593,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,594,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,595,"assertEquals(1, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,596,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,597,"assertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,598,"assertEquals(1, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,599,"assertEquals(1, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,600,"assertEquals(1, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,601,"assertEquals(1, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,604,public void testConstructor_long_long_PeriodType_Chronology2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,605,"DateTime dt1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,606,"DateTime dt2 = new DateTime(2005, 7, 10, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,607,"Period test = new Period(dt1.getMillis(), dt2.getMillis(), (PeriodType) null, null);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,608,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,609,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,610,"assertEquals(1, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,611,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,612,"assertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,613,"assertEquals(1, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,614,"assertEquals(1, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,615,"assertEquals(1, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,616,"assertEquals(1, test.getMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,671,public void testGetIntervalConverterRemovedNull() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,672,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,673,ConverterManager.getInstance().removeIntervalConverter(NullConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,674,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,675,ConverterManager.getInstance().getIntervalConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,676,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,677,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,678,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,679,ConverterManager.getInstance().addIntervalConverter(NullConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,681,"assertEquals(INTERVAL_SIZE, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,67,import org.joda.time.MutableInterval;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,189,public void testSetInto_Object_Chronology1() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,190,"MutableInterval m = new MutableInterval(1000L, 2000L, Chronology.getGJ());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,191,"NullConverter.INSTANCE.setInto(m, null, null);"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,192,"assertEquals(TEST_TIME_NOW, m.getStartMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,193,"assertEquals(TEST_TIME_NOW, m.getEndMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,194,"assertEquals(Chronology.getISO(), m.getChronology());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,197,public void testSetInto_Object_Chronology2() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,198,"MutableInterval m = new MutableInterval(1000L, 2000L, Chronology.getGJ());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,199,"NullConverter.INSTANCE.setInto(m, null, Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,200,"assertEquals(TEST_TIME_NOW, m.getStartMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,201,"assertEquals(TEST_TIME_NOW, m.getEndMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,202,"assertEquals(Chronology.getCoptic(), m.getChronology());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,429,try {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,430,"StringConverter.INSTANCE.setInto(m, ""P2Y4W3DT12H24M48SX"", null);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,431,fail();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,432,} catch (IllegalArgumentException ex) {}
