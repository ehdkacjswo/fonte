is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,161, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,161,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,180,"eturn new TimePeriod(this, DurationType.getAllType());"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,180,"return new TimePeriod(this, PeriodType.getAllType());"
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,184, Converts this duration to a TimePeriod instance specifying a duration type
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,184,* Converts this duration to a TimePeriod instance specifying a period type
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,187, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,188, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,187,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,188,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,194, If the duration type is PreciseAll then all fields can be set.
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,194,* If the period type is PreciseAll then all fields can be set.
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,198," If the duration type is All then the years and months fields will remain as zero,"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,198,"* If the period type is All then the years and months fields will remain as zero,"
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,210, @param type  the duration type determining how to split the duration into fields
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,210,* @param type  the period type determining how to split the duration into fields
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,213,ublic final TimePeriod toTimePeriod(DurationType type) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,213,public final TimePeriod toTimePeriod(PeriodType type) {
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,318, The field values are determined using the PreciseAll duration type.
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,318,* The field values are determined using the PreciseAll period type.
False,JodaTime/src/java/org/joda/time/AbstractInterval.java,JodaTime/src/java/org/joda/time/AbstractInterval.java,499, All duration type.
True,JodaTime/src/java/org/joda/time/AbstractInterval.java,JodaTime/src/java/org/joda/time/AbstractInterval.java,499,* All period type.
False,JodaTime/src/java/org/joda/time/AbstractInterval.java,JodaTime/src/java/org/joda/time/AbstractInterval.java,515, specified duration type.
True,JodaTime/src/java/org/joda/time/AbstractInterval.java,JodaTime/src/java/org/joda/time/AbstractInterval.java,515,* specified period type.
False,JodaTime/src/java/org/joda/time/AbstractInterval.java,JodaTime/src/java/org/joda/time/AbstractInterval.java,525,ublic final TimePeriod toTimePeriod(DurationType type) {
True,JodaTime/src/java/org/joda/time/AbstractInterval.java,JodaTime/src/java/org/joda/time/AbstractInterval.java,525,public final TimePeriod toTimePeriod(PeriodType type) {
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,88,** The duration type that allocates the duration to fields */
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,89,rivate final DurationType iType;
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,88,/** The period type that allocates the duration to fields */
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,89,private final PeriodType iType;
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,115, the duration type.
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,115,* the period type.
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,119, @throws IllegalArgumentException if duration type is invalid
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,119,* @throws IllegalArgumentException if period type is invalid
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,121,"ublic AbstractTimePeriod(long duration, DurationType type) {"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,121,"public AbstractTimePeriod(long duration, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,123,ype = checkDurationType(type);
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,123,type = checkPeriodType(type);
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,141, @throws IllegalArgumentException if duration type is invalid
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,141,* @throws IllegalArgumentException if period type is invalid
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,146,urationType type) {
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,146,PeriodType type) {
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,148,ype = checkDurationType(type);
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,148,type = checkPeriodType(type);
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,160, @throws IllegalArgumentException if duration type is invalid
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,160,* @throws IllegalArgumentException if period type is invalid
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,162,"ublic AbstractTimePeriod(long startInstant, long endInstant, DurationType type) {"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,162,"public AbstractTimePeriod(long startInstant, long endInstant, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,164,ype = checkDurationType(type);
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,164,type = checkPeriodType(type);
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,176, @throws IllegalArgumentException if duration type is invalid
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,176,* @throws IllegalArgumentException if period type is invalid
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,179,"eadableInstant startInstant, ReadableInstant  endInstant, DurationType type) {"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,179,"ReadableInstant startInstant, ReadableInstant  endInstant, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,181,ype = checkDurationType(type);
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,181,type = checkPeriodType(type);
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,201,"ublic AbstractTimePeriod(Object period, DurationType type) {"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,201,"public AbstractTimePeriod(Object period, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,204,"ype = (type == null ? converter.getDurationType(period, false) : type);"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,205,ype = checkDurationType(type);
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,204,"type = (type == null ? converter.getPeriodType(period, false) : type);"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,205,type = checkPeriodType(type);
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,217," Validates a duration type, converting nulls to a default value and"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,217,"* Validates a period type, converting nulls to a default value and"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,222, @throws IllegalArgumentException if the duration type is invalid
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,222,* @throws IllegalArgumentException if the period type is invalid
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,224,rotected abstract DurationType checkDurationType(DurationType type);
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,224,protected abstract PeriodType checkPeriodType(PeriodType type);
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,230,ublic final DurationType getDurationType() {
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,230,public final PeriodType getPeriodType() {
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,290,urationType type = iType;
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,290,PeriodType type = iType;
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,547,urationType type = getDurationType();
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,548,f (type.equals(other.getDurationType()) == false) {
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,547,PeriodType type = getPeriodType();
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,548,if (type.equals(other.getPeriodType()) == false) {
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,568,nt hash = getDurationType().hashCode();
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,568,int hash = getPeriodType().hashCode();
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,634,"rivate void setTimePeriod(DurationType type, ReadableTimePeriod period) {"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,634,"private void setTimePeriod(PeriodType type, ReadableTimePeriod period) {"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,667,"rivate void setTimePeriod(DurationType type,"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,667,"private void setTimePeriod(PeriodType type,"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,727,"rivate void setTimePeriod(DurationType type, long startInstant, long endInstant) {"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,727,"private void setTimePeriod(PeriodType type, long startInstant, long endInstant) {"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,803,"rivate void setTimePeriod(DurationType type, long duration) {"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,803,"private void setTimePeriod(PeriodType type, long duration) {"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,879, fields using the duration type.
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,879,* fields using the period type.
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,893, fields using the duration type.
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,893,* fields using the period type.
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,914,inal DurationType type = iType;
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,914,final PeriodType type = iType;
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,1041,dd(interval.toTimePeriod(getDurationType()));
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,1041,add(interval.toTimePeriod(getPeriodType()));
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,1054,"dd(new TimePeriod(duration.getMillis(), getDurationType()));"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,1054,"add(new TimePeriod(duration.getMillis(), getPeriodType()));"
False,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,1066,"dd(new TimePeriod(duration, getDurationType()));"
True,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,JodaTime/src/java/org/joda/time/AbstractTimePeriod.java,1066,"add(new TimePeriod(duration, getPeriodType()));"
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,84, Creates a zero-length period using the specified duration type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,84,* Creates a zero-length period using the specified period type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,88,ublic MutableTimePeriod(DurationType type) {
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,88,public MutableTimePeriod(PeriodType type) {
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,95, The exact impact of this constructor is determined by the duration type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,96, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,95,* The exact impact of this constructor is determined by the period type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,96,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,102, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,102,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,106, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,106,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,127, The exact impact of this constructor is determined by the duration type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,128, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,127,* The exact impact of this constructor is determined by the period type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,128,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,134, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,134,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,138, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,138,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,153,"ublic MutableTimePeriod(long duration, DurationType type) {"
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,153,"public MutableTimePeriod(long duration, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,202,"nt hours, int minutes, int seconds, int millis, DurationType type) {"
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,202,"int hours, int minutes, int seconds, int millis, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,225,"ublic MutableTimePeriod(long startInstant, long endInstant, DurationType type) {"
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,225,"public MutableTimePeriod(long startInstant, long endInstant, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,248,"ublic MutableTimePeriod(ReadableInstant startInstant, ReadableInstant endInstant, DurationType type) {"
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,248,"public MutableTimePeriod(ReadableInstant startInstant, ReadableInstant endInstant, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,273,"ublic MutableTimePeriod(Object period, DurationType type) {"
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,273,"public MutableTimePeriod(Object period, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,279," Validates a duration type, converting nulls to a default value and"
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,279,"* Validates a period type, converting nulls to a default value and"
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,284, @throws IllegalArgumentException if the duration type is not precise
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,284,* @throws IllegalArgumentException if the period type is not precise
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,286,rotected DurationType checkDurationType(DurationType type) {
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,286,protected PeriodType checkPeriodType(PeriodType type) {
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,288,eturn DurationType.getAllType();
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,288,return PeriodType.getAllType();
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,325, fields using the duration type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,325,* fields using the period type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,335, fields using the duration type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,335,* fields using the period type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,346, fields using the duration type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,346,* fields using the period type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,348, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,349, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,348,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,349,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,355, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,355,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,359, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,359,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,379, fields using the duration type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,379,* fields using the period type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,381, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,382, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,381,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,382,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,388, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,388,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,392, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,392,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,445, duration type and then adding each field in turn.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,445,* period type and then adding each field in turn.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,458, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,459, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,458,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,459,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,465, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,465,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,469, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,469,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,492, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,493, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,492,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,493,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,499, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,499,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,503, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,JodaTime/src/java/org/joda/time/MutableTimePeriod.java,503,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,87," DurationType is thread-safe and immutable, and all subclasses must be as well."
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,87,"* PeriodType is thread-safe and immutable, and all subclasses must be as well."
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,93,ublic abstract class DurationType implements Serializable {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,93,public abstract class PeriodType implements Serializable {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,96,rivate static final DurationType DAY_HOUR_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,97,rivate static final DurationType YEAR_WEEK_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,98,rivate static final DurationType YEAR_MONTH_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,99,rivate static final DurationType ALL_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,100,rivate static final DurationType MILLIS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,101,rivate static final DurationType PRECISE_DAY_HOUR_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,102,rivate static final DurationType PRECISE_YEAR_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,103,rivate static final DurationType PRECISE_YEAR_WEEK_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,104,rivate static final DurationType PRECISE_YEAR_MONTH_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,105,rivate static final DurationType PRECISE_ALL_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,96,private static final PeriodType DAY_HOUR_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,97,private static final PeriodType YEAR_WEEK_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,98,private static final PeriodType YEAR_MONTH_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,99,private static final PeriodType ALL_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,100,private static final PeriodType MILLIS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,101,private static final PeriodType PRECISE_DAY_HOUR_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,102,private static final PeriodType PRECISE_YEAR_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,103,private static final PeriodType PRECISE_YEAR_WEEK_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,104,private static final PeriodType PRECISE_YEAR_MONTH_TYPE;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,105,private static final PeriodType PRECISE_ALL_TYPE;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,121, Returns a DurationType of only a milliseconds field using the ISOChronology.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,121,* Returns a PeriodType of only a milliseconds field using the ISOChronology.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,125,ublic static DurationType getMillisType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,125,public static PeriodType getMillisType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,130, Returns a DurationType using the ISOChronology in current time zone of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,130,* Returns a PeriodType using the ISOChronology in current time zone of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,140,ublic static DurationType getDayHourType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,140,public static PeriodType getDayHourType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,145, Returns a DurationType of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,145,* Returns a PeriodType of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,155, This factory method returns a DurationType that calculates using any
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,155,* This factory method returns a PeriodType that calculates using any
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,161,ublic static DurationType getDayHourType(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,161,public static PeriodType getDayHourType(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,169, Returns a DurationType using the ISOChronology in current time zone of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,169,* Returns a PeriodType using the ISOChronology in current time zone of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,182,ublic static DurationType getAllType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,182,public static PeriodType getAllType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,187, Returns a DurationType of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,187,* Returns a PeriodType of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,200, This factory method returns a DurationType that calculates using any
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,200,* This factory method returns a PeriodType that calculates using any
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,206,ublic static DurationType getAllType(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,206,public static PeriodType getAllType(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,214, Returns a DurationType using the ISOChronology in current time zone of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,214,* Returns a PeriodType using the ISOChronology in current time zone of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,226,ublic static DurationType getYearMonthType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,226,public static PeriodType getYearMonthType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,231, Returns a DurationType of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,231,* Returns a PeriodType of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,243, This factory method returns a DurationType that calculates using any
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,243,* This factory method returns a PeriodType that calculates using any
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,249,ublic static DurationType getYearMonthType(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,249,public static PeriodType getYearMonthType(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,257, Returns a DurationType using the ISOChronology in current time zone of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,257,* Returns a PeriodType using the ISOChronology in current time zone of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,269,ublic static DurationType getYearWeekType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,269,public static PeriodType getYearWeekType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,274, Returns a DurationType of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,274,* Returns a PeriodType of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,286, This factory method returns a DurationType that calculates using any
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,286,* This factory method returns a PeriodType that calculates using any
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,292,ublic static DurationType getYearWeekType(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,292,public static PeriodType getYearWeekType(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,300, Returns a precise DurationType using the ISOChronology in UTC of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,300,* Returns a precise PeriodType using the ISOChronology in UTC of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,310,ublic static DurationType getPreciseDayHourType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,310,public static PeriodType getPreciseDayHourType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,315, Returns a precise DurationType using the ISOChronology in UTC of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,315,* Returns a precise PeriodType using the ISOChronology in UTC of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,326,ublic static DurationType getPreciseYearDayType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,326,public static PeriodType getPreciseYearDayType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,331, Returns a precise DurationType using the ISOChronology in UTC of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,331,* Returns a precise PeriodType using the ISOChronology in UTC of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,344,ublic static DurationType getPreciseAllType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,344,public static PeriodType getPreciseAllType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,349, Returns a precise DurationType using the ISOChronology in UTC of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,349,* Returns a precise PeriodType using the ISOChronology in UTC of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,361,ublic static DurationType getPreciseYearMonthType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,361,public static PeriodType getPreciseYearMonthType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,366, Returns a precise DurationType using the ISOChronology in UTC of:
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,366,* Returns a precise PeriodType using the ISOChronology in UTC of:
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,378,ublic static DurationType getPreciseYearWeekType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,378,public static PeriodType getPreciseYearWeekType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,386,rotected DurationType() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,386,protected PeriodType() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,390, Gets the name of the duration type.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,390,* Gets the name of the period type.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,404, Returns a DurationType that uses the given chronology.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,404,* Returns a PeriodType that uses the given chronology.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,407, @return a new duration type with the specified chronology
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,407,* @return a new period type with the specified chronology
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,409,ublic abstract DurationType withChronology(Chronology chrono);
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,409,public abstract PeriodType withChronology(Chronology chrono);
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,493, Returns a version of this DurationType instance that does not support years.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,493,* Returns a version of this PeriodType instance that does not support years.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,495, @return a new duration type that supports the original set of fields except years
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,495,* @return a new period type that supports the original set of fields except years
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,497,ublic DurationType withYearsRemoved() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,497,public PeriodType withYearsRemoved() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,505, Returns a version of this DurationType instance that does not support months.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,505,* Returns a version of this PeriodType instance that does not support months.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,507, @return a new duration type that supports the original set of fields except months
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,507,* @return a new period type that supports the original set of fields except months
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,509,ublic DurationType withMonthsRemoved() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,509,public PeriodType withMonthsRemoved() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,517, Returns a version of this DurationType instance that does not support weeks.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,517,* Returns a version of this PeriodType instance that does not support weeks.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,519, @return a new duration type that supports the original set of fields except weeks
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,519,* @return a new period type that supports the original set of fields except weeks
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,521,ublic DurationType withWeeksRemoved() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,521,public PeriodType withWeeksRemoved() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,529, Returns a version of this DurationType instance that does not support days.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,529,* Returns a version of this PeriodType instance that does not support days.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,531, @return a new duration type that supports the original set of fields except days
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,531,* @return a new period type that supports the original set of fields except days
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,533,ublic DurationType withDaysRemoved() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,533,public PeriodType withDaysRemoved() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,541, Returns a version of this DurationType instance that does not support hours.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,541,* Returns a version of this PeriodType instance that does not support hours.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,543, @return a new duration type that supports the original set of fields except hours
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,543,* @return a new period type that supports the original set of fields except hours
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,545,ublic DurationType withHoursRemoved() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,545,public PeriodType withHoursRemoved() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,553, Returns a version of this DurationType instance that does not support minutes.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,553,* Returns a version of this PeriodType instance that does not support minutes.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,555, @return a new duration type that supports the original set of fields except minutes
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,555,* @return a new period type that supports the original set of fields except minutes
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,557,ublic DurationType withMinutesRemoved() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,557,public PeriodType withMinutesRemoved() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,565, Returns a version of this DurationType instance that does not support seconds.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,565,* Returns a version of this PeriodType instance that does not support seconds.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,567, @return a new duration type that supports the original set of fields except seconds
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,567,* @return a new period type that supports the original set of fields except seconds
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,569,ublic DurationType withSecondsRemoved() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,569,public PeriodType withSecondsRemoved() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,577, Returns a version of this DurationType instance that does not support milliseconds.
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,577,* Returns a version of this PeriodType instance that does not support milliseconds.
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,579, @return a new duration type that supports the original set of fields except milliseconds
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,579,* @return a new period type that supports the original set of fields except milliseconds
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,581,ublic DurationType withMillisRemoved() {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,581,public PeriodType withMillisRemoved() {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,591," To be equal, the object must be a DurationType with the same chronology"
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,591,"* To be equal, the object must be a PeriodType with the same chronology"
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,601,f (!(obj instanceof DurationType)) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,601,if (!(obj instanceof PeriodType)) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,604,urationType other = (DurationType)obj;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,604,PeriodType other = (PeriodType)obj;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,648,"eturn ""DurationType["" + (name == null ? """" : name) + ""]"";"
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,648,"return ""PeriodType["" + (name == null ? """" : name) + ""]"";"
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,652,rivate static class MillisType extends DurationType {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,652,private static class MillisType extends PeriodType {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,670,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,670,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,683,rivate static class DayHourType extends DurationType {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,683,private static class DayHourType extends PeriodType {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,696,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,696,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,700,eturn DurationType.getDayHourType(chrono);
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,700,return PeriodType.getDayHourType(chrono);
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,747,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,747,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,751,eturn DurationType.getYearWeekType(chrono);
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,751,return PeriodType.getYearWeekType(chrono);
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,784,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,784,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,788,eturn DurationType.getYearMonthType(chrono);
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,788,return PeriodType.getYearMonthType(chrono);
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,821,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,821,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,825,eturn DurationType.getAllType(chrono);
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,825,return PeriodType.getAllType(chrono);
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,857,rivate static class PreciseDayHourType extends DurationType {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,857,private static class PreciseDayHourType extends PeriodType {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,870,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,870,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,918,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,918,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,947,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,947,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,979,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,979,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1008,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1008,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1031,rivate static class MaskedType extends DurationType {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1031,private static class MaskedType extends PeriodType {
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1034,"ublic static DurationType mask(DurationType type, int mask) {"
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1034,"public static PeriodType mask(PeriodType type, int mask) {"
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1043,rivate final DurationType iType;
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1043,private final PeriodType iType;
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1050,"rivate MaskedType(DurationType type, int mask) {"
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1050,"private MaskedType(PeriodType type, int mask) {"
False,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1059,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/java/org/joda/time/DurationType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1059,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,95, fields using the duration type.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,95,* fields using the period type.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,103, fields using the duration type.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,103,* fields using the period type.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,112, fields using the duration type.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,112,* fields using the period type.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,114, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,115, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,114,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,115,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,121, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,121,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,125, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,125,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,143, fields using the duration type.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,143,* fields using the period type.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,145, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,146, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,145,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,146,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,152, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,152,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,156, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,156,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,214, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,215, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,214,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,215,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,221, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,221,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,225, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,225,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,246, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,247, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,246,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,247,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,253, If this period uses the PreciseAll duration type then all fields can be set.
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,253,* If this period uses the PreciseAll period type then all fields can be set.
False,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,257, If the period uses the All duration type then the years and months fields
True,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadWritableTimePeriod.java,257,* If the period uses the All period type then the years and months fields
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,91, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,91,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,114, Converts this duration to a TimePeriod instance specifying a duration type
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,114,* Converts this duration to a TimePeriod instance specifying a period type
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,117, The exact impact of this method is determined by the duration type.
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,118, Only precise fields in the duration type will be used and the calculation will use UTC.
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,117,* The exact impact of this method is determined by the period type.
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,118,* Only precise fields in the period type will be used and the calculation will use UTC.
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,124, If the duration type is PreciseAll then all fields can be set.
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,124,* If the period type is PreciseAll then all fields can be set.
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,128," If the duration type is All then the years and months fields will remain as zero,"
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,128,"* If the period type is All then the years and months fields will remain as zero,"
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,138, @param type  the duration type determining how to split the duration into fields
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,138,* @param type  the period type determining how to split the duration into fields
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,141,imePeriod toTimePeriod(DurationType type);
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,141,TimePeriod toTimePeriod(PeriodType type);
False,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,206, The field values are determined using the PreciseAll duration type.
True,JodaTime/src/java/org/joda/time/ReadableDuration.java,JodaTime/src/java/org/joda/time/ReadableDuration.java,206,* The field values are determined using the PreciseAll period type.
False,JodaTime/src/java/org/joda/time/ReadableInterval.java,JodaTime/src/java/org/joda/time/ReadableInterval.java,215, All duration type.
True,JodaTime/src/java/org/joda/time/ReadableInterval.java,JodaTime/src/java/org/joda/time/ReadableInterval.java,215,* All period type.
False,JodaTime/src/java/org/joda/time/ReadableInterval.java,JodaTime/src/java/org/joda/time/ReadableInterval.java,229, specified duration type.
True,JodaTime/src/java/org/joda/time/ReadableInterval.java,JodaTime/src/java/org/joda/time/ReadableInterval.java,229,* specified period type.
False,JodaTime/src/java/org/joda/time/ReadableInterval.java,JodaTime/src/java/org/joda/time/ReadableInterval.java,239,imePeriod toTimePeriod(DurationType type);
True,JodaTime/src/java/org/joda/time/ReadableInterval.java,JodaTime/src/java/org/joda/time/ReadableInterval.java,239,TimePeriod toTimePeriod(PeriodType type);
False,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,65, The {@link DurationType} defines the rules for dividing the fields and which fields
True,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,65,* The {@link PeriodType} defines the rules for dividing the fields and which fields
False,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,83, Returns the object which defines which fields this period supports.
True,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,83,* Returns the period type which defines which fields this period supports.
True,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,85,* @return the period type
False,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,85,urationType getDurationType();
True,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,87,PeriodType getPeriodType();
False,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,105, The addition uses the chronology of the DurationType.
True,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,107,* The addition uses the chronology of the PeriodType.
False,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,270,   int hash = getDurationType().hashCode();
True,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,JodaTime/src/java/org/joda/time/ReadableTimePeriod.java,272,*   int hash = getPeriodType().hashCode();
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,62, The way in which that divide occurs is controlled by the DurationType class.
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,62,* The way in which that divide occurs is controlled by the PeriodType class.
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,64, <code>TimePeriod</code> can use any duration type to split the milliseconds into fields.
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,65, The {@link DurationType#getAllType() All} type is used by default.
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,64,* <code>TimePeriod</code> can use any period type to split the milliseconds into fields.
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,65,* The {@link PeriodType#getAllType() All} type is used by default.
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,80," TimePeriod is thread-safe and immutable, provided that the DurationType is as well."
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,81, All standard DurationType classes supplied are thread-safe and immutable.
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,80,"* TimePeriod is thread-safe and immutable, provided that the PeriodType is as well."
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,81,* All standard PeriodType classes supplied are thread-safe and immutable.
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,99, the duration type. This ensures that there are no odd effects caused by
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,99,* the period type. This ensures that there are no odd effects caused by
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,101, of the duration type.
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,101,* of the period type.
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,113, the duration type. This ensures that there are no odd effects caused by
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,113,* the period type. This ensures that there are no odd effects caused by
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,115, of the duration type.
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,115,* of the period type.
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,120,"ublic TimePeriod(long duration, DurationType type) {"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,120,"public TimePeriod(long duration, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,169,"nt hours, int minutes, int seconds, int millis, DurationType type) {"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,169,"int hours, int minutes, int seconds, int millis, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,192,"ublic TimePeriod(long startInstant, long endInstant, DurationType type) {"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,192,"public TimePeriod(long startInstant, long endInstant, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,215,"ublic TimePeriod(ReadableInstant startInstant, ReadableInstant endInstant, DurationType type) {"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,215,"public TimePeriod(ReadableInstant startInstant, ReadableInstant endInstant, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,240,"ublic TimePeriod(Object period, DurationType type) {"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,240,"public TimePeriod(Object period, PeriodType type) {"
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,246," Validates a duration type, converting nulls to a default value and"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,246,"* Validates a period type, converting nulls to a default value and"
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,251, @throws IllegalArgumentException if the duration type is not precise
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,251,* @throws IllegalArgumentException if the period type is not precise
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,253,rotected final DurationType checkDurationType(DurationType type) {
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,253,protected final PeriodType checkPeriodType(PeriodType type) {
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,255,eturn DurationType.getAllType();
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,255,return PeriodType.getAllType();
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,263, different DurationType.
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,263,* different PeriodType.
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,265," @param type  the duration type to use, null means AllType"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,265,"* @param type  the period type to use, null means AllType"
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,269,ublic TimePeriod withDurationType(DurationType type) {
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,269,public TimePeriod withPeriodType(PeriodType type) {
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,271,ype = DurationType.getAllType();
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,271,type = PeriodType.getAllType();
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,273,f (type.equals(getDurationType())) {
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,273,if (type.equals(getPeriodType())) {
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,282, different DurationType.
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,282,* different PeriodType.
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,284," @param type  the duration type to use, null means AllType"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,284,"* @param type  the period type to use, null means AllType"
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,288,ublic TimePeriod withDurationTypeRetainDuration(DurationType type) {
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,288,public TimePeriod withPeriodTypeRetainDuration(PeriodType type) {
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,290,ype = DurationType.getAllType();
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,290,type = PeriodType.getAllType();
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,292,f (type.equals(getDurationType())) {
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,292,if (type.equals(getPeriodType())) {
False,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,306,"eturn new TimePeriod(toDurationMillis(), getDurationType());"
True,JodaTime/src/java/org/joda/time/TimePeriod.java,JodaTime/src/java/org/joda/time/TimePeriod.java,306,"return new TimePeriod(toDurationMillis(), getPeriodType());"
False,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,58,mport org.joda.time.DurationType;
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,58,import org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,168, Selects a suitable duration type for the given object.
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,168,* Selects a suitable period type for the given object.
False,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,172," @return the duration type, never null"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,172,"* @return the period type, never null"
False,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,175,"ublic DurationType getDurationType(Object object, boolean precise) {"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,175,"public PeriodType getPeriodType(Object object, boolean precise) {"
False,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,177,eturn DurationType.getPreciseAllType();
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,177,return PeriodType.getPreciseAllType();
False,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,179,eturn DurationType.getAllType();
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,179,return PeriodType.getAllType();
False,JodaTime/src/java/org/joda/time/convert/LongConverter.java,JodaTime/src/java/org/joda/time/convert/LongConverter.java,60, The duration type created is the millis type.
False,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,56,mport org.joda.time.DurationType;
True,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,56,import org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,113, Selects a suitable duration type for the given object.
True,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,113,* Selects a suitable period type for the given object.
False,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,117, @return the duration type from the readable duration
True,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,117,* @return the period type from the readable duration
False,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,121,"ublic DurationType getDurationType(Object object, boolean precise) {"
False,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,122,eturn DurationType.getPreciseAllType();
True,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,121,"public PeriodType getPeriodType(Object object, boolean precise) {"
True,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java,122,return PeriodType.getPreciseAllType();
False,JodaTime/src/java/org/joda/time/convert/ReadableIntervalConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableIntervalConverter.java,61, Converts intervals into durations of any requested duration type.
True,JodaTime/src/java/org/joda/time/convert/ReadableIntervalConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableIntervalConverter.java,61,* Converts intervals into durations of any requested period type.
False,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,56,mport org.joda.time.DurationType;
True,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,56,import org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,113, Selects a suitable duration type for the given object.
True,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,113,* Selects a suitable period type for the given object.
False,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,117, @return the duration type from the readable duration
True,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,117,* @return the period type from the readable duration
False,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,121,"ublic DurationType getDurationType(Object object, boolean precise) {"
True,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,121,"public PeriodType getPeriodType(Object object, boolean precise) {"
False,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,124,f (period.getDurationType().isPrecise()) {
False,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,125,eturn period.getDurationType();
True,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,124,if (period.getPeriodType().isPrecise()) {
True,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,125,return period.getPeriodType();
False,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,127,eturn DurationType.getPreciseAllType();
True,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,127,return PeriodType.getPreciseAllType();
False,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,130,eturn period.getDurationType();
True,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableTimePeriodConverter.java,130,return period.getPeriodType();
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,58,mport org.joda.time.DurationType;
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,58,import org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,133,utableTimePeriod period = new MutableTimePeriod(DurationType.getPreciseAllType());
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,133,MutableTimePeriod period = new MutableTimePeriod(PeriodType.getPreciseAllType());
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,139,"arser.parseMutableTimePeriod(period.getDurationType(), str);"
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,139,"parser.parseMutableTimePeriod(period.getPeriodType(), str);"
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,163,"arser.parseMutableTimePeriod(period.getDurationType(), str);"
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,163,"parser.parseMutableTimePeriod(period.getPeriodType(), str);"
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,201,"eriod = durationParser.parseTimePeriod(getDurationType(leftStr, false), leftStr);"
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,201,"period = durationParser.parseTimePeriod(getPeriodType(leftStr, false), leftStr);"
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,212,"eriod = durationParser.parseTimePeriod(getDurationType(rightStr, false), rightStr);"
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,212,"period = durationParser.parseTimePeriod(getPeriodType(rightStr, false), rightStr);"
False,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,56,mport org.joda.time.DurationType;
True,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,56,import org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,79, Selects a suitable duration type for the given object.
True,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,79,* Selects a suitable period type for the given object.
False,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,82, @param precise  true if the duration type must be precise
False,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,83," @return the duration type, never null"
True,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,82,* @param precise  true if the period type must be precise
True,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,83,"* @return the period type, never null"
False,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,86,"urationType getDurationType(Object object, boolean precise);"
True,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,JodaTime/src/java/org/joda/time/convert/TimePeriodConverter.java,86,"PeriodType getPeriodType(Object object, boolean precise);"
False,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,56,mport org.joda.time.DurationType;
True,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,56,import org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,91,"ublic TimePeriod parseTimePeriod(DurationType type, String text) {"
True,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,91,"public TimePeriod parseTimePeriod(PeriodType type, String text) {"
False,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,95,"ublic MutableTimePeriod parseMutableTimePeriod(DurationType type, String text) {"
True,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractTimePeriodFormatter.java,95,"public MutableTimePeriod parseMutableTimePeriod(PeriodType type, String text) {"
False,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,61,mport org.joda.time.DurationType;
True,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,61,import org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,996,f (!mustParse && !isSupported(period.getDurationType())) {
True,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,996,if (!mustParse && !isSupported(period.getPeriodType())) {
False,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,1070,urationType type;
True,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,1070,PeriodType type;
False,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,1074,ype = period.getDurationType();
True,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,1074,type = period.getPeriodType();
False,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,1139,oolean isSupported(DurationType type) {
True,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,1139,boolean isSupported(PeriodType type) {
False,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,1486,urationType type = period.getDurationType();
True,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/TimePeriodFormatterBuilder.java,1486,PeriodType type = period.getPeriodType();
False,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,57,mport org.joda.time.DurationType;
True,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,57,import org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,99,"imePeriod parseTimePeriod(DurationType type, String periodStr);"
True,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,99,"TimePeriod parseTimePeriod(PeriodType type, String periodStr);"
False,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,109,"utableTimePeriod parseMutableTimePeriod(DurationType type, String periodStr);"
True,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,JodaTime/src/java/org/joda/time/format/TimePeriodParser.java,109,"MutableTimePeriod parseMutableTimePeriod(PeriodType type, String periodStr);"
False,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,106,uite.addTest(TestDurationType.suite());
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,106,suite.addTest(TestPeriodType.suite());
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,72, This class is a JUnit test for DurationType.
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,72,* This class is a JUnit test for PeriodType.
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,76,ublic class TestDurationType extends TestCase {
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,76,public class TestPeriodType extends TestCase {
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,117,eturn new TestSuite(TestDurationType.class);
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,117,return new TestSuite(TestPeriodType.class);
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,120,ublic TestDurationType(String name) {
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,120,public TestPeriodType(String name) {
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,152,rivate void assertEqualsAfterSerialization(DurationType type) throws Exception {
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,152,private void assertEqualsAfterSerialization(PeriodType type) throws Exception {
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,161,urationType result = (DurationType) ois.readObject();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,161,PeriodType result = (PeriodType) ois.readObject();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,167,rivate void assertSameAfterSerialization(DurationType type) throws Exception {
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,167,private void assertSameAfterSerialization(PeriodType type) throws Exception {
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,176,urationType result = (DurationType) ois.readObject();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,176,PeriodType result = (PeriodType) ois.readObject();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,184,urationType type = DurationType.getMillisType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,184,PeriodType type = PeriodType.getMillisType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,196,"ssertEquals(true, type == DurationType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,197,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,196,"assertEquals(true, type == PeriodType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,197,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,199,"ssertEquals(true, type.hashCode() == DurationType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,200,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,199,"assertEquals(true, type.hashCode() == PeriodType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,200,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,202,"ssertEquals(""DurationType[MillisType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,202,"assertEquals(""PeriodType[MillisType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,210,urationType type = DurationType.getDayHourType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,210,PeriodType type = PeriodType.getDayHourType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,222,"ssertEquals(true, type == DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,223,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,222,"assertEquals(true, type == PeriodType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,223,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,225,"ssertEquals(true, type.hashCode() == DurationType.getDayHourType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,226,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,225,"assertEquals(true, type.hashCode() == PeriodType.getDayHourType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,226,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,228,"ssertEquals(""DurationType[DayHourType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,228,"assertEquals(""PeriodType[DayHourType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,237,urationType type = DurationType.getDayHourType(BuddhistChronology.getInstanceUTC());
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,237,PeriodType type = PeriodType.getDayHourType(BuddhistChronology.getInstanceUTC());
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,249,"ssertEquals(true, DurationType.getDayHourType() == DurationType.getDayHourType(null));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,250,"ssertEquals(true, DurationType.getDayHourType() == DurationType.getDayHourType(ISOChronology.getInstance()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,251,"ssertEquals(true, type.equals(DurationType.getDayHourType(BuddhistChronology.getInstanceUTC())));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,252,"ssertEquals(false, type.equals(DurationType.getDayHourType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,253,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,249,"assertEquals(true, PeriodType.getDayHourType() == PeriodType.getDayHourType(null));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,250,"assertEquals(true, PeriodType.getDayHourType() == PeriodType.getDayHourType(ISOChronology.getInstance()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,251,"assertEquals(true, type.equals(PeriodType.getDayHourType(BuddhistChronology.getInstanceUTC())));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,252,"assertEquals(false, type.equals(PeriodType.getDayHourType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,253,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,255,"ssertEquals(false, type.hashCode() == DurationType.getDayHourType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,256,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,255,"assertEquals(false, type.hashCode() == PeriodType.getDayHourType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,256,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,258,"ssertEquals(""DurationType[DayHourType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,258,"assertEquals(""PeriodType[DayHourType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,260,"ssertSame(DurationType.getDayHourType(), type.withChronology(null));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,261,"ssertSame(DurationType.getDayHourType(), type.withChronology(ISOChronology.getInstance()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,260,"assertSame(PeriodType.getDayHourType(), type.withChronology(null));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,261,"assertSame(PeriodType.getDayHourType(), type.withChronology(ISOChronology.getInstance()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,267,urationType type = DurationType.getYearWeekType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,267,PeriodType type = PeriodType.getYearWeekType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,279,"ssertEquals(true, type == DurationType.getYearWeekType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,280,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,279,"assertEquals(true, type == PeriodType.getYearWeekType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,280,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,282,"ssertEquals(true, type.hashCode() == DurationType.getYearWeekType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,283,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,282,"assertEquals(true, type.hashCode() == PeriodType.getYearWeekType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,283,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,285,"ssertEquals(""DurationType[YearWeekType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,285,"assertEquals(""PeriodType[YearWeekType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,294,urationType type = DurationType.getYearWeekType(BuddhistChronology.getInstanceUTC());
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,294,PeriodType type = PeriodType.getYearWeekType(BuddhistChronology.getInstanceUTC());
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,306,"ssertEquals(true, DurationType.getYearWeekType() == DurationType.getYearWeekType(null));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,307,"ssertEquals(true, DurationType.getYearWeekType() == DurationType.getYearWeekType(ISOChronology.getInstance()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,308,"ssertEquals(true, type.equals(DurationType.getYearWeekType(BuddhistChronology.getInstanceUTC())));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,309,"ssertEquals(false, type.equals(DurationType.getYearWeekType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,310,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,306,"assertEquals(true, PeriodType.getYearWeekType() == PeriodType.getYearWeekType(null));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,307,"assertEquals(true, PeriodType.getYearWeekType() == PeriodType.getYearWeekType(ISOChronology.getInstance()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,308,"assertEquals(true, type.equals(PeriodType.getYearWeekType(BuddhistChronology.getInstanceUTC())));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,309,"assertEquals(false, type.equals(PeriodType.getYearWeekType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,310,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,312,"ssertEquals(false, type.hashCode() == DurationType.getYearWeekType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,313,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,312,"assertEquals(false, type.hashCode() == PeriodType.getYearWeekType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,313,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,315,"ssertEquals(""DurationType[YearWeekType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,315,"assertEquals(""PeriodType[YearWeekType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,317,"ssertSame(DurationType.getYearWeekType(), type.withChronology(null));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,318,"ssertSame(DurationType.getYearWeekType(), type.withChronology(ISOChronology.getInstance()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,317,"assertSame(PeriodType.getYearWeekType(), type.withChronology(null));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,318,"assertSame(PeriodType.getYearWeekType(), type.withChronology(ISOChronology.getInstance()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,324,urationType type = DurationType.getYearMonthType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,324,PeriodType type = PeriodType.getYearMonthType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,336,"ssertEquals(true, type == DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,337,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,336,"assertEquals(true, type == PeriodType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,337,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,339,"ssertEquals(true, type.hashCode() == DurationType.getYearMonthType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,340,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,339,"assertEquals(true, type.hashCode() == PeriodType.getYearMonthType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,340,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,342,"ssertEquals(""DurationType[YearMonthType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,342,"assertEquals(""PeriodType[YearMonthType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,351,urationType type = DurationType.getYearMonthType(BuddhistChronology.getInstanceUTC());
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,351,PeriodType type = PeriodType.getYearMonthType(BuddhistChronology.getInstanceUTC());
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,363,"ssertEquals(true, DurationType.getYearMonthType() == DurationType.getYearMonthType(null));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,364,"ssertEquals(true, DurationType.getYearMonthType() == DurationType.getYearMonthType(ISOChronology.getInstance()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,365,"ssertEquals(true, type.equals(DurationType.getYearMonthType(BuddhistChronology.getInstanceUTC())));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,366,"ssertEquals(false, type.equals(DurationType.getYearMonthType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,367,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,363,"assertEquals(true, PeriodType.getYearMonthType() == PeriodType.getYearMonthType(null));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,364,"assertEquals(true, PeriodType.getYearMonthType() == PeriodType.getYearMonthType(ISOChronology.getInstance()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,365,"assertEquals(true, type.equals(PeriodType.getYearMonthType(BuddhistChronology.getInstanceUTC())));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,366,"assertEquals(false, type.equals(PeriodType.getYearMonthType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,367,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,369,"ssertEquals(false, type.hashCode() == DurationType.getYearMonthType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,370,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,369,"assertEquals(false, type.hashCode() == PeriodType.getYearMonthType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,370,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,372,"ssertEquals(""DurationType[YearMonthType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,372,"assertEquals(""PeriodType[YearMonthType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,374,"ssertSame(DurationType.getYearMonthType(), type.withChronology(null));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,375,"ssertSame(DurationType.getYearMonthType(), type.withChronology(ISOChronology.getInstance()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,374,"assertSame(PeriodType.getYearMonthType(), type.withChronology(null));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,375,"assertSame(PeriodType.getYearMonthType(), type.withChronology(ISOChronology.getInstance()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,381,urationType type = DurationType.getAllType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,381,PeriodType type = PeriodType.getAllType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,393,"ssertEquals(true, type == DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,394,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,393,"assertEquals(true, type == PeriodType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,394,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,396,"ssertEquals(true, type.hashCode() == DurationType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,397,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,396,"assertEquals(true, type.hashCode() == PeriodType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,397,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,399,"ssertEquals(""DurationType[AllType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,399,"assertEquals(""PeriodType[AllType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,408,urationType type = DurationType.getAllType(BuddhistChronology.getInstanceUTC());
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,408,PeriodType type = PeriodType.getAllType(BuddhistChronology.getInstanceUTC());
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,420,"ssertEquals(true, DurationType.getAllType() == DurationType.getAllType(null));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,421,"ssertEquals(true, DurationType.getAllType() == DurationType.getAllType(ISOChronology.getInstance()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,422,"ssertEquals(true, type.equals(DurationType.getAllType(BuddhistChronology.getInstanceUTC())));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,423,"ssertEquals(false, type.equals(DurationType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,424,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,420,"assertEquals(true, PeriodType.getAllType() == PeriodType.getAllType(null));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,421,"assertEquals(true, PeriodType.getAllType() == PeriodType.getAllType(ISOChronology.getInstance()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,422,"assertEquals(true, type.equals(PeriodType.getAllType(BuddhistChronology.getInstanceUTC())));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,423,"assertEquals(false, type.equals(PeriodType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,424,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,426,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,427,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,426,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,427,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,429,"ssertEquals(""DurationType[AllType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,429,"assertEquals(""PeriodType[AllType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,431,"ssertSame(DurationType.getAllType(), type.withChronology(null));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,432,"ssertSame(DurationType.getAllType(), type.withChronology(ISOChronology.getInstance()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,431,"assertSame(PeriodType.getAllType(), type.withChronology(null));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,432,"assertSame(PeriodType.getAllType(), type.withChronology(ISOChronology.getInstance()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,438,urationType type = DurationType.getPreciseDayHourType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,438,PeriodType type = PeriodType.getPreciseDayHourType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,450,"ssertEquals(true, type == DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,451,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,450,"assertEquals(true, type == PeriodType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,451,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,453,"ssertEquals(true, type.hashCode() == DurationType.getPreciseDayHourType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,454,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,453,"assertEquals(true, type.hashCode() == PeriodType.getPreciseDayHourType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,454,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,456,"ssertEquals(""DurationType[PreciseDayHourType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,456,"assertEquals(""PeriodType[PreciseDayHourType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,465,urationType type = DurationType.getPreciseYearDayType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,465,PeriodType type = PeriodType.getPreciseYearDayType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,477,"ssertEquals(true, type == DurationType.getPreciseYearDayType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,478,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,477,"assertEquals(true, type == PeriodType.getPreciseYearDayType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,478,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,480,"ssertEquals(true, type.hashCode() == DurationType.getPreciseYearDayType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,481,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,480,"assertEquals(true, type.hashCode() == PeriodType.getPreciseYearDayType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,481,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,483,"ssertEquals(""DurationType[PreciseYearDayType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,483,"assertEquals(""PeriodType[PreciseYearDayType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,492,urationType type = DurationType.getPreciseYearWeekType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,492,PeriodType type = PeriodType.getPreciseYearWeekType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,504,"ssertEquals(true, type == DurationType.getPreciseYearWeekType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,505,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,504,"assertEquals(true, type == PeriodType.getPreciseYearWeekType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,505,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,507,"ssertEquals(true, type.hashCode() == DurationType.getPreciseYearWeekType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,508,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,507,"assertEquals(true, type.hashCode() == PeriodType.getPreciseYearWeekType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,508,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,510,"ssertEquals(""DurationType[PreciseYearWeekType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,510,"assertEquals(""PeriodType[PreciseYearWeekType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,519,urationType type = DurationType.getPreciseYearMonthType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,519,PeriodType type = PeriodType.getPreciseYearMonthType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,531,"ssertEquals(true, type == DurationType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,532,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,531,"assertEquals(true, type == PeriodType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,532,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,534,"ssertEquals(true, type.hashCode() == DurationType.getPreciseYearMonthType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,535,"ssertEquals(false, type.hashCode() == DurationType.getAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,534,"assertEquals(true, type.hashCode() == PeriodType.getPreciseYearMonthType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,535,"assertEquals(false, type.hashCode() == PeriodType.getAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,537,"ssertEquals(""DurationType[PreciseYearMonthType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,537,"assertEquals(""PeriodType[PreciseYearMonthType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,546,urationType type = DurationType.getPreciseAllType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,546,PeriodType type = PeriodType.getPreciseAllType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,558,"ssertEquals(true, type == DurationType.getPreciseAllType());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,559,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,558,"assertEquals(true, type == PeriodType.getPreciseAllType());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,559,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,561,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,562,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,561,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,562,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,564,"ssertEquals(""DurationType[PreciseAllType]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,564,"assertEquals(""PeriodType[PreciseAllType]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,573,urationType type = DurationType.getPreciseAllType().withYearsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,573,PeriodType type = PeriodType.getPreciseAllType().withYearsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,585,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withYearsRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,586,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,585,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withYearsRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,586,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,588,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withYearsRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,589,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,588,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withYearsRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,589,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,591,"ssertEquals(""DurationType[MaskedYears[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,591,"assertEquals(""PeriodType[MaskedYears[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,597,urationType type = DurationType.getPreciseAllType().withMonthsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,597,PeriodType type = PeriodType.getPreciseAllType().withMonthsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,609,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withMonthsRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,610,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,609,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withMonthsRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,610,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,612,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withMonthsRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,613,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,612,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withMonthsRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,613,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,615,"ssertEquals(""DurationType[MaskedMonths[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,615,"assertEquals(""PeriodType[MaskedMonths[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,621,urationType type = DurationType.getPreciseAllType().withWeeksRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,621,PeriodType type = PeriodType.getPreciseAllType().withWeeksRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,633,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withWeeksRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,634,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,633,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withWeeksRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,634,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,636,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withWeeksRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,637,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,636,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withWeeksRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,637,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,639,"ssertEquals(""DurationType[MaskedWeeks[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,639,"assertEquals(""PeriodType[MaskedWeeks[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,645,urationType type = DurationType.getPreciseAllType().withDaysRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,645,PeriodType type = PeriodType.getPreciseAllType().withDaysRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,657,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withDaysRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,658,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,657,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withDaysRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,658,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,660,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withDaysRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,661,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,660,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withDaysRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,661,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,663,"ssertEquals(""DurationType[MaskedDays[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,663,"assertEquals(""PeriodType[MaskedDays[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,669,urationType type = DurationType.getPreciseAllType().withHoursRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,669,PeriodType type = PeriodType.getPreciseAllType().withHoursRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,681,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withHoursRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,682,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,681,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withHoursRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,682,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,684,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withHoursRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,685,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,684,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withHoursRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,685,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,687,"ssertEquals(""DurationType[MaskedHours[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,687,"assertEquals(""PeriodType[MaskedHours[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,693,urationType type = DurationType.getPreciseAllType().withMinutesRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,693,PeriodType type = PeriodType.getPreciseAllType().withMinutesRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,705,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withMinutesRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,706,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,705,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withMinutesRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,706,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,708,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withMinutesRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,709,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,708,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withMinutesRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,709,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,711,"ssertEquals(""DurationType[MaskedMinutes[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,711,"assertEquals(""PeriodType[MaskedMinutes[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,717,urationType type = DurationType.getPreciseAllType().withSecondsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,717,PeriodType type = PeriodType.getPreciseAllType().withSecondsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,729,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withSecondsRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,730,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,729,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withSecondsRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,730,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,732,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withSecondsRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,733,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,732,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withSecondsRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,733,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,735,"ssertEquals(""DurationType[MaskedSeconds[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,735,"assertEquals(""PeriodType[MaskedSeconds[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,741,urationType type = DurationType.getPreciseAllType().withMillisRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,741,PeriodType type = PeriodType.getPreciseAllType().withMillisRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,753,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withMillisRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,754,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,753,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withMillisRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,754,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,756,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withMillisRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,757,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,756,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withMillisRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,757,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,759,"ssertEquals(""DurationType[MaskedMillis[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,759,"assertEquals(""PeriodType[MaskedMillis[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,765,urationType type = DurationType.getPreciseAllType().withHoursRemoved().withMinutesRemoved().withSecondsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,765,PeriodType type = PeriodType.getPreciseAllType().withHoursRemoved().withMinutesRemoved().withSecondsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,777,"ssertEquals(true, type.equals(DurationType.getPreciseAllType().withHoursRemoved().withMinutesRemoved().withSecondsRemoved()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,778,"ssertEquals(false, type.equals(DurationType.getMillisType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,777,"assertEquals(true, type.equals(PeriodType.getPreciseAllType().withHoursRemoved().withMinutesRemoved().withSecondsRemoved()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,778,"assertEquals(false, type.equals(PeriodType.getMillisType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,780,"ssertEquals(true, type.hashCode() == DurationType.getPreciseAllType().withHoursRemoved().withMinutesRemoved().withSecondsRemoved().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,781,"ssertEquals(false, type.hashCode() == DurationType.getMillisType().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,780,"assertEquals(true, type.hashCode() == PeriodType.getPreciseAllType().withHoursRemoved().withMinutesRemoved().withSecondsRemoved().hashCode());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,781,"assertEquals(false, type.hashCode() == PeriodType.getMillisType().hashCode());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,783,"ssertEquals(""DurationType[MaskedHoursMinutesSeconds[PreciseAllType]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,783,"assertEquals(""PeriodType[MaskedHoursMinutesSeconds[PreciseAllType]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,789,urationType type = DurationType.getAllType().withYearsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,789,PeriodType type = PeriodType.getAllType().withYearsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,793,urationType type2 = type.withChronology(CopticChronology.getInstanceUTC());
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,793,PeriodType type2 = type.withChronology(CopticChronology.getInstanceUTC());
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,807,urationType type = DurationType.getPreciseAllType().withYearsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,808,urationType type2 = type.withYearsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,807,PeriodType type = PeriodType.getPreciseAllType().withYearsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,808,PeriodType type2 = type.withYearsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,811,ype = DurationType.getPreciseAllType().withMonthsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,811,type = PeriodType.getPreciseAllType().withMonthsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,815,ype = DurationType.getPreciseAllType().withWeeksRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,815,type = PeriodType.getPreciseAllType().withWeeksRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,819,ype = DurationType.getPreciseAllType().withDaysRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,819,type = PeriodType.getPreciseAllType().withDaysRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,823,ype = DurationType.getPreciseAllType().withHoursRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,823,type = PeriodType.getPreciseAllType().withHoursRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,827,ype = DurationType.getPreciseAllType().withMinutesRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,827,type = PeriodType.getPreciseAllType().withMinutesRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,831,ype = DurationType.getPreciseAllType().withSecondsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,831,type = PeriodType.getPreciseAllType().withSecondsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,835,ype = DurationType.getPreciseAllType().withMillisRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,835,type = PeriodType.getPreciseAllType().withMillisRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,842,urationType type = DurationType.getDayHourType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,843,urationType type2 = type.withYearsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,842,PeriodType type = PeriodType.getDayHourType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,843,PeriodType type2 = type.withYearsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,846,ype = DurationType.getDayHourType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,846,type = PeriodType.getDayHourType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,850,ype = DurationType.getDayHourType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,850,type = PeriodType.getDayHourType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,854,ype = DurationType.getMillisType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,854,type = PeriodType.getMillisType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,858,ype = DurationType.getMillisType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,858,type = PeriodType.getMillisType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,862,ype = DurationType.getMillisType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,862,type = PeriodType.getMillisType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,866,ype = DurationType.getMillisType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,866,type = PeriodType.getMillisType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,873,urationType type = new MockDurationTypeWithFields().withYearsRemoved();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,873,PeriodType type = new MockPeriodTypeWithFields().withYearsRemoved();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,875,"ssertEquals(""DurationType[MaskedYears[]]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,875,"assertEquals(""PeriodType[MaskedYears[]]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,880,"ssertEquals(true, Modifier.isPublic(DurationType.class.getModifiers()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,881,"ssertEquals(true, Modifier.isAbstract(DurationType.class.getModifiers()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,880,"assertEquals(true, Modifier.isPublic(PeriodType.class.getModifiers()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,881,"assertEquals(true, Modifier.isAbstract(PeriodType.class.getModifiers()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,883,urationType type = new MockDurationType();
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,883,PeriodType type = new MockPeriodType();
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,895,"ssertEquals(true, type.equals(new MockDurationType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,896,"ssertEquals(false, type.equals(DurationType.getAllType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,895,"assertEquals(true, type.equals(new MockPeriodType()));"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,896,"assertEquals(false, type.equals(PeriodType.getAllType()));"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,900,"ssertEquals(""DurationType[]"", type.toString());"
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,900,"assertEquals(""PeriodType[]"", type.toString());"
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,903,tatic class MockDurationType extends DurationType {
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,903,static class MockPeriodType extends PeriodType {
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,910,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,910,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,918,tatic class MockDurationTypeWithFields extends DurationType {
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,918,static class MockPeriodTypeWithFields extends PeriodType {
False,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,931,ublic DurationType withChronology(Chronology chrono) {
True,JodaTime/src/test/org/joda/time/TestDurationType.java,JodaTime/src/test/org/joda/time/TestDurationType.java,931,public PeriodType withChronology(Chronology chrono) {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,149,ublic void testGetDurationType() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,149,public void testGetPeriodType() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,151,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,151,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,194,"ssertEquals(false, test1.equals(new TimePeriod(123L, DurationType.getDayHourType())));"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,194,"assertEquals(false, test1.equals(new TimePeriod(123L, PeriodType.getDayHourType())));"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,201,rotected DurationType checkDurationType(DurationType type) {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,202,eturn DurationType.getAllType();
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,201,protected PeriodType checkPeriodType(PeriodType type) {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,202,return PeriodType.getAllType();
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,218,"imePeriod test3 = new TimePeriod(321L, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,218,"TimePeriod test3 = new TimePeriod(321L, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,252,"imePeriod test3 = new TimePeriod(321L, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,252,"TimePeriod test3 = new TimePeriod(321L, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,275,"imePeriod test3 = new TimePeriod(321L, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,275,"TimePeriod test3 = new TimePeriod(321L, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,298,"imePeriod test3 = new TimePeriod(321L, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,298,"TimePeriod test3 = new TimePeriod(321L, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,371,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,371,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,418,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,418,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,434,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,434,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,467,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,467,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,483,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,483,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,499,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,499,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,533,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,533,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,579,ublic void testWithDurationTypeUsingTotalMillis1() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,579,public void testWithPeriodTypeUsingTotalMillis1() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,581,imePeriod result = test.withDurationTypeUsingTotalMillis(DurationType.getAllType());
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,581,TimePeriod result = test.withPeriodTypeUsingTotalMillis(PeriodType.getAllType());
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,585,ublic void testWithDurationTypeUsingTotalMillis2() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,585,public void testWithPeriodTypeUsingTotalMillis2() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,587,imePeriod result = test.withDurationTypeUsingTotalMillis(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,587,TimePeriod result = test.withPeriodTypeUsingTotalMillis(PeriodType.getDayHourType());
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,591,"ssertEquals(DurationType.getDayHourType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,591,"assertEquals(PeriodType.getDayHourType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,594,ublic void testWithDurationTypeUsingTotalMillis3() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,595,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,594,public void testWithPeriodTypeUsingTotalMillis3() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,595,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,597,est.withDurationTypeUsingTotalMillis(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,597,test.withPeriodTypeUsingTotalMillis(PeriodType.getDayHourType());
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,602,ublic void testWithDurationTypeUsingTotalMillis4() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,602,public void testWithPeriodTypeUsingTotalMillis4() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,604,imePeriod result = test.withDurationTypeUsingTotalMillis(null);
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,604,TimePeriod result = test.withPeriodTypeUsingTotalMillis(null);
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,608,"ssertEquals(DurationType.getAllType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,608,"assertEquals(PeriodType.getAllType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,612,ublic void testWithDurationTypeUsingFields1() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,612,public void testWithPeriodTypeUsingFields1() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,614,imePeriod result = test.withDurationTypeUsingFields(DurationType.getAllType());
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,614,TimePeriod result = test.withPeriodTypeUsingFields(PeriodType.getAllType());
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,618,ublic void testWithDurationTypeUsingFields2() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,618,public void testWithPeriodTypeUsingFields2() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,620,imePeriod result = test.withDurationTypeUsingFields(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,620,TimePeriod result = test.withPeriodTypeUsingFields(PeriodType.getDayHourType());
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,624,"ssertEquals(DurationType.getDayHourType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,624,"assertEquals(PeriodType.getDayHourType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,627,ublic void testWithDurationTypeUsingFields3() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,628,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,627,public void testWithPeriodTypeUsingFields3() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,628,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,630,est.withDurationTypeUsingFields(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,630,test.withPeriodTypeUsingFields(PeriodType.getDayHourType());
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,635,ublic void testWithDurationTypeUsingFields4() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,635,public void testWithPeriodTypeUsingFields4() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,637,imePeriod result = test.withDurationTypeUsingFields(null);
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,637,TimePeriod result = test.withPeriodTypeUsingFields(null);
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,641,"ssertEquals(DurationType.getAllType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,641,"assertEquals(PeriodType.getAllType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,644,ublic void testWithDurationTypeUsingFields5() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,645,"imePeriod test = new TimePeriod(1, 2, 0, 4, 5, 6, 7, 8, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,646,imePeriod result = test.withDurationTypeUsingFields(DurationType.getYearMonthType());
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,647,"ssertEquals(DurationType.getYearMonthType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,644,public void testWithPeriodTypeUsingFields5() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,645,"TimePeriod test = new TimePeriod(1, 2, 0, 4, 5, 6, 7, 8, PeriodType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,646,TimePeriod result = test.withPeriodTypeUsingFields(PeriodType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,647,"assertEquals(PeriodType.getYearMonthType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,660,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, DurationType.getPreciseAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,660,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, PeriodType.getPreciseAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,673,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,673,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,141,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,141,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,161,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,161,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,175,ublic void testConstructor_long_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,175,public void testConstructor_long_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,181,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,181,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,194,ublic void testConstructor_long_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,194,public void testConstructor_long_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,199,"illisDuration test = new MillisDuration(length, DurationType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,200,"ssertEquals(DurationType.getMillisType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,199,"MillisDuration test = new MillisDuration(length, PeriodType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,200,"assertEquals(PeriodType.getMillisType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,213,ublic void testConstructor_long_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,213,public void testConstructor_long_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,218,"illisDuration test = new MillisDuration(length, DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,219,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,218,"MillisDuration test = new MillisDuration(length, PeriodType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,219,"assertEquals(PeriodType.getPreciseDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,232,ublic void testConstructor_long_DurationType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,232,public void testConstructor_long_PeriodType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,237,"illisDuration test = new MillisDuration(length, DurationType.getPreciseAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,238,"ssertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,237,"MillisDuration test = new MillisDuration(length, PeriodType.getPreciseAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,238,"assertEquals(PeriodType.getPreciseAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,257,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,257,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,278,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,278,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,298,ublic void testConstructor_8int__DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,298,public void testConstructor_8int__PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,300,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,300,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,316,ublic void testConstructor_8int__DurationType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,317,"illisDuration test = new MillisDuration(0, 0, 0, 0, 5, 6, 7, 8, DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,318,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,316,public void testConstructor_8int__PeriodType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,317,"MillisDuration test = new MillisDuration(0, 0, 0, 0, 5, 6, 7, 8, PeriodType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,318,"assertEquals(PeriodType.getPreciseDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,333,ublic void testConstructor_8int__DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,333,public void testConstructor_8int__PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,335,"ew MillisDuration(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,335,"new MillisDuration(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,345,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,345,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,362,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,362,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,376,ublic void testConstructor_long_long_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,376,public void testConstructor_long_long_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,380,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,380,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,393,ublic void testConstructor_long_long_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,393,public void testConstructor_long_long_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,396,"illisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,397,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,396,"MillisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), PeriodType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,397,"assertEquals(PeriodType.getPreciseDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,410,ublic void testConstructor_long_long_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,410,public void testConstructor_long_long_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,413,"illisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), DurationType.getPreciseAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,414,"ssertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,413,"MillisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), PeriodType.getPreciseAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,414,"assertEquals(PeriodType.getPreciseAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,432,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,432,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,449,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,449,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,466,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,466,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,483,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,483,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,500,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,500,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,514,ublic void testConstructor_RI_RI_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,514,public void testConstructor_RI_RI_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,518,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,518,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,531,ublic void testConstructor_RI_RI_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,531,public void testConstructor_RI_RI_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,534,"illisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,535,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,534,"MillisDuration test = new MillisDuration(dt1, dt2, PeriodType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,535,"assertEquals(PeriodType.getPreciseDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,548,ublic void testConstructor_RI_RI_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,548,public void testConstructor_RI_RI_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,551,"illisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,552,"ssertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,551,"MillisDuration test = new MillisDuration(dt1, dt2, PeriodType.getPreciseAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,552,"assertEquals(PeriodType.getPreciseAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,565,ublic void testConstructor_RI_RI_DurationType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,565,public void testConstructor_RI_RI_PeriodType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,568,"illisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,569,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,568,"MillisDuration test = new MillisDuration(dt1, dt2, PeriodType.getPreciseAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,569,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,582,ublic void testConstructor_RI_RI_DurationType5() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,582,public void testConstructor_RI_RI_PeriodType5() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,585,"illisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,586,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,585,"MillisDuration test = new MillisDuration(dt1, dt2, PeriodType.getPreciseAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,586,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,605,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,605,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,621,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,621,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,635,"illisDuration base = new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,635,"MillisDuration base = new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,637,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,637,"assertEquals(PeriodType.getPreciseDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,656,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,656,"assertEquals(PeriodType.getPreciseAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,670,"illisDuration base = new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,670,"MillisDuration base = new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,681,ublic void testConstructor_Object_DurationType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,682,"illisDuration test = new MillisDuration(""P1Y2M3D"", DurationType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,683,"ssertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,681,public void testConstructor_Object_PeriodType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,682,"MillisDuration test = new MillisDuration(""P1Y2M3D"", PeriodType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,683,"assertEquals(PeriodType.getPreciseYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,697,ublic void testConstructor_Object_DurationType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,698,"illisDuration test = new MillisDuration((Object) null, DurationType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,699,"ssertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,697,public void testConstructor_Object_PeriodType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,698,"MillisDuration test = new MillisDuration((Object) null, PeriodType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,699,"assertEquals(PeriodType.getPreciseYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,712,ublic void testConstructor_Object_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,712,public void testConstructor_Object_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,714,"ew MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType()), DurationType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,715,"ssertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,714,"new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getPreciseDayHourType()), PeriodType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,715,"assertEquals(PeriodType.getPreciseYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,729,ublic void testConstructor_Object_DurationType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,730,"illisDuration test = new MillisDuration(new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType()), null);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,731,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,729,public void testConstructor_Object_PeriodType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,730,"MillisDuration test = new MillisDuration(new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getPreciseDayHourType()), null);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,731,"assertEquals(PeriodType.getPreciseDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,149,ublic void testGetDurationType() {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,149,public void testGetPeriodType() {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,151,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,151,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,195,"ssertEquals(false, test1.equals(new TimePeriod(123L, DurationType.getDayHourType())));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,195,"assertEquals(false, test1.equals(new TimePeriod(123L, PeriodType.getDayHourType())));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,202,rotected DurationType checkDurationType(DurationType type) {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,203,eturn DurationType.getAllType();
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,202,protected PeriodType checkPeriodType(PeriodType type) {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,203,return PeriodType.getAllType();
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,269,"utableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,269,"MutableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,316,"utableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,316,"MutableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,332,"utableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,332,"MutableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,365,"utableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,365,"MutableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,381,"utableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,381,"MutableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,397,"utableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,397,"MutableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,431,"utableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,431,"MutableTimePeriod test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,497,"ssertEquals(test.getDurationType(), copy.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,497,"assertEquals(test.getPeriodType(), copy.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,506,"ssertEquals(test.getDurationType(), copy.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,506,"assertEquals(test.getPeriodType(), copy.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,141,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,141,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,156, Test constructor (DurationType)
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,156,* Test constructor (PeriodType)
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,158,ublic void testConstructor_DurationType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,159,utableTimePeriod test = new MutableTimePeriod(DurationType.getYearMonthType());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,160,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,158,public void testConstructor_PeriodType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,159,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,160,"assertEquals(PeriodType.getYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,173,ublic void testConstructor_DurationType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,174,utableTimePeriod test = new MutableTimePeriod((DurationType) null);
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,175,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,173,public void testConstructor_PeriodType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,174,MutableTimePeriod test = new MutableTimePeriod((PeriodType) null);
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,175,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,195,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,195,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,217,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,217,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,231,ublic void testConstructor_long_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,231,public void testConstructor_long_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,237,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,237,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,253,ublic void testConstructor_long_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,253,public void testConstructor_long_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,258,"utableTimePeriod test = new MutableTimePeriod(length, DurationType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,259,"ssertEquals(DurationType.getMillisType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,258,"MutableTimePeriod test = new MutableTimePeriod(length, PeriodType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,259,"assertEquals(PeriodType.getMillisType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,272,ublic void testConstructor_long_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,272,public void testConstructor_long_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,277,"utableTimePeriod test = new MutableTimePeriod(length, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,278,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,277,"MutableTimePeriod test = new MutableTimePeriod(length, PeriodType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,278,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,294,ublic void testConstructor_long_DurationType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,294,public void testConstructor_long_PeriodType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,299,"utableTimePeriod test = new MutableTimePeriod(length, DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,300,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,299,"MutableTimePeriod test = new MutableTimePeriod(length, PeriodType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,300,"assertEquals(PeriodType.getAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,319,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,319,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,340,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,340,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,360,ublic void testConstructor_8int__DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,360,public void testConstructor_8int__PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,362,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,362,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,378,ublic void testConstructor_8int__DurationType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,379,"utableTimePeriod test = new MutableTimePeriod(0, 0, 0, 0, 5, 6, 7, 8, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,380,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,378,public void testConstructor_8int__PeriodType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,379,"MutableTimePeriod test = new MutableTimePeriod(0, 0, 0, 0, 5, 6, 7, 8, PeriodType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,380,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,395,ublic void testConstructor_8int__DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,395,public void testConstructor_8int__PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,397,"ew MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,397,"new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,407,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,407,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,427,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,427,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,444,ublic void testConstructor_long_long_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,444,public void testConstructor_long_long_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,448,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,448,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,464,ublic void testConstructor_long_long_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,464,public void testConstructor_long_long_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,467,"utableTimePeriod test = new MutableTimePeriod(dt1.getMillis(), dt2.getMillis(), DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,468,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,467,"MutableTimePeriod test = new MutableTimePeriod(dt1.getMillis(), dt2.getMillis(), PeriodType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,468,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,484,ublic void testConstructor_long_long_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,484,public void testConstructor_long_long_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,487,"utableTimePeriod test = new MutableTimePeriod(dt1.getMillis(), dt2.getMillis(), DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,488,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,487,"MutableTimePeriod test = new MutableTimePeriod(dt1.getMillis(), dt2.getMillis(), PeriodType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,488,"assertEquals(PeriodType.getAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,506,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,506,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,526,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,526,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,546,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,546,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,566,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,566,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,586,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,586,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,600,ublic void testConstructor_RI_RI_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,600,public void testConstructor_RI_RI_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,604,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,604,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,620,ublic void testConstructor_RI_RI_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,620,public void testConstructor_RI_RI_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,623,"utableTimePeriod test = new MutableTimePeriod(dt1, dt2, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,624,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,623,"MutableTimePeriod test = new MutableTimePeriod(dt1, dt2, PeriodType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,624,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,640,ublic void testConstructor_RI_RI_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,640,public void testConstructor_RI_RI_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,643,"utableTimePeriod test = new MutableTimePeriod(dt1, dt2, DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,644,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,643,"MutableTimePeriod test = new MutableTimePeriod(dt1, dt2, PeriodType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,644,"assertEquals(PeriodType.getAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,657,ublic void testConstructor_RI_RI_DurationType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,657,public void testConstructor_RI_RI_PeriodType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,660,"utableTimePeriod test = new MutableTimePeriod(dt1, dt2, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,661,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,660,"MutableTimePeriod test = new MutableTimePeriod(dt1, dt2, PeriodType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,661,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,677,ublic void testConstructor_RI_RI_DurationType5() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,677,public void testConstructor_RI_RI_PeriodType5() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,680,"utableTimePeriod test = new MutableTimePeriod(dt1, dt2, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,681,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,680,"MutableTimePeriod test = new MutableTimePeriod(dt1, dt2, PeriodType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,681,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,700,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,700,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,718,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,718,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,732,"utableTimePeriod test = new MutableTimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,733,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,732,"MutableTimePeriod test = new MutableTimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getDayHourType()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,733,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,748,"imePeriod base = new TimePeriod(1, 1, 0, 1, 1, 1, 1, 1, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,748,"TimePeriod base = new TimePeriod(1, 1, 0, 1, 1, 1, 1, 1, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,750,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,750,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,768," Test constructor (Object,DurationType)"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,768,"* Test constructor (Object,PeriodType)"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,770,ublic void testConstructor_Object_DurationType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,771,"utableTimePeriod test = new MutableTimePeriod(""P1Y2M3D"", DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,772,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,770,public void testConstructor_Object_PeriodType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,771,"MutableTimePeriod test = new MutableTimePeriod(""P1Y2M3D"", PeriodType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,772,"assertEquals(PeriodType.getYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,788,ublic void testConstructor_Object_DurationType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,789,"utableTimePeriod test = new MutableTimePeriod((Object) null, DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,790,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,788,public void testConstructor_Object_PeriodType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,789,"MutableTimePeriod test = new MutableTimePeriod((Object) null, PeriodType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,790,"assertEquals(PeriodType.getYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,803,ublic void testConstructor_Object_DurationType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,804,"utableTimePeriod test = new MutableTimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()), DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,805,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,803,public void testConstructor_Object_PeriodType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,804,"MutableTimePeriod test = new MutableTimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getDayHourType()), PeriodType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,805,"assertEquals(PeriodType.getYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,819,ublic void testConstructor_Object_DurationType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,820,"utableTimePeriod test = new MutableTimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()), null);"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,821,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,819,public void testConstructor_Object_PeriodType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,820,"MutableTimePeriod test = new MutableTimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getDayHourType()), null);"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,821,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,397,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,397,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,414,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,414,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,457,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,457,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,474,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,474,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,561,utableTimePeriod test = new MutableTimePeriod(DurationType.getAllType().withYearsRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,561,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getAllType().withYearsRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,576,utableTimePeriod test = new MutableTimePeriod(DurationType.getAllType().withMonthsRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,576,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getAllType().withMonthsRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,591,utableTimePeriod test = new MutableTimePeriod(DurationType.getAllType().withWeeksRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,591,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getAllType().withWeeksRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,606,utableTimePeriod test = new MutableTimePeriod(DurationType.getAllType().withDaysRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,606,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getAllType().withDaysRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,621,utableTimePeriod test = new MutableTimePeriod(DurationType.getAllType().withHoursRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,621,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getAllType().withHoursRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,636,utableTimePeriod test = new MutableTimePeriod(DurationType.getAllType().withMinutesRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,636,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getAllType().withMinutesRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,651,utableTimePeriod test = new MutableTimePeriod(DurationType.getAllType().withSecondsRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,651,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getAllType().withSecondsRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,666,utableTimePeriod test = new MutableTimePeriod(DurationType.getAllType().withMillisRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,666,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getAllType().withMillisRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,713,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearMonthType());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,713,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearMonthType());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,730,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearWeekType());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,730,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearWeekType());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,752,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearMonthType().withYearsRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,752,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearMonthType().withYearsRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,771,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearMonthType().withMonthsRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,771,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearMonthType().withMonthsRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,790,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearWeekType().withWeeksRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,790,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearWeekType().withWeeksRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,809,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearMonthType().withDaysRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,809,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearMonthType().withDaysRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,828,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearMonthType().withHoursRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,828,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearMonthType().withHoursRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,847,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearMonthType().withMinutesRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,847,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearMonthType().withMinutesRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,866,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearMonthType().withSecondsRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,866,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearMonthType().withSecondsRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,885,utableTimePeriod test = new MutableTimePeriod(DurationType.getPreciseYearMonthType().withMillisRemoved());
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,885,MutableTimePeriod test = new MutableTimePeriod(PeriodType.getPreciseYearMonthType().withMillisRemoved());
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,913,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,913,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,944,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,944,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,963,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,963,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1006,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1006,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1025,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1025,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1082,"est.add(new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getPreciseAllType()));"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1082,"test.add(new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getPreciseAllType()));"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1094,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1094,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1108,"utableTimePeriod test = new MutableTimePeriod(1, 2, 0, 4, 5, 6, 7, 8, DurationType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1108,"MutableTimePeriod test = new MutableTimePeriod(1, 2, 0, 4, 5, 6, 7, 8, PeriodType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1182,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1182,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1197,"utableTimePeriod test = new MutableTimePeriod(100L, DurationType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1197,"MutableTimePeriod test = new MutableTimePeriod(100L, PeriodType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1232,"utableTimePeriod test = new MutableTimePeriod(1, 14, 0, 36, 29, 66, 67, 1008, DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,1232,"MutableTimePeriod test = new MutableTimePeriod(1, 14, 0, 36, 29, 66, 67, 1008, PeriodType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,149,ublic void testGetDurationType() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,149,public void testGetPeriodType() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,151,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,151,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,194,"ssertEquals(false, test1.equals(new TimePeriod(123L, DurationType.getDayHourType())));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,194,"assertEquals(false, test1.equals(new TimePeriod(123L, PeriodType.getDayHourType())));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,201,rotected DurationType checkDurationType(DurationType type) {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,202,eturn DurationType.getAllType();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,201,protected PeriodType checkPeriodType(PeriodType type) {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,202,return PeriodType.getAllType();
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,268,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,268,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,315,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,315,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,331,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,331,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,364,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,364,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,380,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,380,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,396,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,396,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,430,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,430,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType(ISOChronology.getInstanceUTC()));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,493,ublic void testWithDurationTypeRetainDuration1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,493,public void testWithPeriodTypeRetainDuration1() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,495,imePeriod result = test.withDurationTypeRetainDuration(DurationType.getAllType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,495,TimePeriod result = test.withPeriodTypeRetainDuration(PeriodType.getAllType());
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,499,ublic void testWithDurationTypeRetainDuration2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,499,public void testWithPeriodTypeRetainDuration2() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,501,imePeriod result = test.withDurationTypeRetainDuration(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,501,TimePeriod result = test.withPeriodTypeRetainDuration(PeriodType.getDayHourType());
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,505,"ssertEquals(DurationType.getDayHourType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,505,"assertEquals(PeriodType.getDayHourType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,508,ublic void testWithDurationTypeRetainDuration3() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,509,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,508,public void testWithPeriodTypeRetainDuration3() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,509,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,511,est.withDurationTypeRetainDuration(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,511,test.withPeriodTypeRetainDuration(PeriodType.getDayHourType());
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,516,ublic void testWithDurationTypeRetainDuration4() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,516,public void testWithPeriodTypeRetainDuration4() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,518,imePeriod result = test.withDurationTypeRetainDuration(null);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,518,TimePeriod result = test.withPeriodTypeRetainDuration(null);
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,522,"ssertEquals(DurationType.getAllType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,522,"assertEquals(PeriodType.getAllType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,526,ublic void testWithDurationType1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,526,public void testWithPeriodType1() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,528,imePeriod result = test.withDurationType(DurationType.getAllType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,528,TimePeriod result = test.withPeriodType(PeriodType.getAllType());
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,532,ublic void testWithDurationType2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,532,public void testWithPeriodType2() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,534,imePeriod result = test.withDurationType(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,534,TimePeriod result = test.withPeriodType(PeriodType.getDayHourType());
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,538,"ssertEquals(DurationType.getDayHourType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,538,"assertEquals(PeriodType.getDayHourType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,541,ublic void testWithDurationType3() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,542,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,541,public void testWithPeriodType3() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,542,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,544,est.withDurationType(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,544,test.withPeriodType(PeriodType.getDayHourType());
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,549,ublic void testWithDurationType4() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,549,public void testWithPeriodType4() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,551,imePeriod result = test.withDurationType(null);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,551,TimePeriod result = test.withPeriodType(null);
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,555,"ssertEquals(DurationType.getAllType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,555,"assertEquals(PeriodType.getAllType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,558,ublic void testWithDurationType5() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,559,"imePeriod test = new TimePeriod(1, 2, 0, 4, 5, 6, 7, 8, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,560,imePeriod result = test.withDurationType(DurationType.getYearMonthType());
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,561,"ssertEquals(DurationType.getYearMonthType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,558,public void testWithPeriodType5() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,559,"TimePeriod test = new TimePeriod(1, 2, 0, 4, 5, 6, 7, 8, PeriodType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,560,TimePeriod result = test.withPeriodType(PeriodType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,561,"assertEquals(PeriodType.getYearMonthType(), result.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,574,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, DurationType.getPreciseAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,574,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, PeriodType.getPreciseAllType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,587,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,587,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,142,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,142,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,164,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,164,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,178,ublic void testConstructor_long_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,178,public void testConstructor_long_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,184,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,184,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,200,ublic void testConstructor_long_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,200,public void testConstructor_long_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,205,"imePeriod test = new TimePeriod(length, DurationType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,206,"ssertEquals(DurationType.getMillisType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,205,"TimePeriod test = new TimePeriod(length, PeriodType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,206,"assertEquals(PeriodType.getMillisType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,219,ublic void testConstructor_long_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,219,public void testConstructor_long_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,224,"imePeriod test = new TimePeriod(length, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,225,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,224,"TimePeriod test = new TimePeriod(length, PeriodType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,225,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,241,ublic void testConstructor_long_DurationType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,241,public void testConstructor_long_PeriodType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,246,"imePeriod test = new TimePeriod(length, DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,247,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,246,"TimePeriod test = new TimePeriod(length, PeriodType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,247,"assertEquals(PeriodType.getAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,266,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,266,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,287,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,287,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,307,ublic void testConstructor_8int__DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,307,public void testConstructor_8int__PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,309,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,309,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,325,ublic void testConstructor_8int__DurationType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,326,"imePeriod test = new TimePeriod(0, 0, 0, 0, 5, 6, 7, 8, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,327,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,325,public void testConstructor_8int__PeriodType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,326,"TimePeriod test = new TimePeriod(0, 0, 0, 0, 5, 6, 7, 8, PeriodType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,327,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,342,ublic void testConstructor_8int__DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,342,public void testConstructor_8int__PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,344,"ew TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,344,"new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, PeriodType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,354,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,354,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,374,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,374,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,391,ublic void testConstructor_long_long_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,391,public void testConstructor_long_long_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,395,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,395,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,411,ublic void testConstructor_long_long_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,411,public void testConstructor_long_long_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,414,"imePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,415,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,414,"TimePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), PeriodType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,415,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,431,ublic void testConstructor_long_long_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,431,public void testConstructor_long_long_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,434,"imePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,435,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,434,"TimePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), PeriodType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,435,"assertEquals(PeriodType.getAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,453,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,453,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,473,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,473,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,493,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,493,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,513,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,513,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,533,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,533,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,547,ublic void testConstructor_RI_RI_DurationType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,547,public void testConstructor_RI_RI_PeriodType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,551,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,551,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,567,ublic void testConstructor_RI_RI_DurationType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,567,public void testConstructor_RI_RI_PeriodType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,570,"imePeriod test = new TimePeriod(dt1, dt2, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,571,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,570,"TimePeriod test = new TimePeriod(dt1, dt2, PeriodType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,571,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,587,ublic void testConstructor_RI_RI_DurationType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,587,public void testConstructor_RI_RI_PeriodType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,590,"imePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,591,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,590,"TimePeriod test = new TimePeriod(dt1, dt2, PeriodType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,591,"assertEquals(PeriodType.getAllType().withMillisRemoved(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,604,ublic void testConstructor_RI_RI_DurationType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,604,public void testConstructor_RI_RI_PeriodType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,607,"imePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,608,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,607,"TimePeriod test = new TimePeriod(dt1, dt2, PeriodType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,608,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,624,ublic void testConstructor_RI_RI_DurationType5() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,624,public void testConstructor_RI_RI_PeriodType5() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,627,"imePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,628,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,627,"TimePeriod test = new TimePeriod(dt1, dt2, PeriodType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,628,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,647,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,647,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,665,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,665,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,679,"imePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()));"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,680,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,679,"TimePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getDayHourType()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,680,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,695,"imePeriod base = new TimePeriod(1, 1, 0, 1, 1, 1, 1, 1, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,695,"TimePeriod base = new TimePeriod(1, 1, 0, 1, 1, 1, 1, 1, PeriodType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,697,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,697,"assertEquals(PeriodType.getAllType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,717,ublic void testConstructor_Object_DurationType1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,718,"imePeriod test = new TimePeriod(""P1Y2M3D"", DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,719,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,717,public void testConstructor_Object_PeriodType1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,718,"TimePeriod test = new TimePeriod(""P1Y2M3D"", PeriodType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,719,"assertEquals(PeriodType.getYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,735,ublic void testConstructor_Object_DurationType2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,736,"imePeriod test = new TimePeriod((Object) null, DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,737,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,735,public void testConstructor_Object_PeriodType2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,736,"TimePeriod test = new TimePeriod((Object) null, PeriodType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,737,"assertEquals(PeriodType.getYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,750,ublic void testConstructor_Object_DurationType3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,751,"imePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()), DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,752,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,750,public void testConstructor_Object_PeriodType3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,751,"TimePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getDayHourType()), PeriodType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,752,"assertEquals(PeriodType.getYearMonthType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,766,ublic void testConstructor_Object_DurationType4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,767,"imePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()), null);"
False,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,768,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,766,public void testConstructor_Object_PeriodType4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,767,"TimePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, PeriodType.getDayHourType()), null);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,768,"assertEquals(PeriodType.getDayHourType(), test.getPeriodType());"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,80,mport org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,80,import org.joda.time.PeriodType;
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,371, = ConverterManager.getInstance().getDurationConverter(new TimePeriod(DurationType.getMillisType()));
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,371,c = ConverterManager.getInstance().getDurationConverter(new TimePeriod(PeriodType.getMillisType()));
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,510,imePeriodConverter c = ConverterManager.getInstance().getTimePeriodConverter(new TimePeriod(DurationType.getMillisType()));
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,510,TimePeriodConverter c = ConverterManager.getInstance().getTimePeriodConverter(new TimePeriod(PeriodType.getMillisType()));
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,554,"ublic DurationType getDurationType(Object object, boolean tmm) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,554,"public PeriodType getPeriodType(Object object, boolean tmm) {return null;}"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,571,"ublic DurationType getDurationType(Object object, boolean tmm) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,571,"public PeriodType getPeriodType(Object object, boolean tmm) {return null;}"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,621,"ublic DurationType getDurationType(Object object, boolean tmm) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,621,"public PeriodType getPeriodType(Object object, boolean tmm) {return null;}"
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,65,mport org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,65,import org.joda.time.PeriodType;
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,155,ublic void testGetDurationType_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,156,"ssertEquals(DurationType.getAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,157,"ongConverter.INSTANCE.getDurationType(new Long(123L), false));"
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,158,"ssertEquals(DurationType.getPreciseAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,159,"ongConverter.INSTANCE.getDurationType(new Long(123L), true));"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,155,public void testGetPeriodType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,156,"assertEquals(PeriodType.getAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,157,"LongConverter.INSTANCE.getPeriodType(new Long(123L), false));"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,158,"assertEquals(PeriodType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,159,"LongConverter.INSTANCE.getPeriodType(new Long(123L), true));"
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,163,utableTimePeriod m = new MutableTimePeriod(DurationType.getMillisType());
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,163,MutableTimePeriod m = new MutableTimePeriod(PeriodType.getMillisType());
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,67,mport org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,67,import org.joda.time.PeriodType;
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,172,ublic void testGetDurationType_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,173,"ssertEquals(DurationType.getAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,174,"ullConverter.INSTANCE.getDurationType(null, false));"
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,175,"ssertEquals(DurationType.getPreciseAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,176,"ullConverter.INSTANCE.getDurationType(null, true));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,172,public void testGetPeriodType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,173,"assertEquals(PeriodType.getAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,174,"NullConverter.INSTANCE.getPeriodType(null, false));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,175,"assertEquals(PeriodType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,176,"NullConverter.INSTANCE.getPeriodType(null, true));"
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,180,utableTimePeriod m = new MutableTimePeriod(DurationType.getMillisType());
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,180,MutableTimePeriod m = new MutableTimePeriod(PeriodType.getMillisType());
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,67,mport org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,67,import org.joda.time.PeriodType;
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,128,ublic void testGetDurationType_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,129,"ssertEquals(DurationType.getPreciseAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,130,"eadableDurationConverter.INSTANCE.getDurationType(new Duration(123L), false));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,131,"ssertEquals(DurationType.getPreciseAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,132,"eadableDurationConverter.INSTANCE.getDurationType(new Duration(123L), true));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,128,public void testGetPeriodType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,129,"assertEquals(PeriodType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,130,"ReadableDurationConverter.INSTANCE.getPeriodType(new Duration(123L), false));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,131,"assertEquals(PeriodType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,132,"ReadableDurationConverter.INSTANCE.getPeriodType(new Duration(123L), true));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,136,utableTimePeriod m = new MutableTimePeriod(DurationType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,136,MutableTimePeriod m = new MutableTimePeriod(PeriodType.getYearMonthType());
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,65,mport org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,65,import org.joda.time.PeriodType;
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,129,ublic void testGetDurationType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,129,public void testGetPeriodType_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,131,"ssertEquals(DurationType.getAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,132,"eadableIntervalConverter.INSTANCE.getDurationType(i, false));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,133,"ssertEquals(DurationType.getPreciseAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,134,"eadableIntervalConverter.INSTANCE.getDurationType(i, true));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,131,"assertEquals(PeriodType.getAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,132,"ReadableIntervalConverter.INSTANCE.getPeriodType(i, false));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,133,"assertEquals(PeriodType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,134,"ReadableIntervalConverter.INSTANCE.getPeriodType(i, true));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,139,utableTimePeriod m = new MutableTimePeriod(DurationType.getMillisType());
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,139,MutableTimePeriod m = new MutableTimePeriod(PeriodType.getMillisType());
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,65,mport org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,65,import org.joda.time.PeriodType;
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,127,ublic void testGetDurationType_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,128,"ssertEquals(DurationType.getAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,129,"eadableTimePeriodConverter.INSTANCE.getDurationType(new TimePeriod(123L), false));"
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,130,"ssertEquals(DurationType.getPreciseAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,131,"eadableTimePeriodConverter.INSTANCE.getDurationType(new TimePeriod(123L), true));"
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,132,"ssertEquals(DurationType.getPreciseAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,133,"eadableTimePeriodConverter.INSTANCE.getDurationType(new TimePeriod(123L, DurationType.getAllType()), true));"
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,134,"ssertEquals(DurationType.getPreciseYearDayType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,135,"eadableTimePeriodConverter.INSTANCE.getDurationType(new TimePeriod(123L, DurationType.getPreciseYearDayType()), true));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,127,public void testGetPeriodType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,128,"assertEquals(PeriodType.getAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,129,"ReadableTimePeriodConverter.INSTANCE.getPeriodType(new TimePeriod(123L), false));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,130,"assertEquals(PeriodType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,131,"ReadableTimePeriodConverter.INSTANCE.getPeriodType(new TimePeriod(123L), true));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,132,"assertEquals(PeriodType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,133,"ReadableTimePeriodConverter.INSTANCE.getPeriodType(new TimePeriod(123L, PeriodType.getAllType()), true));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,134,"assertEquals(PeriodType.getPreciseYearDayType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,135,"ReadableTimePeriodConverter.INSTANCE.getPeriodType(new TimePeriod(123L, PeriodType.getPreciseYearDayType()), true));"
False,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,139,utableTimePeriod m = new MutableTimePeriod(DurationType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,139,MutableTimePeriod m = new MutableTimePeriod(PeriodType.getYearMonthType());
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,68,mport org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,68,import org.joda.time.PeriodType;
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,324,ublic void testGetDurationType_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,325,"ssertEquals(DurationType.getAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,326,"tringConverter.INSTANCE.getDurationType(""P2Y6M9D"", false));"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,327,"ssertEquals(DurationType.getPreciseAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,328,"tringConverter.INSTANCE.getDurationType(""P2Y6M9D"", true));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,324,public void testGetPeriodType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,325,"assertEquals(PeriodType.getAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,326,"StringConverter.INSTANCE.getPeriodType(""P2Y6M9D"", false));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,327,"assertEquals(PeriodType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,328,"StringConverter.INSTANCE.getPeriodType(""P2Y6M9D"", true));"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,332,utableTimePeriod m = new MutableTimePeriod(DurationType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,332,MutableTimePeriod m = new MutableTimePeriod(PeriodType.getYearMonthType());
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,342, = new MutableTimePeriod(DurationType.getYearWeekType());
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,342,m = new MutableTimePeriod(PeriodType.getYearWeekType());
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,352," = new MutableTimePeriod(1, 0, 1, 1, 1, 1, 1, 1, DurationType.getYearWeekType());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,352,"m = new MutableTimePeriod(1, 0, 1, 1, 1, 1, 1, 1, PeriodType.getYearWeekType());"
