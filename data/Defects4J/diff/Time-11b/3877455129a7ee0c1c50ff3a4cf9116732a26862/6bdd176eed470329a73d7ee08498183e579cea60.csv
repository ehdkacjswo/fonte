is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,56,mport java.text.DateFormat;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,57,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,58,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,59,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,60,mport java.util.Locale;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,61,mport java.util.TimeZone;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,63,mport junit.framework.AssertionFailedError;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,64,mport junit.framework.TestCase;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,66,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,67,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,68,mport org.joda.time.Instant;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,70, This class is the abstract Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,71, DateTimeField date time field subclasses.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,73, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,75,ublic abstract class AbstractTestDateTimeField extends TestCase {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,77,"rotected static final TimeZone UTC = TimeZone.getTimeZone(""GMT+00:00"");"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,78,/    protected static final TimeZone OLD_PARIS = UTC;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,79,/    protected static final DateTimeZone PARIS = DateTimeZone.UTC;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,80,"rotected static final TimeZone OLD_PARIS = TimeZone.getTimeZone(""Europe/Paris"");"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,81,"rivate static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,82,rotected static final long MILLIS_1970;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,83,rotected static final long MILLIS_1972_MARCH;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,84,rotected static final long MILLIS_2000;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,85,rotected static final long MILLIS_2000_MARCH;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,86,rotected static final long MILLIS_1600;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,87,rotected static final long MILLIS_1600_MARCH;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,88,rotected static final long MILLIS_1583;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,89,rotected static final long MILLIS_1582_OCTOBER;// = -12219292800000L;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,90,rotected static final long MILLIS_1582;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,91,rotected static final long MILLIS_1;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,92,rotected static final long MILLIS_100;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,93,rotected static final long MILLIS_100_MARCH;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,94,rotected static final long MILLIS_400;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,95,rotected static final long MILLIS_400_MARCH;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,96,rotected static long[] RESULT;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,98,rotected GregorianCalendar iCalendar = new GregorianCalendar(OLD_PARIS);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,99,rotected Date iDate = new Date();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,101,tatic {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,102,regorianCalendar cal = new GregorianCalendar(OLD_PARIS);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,103,al.setTime(new Date(0L));
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,104,"al.set(Calendar.HOUR_OF_DAY, 0);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,105,"al.set(Calendar.DAY_OF_MONTH, 1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,106,"al.set(Calendar.YEAR, 1970);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,107,ILLIS_1970 = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,108,"al.set(Calendar.YEAR, 2000);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,109,ILLIS_2000 = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,110,"al.set(Calendar.YEAR, 1600);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,111,ILLIS_1600 = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,112,"al.set(Calendar.YEAR, 100);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,113,ILLIS_100 = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,114,"al.set(Calendar.YEAR, 400);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,115,ILLIS_400 = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,116,"al.set(Calendar.YEAR, 1583);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,117,ILLIS_1583 = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,118,"al.set(Calendar.YEAR, 1582);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,119,ILLIS_1582 = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,120,"al.set(Calendar.YEAR, 1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,121,ILLIS_1 = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,123,"al.set(Calendar.YEAR, 1972);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,124,"al.set(Calendar.MONTH, Calendar.MARCH);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,125,"al.set(Calendar.DAY_OF_MONTH, 1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,126,ILLIS_1972_MARCH = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,127,"al.set(Calendar.YEAR, 2000);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,128,ILLIS_2000_MARCH = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,129,"al.set(Calendar.YEAR, 1600);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,130,ILLIS_1600_MARCH = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,131,"al.set(Calendar.YEAR, 100);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,132,ILLIS_100_MARCH = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,133,"al.set(Calendar.YEAR, 400);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,134,ILLIS_400_MARCH = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,136,/        System.out.println(new GJDateTime(MILLIS_1 + 4 * 366L * 24 * 60 * 60 * 1000).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,137,/        System.out.println(new GJDateTime(MILLIS_1 + 4 * 366L * 24 * 60 * 60 * 1000).getYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,138,/        System.out.println(new GJDateTime(MILLIS_1 + 3 * 366L * 24 * 60 * 60 * 1000).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,139,/        System.out.println(new GJDateTime(MILLIS_1 + 3 * 366L * 24 * 60 * 60 * 1000).getYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,140,/        System.out.println(new GJDateTime(MILLIS_1 + 2 * 366L * 24 * 60 * 60 * 1000).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,141,/        System.out.println(new GJDateTime(MILLIS_1 + 2 * 366L * 24 * 60 * 60 * 1000).getYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,142,/        System.out.println(new GJDateTime(MILLIS_1 + 1 * 366L * 24 * 60 * 60 * 1000).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,143,/        System.out.println(new GJDateTime(MILLIS_1 + 1 * 366L * 24 * 60 * 60 * 1000).getYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,144,/        System.out.println(new GJDateTime(MILLIS_1).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,145,/        System.out.println(new GJDateTime(MILLIS_1 - 1 * 360L * 24 * 60 * 60 * 1000).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,146,/        System.out.println(new GJDateTime(MILLIS_1 - 1 * 360L * 24 * 60 * 60 * 1000).getYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,147,/        System.out.println(new GJDateTime(MILLIS_1 - 2 * 360L * 24 * 60 * 60 * 1000).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,148,/        System.out.println(new GJDateTime(MILLIS_1 - 2 * 360L * 24 * 60 * 60 * 1000).getYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,149,/        System.out.println(new GJDateTime(MILLIS_1 - 3 * 360L * 24 * 60 * 60 * 1000).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,150,/        System.out.println(new GJDateTime(MILLIS_1 - 3 * 360L * 24 * 60 * 60 * 1000).getYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,151,/        System.out.println(new GJDateTime(MILLIS_1 - 4 * 360L * 24 * 60 * 60 * 1000).getLeapYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,152,/        System.out.println(new GJDateTime(MILLIS_1 - 4 * 360L * 24 * 60 * 60 * 1000).getYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,154,"al.set(Calendar.YEAR, 1582);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,155,"al.set(Calendar.MONTH, Calendar.OCTOBER);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,156,"al.set(Calendar.DAY_OF_MONTH, 15);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,157,/        System.out.println(new GJDateTime(cal).getMonthOfYear());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,158,/        System.out.println(new GJDateTime(cal).getDayOfMonth());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,159,/        System.out.println(new GJDateTime(cal).getHourOfDay());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,160,"/        System.out.println(""1 ""+cal);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,161,/        System.out.println(new Instant(cal));
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,162,"/        cal.set(Calendar.DAY_OF_MONTH, 2);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,163,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,164,"/        System.out.println(""2 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,165,"/        cal.set(Calendar.DAY_OF_MONTH, 3);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,166,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,167,"/        System.out.println(""3 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,168,"/        cal.set(Calendar.DAY_OF_MONTH, 4);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,169,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,170,"/        System.out.println(""4 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,171,"/        cal.set(Calendar.DAY_OF_MONTH, 5);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,172,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,173,"/        System.out.println(""5 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,174,"/        cal.set(Calendar.DAY_OF_MONTH, 6);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,175,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,176,"/        System.out.println(""6 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,177,"/        cal.set(Calendar.DAY_OF_MONTH, 9);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,178,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,179,"/        System.out.println(""9 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,180,"/        cal.set(Calendar.DAY_OF_MONTH, 12);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,181,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,182,"/        System.out.println(""12 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,183,"/        cal.set(Calendar.DAY_OF_MONTH, 14);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,184,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,185,"/        System.out.println(""14 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,186,"/        cal.set(Calendar.DAY_OF_MONTH, 15);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,187,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,188,"/        System.out.println(""15 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,189,"/        cal.set(Calendar.DAY_OF_MONTH, 16);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,190,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,191,"/        System.out.println(""16 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,192,"/        cal.set(Calendar.DAY_OF_MONTH, 30);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,193,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,194,"/        System.out.println(""30 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,195,"/        cal.set(Calendar.DAY_OF_MONTH, 31);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,196,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,197,"/        System.out.println(""31 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,198,"/        cal.set(Calendar.DAY_OF_MONTH, 1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,199,"/        cal.set(Calendar.MONTH, Calendar.NOVEMBER);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,200,/        System.out.println(cal);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,201,"/        System.out.println(""1 ""+new Instant(cal));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,202,ILLIS_1582_OCTOBER = cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,207, TestDateTimeField constructor.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,208, @param name
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,210,ublic AbstractTestDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,211,uper(name);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,214,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,215,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,217,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,218,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,221,/ subclass calculations
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,224, Override to return the field name.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,226,rotected abstract String getFieldName();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,228, Override to return the unit size in millis
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,230,rotected abstract long getUnitSize();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,232, Override to return the field.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,234,rotected abstract DateTimeField getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,235,rotected abstract int getMinimumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,236,rotected abstract int getMaximumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,237,rotected abstract int getCalendarValue(long millis);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,238,"rotected String getText(int value, Locale loc) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,239,eturn Integer.toString(value);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,241,"rotected String getShortText(int value, Locale loc) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,242,eturn Integer.toString(value);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,244,rotected int getMaximumTextLength(Locale loc) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,245,nt max = getMaximumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,246,eturn Integer.toString(max).length();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,248,rotected int getMaximumShortTextLength(Locale loc) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,249,nt max = getMaximumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,250,eturn Integer.toString(max).length();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,252,"rotected long getAddedResult(long millis, int add) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,253,eturn millis + add * getUnitSize();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,255,"rotected long getAddWrappedResult(long millis, int addWrapped) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,256,f (addWrapped == 0) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,257,eturn millis;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,259,nt val = getCalendarValue(millis);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,260,nt max = getMaximumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,261,nt min = getMinimumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,262,nt add = val + addWrapped;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,263,hile (add > max || add < min) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,264,f (addWrapped >= 0) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,265,dd = add - (max - min) - 1;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,266, else {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,267,dd = add + (max - min) + 1;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,270,eturn millis + ((add - val) * getUnitSize());
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,273,/ building of the multiple test point approach
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,275,rotected long getIncrementSize() {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,276,eturn 1 * 60 * 60 * 1000;  // 1 hour
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,278,rotected long getTestRange() {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,279,eturn 2 * 24 * 60 * 60 * 1000;  // 2 days
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,282,rotected long[] getTestPositions() {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,283,eturn new long[] {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,284,"ILLIS_1970, MILLIS_1972_MARCH,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,285,"ILLIS_2000, MILLIS_2000_MARCH,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,286,"ILLIS_1600, MILLIS_1600_MARCH,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,287,"ILLIS_1583, MILLIS_1582_OCTOBER,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,288,"ILLIS_400, MILLIS_400_MARCH,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,289,"ILLIS_100, MILLIS_100_MARCH,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,290,"ILLIS_1582, MILLIS_1"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,293,rotected long[] getAllTestPositions() {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,294,f (RESULT == null) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,295,ong[] var = getTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,296,ESULT = new long[7 * var.length * (2 * ((int) (getTestRange() / getIncrementSize())))];
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,297,nt count = 0;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,298,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,299,ong start = var[i] - getTestRange();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,300,ong end = var[i] + getTestRange();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,301,"/                System.out.println(""START "" + new Date(start));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,302,"/                System.out.println(""END   "" + new Date(end));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,303,or (long j = start; j < end ; j = j + getIncrementSize()) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,304,ESULT[count++] = j - 60000; // -1min
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,305,ESULT[count++] = j - 1000; // -1sec
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,306,ESULT[count++] = j - 1; // -1ms
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,307,ESULT[count++] = j;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,308,ESULT[count++] = j + 1; // +1ms
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,309,ESULT[count++] = j + 1000; // +1sec
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,310,ESULT[count++] = j + 60000; // +1min
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,314,eturn RESULT;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,317,rotected DateTimeZone getZone() {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,318,eturn PARIS;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,321,/ test helpers for debugging
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,324, Special version of assert that debugs.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,326,"rivate void assertEquals(long[] var, int i, int expected, int actual) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,327,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,328,"ssertEquals(expected, actual);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,329, catch (AssertionFailedError ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,330,ystem.out.println(
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,331,"\n Test:            "" + getName() + "" for "" + getFieldName() +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,332,"\n loop count:      "" + i +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,333,"\n milliseconds:    "" + var[i] +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,334,"\n converted value: "" + getCalendarValue(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,335,"\n test expects:    "" + expected +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,336,"\n joda returned:   "" + actual +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,337,"\n time via Instant:"" + new Instant(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,338,"\n time via Date   :"" + new Date(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,339,"\n time via Date   :"" + DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, Locale.FRANCE).format(new Date(var[i])) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,340,"\n time via Date   :"" + DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, Locale.UK).format(new Date(var[i]))"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,342,hrow ex;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,347, Special version of assert that debugs.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,349,"rivate void assertEquals(long[] var, int i, long expected, long actual) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,350,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,351,"ssertEquals(expected, actual);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,352, catch (AssertionFailedError ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,353,ystem.out.println(
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,354,"\n Test:            "" + getName() + "" for "" + getFieldName() +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,355,"\n loop count:      "" + i +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,356,"\n milliseconds:    "" + var[i] +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,357,"\n converted value: "" + getCalendarValue(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,358,"\n test expects:    "" + expected +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,359,"\n joda returned:   "" + actual +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,360,"\n test via Instant:"" + new Instant(expected) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,361,"\n test via Date:   "" + new Date(expected) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,362,"\n joda via Instant:"" + new Instant(actual) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,363,"\n joda via Date:   "" + new Date(actual) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,364,"\n time via Instant:"" + new Instant(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,365,"\n time via Date   :"" + new Date(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,366,"\n time via Date   :"" + DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, Locale.FRANCE).format(new Date(var[i])) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,367,"\n time via Date   :"" + DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, Locale.UK).format(new Date(var[i]))"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,369,hrow ex;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,374, Special version of assert that debugs.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,376,"rivate void assertEquals(long[] var, int i, String expected, String actual) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,377,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,378,"ssertEquals(expected, actual);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,379, catch (AssertionFailedError ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,380,ystem.out.println(
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,381,"\n Test:            "" + getName() + "" for "" + getFieldName() +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,382,"\n loop count:      "" + i +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,383,"\n milliseconds:    "" + var[i] +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,384,"\n converted value: "" + getCalendarValue(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,385,"\n test expects:    "" + expected +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,386,"\n joda returned:   "" + actual +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,387,"\n time via Instant:"" + new Instant(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,388,"\n time via Date   :"" + new Date(var[i]) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,389,"\n time via Date   :"" + DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, Locale.FRANCE).format(new Date(var[i])) +"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,390,"\n time via Date   :"" + DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, Locale.UK).format(new Date(var[i]))"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,392,hrow ex;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,396,/ the tests
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,398,ublic void testGetName() {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,399,"ssertEquals(getFieldName(), getField().getName());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,402,ublic void testGet() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,403,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,404,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,405,"ssertEquals(var, i, getCalendarValue(var[i]), getField().get(var[i]));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,409,ublic void testGetEx() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,410,/        try {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,411,/            getField().get(Long.MIN_VALUE);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,412,/            fail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,413,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,414,/        try {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,415,/            getField().get(Long.MAX_VALUE);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,416,/            fail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,417,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,420,ublic void testSet() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,421,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,422,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,423,nt min = getMinimumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,424,nt max = getMaximumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,425,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,426,"ssertEquals(var, i, min, getCalendarValue(field.set(var[i], min)));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,428,f (min != max) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,429,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,430,"ssertEquals(var, i, min + 1, getCalendarValue(field.set(var[i], min + 1)));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,435,ublic void testSetEx() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,436,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,437,"etField().set(0L, getMaximumValue() + 1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,438, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,439,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,440,"etField().set(0L, getMinimumValue() - 1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,441, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,444,ublic void testAdd() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,445,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,446,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,447,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,448,ong millis = var[i];
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,449,"ssertEquals(var, i, getAddedResult(millis, 1), field.add(millis, 1));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,450,"ssertEquals(var, i, getAddedResult(millis, -1), field.add(millis, -1));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,451,"ssertEquals(var, i, getAddedResult(millis, 0), field.add(millis, 0));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,452,"ssertEquals(var, i, getAddedResult(millis, 2), field.add(millis, 2));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,453,"ssertEquals(var, i, getAddedResult(millis, 8), field.add(millis, 8));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,454,"ssertEquals(var, i, getAddedResult(millis, 9), field.add(millis, 9));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,455,"ssertEquals(var, i, getAddedResult(millis, -13), field.add(millis, -13));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,459,ublic void testAddWrapped() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,460,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,461,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,462,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,463,ong millis = var[i];
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,464,"ssertEquals(var, i, getAddWrappedResult(millis, 1), field.addWrapField(millis, 1));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,465,"ssertEquals(var, i, getAddWrappedResult(millis, -1), field.addWrapField(millis, -1));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,466,"ssertEquals(var, i, getAddWrappedResult(millis, 0), field.addWrapField(millis, 0));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,467,"ssertEquals(var, i, getAddWrappedResult(millis, 2), field.addWrapField(millis, 2));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,468,"ssertEquals(var, i, getAddWrappedResult(millis, 8), field.addWrapField(millis, 8));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,469,"ssertEquals(var, i, getAddWrappedResult(millis, 9), field.addWrapField(millis, 9));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,470,"ssertEquals(var, i, getAddWrappedResult(millis, -13), field.addWrapField(millis, -13));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,474,ublic void testGetDifference() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,475,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,476,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,477,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,478,ong millis = var[i];
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,479,"ong sum = field.add(millis, 1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,480,"ssertEquals(var, i, 1, field.getDifference(sum, millis));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,481,"um = field.add(millis, -1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,482,"ssertEquals(var, i, -1, field.getDifference(sum, millis));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,483,"um = field.add(millis, 0);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,484,"ssertEquals(var, i, 0, field.getDifference(sum, millis));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,485,"um = field.add(millis, 2);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,486,"ssertEquals(var, i, 2, field.getDifference(sum, millis));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,487,"um = field.add(millis, 8);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,488,"ssertEquals(var, i, 8, field.getDifference(sum, millis));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,489,"um = field.add(millis, 9);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,490,"ssertEquals(var, i, 9, field.getDifference(sum, millis));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,491,"um = field.add(millis, -13);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,492,"ssertEquals(var, i, -13, field.getDifference(sum, millis));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,496,ublic void testGetAsTextLocale() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,497,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,498,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,499,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,500,"ssertEquals(var, i, getText(field.get(var[i]), Locale.FRENCH), field.getAsText(var[i], Locale.FRENCH));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,504,ublic void testGetAsText() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,505,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,506,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,507,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,508,"ssertEquals(var, i, getText(field.get(var[i]), Locale.getDefault()), field.getAsText(var[i]));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,512,ublic void testGetAsShortTextLocale() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,513,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,514,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,515,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,516,"ssertEquals(var, i, getShortText(field.get(var[i]), Locale.FRENCH), field.getAsShortText(var[i], Locale.FRENCH));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,520,ublic void testGetAsShortText() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,521,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,522,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,523,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,524,"ssertEquals(var, i, getShortText(field.get(var[i]), Locale.getDefault()), field.getAsShortText(var[i]));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,528,ublic void testSetTextLocale() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,529,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,530,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,531,nt min = getMinimumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,532,nt max = getMaximumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,533,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,534,"ssertEquals(var, i, min, getCalendarValue(field.set(var[i], getText(min, Locale.FRENCH), Locale.FRENCH)));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,536,f (min != max) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,537,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,538,"ssertEquals(var, i, min + 1, getCalendarValue(field.set(var[i], getText(min + 1, Locale.FRENCH), Locale.FRENCH)));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,541,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,542,"ssertEquals(var, i, min, getCalendarValue(field.set(var[i], getShortText(min, Locale.FRENCH), Locale.FRENCH)));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,544,f (min != max) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,545,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,546,"ssertEquals(var, i, min + 1, getCalendarValue(field.set(var[i], getShortText(min + 1, Locale.FRENCH), Locale.FRENCH)));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,551,ublic void testSetText() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,552,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,553,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,554,nt min = getMinimumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,555,nt max = getMaximumValue();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,556,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,557,"ssertEquals(var, i, min, getCalendarValue(field.set(var[i], getText(min, Locale.getDefault()))));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,559,f (min != max) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,560,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,561,"ssertEquals(var, i, min + 1, getCalendarValue(field.set(var[i], getText(min + 1, Locale.getDefault()))));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,564,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,565,"ssertEquals(var, i, min, getCalendarValue(field.set(var[i], getShortText(min, Locale.getDefault()))));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,567,f (min != max) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,568,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,569,"ssertEquals(var, i, min + 1, getCalendarValue(field.set(var[i], getShortText(min + 1, Locale.getDefault()))));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,574,ublic void testIsLeapYear() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,575,"ssertEquals(false, getField().isLeap(0L));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,578,ublic void testGetLeapAmount() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,579,"ssertEquals(0, getField().getLeapAmount(0L));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,582,ublic void testGetMinimumValue() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,583,"ssertEquals(getMinimumValue(), getField().getMinimumValue());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,586,ublic void testGetMinimumValueMillis() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,589,ublic void testGetMaximumValue() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,590,"ssertEquals(getMaximumValue(), getField().getMaximumValue());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,593,ublic void testGetMaximumValueMillis() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,596,ublic void testGetMaximumTextLength() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,597,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,598,"ssertEquals(getMaximumTextLength(Locale.FRENCH), field.getMaximumTextLength(Locale.FRENCH));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,601,ublic void testGetMaximumShortTextLength(Locale loc) throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,602,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,603,"ssertEquals(getMaximumShortTextLength(Locale.FRENCH), field.getMaximumShortTextLength(Locale.FRENCH));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,606,ublic void testRoundFloor() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,609,ublic void testRoundCeiling() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,612,ublic void testRoundHalfFloor() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,615,ublic void testRoundHalfCeiling() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,618,ublic void testRoundHalfEven() throws Exception {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeField.java,621,ublic void testRemainder() throws Exception {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,56,mport java.lang.reflect.Constructor;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,57,mport java.lang.reflect.InvocationTargetException;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,58,mport java.lang.reflect.Method;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,59,mport java.lang.reflect.Modifier;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,60,mport java.util.ArrayList;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,61,mport java.util.Arrays;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,62,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,63,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,64,mport java.util.List;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,66,mport junit.framework.TestCase;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,67,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,69,mport org.joda.time.MutableDateTime;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,70,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,72,  A {@link TestCase} that can define both simple and bulk test methods.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,74,  A <I>simple test method</I> is the type of test traditionally
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,75,"  supplied by by {@link TestCase}.  To define a simple test, create a public"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,76,"  no-argument method whose name starts with ""test"".  You can specify the"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,77,  the name of simple test in the constructor of <Code>BulkTest</Code>;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,78,  a subsequent call to {@link TestCase#run} will run that simple test.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,80,"  A <I>bulk test method</I>, on the other hand, returns a new instance"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,81,"  of <Code>BulkTest</Code>, which can itself define new simple and bulk"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,82,"  test methods.  By using the {@link #makeSuite} method, you can"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,83,  automatically create a hierarchal suite of tests and child bulk tests.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,85,"  For instance, consider the following two classes:"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,87,  <Pre>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,88,  public class TestSet extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,90,      private Set set;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,92,      public TestSet(Set set) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,93,          this.set = set;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,96,      public void testContains() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,97,          boolean r = set.contains(set.iterator().next()));
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,98,"          assertTrue(""Set should contain first element, r);"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,101,      public void testClear() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,102,          set.clear();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,103,"          assertTrue(""Set should be empty after clear"", set.isEmpty());"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,108,  public class TestHashMap extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,110,      private Map makeFullMap() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,111,          HashMap result = new HashMap();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,112,"          result.put(""1"", ""One"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,113,"          result.put(""2"", ""Two"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,114,          return result;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,117,      public void testClear() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,118,          Map map = makeFullMap();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,119,          map.clear();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,120,"          assertTrue(""Map empty after clear"", map.isEmpty());"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,123,      public BulkTest bulkTestKeySet() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,124,          return new TestSet(makeFullMap().keySet());
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,127,      public BulkTest bulkTestEntrySet() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,128,          return new TestSet(makeFullMap().entrySet());
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,131,  </Pre>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,133,"  In the above examples, <Code>TestSet</Code> defines two"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,134,  simple test methods and no bulk test methods; <Code>TestHashMap</Code>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,135,  defines one simple test method and two bulk test methods.  When
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,136,"  <Code>makeSuite(TestHashMap.class).run</Code> is executed,"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,137,"  <I>five</I> simple test methods will be run, in this order:<P>"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,139,  <Ol>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,140,  <Li>TestHashMap.testClear()
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,141,  <Li>TestHashMap.bulkTestKeySet().testContains();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,142,  <Li>TestHashMap.bulkTestKeySet().testClear();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,143,  <Li>TestHashMap.bulkTestEntrySet().testContains();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,144,  <Li>TestHashMap.bulkTestEntrySet().testClear();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,145,  </Ol>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,147,"  In the graphical junit test runners, the tests would be displayed in"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,148,  the following tree:<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,150,  <UL>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,151,  <LI>TestHashMap</LI>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,152,      <UL>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,153,      <LI>testClear
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,154,      <LI>bulkTestKeySet
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,155,          <UL>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,156,          <LI>testContains
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,157,          <LI>testClear
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,158,          </UL>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,159,      <LI>bulkTestEntrySet
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,160,          <UL>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,161,          <LI>testContains
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,162,          <LI>testClear
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,163,          </UL>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,164,      </UL>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,165,  </UL>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,167,  A subclass can override a superclass's bulk test by
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,168,  returning <Code>null</Code> from the bulk test method.  If you only
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,169,"  want to override specific simple tests within a bulk test, use the"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,170,  {@link #ignoredSimpleTests} method.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,172,"  Note that if you want to use the bulk test methods, you <I>must</I>"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,173,  define your <Code>suite()</Code> method to use {@link #makeSuite}.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,174,  The ordinary {@link TestSuite} constructor doesn't know how to
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,175,  interpret bulk test methods.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,177,  Original implementation modified slightly for use with Joda ISO Time
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,178,  testing.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,180,  @author Paul Jack
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,181,  @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,184,ublic class BulkTest extends TestCase implements Cloneable {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,187,/ Note:  BulkTest is Cloneable to make it easier to construct
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,188,/ BulkTest instances for simple test methods that are defined in
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,189,/ anonymous inner classes.  Basically we don't have to worry about
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,190,"/ finding wierd constructors.  (And even if we found them, techinically"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,191,/ it'd be illegal for anyone but the outer class to invoke them).
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,192,"/ Given one BulkTest instance, we can just clone it and reset the"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,193,/ method name for every simple test it defines.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,197,  The full name of this bulk test instance.  This is the full name
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,198,  that is compared to {@link #ignoredSimpleTests} to see if this
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,199,  test should be ignored.  It's also displayed in the text runner
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,200,  to ease debugging.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,202,tring verboseName;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,206,  Constructs a new <Code>BulkTest</Code> instance that will run the
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,207,  specified simple test.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,209,  @param name  the name of the simple test method to run
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,211,ublic BulkTest(String name) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,212,uper(name);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,213,his.verboseName = getClass().getName();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,218,  Creates a clone of this <Code>BulkTest</Code>.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,220,  @return  a clone of this <Code>BulkTest</Code>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,222,ublic Object clone() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,223,ry {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,224,eturn super.clone();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,225, catch (CloneNotSupportedException e) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,226,hrow new Error(); // should never happen
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,232,  Returns an array of simple test names to ignore.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,234,  If a simple test that's defined by this <Code>BulkTest</Code> or
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,235,  by one of its bulk test methods has a name that's in the returned
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,236,"  array, then that simple test will not be executed.<P>"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,238,  A simple test's name is formed by taking the class name of the
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,239,"  root <Code>BulkTest</Code>, eliminating the package name, then"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,240,  appending the names of any bulk test methods that were invoked
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,241,"  to get to the simple test, and then appending the simple test"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,242,  method name.  The method names are delimited by periods:
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,244,  <Pre>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,245,  TestHashMap.bulkTestEntrySet.testClear
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,246,  </Pre>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,248,  is the name of one of the simple tests defined in the sample classes
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,249,  described above.  If the sample <Code>TestHashMap</Code> class
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,250,  included this method:
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,252,  <Pre>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,253,  public String[] ignoredSimpleTests() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,254,"      return new String[] { ""TestHashMap.bulkTestEntrySet.testClear"" };"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,256,  </Pre>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,258,"  then the entry set's clear method wouldn't be tested, but the key"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,259,  set's clear method would.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,261,"  @return an array of the names of simple tests to ignore, or null if"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,262,   no tests should be ignored
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,264,ublic String[] ignoredSimpleTests() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,265,eturn null;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,270,  Returns the display name of this <Code>BulkTest</Code>.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,272,  @return the display name of this <Code>BulkTest</Code>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,274,ublic String toString() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,275,"eturn getName() + ""("" + verboseName + "") "";"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,280,  Returns a {@link TestSuite} for testing all of the simple tests
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,281,  <I>and</I> all the bulk tests defined by the given class.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,283,  The class is examined for simple and bulk test methods; any child
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,284,  bulk tests are also examined recursively; and the results are stored
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,285,  in a hierarchal {@link TestSuite}.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,287,  The given class must be a subclass of <Code>BulkTest</Code> and must
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,288,  not be abstract.<P>
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,290,  @param c  the class to examine for simple and bulk tests
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,291,  @return  a {@link TestSuite} containing all the simple and bulk tests
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,292,    defined by that class
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,294,ublic static TestSuite makeSuite(Class c) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,295,f (Modifier.isAbstract(c.getModifiers())) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,296,"hrow new IllegalArgumentException(""Class must not be abstract."");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,298,f (!BulkTest.class.isAssignableFrom(c)) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,299,"hrow new IllegalArgumentException(""Class must extend BulkTest."");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,301,eturn new BulkTestSuiteMaker(c).make();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,304,/ Methods added by the Joda project for testing of the
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,305,/ org.joda.time package and it's subpackages.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,308, Build an ISODateTime string from a Gregorian calendar.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,309, @param gc a Gregorian Calendar instance.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,310, @return a String suitable for ISODateTime instantiation.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,312,rotected String getDateTimeString(GregorianCalendar gc) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,313,nt year = gc.get(Calendar.YEAR);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,314,tringBuffer retVal = new StringBuffer();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,315,f ( gc.get(Calendar.ERA) == GregorianCalendar.BC ) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,316,"f ( year > 1 ) retVal.append(""-"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,317,ear = year - 1;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,320,"etVal.append( padNumberToLen( Math.abs(year), 4 ) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,321,"etVal.append(""-"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,322,"etVal.append( padNumberToLen(gc.get(Calendar.MONTH)+1, 2) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,323,"etVal.append(""-"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,324,"etVal.append( padNumberToLen(gc.get(Calendar.DATE), 2) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,325,"etVal.append(""T"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,326,"etVal.append(  padNumberToLen(gc.get(Calendar.HOUR), 2) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,327,"etVal.append("":"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,328,"etVal.append( padNumberToLen(gc.get(Calendar.MINUTE), 2) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,329,"etVal.append("":"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,330,"etVal.append( padNumberToLen(gc.get(Calendar.SECOND), 2) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,331,"etVal.append(""."");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,332,"etVal.append( padNumberToLen(gc.get(Calendar.MILLISECOND), 3) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,333,"etVal.append(""Z"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,334,eturn retVal.toString();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,337," Create a string from an integer, pad it on the left with"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,338, '0's to the length specified.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,339, @param num The number to use.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,340, @param len The length to pad to.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,341, @return The created string.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,343,"rotected String padNumberToLen(int num, int len) {"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,344,tringBuffer retVal = new StringBuffer( len );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,345,"etVal.insert(0, """" + num);"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,346,f ( retVal.length() >= len ) return retVal.toString();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,347,"etVal.insert(0, copiesOf(""0"", len - retVal.length()));"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,348,f (num < 0) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,349,"etVal.insert(0,""-"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,351,eturn retVal.toString();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,354, Generate the specified number of copies of a String and
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,355, return it.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,356, @param s The String to copy.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,357, @param c The number of copies.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,358, @return The generated String.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,360,"rotected String copiesOf(String s, int c) {"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,361,f ( c == 0 ) return s;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,362,tringBuffer retBuff = new StringBuffer( s.length() * c );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,363,or (int i = 1; i <= c; ++i) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,364,"etBuff.insert( retBuff.length(), s );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,366,eturn retBuff.toString();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,369," Convert a String to an Integer, and return the int"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,370, value.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,371, @param s The string to convert.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,372, @return The int to return.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,373, @throws A NullPointerException if the string fails conversion.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,375,rotected int getPartValue(String s) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,376,nteger iVal = null;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,377,ry
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,379,Val = new Integer( s );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,381,atch(NumberFormatException nfe)
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,384,eturn iVal.intValue();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,388, @param s An ISO format Date/Time string.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,389, @return The left hand side of the string.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,391,rotected String lhsDT(String s) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,392,"eturn s.substring(0,s.indexOf('T'));"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,396, @param s An ISO format Date/Time string.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,397, @return The right hand side of the string.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,399,rotected String rhsDT(String s) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,400,eturn s.substring(s.indexOf('T')+1);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,404, @param s An ISO format Date/Time string.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,405, @return An array list containing all the subelements
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,406, of the input string.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,408,rotected ArrayList getDTA(String s) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,409,rrayList al = new ArrayList();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,410,tring dateSide = lhsDT( s );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,411,tring timeSide = rhsDT( s );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,412,/ Date Side
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,413,"f ( dateSide.substring(0,1).equals(""-"") )"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,415,"l.add(""-"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,416,ateSide = dateSide.substring(1);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,418,lse
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,420,"l.add("""");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,422,nt pos = dateSide.indexOf('-');
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,423,"l.add( dateSide.substring(0, pos) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,424,"l.add(""-"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,425,os += 1;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,426,ateSide = dateSide.substring( pos );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,428,os = dateSide.indexOf('-');
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,429,"l.add( dateSide.substring(0, pos) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,430,"l.add(""-"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,431,l.add( dateSide.substring( ++pos ) );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,432,"l.add(""T"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,434,/ Time Side
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,436,os = timeSide.indexOf(':');
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,437,"l.add( timeSide.substring(0, pos) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,438,"l.add("":"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,439,os += 1;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,440,imeSide = timeSide.substring( pos );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,442,os = timeSide.indexOf(':');
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,443,"l.add( timeSide.substring(0, pos) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,444,"l.add("":"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,445,os += 1;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,446,imeSide = timeSide.substring( pos );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,448,os = timeSide.indexOf('.');
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,449,f ( pos == -1 ) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,450,l.add( timeSide );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,451,eturn al;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,453,"l.add( timeSide.substring(0,pos) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,454,"l.add(""."");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,455,os += 1;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,456,imeSide = timeSide.substring(pos);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,457,os = timeSide.indexOf('Z');
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,458,"l.add( timeSide.substring(0,pos) );"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,459,"l.add(""Z"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,461,eturn al;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,465, An array of the short names of the days of the week.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,467,rotected final String[] dowShort = {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,468,"N/A"",""Mon"",""Tue"",""Wed"",""Thu"",""Fri"",""Sat"",""Sun"""
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,471, An array of the long names of the days of the week.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,473,rotected final String[] dowLong = {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,474,"N/A"",""Monday"",""Tuesday"",""Wednesday"",""Thursday"",""Friday"",""Saturday"",""Sunday"""
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,477, An array of the short names of the month.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,479,rotected final String[] moyShort = {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,480,"N/A"",""Jan"",""Feb"",""Mar"",""Apr"",""May"",""Jun"","
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,481,"Jul"",""Aug"",""Sep"",""Oct"",""Nov"",""Dec"""
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,484, An array of the long names of the month.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,486,rotected final String[] moyLong = {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,487,"N/A"",""January"",""February"",""March"",""April"",""May"",""June"","
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,488,"July"",""August"",""September"",""October"",""November"",""December"""
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,493, @param s An ISO format Date/Time string.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,494," @return A Joda MutableDateTime object, or null if"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,495, parsing fails.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,497,utableDateTime getMDTFromString(String s) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,498,utableDateTime retVal = null;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,499,ry
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,501,"etVal = new MutableDateTime( s,"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,502,SOChronology.getInstanceUTC() );
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,504,atch(IllegalArgumentException pe)
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,506,"ystem.err.println(""IllegalArgumentException Detected"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,507,e.printStackTrace();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,509,eturn retVal;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,512, // End of BulkTest class
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,515,/ It was easier to use a separate class to do all the reflection stuff
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,516,/ for making the TestSuite instances.  Having permanent state around makes
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,517,/ it easier to handle the recursion.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,518,lass BulkTestSuiteMaker {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,521,** The class that defines simple and bulk tests methods. */
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,522,rivate Class startingClass;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,525,** List of ignored simple test names. */
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,526,rivate List ignored;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,529,** The TestSuite we're currently populating.  Can change over time. */
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,530,rivate TestSuite result;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,534,  The prefix for simple test methods.  Used to check if a test is in
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,535,  the ignored list.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,537,rivate String prefix;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,541,  Constructor.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,543,  @param startingClass  the starting class
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,545,ublic BulkTestSuiteMaker(Class startingClass) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,546,his.startingClass = startingClass;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,551,  Makes a hierarchal TestSuite based on the starting class.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,553,  @return  the hierarchal TestSuite for startingClass
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,555,ublic TestSuite make() {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,556,his.result = new TestSuite();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,557,his.prefix = getBaseName(startingClass);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,558,esult.setName(prefix);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,560,ulkTest bulk = makeFirstTestCase(startingClass);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,561,gnored = new ArrayList();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,562,tring[] s = bulk.ignoredSimpleTests();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,563,f (s != null) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,564,gnored.addAll(Arrays.asList(s));
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,566,ake(bulk);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,567,eturn result;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,572,  Appends all the simple tests and bulk tests defined by the given
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,573,  instance's class to the current TestSuite.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,575,  @param bulk  An instance of the class that defines simple and bulk
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,576,    tests for us to append
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,578,oid make(BulkTest bulk) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,579,lass c = bulk.getClass();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,580,ethod[] all = c.getMethods();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,581,or (int i = 0; i < all.length; i++) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,582,"f (isTest(all[i])) addTest(bulk, all[i]);"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,583,"f (isBulk(all[i])) addBulk(bulk, all[i]);"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,589,  Adds the simple test defined by the given method to the TestSuite.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,591,  @param bulk  The instance of the class that defined the method
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,592,"   (I know it's wierd.  But the point is, we can clone the instance"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,593,   and not have to worry about constructors.)
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,594,  @param m  The simple test method
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,596,"oid addTest(BulkTest bulk, Method m) {"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,597,ulkTest bulk2 = (BulkTest)bulk.clone();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,598,ulk2.setName(m.getName());
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,599,"ulk2.verboseName = prefix + ""."" + m.getName();"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,600,f (ignored.contains(bulk2.verboseName)) return;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,601,esult.addTest(bulk2);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,606,  Adds a whole new suite of tests that are defined by the result of
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,607,"  the given bulk test method.  In other words, the given bulk test"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,608,"  method is invoked, and the resulting BulkTest instance is examined"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,609,  for yet more simple and bulk tests.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,611,  @param bulk  The instance of the class that defined the method
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,612,  @param m  The bulk test method
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,614,"oid addBulk(BulkTest bulk, Method m) {"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,615,ulkTest bulk2;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,616,ry {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,617,"ulk2 = (BulkTest)m.invoke(bulk, null);"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,618,f (bulk2 == null) return;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,619, catch (InvocationTargetException e) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,620,hrow new Error(); // FIXME;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,621, catch (IllegalAccessException e) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,622,hrow new Error(); // FIXME;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,625,/ Save current state on the stack.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,626,tring oldPrefix = prefix;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,627,estSuite oldResult = result;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,629,"refix = prefix + ""."" + m.getName();"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,630,esult = new TestSuite();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,631,esult.setName(m.getName());
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,633,ake(bulk2);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,635,ldResult.addTest(result);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,637,/ Restore the old state
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,638,refix = oldPrefix;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,639,esult = oldResult;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,644,  Returns the base name of the given class.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,646,  @param c  the class
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,647,"  @return the name of that class, minus any package names"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,649,rivate static String getBaseName(Class c) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,650,tring name = c.getName();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,651,nt p = name.lastIndexOf('.');
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,652,f (p > 0) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,653,ame = name.substring(p + 1);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,655,eturn name;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,659,/ These three methods are used to create a valid BulkTest instance
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,660,/ from a class.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,662,rivate static Constructor getTestCaseConstructor(Class c) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,663,ry {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,664,eturn c.getConstructor(new Class[] { String.class });
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,665, catch (NoSuchMethodException e) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,666,"hrow new IllegalArgumentException(c + "" must provide "" +"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,667,"a (String) constructor"");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,672,"rivate static BulkTest makeTestCase(Class c, Method m) {"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,673,onstructor con = getTestCaseConstructor(c);
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,674,ry {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,675,eturn (BulkTest)con.newInstance(new String[] { m.getName() });
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,676, catch (InvocationTargetException e) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,677,.printStackTrace();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,678,hrow new RuntimeException(); // FIXME;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,679, catch (IllegalAccessException e) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,680,hrow new Error(); // should never occur
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,681, catch (InstantiationException e) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,682,hrow new RuntimeException(); // FIXME;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,687,rivate static BulkTest makeFirstTestCase(Class c) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,688,ethod[] all = c.getMethods();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,689,or (int i = 0; i < all.length; i++) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,690,"f (isTest(all[i])) return makeTestCase(c, all[i]);"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,692,"hrow new IllegalArgumentException(c.getName() + "" must provide """
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,693," "" at least one test method."");"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,698,  Returns true if the given method is a simple test method.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,700,rivate static boolean isTest(Method m) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,701,"f (!m.getName().startsWith(""test"")) return false;"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,702,f (m.getReturnType() != Void.TYPE) return false;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,703,f (m.getParameterTypes().length != 0) return false;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,704,nt mods = m.getModifiers();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,705,f (Modifier.isStatic(mods)) return false;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,706,f (Modifier.isAbstract(mods)) return false;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,707,eturn true;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,712,  Returns true if the given method is a bulk test method.
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,714,rivate static boolean isBulk(Method m) {
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,715,"f (!m.getName().startsWith(""bulkTest"")) return false;"
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,716,f (m.getReturnType() != BulkTest.class) return false;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,717,f (m.getParameterTypes().length != 0) return false;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,718,nt mods = m.getModifiers();
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,719,f (Modifier.isStatic(mods)) return false;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,720,f (Modifier.isAbstract(mods)) return false;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,721,eturn true;
False,JodaTime/src/test/org/joda/test/time/BulkTest.java,JodaTime/src/test/org/joda/test/time/BulkTest.java,724, // end of BulkTestSuiteMaker class
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,56,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,58,mport org.joda.time.DateTimeConstants;
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,59,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,60,mport org.joda.time.chrono.BuddhistChronology;
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,62,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,64, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,65, BuddhistChronology date time class.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,67, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,69,ublic class TestBuddhistChronology extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,70,/ TODO: These are not TimeZone safe
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,71,"rivate static final long SMALL_MILLIS = new GregorianCalendar(-20000, 0, 1).getTime().getTime();"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,72,"rivate static final long LARGE_MILLIS = new GregorianCalendar(20000, 0, 1).getTime().getTime();"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,73,"rivate static final long MILLIS_1971 = new GregorianCalendar(1971, 0, 1).getTime().getTime();"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,74,"rivate static final long MILLIS_1970 = new GregorianCalendar(1970, 0, 1).getTime().getTime();"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,75,"rivate static final long MILLIS_1969 = new GregorianCalendar(1969, 0, 1).getTime().getTime();"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,77,rivate BuddhistChronology iChrono = null;
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,80, This is the main class for this test suite.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,81, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,83,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,84,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,87, TestSuite is a junit required method.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,89,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,90,eturn BulkTest.makeSuite(TestBuddhistChronology.class);
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,93, TestDateTimeField constructor.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,94, @param name
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,96,ublic TestBuddhistChronology(String name) {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,97,uper(name);
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,101, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,103,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,104,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,105,Chrono = BuddhistChronology.getInstanceUTC();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,108, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,110,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,111,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,114,ublic void testEraConstant() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,115,"ssertEquals(DateTimeConstants.CE, BuddhistChronology.BE);"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,117,ublic void testGetInstanceUTC() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,118,ssertNotNull(BuddhistChronology.getInstanceUTC());
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,119,ssertTrue(BuddhistChronology.getInstanceUTC() instanceof BuddhistChronology);
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,120,"ssertSame(BuddhistChronology.getInstanceUTC(), BuddhistChronology.getInstanceUTC());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,122,ublic void testGetInstanceNull() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,123,ateTimeZone zone = DateTimeZone.getDefault();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,124,ssertNotNull(BuddhistChronology.getInstance());
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,125,ssertTrue(BuddhistChronology.getInstance() instanceof BuddhistChronology);
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,126,"ssertSame(zone, BuddhistChronology.getInstance().getZone());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,128,ublic void testGetInstanceZone() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,129,"ateTimeZone zone = DateTimeZone.getInstance(""+01:00"");"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,130,ssertNotNull(BuddhistChronology.getInstance(zone));
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,131,ssertTrue(BuddhistChronology.getInstance(zone) instanceof BuddhistChronology);
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,132,"ssertSame(zone, BuddhistChronology.getInstance(zone).getZone());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,134,ublic void testGetInstanceZoneUTC() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,135,"ssertSame(BuddhistChronology.getInstanceUTC(), BuddhistChronology.getInstance(DateTimeZone.UTC));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,138,ublic void testMillisOfSecond() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,139,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,141,ublic void testMillisOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,142,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,144,ublic void testSecondOfMinute() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,145,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,147,ublic void testSecondOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,148,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,150,ublic void testMinuteOfHour() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,151,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,153,ublic void testMinuteOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,154,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,156,ublic void testHourOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,157,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,159,ublic void testClockhourOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,160,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,162,ublic void testHourOfHalfday() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,163,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,165,ublic void testClockhourOfHalfday() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,166,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,168,ublic void testAmPm() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,169,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,171,ublic void testDayOfWeek() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,172,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,174,ublic void testDayOfMonth() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,175,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,177,ublic void testDayOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,178,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,180,ublic void testWeekOfYearWeek() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,181,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,183,ublic void testMonthOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,184,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,186,ublic void testLeapYear() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,187,"/ TODO: Its the same as GJChronology, so checking it isn't that important"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,190,ublic void testWeekOfYearYear() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,191,"ail(""TBD"");"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,193,ublic void testYear() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,194,"ssertEquals(""year"", iChrono.year().getName());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,195,"ssertSame(iChrono.year(), iChrono.year());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,197,"ssertEquals(1970 + 543, iChrono.year().get(MILLIS_1970));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,198,"ssertEquals(20000 + 543, iChrono.year().get(LARGE_MILLIS));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,200,"ssertEquals(MILLIS_1970, iChrono.year().set(LARGE_MILLIS, 1970 + 543));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,202,"ssertEquals(MILLIS_1971, iChrono.year().add(MILLIS_1970, 1));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,203,"ssertEquals(MILLIS_1969, iChrono.year().add(MILLIS_1970, -1));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,205,"ssertEquals(MILLIS_1971, iChrono.year().addWrapField(MILLIS_1970, 1));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,206,"ssertEquals(MILLIS_1969, iChrono.year().addWrapField(MILLIS_1970, -1));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,208,"ssertEquals(""2513"", iChrono.year().getAsShortText(MILLIS_1970));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,209,"ssertEquals(9, iChrono.year().getMaximumShortTextLength(null));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,210,"ssertEquals(""2513"", iChrono.year().getAsText(MILLIS_1970));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,211,"ssertEquals(9, iChrono.year().getMaximumTextLength(null));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,213,"ssertEquals(1, iChrono.year().getMinimumValue());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,214,"ssertEquals(250000000 + 543, iChrono.year().getMaximumValue());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,216,"ssertEquals(MILLIS_1970, iChrono.year().set(MILLIS_1970, ""2513""));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,217,"ssertEquals(MILLIS_1971, iChrono.year().set(MILLIS_1970, ""2514""));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,218,"ssertEquals(LARGE_MILLIS, iChrono.year().set(MILLIS_1970, ""20543""));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,219,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,220,"Chrono.year().set(MILLIS_1970, null);"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,221,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,222, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,223,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,224,"Chrono.year().set(MILLIS_1970, ""AD"");"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,225,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,226, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,228,ublic void testYearOfCentury() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,229,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,230,Chrono.yearOfCentury();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,231,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,232, catch (UnsupportedOperationException ex) {}
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,234,ublic void testCenturyOfEra() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,235,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,236,Chrono.centuryOfEra();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,237,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,238, catch (UnsupportedOperationException ex) {}
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,240,ublic void testEra() {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,241,"ssertEquals(""era"", iChrono.era().getName());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,242,"ssertSame(iChrono.era(), iChrono.era());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,244,"ssertEquals(BuddhistChronology.BE, iChrono.era().get(SMALL_MILLIS));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,245,"ssertEquals(BuddhistChronology.BE, iChrono.era().get(MILLIS_1970));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,246,"ssertEquals(BuddhistChronology.BE, iChrono.era().get(LARGE_MILLIS));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,248,"ssertEquals(SMALL_MILLIS, iChrono.era().set(SMALL_MILLIS, BuddhistChronology.BE));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,249,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,250,"Chrono.era().set(SMALL_MILLIS, DateTimeConstants.BCE);"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,251,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,252, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,254,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,255,"Chrono.era().add(SMALL_MILLIS, 1);"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,256,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,257, catch (UnsupportedOperationException ex) {}
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,259,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,260,"Chrono.era().addWrapField(SMALL_MILLIS, 1);"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,261,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,262, catch (UnsupportedOperationException ex) {}
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,264,"ssertEquals(""BE"", iChrono.era().getAsShortText(MILLIS_1970));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,265,"ssertEquals(2, iChrono.era().getMaximumShortTextLength(null));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,266,"ssertEquals(""BE"", iChrono.era().getAsText(MILLIS_1970));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,267,"ssertEquals(2, iChrono.era().getMaximumTextLength(null));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,269,"ssertEquals(BuddhistChronology.BE, iChrono.era().getMinimumValue());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,270,"ssertEquals(BuddhistChronology.BE, iChrono.era().getMaximumValue());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,272,"ssertEquals(MILLIS_1970, iChrono.era().set(MILLIS_1970, ""BE""));"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,273,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,274,"Chrono.era().set(SMALL_MILLIS, null);"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,275,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,276, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,277,ry {
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,278,"Chrono.era().set(SMALL_MILLIS, ""AD"");"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,279,ail();
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,280, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,54,ackage org.joda.test.time.buddhist;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,56,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,57,mport java.util.Locale;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,59,mport junit.framework.TestCase;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,60,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,62,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,63,mport org.joda.test.time.BulkTest;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,64,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,65,mport org.joda.time.chrono.BuddhistChronology;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,67, This class is the Junit unit test for a DateTimeField.
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,69, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,71,ublic class TestBuddhistEraDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,73,ublic TestBuddhistEraDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,74,uper(name);
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,77,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,78,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,80,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,81,eturn new TestSuite(TestBuddhistEraDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,83,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,84,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,86,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,87,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,91,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,92,"eturn ""era"";"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,94,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,95,eturn BuddhistChronology.getInstanceUTC().era();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,97,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,98,eturn BuddhistChronology.BE;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,100,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,101,eturn BuddhistChronology.BE;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,103,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,104,eturn BuddhistChronology.BE;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,106,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,107,eturn Long.MAX_VALUE;
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,110,ublic void testGetAsTextLocale() throws Exception {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,111,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,112,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,113,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,114,"ssertEquals(""BE"", field.getAsText(var[i], Locale.ENGLISH));"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,118,ublic void testGetAsText() throws Exception {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,119,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,120,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,121,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,122,"ssertEquals(""BE"", field.getAsText(var[i]));"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,126,ublic void testGetAsShortTextLocale() throws Exception {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,127,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,128,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,129,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,130,"ssertEquals(""BE"", field.getAsShortText(var[i], Locale.ENGLISH));"
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,134,ublic void testGetAsShortText() throws Exception {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,135,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,136,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,137,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/buddhist/TestBuddhistEraDateTimeField.java,138,"ssertEquals(""BE"", field.getAsShortText(var[i]));"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,56,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,57,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,59, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,61, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,63,ublic abstract class AbstractTestGJDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,66,ublic AbstractTestGJDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,67,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,70,"tatic final int[] monthLengths = {-1, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,71,rotected static final long GJ_CUTOVER_MILLIS = GJChronology.getInstanceUTC().getGregorianCutover().getMillis();
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,73,rotected int[] getDMYDS(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,74,"eturn getDMYDS(millis, GJ_CUTOVER_MILLIS, 1582, 10);"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,77,"rotected final int[] getDMYDS(long millis, long cutoverMillis, int cutoverYear, int cutoverAmount) {"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,78,ong days = 0;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,79,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,80,ays = (int) ((millis / (24 * 60 * 60 * 1000)));
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,81,nt day = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,82,nt month = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,83,nt year = 1970;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,84,nt doy = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,85,or (int i = 0; i < days; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,86,"oolean leap = isLeap(year, cutoverYear);"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,87,nt yearLength = (leap ? 366 : 365);
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,88,f ((days - i) > yearLength) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,89,/ shortcut
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,90,ear++;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,91, = i + yearLength - 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,92, else {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,93,ay++;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,94,oy++;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,95,f (day > monthLengths[month]) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,96,"f (month == 2 && day == 29 && isLeap(year, cutoverYear)) {"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,97,/ do nothing
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,98, else {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,99,ay = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,100,onth++;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,101,f (month == 13) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,102,onth = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,103,ear++;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,104,oy = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,110,"nt monthLength = (month == 2 && isLeap(year, cutoverYear) ? 29 : monthLengths[month]);"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,111,"nt yearLength = (isLeap(year, cutoverYear) ? 366 : 365);"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,112,"eturn new int[] {day, month, year, doy, monthLength, yearLength};"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,113, else {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,114,ays = (int) (((-millis - 1) / (24 * 60 * 60 * 1000)));
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,115,f (millis < cutoverMillis) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,116,/ fake the cutover (calculation will be wrong until it gets to before the cutover)
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,117,ays = days + cutoverAmount;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,119,nt day = 1;  // count in reverse!
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,120,nt month = 12;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,121,nt year = 1969;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,122,nt doy = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,123,or (int i = 0; i < days; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,124,"oolean leap = isLeap(year, cutoverYear);"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,125,nt yearLength = (leap ? 366 : 365);
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,126,f ((days - i) > yearLength) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,127,/ shortcut
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,128,ear--;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,129, = i + yearLength - 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,130, else {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,131,ay++;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,132,oy++;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,133,f (day > monthLengths[month]) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,134,f (month == 2 && day == 29 && leap) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,135,/ do nothing
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,136, else {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,137,ay = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,138,onth--;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,139,f (month == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,140,onth = 12;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,141,ear--;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,142,oy = 1;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,148,"nt monthLength = (month == 2 && isLeap(year, cutoverYear) ? 29 : monthLengths[month]);"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,149,f (year == cutoverYear && month == 10) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,150,onthLength = monthLength - cutoverAmount;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,152,"f (month == 2 && isLeap(year, cutoverYear)) {"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,153,ay = monthLengths[month] + 2 - day;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,154, else {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,155,ay = monthLengths[month] + 1 - day;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,157,"nt yearLength = (isLeap(year, cutoverYear) ? 366 : 365);"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,158,earLength = (year == cutoverYear && millis >= cutoverMillis  ? yearLength - cutoverAmount : yearLength);
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,159,"oy = (isLeap(year, cutoverYear) ? 367 - doy : 366 - doy);"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,160,oy = (year == cutoverYear && millis >= cutoverMillis  ? doy - cutoverAmount : doy);
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,161,"eturn new int[] {day, month, year, doy, monthLength, yearLength};"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,166, @param year
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,167, @return true if a leap year
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,169,"rotected boolean isLeap(int year, int cutoverYear) {"
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,170,f (year < cutoverYear) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,171,eturn (year % 4 == 0);
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,173,f (year % 400 == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,174,eturn true;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,176,f (year % 100 == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,177,eturn false;
False,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/AbstractTestGJDateTimeField.java,179,eturn (year % 4 == 0);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,66,ublic class TestGJClockhourOfDayDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,69,ublic TestGJClockhourOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,77,eturn new TestSuite(TestGJClockhourOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,86,"rotected long getAddWrappedResult(long millis, int addWrapped) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,87,f (addWrapped == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,88,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,90,nt val = getCalendarValue(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,91,f (val == 24) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,92,al = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,94,nt max = 23;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,95,nt min = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,96,nt add = val + addWrapped;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,97,hile (add > max || add < min) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,98,f (addWrapped >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,99,dd = add - (max - min) - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,100, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,101,dd = add + (max - min) + 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,104,eturn millis + ((add - val) * getUnitSize());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,107,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,108,"eturn ""clockhourOfDay"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,110,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,111,eturn GJChronology.getInstance(getZone()).clockhourOfDay();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,113,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,114,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,116,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,117,eturn 24;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,119,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,120,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,121,nt val = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,122,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,123,al = (int) ((millis / (60 * 60 * 1000)) % 24);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,124, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,125,al = (int) 23 + (int) (((millis + 1) / (60 * 60 * 1000)) % 24);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,127,eturn (val == 0 ? 24 : val);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,129,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfDayDateTimeField.java,130,eturn 60 * 60 * 1000; // 1 hour
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,66,ublic class TestGJClockhourOfHalfdayDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,69,ublic TestGJClockhourOfHalfdayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,77,eturn new TestSuite(TestGJClockhourOfHalfdayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,86,"rotected long getAddWrappedResult(long millis, int addWrapped) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,87,f (addWrapped == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,88,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,90,nt val = getCalendarValue(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,91,f (val == 12) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,92,al = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,94,nt max = 11;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,95,nt min = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,96,nt add = val + addWrapped;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,97,hile (add > max || add < min) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,98,f (addWrapped >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,99,dd = add - (max - min) - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,100, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,101,dd = add + (max - min) + 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,104,eturn millis + ((add - val) * getUnitSize());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,107,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,108,"eturn ""clockhourOfHalfday"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,110,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,111,eturn GJChronology.getInstance(getZone()).clockhourOfHalfday();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,113,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,114,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,116,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,117,eturn 12;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,119,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,120,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,121,nt val = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,122,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,123,al = ((int) ((millis / (60 * 60 * 1000)) % 24)) % 12;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,124, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,125,al = ((int) 23 + (int) (((millis + 1) / (60 * 60 * 1000)) % 24)) % 12;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,127,eturn (val == 0 ? 12 : val);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,129,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJClockhourOfHalfdayDateTimeField.java,130,eturn 60 * 60 * 1000; // 1 hour
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,58,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,59,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,61, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,63, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,65,ublic class TestGJDayOfMonthDateTimeField extends AbstractTestGJDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,68,ublic TestGJDayOfMonthDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,69,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,76,eturn new TestSuite(TestGJDayOfMonthDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,78,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,79,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,81,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,82,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,86,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,87,"eturn ""dayOfMonth"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,89,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,90,eturn GJChronology.getInstance(getZone()).dayOfMonth();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,92,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,93,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,95,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,96,eturn 31;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,101,eturn getDMYDS(millis)[0];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,104,"rotected long getAddWrappedResult(long millis, int addWrapped) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,105,nt[] dmyd = getDMYDS(millis + getZone().getOffset(millis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,106,nt day = dmyd[0];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,107,nt month = dmyd[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,108,nt year = dmyd[2];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,109,nt monthSize = dmyd[4];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,110,f (millis == -12219469260000L && addWrapped == -13) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,111,nt i = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,114,f (addWrapped == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,115,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,117,nt newDay = day + addWrapped;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,118,oolean loop = false;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,119,o {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,120,oop = false;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,121,f (newDay < 1) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,122,ewDay = newDay + monthSize;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,123,oop = true;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,124, else if (newDay > monthSize) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,125,ewDay = newDay - monthSize;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,126,oop = true;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,128, while (loop);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,129,eturn millis + ((long) (newDay - day)) * 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,132,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfMonthDateTimeField.java,133,eturn 24 * 60 * 60 * 1000; // 1 day
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,56,mport java.text.DateFormatSymbols;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,57,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,58,mport java.util.Locale;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,60,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,62,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,63,mport org.joda.time.DateTimeConstants;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,64,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,65,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,67, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,69, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,71,ublic class TestGJDayOfWeekDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,74,ublic TestGJDayOfWeekDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,75,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,78,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,79,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,81,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,82,eturn new TestSuite(TestGJDayOfWeekDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,84,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,85,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,87,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,88,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,92,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,93,"eturn ""dayOfWeek"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,95,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,96,eturn GJChronology.getInstance(getZone()).dayOfWeek();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,98,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,99,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,101,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,102,eturn 7;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,104,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,105,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,106,nt val = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,107,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,108,al = (int) ((millis / (24 * 60 * 60 * 1000)) % 7);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,109, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,110,al = (int) 6 + (int) (((millis + 1) / (24 * 60 * 60 * 1000)) % 7);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,112,al = val + 4;  // shift 1970-01-01 to Thursday
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,113,al = val % 7;  // readjust
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,114,eturn (val == 0 ? 7 : val);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,116,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,117,eturn 24 * 60 * 60 * 1000; // 1 day
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,119,"rotected String getText(int value, Locale loc) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,120,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,121,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,123,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,124,witch (value) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,125,ase DateTimeConstants.MONDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,126,eturn sym.getWeekdays()[Calendar.MONDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,127,ase DateTimeConstants.TUESDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,128,eturn sym.getWeekdays()[Calendar.TUESDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,129,ase DateTimeConstants.WEDNESDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,130,eturn sym.getWeekdays()[Calendar.WEDNESDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,131,ase DateTimeConstants.THURSDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,132,eturn sym.getWeekdays()[Calendar.THURSDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,133,ase DateTimeConstants.FRIDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,134,eturn sym.getWeekdays()[Calendar.FRIDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,135,ase DateTimeConstants.SATURDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,136,eturn sym.getWeekdays()[Calendar.SATURDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,137,ase DateTimeConstants.SUNDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,138,eturn sym.getWeekdays()[Calendar.SUNDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,140,eturn null;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,142,"rotected String getShortText(int value, Locale loc) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,143,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,144,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,146,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,147,witch (value) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,148,ase DateTimeConstants.MONDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,149,eturn sym.getShortWeekdays()[Calendar.MONDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,150,ase DateTimeConstants.TUESDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,151,eturn sym.getShortWeekdays()[Calendar.TUESDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,152,ase DateTimeConstants.WEDNESDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,153,eturn sym.getShortWeekdays()[Calendar.WEDNESDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,154,ase DateTimeConstants.THURSDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,155,eturn sym.getShortWeekdays()[Calendar.THURSDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,156,ase DateTimeConstants.FRIDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,157,eturn sym.getShortWeekdays()[Calendar.FRIDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,158,ase DateTimeConstants.SATURDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,159,eturn sym.getShortWeekdays()[Calendar.SATURDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,160,ase DateTimeConstants.SUNDAY :
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,161,eturn sym.getShortWeekdays()[Calendar.SUNDAY];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,163,eturn null;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,166,rotected int getMaximumTextLength(Locale loc) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,167,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,168,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,170,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,171,nt max = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,172,or (int i = 0; i < sym.getWeekdays().length; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,173,ax = (max >= sym.getWeekdays()[i].length() ? max : sym.getWeekdays()[i].length());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,175,eturn max;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,177,rotected int getMaximumShortTextLength(Locale loc) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,178,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,179,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,181,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,182,nt max = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,183,or (int i = 0; i < sym.getShortWeekdays().length; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,184,ax = (max >= sym.getShortWeekdays()[i].length() ? max : sym.getShortWeekdays()[i].length());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfWeekDateTimeField.java,186,eturn max;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,58,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,59,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,61, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,63, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,65,ublic class TestGJDayOfYearDateTimeField extends AbstractTestGJDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,68,ublic TestGJDayOfYearDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,69,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,76,eturn new TestSuite(TestGJDayOfYearDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,78,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,79,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,81,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,82,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,86,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,87,"eturn ""dayOfYear"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,89,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,90,eturn GJChronology.getInstance(getZone()).dayOfYear();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,92,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,93,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,95,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,96,eturn 366;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,98,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,99,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,100,eturn getDMYDS(millis)[3];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,103,"rotected long getAddWrappedResult(long millis, int addWrapped) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,104,f (addWrapped == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,105,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,107,nt[] dmyds = getDMYDS(millis + getZone().getOffset(millis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,108,nt val = dmyds[3];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,109,nt max = dmyds[5];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,110,nt add = val + addWrapped;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,111,hile (add > max || add < 1) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,112,f (addWrapped >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,113,dd -= max;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,114, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,115,dd += max;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,118,eturn millis + ((add - val) * getUnitSize());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,121,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJDayOfYearDateTimeField.java,122,eturn 24 * 60 * 60 * 1000; // 1 day
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,56,mport java.text.DateFormatSymbols;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,57,mport java.util.Locale;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,59,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,61,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,62,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,63,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,65, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,67, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,69,ublic class TestGJHalfdayOfDayDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,72,ublic TestGJHalfdayOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,73,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,76,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,77,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,79,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,80,eturn new TestSuite(TestGJHalfdayOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,82,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,83,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,85,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,86,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,90,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,91,"eturn ""halfdayOfDay"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,93,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,94,eturn GJChronology.getInstance(getZone()).halfdayOfDay();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,96,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,97,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,99,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,100,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,102,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,103,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,104,nt val = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,105,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,106,al = (int) ((millis / (60 * 60 * 1000)) % 24);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,107, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,108,al = (int) 23 + (int) (((millis + 1) / (60 * 60 * 1000)) % 24);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,110,eturn (val < 12 ? 0 : 1);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,112,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,113,eturn 12 * 60 * 60 * 1000; // 12 hours
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,115,"rotected String getText(int value, Locale loc) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,116,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,117,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,119,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,120,eturn sym.getAmPmStrings()[value];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,122,"rotected String getShortText(int value, Locale loc) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,123,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,124,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,126,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,127,eturn sym.getAmPmStrings()[value];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,130,rotected int getMaximumTextLength(Locale loc) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,131,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,132,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,134,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,135,nt max = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,136,or (int i = 0; i < sym.getAmPmStrings().length; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,137,ax = (max >= sym.getAmPmStrings()[i].length() ? max : sym.getAmPmStrings()[i].length());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,139,eturn max;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,141,rotected int getMaximumShortTextLength(Locale loc) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,142,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,143,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,145,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,146,nt max = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,147,or (int i = 0; i < sym.getAmPmStrings().length; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,148,ax = (max >= sym.getAmPmStrings()[i].length() ? max : sym.getAmPmStrings()[i].length());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHalfdayOfDayDateTimeField.java,150,eturn max;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,66,ublic class TestGJHourOfDayDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,69,ublic TestGJHourOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,77,eturn new TestSuite(TestGJHourOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,87,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,88,"eturn ""hourOfDay"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,90,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,91,eturn GJChronology.getInstance(getZone()).hourOfDay();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,93,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,94,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,96,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,97,eturn 23;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,101,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,102,eturn (int) ((millis / (60 * 60 * 1000)) % 24);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,103, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,104,eturn (int) 23 + (int) (((millis + 1) / (60 * 60 * 1000)) % 24);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,107,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfDayDateTimeField.java,108,eturn 60 * 60 * 1000; // 1 hour
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,66,ublic class TestGJHourOfHalfdayDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,69,ublic TestGJHourOfHalfdayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,77,eturn new TestSuite(TestGJHourOfHalfdayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,87,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,88,"eturn ""hourOfHalfday"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,90,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,91,eturn GJChronology.getInstance(getZone()).hourOfHalfday();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,93,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,94,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,96,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,97,eturn 11;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,101,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,102,eturn ((int) ((millis / (60 * 60 * 1000)) % 24)) % 12;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,103, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,104,eturn ((int) 23 + (int) (((millis + 1) / (60 * 60 * 1000)) % 24)) % 12;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,107,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJHourOfHalfdayDateTimeField.java,108,eturn 60 * 60 * 1000; // 1 hour
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,66,ublic class TestGJMillisOfDayDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,69,ublic TestGJMillisOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,77,eturn new TestSuite(TestGJMillisOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,87,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,88,"eturn ""millisOfDay"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,90,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,91,eturn GJChronology.getInstance(getZone()).millisOfDay();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,93,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,94,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,96,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,97,eturn 24 * 60 * 60 * 1000 - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,101,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,102,eturn (int) (millis % (24 * 60 * 60 * 1000));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,103, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,104,eturn (int) (24 * 60 * 60 * 1000 - 1) + (int) ((millis + 1) % (24 * 60 * 60 * 1000));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,107,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfDayDateTimeField.java,108,eturn 1; // 1 milli
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,66,ublic class TestGJMillisOfSecondDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,69,ublic TestGJMillisOfSecondDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,77,eturn new TestSuite(TestGJMillisOfSecondDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,87,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,88,"eturn ""millisOfSecond"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,90,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,91,eturn GJChronology.getInstance(getZone()).millisOfSecond();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,93,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,94,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,96,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,97,eturn 999;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,101,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,102,eturn (int) (millis % 1000);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,103, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,104,eturn (int) (999 - ((-millis - 1) % 1000));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,107,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMillisOfSecondDateTimeField.java,108,eturn 1; // 1 milli
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,66,ublic class TestGJMinuteOfDayDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,69,ublic TestGJMinuteOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,77,eturn new TestSuite(TestGJMinuteOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,87,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,88,"eturn ""minuteOfDay"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,90,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,91,eturn GJChronology.getInstance(getZone()).minuteOfDay();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,93,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,94,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,96,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,97,eturn 24 * 60 - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,101,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,102,eturn (int) ((millis / 60000) % (24 * 60));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,103, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,104,eturn (int) (24 * 60 - 1) + (int) (((millis + 1) / 60000) % (24 * 60));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,107,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfDayDateTimeField.java,108,eturn 60 * 1000; // 1 sec
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,66,ublic class TestGJMinuteOfHourDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,69,ublic TestGJMinuteOfHourDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,77,eturn new TestSuite(TestGJMinuteOfHourDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,87,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,88,"eturn ""minuteOfHour"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,90,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,91,eturn GJChronology.getInstance(getZone()).minuteOfHour();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,93,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,94,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,96,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,97,eturn 59;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,101,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,102,eturn (int) ((millis / 60000) % 60);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,103, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,104,eturn (int) 59 + (int) (((millis + 1) / 60000) % 60);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,107,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMinuteOfHourDateTimeField.java,108,eturn 60 * 1000; // 1 sec
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,56,mport java.text.DateFormatSymbols;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,57,mport java.util.Locale;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,59,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,61,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,62,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,64, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,66, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,68,ublic class TestGJMonthOfYearDateTimeField extends AbstractTestGJDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,71,ublic TestGJMonthOfYearDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,72,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,75,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,76,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,78,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,79,eturn new TestSuite(TestGJMonthOfYearDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,81,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,82,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,84,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,85,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,89,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,90,"eturn ""monthOfYear"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,92,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,93,eturn GJChronology.getInstance(getZone()).monthOfYear();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,95,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,96,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,98,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,99,eturn 12;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,101,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,102,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,103,eturn getDMYDS(millis)[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,105,"rotected long getAddedResult(long millis, int add) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,106,f (add == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,107,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,109,"/        System.out.println(new Instant(millis) + ""  "" + add);"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,111,nt[] before = getDMYDS(millis + getZone().getOffset(millis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,112,nt currentDay = before[0];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,113,nt currentMonth = before[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,114,ong newMillis = millis + (add * getUnitSize()) + (((int) (add/2)) * 24 * 60 * 60 * 1000);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,115,nt[] after = getDMYDS(newMillis + getZone().getOffset(newMillis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,116,nt newDay = after[0];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,117,nt newMonth = after[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,119,/ calc effective add
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,120,nt max = 12;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,121,nt min = 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,122,nt added = currentMonth + add;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,123,hile (added > max || added < min) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,124,f (add >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,125,dded = added - (max - min) - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,126, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,127,dded = added + (max - min) + 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,130,nt effectiveAdd = added - currentMonth;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,132,/ ensure month correct
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,133,hile (currentMonth + effectiveAdd != newMonth) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,134,f (currentMonth + effectiveAdd == 1 && newMonth == 12) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,135,ewMillis = newMillis + 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,136, else if (currentMonth + effectiveAdd == 12 && newMonth == 1) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,137,ewMillis = newMillis - 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,138, else if (currentMonth + effectiveAdd > newMonth) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,139,ewMillis = newMillis + 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,140, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,141,ewMillis = newMillis - 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,143,fter = getDMYDS(newMillis + getZone().getOffset(newMillis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,144,ewDay = after[0];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,145,ewMonth = after[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,148,/ ensure day correct
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,149,f (currentDay < newDay) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,150,hile (currentDay < newDay) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,151,ewMillis = newMillis - 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,152,fter = getDMYDS(newMillis + getZone().getOffset(newMillis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,153,ewDay = after[0];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,154,ewMonth = after[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,155,f (currentMonth + effectiveAdd != newMonth) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,156,ewMillis = newMillis + 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,157,reak;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,160, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,161,hile (currentDay > newDay) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,162,ewMillis = newMillis + 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,163,fter = getDMYDS(newMillis + getZone().getOffset(newMillis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,164,ewDay = after[0];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,165,ewMonth = after[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,166,f (currentMonth + effectiveAdd != newMonth) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,167,ewMillis = newMillis - 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,168,reak;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,173,"/        System.out.println(new Instant(newMillis) + ""  "" + add);"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,174,eturn newMillis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,176,"rotected long getAddWrappedResult(long millis, int addWrapped) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,177,f (addWrapped == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,178,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,180,nt[] before = getDMYDS(millis + getZone().getOffset(millis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,181,nt val = before[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,182,nt max = 12;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,183,nt min = 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,184,nt add = val + addWrapped;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,185,hile (add > max || add < min) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,186,f (addWrapped >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,187,dd = add - (max - min) - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,188, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,189,dd = add + (max - min) + 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,192,nt amount = add - val;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,193,f (amount == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,194,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,195, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,196,"eturn getAddedResult(millis, amount);"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,200,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,201,eturn 30L * 24 * 60 * 60 * 1000; // 30 day
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,203,rotected long getIncrementSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,204,eturn 8L * 60 * 60 * 1000;  // 8 hours
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,206,rotected long getTestRange() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,207,eturn 32L * 24 * 60 * 60 * 1000;  // 32 days
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,210,"rotected String getText(int value, Locale loc) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,211,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,212,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,214,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,215,eturn sym.getMonths()[value - 1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,217,"rotected String getShortText(int value, Locale loc) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,218,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,219,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,221,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,222,eturn sym.getShortMonths()[value - 1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,225,rotected int getMaximumTextLength(Locale loc) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,226,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,227,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,229,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,230,nt max = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,231,or (int i = 0; i < sym.getMonths().length; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,232,ax = (max >= sym.getMonths()[i].length() ? max : sym.getMonths()[i].length());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,234,eturn max;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,236,rotected int getMaximumShortTextLength(Locale loc) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,237,f (loc == null) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,238,oc = Locale.getDefault();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,240,ateFormatSymbols sym = new DateFormatSymbols(loc);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,241,nt max = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,242,or (int i = 0; i < sym.getShortMonths().length; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,243,ax = (max >= sym.getShortMonths()[i].length() ? max : sym.getShortMonths()[i].length());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJMonthOfYearDateTimeField.java,245,eturn max;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,66,ublic class TestGJSecondOfDayDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,69,ublic TestGJSecondOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,77,eturn new TestSuite(TestGJSecondOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,87,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,88,"eturn ""secondOfDay"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,90,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,91,eturn GJChronology.getInstance(getZone()).secondOfDay();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,93,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,94,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,96,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,97,eturn 24 * 60 * 60 - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,101,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,102,eturn (int) ((millis / 1000) % (24 * 60 * 60));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,103, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,104,eturn (int) (24 * 60 * 60 - 1) + (int) (((millis + 1) / 1000) % (24 * 60 * 60));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,107,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfDayDateTimeField.java,108,eturn 1000; // 1 sec
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,58,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,60,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,62, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,64, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,66,ublic class TestGJSecondOfMinuteDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,69,ublic TestGJSecondOfMinuteDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,73,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,74,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,76,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,77,eturn new TestSuite(TestGJSecondOfMinuteDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,79,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,80,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,82,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,83,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,87,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,88,"eturn ""secondOfMinute"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,90,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,91,eturn GJChronology.getInstance(getZone()).secondOfMinute();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,93,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,94,eturn 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,96,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,97,eturn 59;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,99,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,100,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,101,f (millis >= 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,102,eturn (int) ((millis / 1000) % 60);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,103, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,104,eturn (int) 59 + (int) (((millis + 1) / 1000) % 60);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,107,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJSecondOfMinuteDateTimeField.java,108,eturn 1000; // 1 sec
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,56,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,58,mport junit.framework.AssertionFailedError;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,59,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,61,mport org.joda.time.DateTime;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,62,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,63,mport org.joda.time.Instant;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,64,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,66, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,68, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,70,ublic class TestGJYearDateTimeField extends AbstractTestGJDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,73,ublic TestGJYearDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,74,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,77,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,78,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,80,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,81,eturn new TestSuite(TestGJYearDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,83,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,84,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,86,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,87,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,91,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,92,"eturn ""year"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,94,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,95,eturn GJChronology.getInstance(getZone()).year();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,97,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,98,eturn -292269053;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,100,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,101,eturn 292278993;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,103,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,104,illis = millis + getZone().getOffset(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,105,eturn getDMYDS(millis)[2];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,107,"rotected long getAddedResult(long millis, int add) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,108,f (add == 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,109,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,111,nt[] fields = getDMYDS(millis + getZone().getOffset(millis));
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,112,nt day = fields[0];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,113,nt month = fields[1];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,114,nt year = fields[2];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,115,nt yearLength = fields[5];
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,116,nt newYear = year + add;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,117,f (add > 0) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,118,nt addDays = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,119,f (month >= 3) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,120,or (int i = year + 1; i <= newYear; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,121,"f (isLeap(i, 1582)) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,122,ddDays += 366;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,123, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,124,ddDays += 365;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,127, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,128,or (int i = year; i < newYear; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,129,"f (isLeap(i, 1582)) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,130,ddDays += 366;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,131, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,132,ddDays += 365;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,136,"f (day == 29 && month == 2 && isLeap(newYear, 1582) == false) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,137,ddDays = addDays - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,139,illis = millis + (addDays * 24 * 60 * 60 * 1000L);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,140, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,141,nt addDays = 0;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,142,f (month >= 3) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,143,or (int i = year; i > newYear; i--) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,144,"f (isLeap(i, 1582)) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,145,ddDays -= 366;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,146, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,147,ddDays -= 365;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,150, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,151,or (int i = year - 1; i >= newYear; i--) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,152,"f (isLeap(i, 1582)) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,153,ddDays -= 366;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,154, else {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,155,ddDays -= 365;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,159,"f (day == 29 && month == 2 && isLeap(newYear, 1582) == false) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,160,ddDays = addDays - 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,162,illis = millis + (addDays * 24 * 60 * 60 * 1000L);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,164,eturn millis;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,166,"rotected long getAddWrappedResult(long millis, int add) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,167,"eturn getAddedResult(millis, add);"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,170,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,171,eturn 365 * 24 * 60 * 60 * 1000; // 365 day
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,173,rotected long getIncrementSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,174,eturn 8 * 60 * 60 * 1000;  // 8 hours
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,176,rotected long getTestRange() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,177,eturn 20L * 24 * 60 * 60 * 1000;  // 20 days
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,181,ublic void testIsLeapYear() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,182,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,183,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,184,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,185,ry {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,186,"ssertEquals(iCalendar.isLeapYear(field.get(var[i])), field.isLeap(var[i]));"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,187, catch (AssertionFailedError ex) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,188,"ystem.out.println(""LEAPYEAR: i: ""+i+"" cal:""+getCalendarValue(var[i])+"" get:""+getField().get(var[i])+"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,189," time:""+new Instant(var[i])+"",""+new Date(var[i])+"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,190," day:""+new DateTime(var[i], GJChronology.getInstance()).getDayOfMonth()+"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,191," month:""+new DateTime(var[i], GJChronology.getInstance()).getMonthOfYear()+"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,192," year:""+new DateTime(var[i], GJChronology.getInstance()).getYear());"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,193,hrow ex;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,198,ublic void testGetLeapAmount() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,199,ateTimeField field = getField();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,200,ong[] var = getAllTestPositions();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,201,or (int i = 0; i < var.length; i++) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearDateTimeField.java,202,"ssertEquals(iCalendar.isLeapYear(field.get(var[i])) ? 1 : 0, field.getLeapAmount(var[i]));"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,56,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,58,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,60,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,61,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,62,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,64, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,66, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,68,ublic class TestGJYearOfCenturyDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,71,ublic TestGJYearOfCenturyDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,72,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,75,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,76,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,78,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,79,eturn new TestSuite(TestGJYearOfCenturyDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,81,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,82,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,84,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,85,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,89,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,90,"eturn ""yearOfCentury"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,92,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,93,eturn GJChronology.getInstance(getZone()).yearOfCentury();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,95,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,96,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,98,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,99,eturn 100;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,101,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,102,Date.setTime(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,103,Calendar.setTime(iDate);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,104,nt val = iCalendar.get(Calendar.YEAR);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,105,al = val % 100;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,106,eturn (val == 0 ? 100 : val);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,108,"rotected long getAddedResult(long millis, int add) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,109,Date.setTime(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,110,Calendar.setTime(iDate);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,111,"Calendar.add(Calendar.YEAR, add);"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,112,eturn iCalendar.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,115,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,116,eturn 365 * 24 * 60 * 60 * 1000; // 365 day
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,118,rotected long getIncrementSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,119,eturn 8 * 60 * 60 * 1000;  // 8 hours
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,121,rotected long getTestRange() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfCenturyDateTimeField.java,122,eturn 32L * 24 * 60 * 60 * 1000;  // 32 days
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,56,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,58,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,60,mport org.joda.test.time.AbstractTestDateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,61,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,62,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,64, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,66, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,68,ublic class TestGJYearOfEraDateTimeField extends AbstractTestDateTimeField {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,71,ublic TestGJYearOfEraDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,72,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,75,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,76,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,78,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,79,eturn new TestSuite(TestGJYearOfEraDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,81,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,82,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,84,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,85,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,89,rotected String getFieldName() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,90,"eturn ""yearOfEra"";"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,92,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,93,eturn GJChronology.getInstance(getZone()).yearOfEra();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,95,rotected int getMinimumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,96,eturn 1;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,98,rotected int getMaximumValue() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,99,eturn 292278993;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,101,rotected int getCalendarValue(long millis) {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,102,Date.setTime(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,103,Calendar.setTime(iDate);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,104,nt val = iCalendar.get(Calendar.YEAR);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,105,eturn val;
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,107,"rotected long getAddedResult(long millis, int add) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,108,Date.setTime(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,109,Calendar.setTime(iDate);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,110,"Calendar.add(Calendar.YEAR, add);"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,111,eturn iCalendar.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,113,"rotected long getAddWrappedResult(long millis, int add) {"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,114,Date.setTime(millis);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,115,Calendar.setTime(iDate);
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,116,"Calendar.add(Calendar.YEAR, add);"
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,117,eturn iCalendar.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,120,rotected long getUnitSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,121,eturn 365 * 24 * 60 * 60 * 1000; // 365 day
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,123,rotected long getIncrementSize() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,124,eturn 8 * 60 * 60 * 1000;  // 8 hours
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,126,rotected long getTestRange() {
False,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,JodaTime/src/test/org/joda/test/time/gj/TestGJYearOfEraDateTimeField.java,127,eturn 32L * 24 * 60 * 60 * 1000;  // 32 days
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,54,ackage org.joda.test.time.gj;
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,58, This class is a Junit unit test suite.
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,60, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,62,ublic class TestSuiteGJ extends TestSuite {
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,64,ublic TestSuiteGJ(String name) {
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,65,uper(name);
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,68,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,69,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,72,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,73,estSuite suite = new TestSuite();
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,74,uite.addTest(TestGJMillisOfSecondDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,75,uite.addTest(TestGJMillisOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,76,uite.addTest(TestGJSecondOfMinuteDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,77,uite.addTest(TestGJSecondOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,78,uite.addTest(TestGJMinuteOfHourDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,79,uite.addTest(TestGJMinuteOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,80,uite.addTest(TestGJHalfdayOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,81,uite.addTest(TestGJHourOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,82,uite.addTest(TestGJHourOfHalfdayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,83,uite.addTest(TestGJClockhourOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,84,uite.addTest(TestGJClockhourOfHalfdayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,86,uite.addTest(TestGJDayOfWeekDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,87,uite.addTest(TestGJDayOfMonthDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,88,uite.addTest(TestGJDayOfYearDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,90,uite.addTest(TestGJMonthOfYearDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,91,uite.addTest(TestGJYearDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,92,uite.addTest(TestGJYearOfEraDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,93,uite.addTest(TestGJYearOfCenturyDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,JodaTime/src/test/org/joda/test/time/gj/TestSuiteGJ.java,94,eturn suite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,58,mport org.joda.test.time.gj.TestGJClockhourOfDayDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,67,ublic class TestISOClockhourOfDayDateTimeField extends TestGJClockhourOfDayDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,69,ublic TestISOClockhourOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,76,eturn new TestSuite(TestISOClockhourOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfDayDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).clockhourOfDay();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,58,mport org.joda.test.time.gj.TestGJClockhourOfHalfdayDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,67,ublic class TestISOClockhourOfHalfdayDateTimeField extends TestGJClockhourOfHalfdayDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,69,ublic TestISOClockhourOfHalfdayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,76,eturn new TestSuite(TestISOClockhourOfHalfdayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOClockhourOfHalfdayDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).clockhourOfHalfday();
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,58,mport org.joda.test.time.gj.TestGJDayOfMonthDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,67,ublic class TestISODayOfMonthDateTimeField extends TestGJDayOfMonthDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,69,ublic TestISODayOfMonthDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,76,eturn new TestSuite(TestISODayOfMonthDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).dayOfMonth();
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,82,rotected int[] getDMYDS(long millis) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfMonthDateTimeField.java,83,"eturn super.getDMYDS(millis, Long.MIN_VALUE, Integer.MIN_VALUE, 0);"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,58,mport org.joda.test.time.gj.TestGJDayOfWeekDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,67,ublic class TestISODayOfWeekDateTimeField extends TestGJDayOfWeekDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,69,ublic TestISODayOfWeekDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,76,eturn new TestSuite(TestISODayOfWeekDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfWeekDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).dayOfWeek();
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,58,mport org.joda.test.time.gj.TestGJDayOfYearDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,67,ublic class TestISODayOfYearDateTimeField extends TestGJDayOfYearDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,69,ublic TestISODayOfYearDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,76,eturn new TestSuite(TestISODayOfYearDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).dayOfYear();
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,82,rotected int[] getDMYDS(long millis) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISODayOfYearDateTimeField.java,83,"eturn super.getDMYDS(millis, Long.MIN_VALUE, Integer.MIN_VALUE, 0);"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,58,mport org.joda.test.time.gj.TestGJHalfdayOfDayDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,67,ublic class TestISOHalfdayOfDayDateTimeField extends TestGJHalfdayOfDayDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,69,ublic TestISOHalfdayOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,76,eturn new TestSuite(TestISOHalfdayOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHalfdayOfDayDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).halfdayOfDay();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,58,mport org.joda.test.time.gj.TestGJHourOfDayDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,67,ublic class TestISOHourOfDayDateTimeField extends TestGJHourOfDayDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,69,ublic TestISOHourOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,76,eturn new TestSuite(TestISOHourOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfDayDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).hourOfDay();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,58,mport org.joda.test.time.gj.TestGJHourOfHalfdayDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,67,ublic class TestISOHourOfHalfdayDateTimeField extends TestGJHourOfHalfdayDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,69,ublic TestISOHourOfHalfdayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,76,eturn new TestSuite(TestISOHourOfHalfdayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOHourOfHalfdayDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).hourOfHalfday();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,58,mport org.joda.test.time.gj.TestGJMillisOfDayDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,67,ublic class TestISOMillisOfDayDateTimeField extends TestGJMillisOfDayDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,69,ublic TestISOMillisOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,76,eturn new TestSuite(TestISOMillisOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfDayDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).millisOfDay();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,58,mport org.joda.test.time.gj.TestGJMillisOfSecondDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,67,ublic class TestISOMillisOfSecondDateTimeField extends TestGJMillisOfSecondDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,69,ublic TestISOMillisOfSecondDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,76,eturn new TestSuite(TestISOMillisOfSecondDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMillisOfSecondDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).millisOfSecond();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,58,mport org.joda.test.time.gj.TestGJMinuteOfDayDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,67,ublic class TestISOMinuteOfDayDateTimeField extends TestGJMinuteOfDayDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,69,ublic TestISOMinuteOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,76,eturn new TestSuite(TestISOMinuteOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfDayDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).minuteOfDay();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,58,mport org.joda.test.time.gj.TestGJMinuteOfHourDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,67,ublic class TestISOMinuteOfHourDateTimeField extends TestGJMinuteOfHourDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,69,ublic TestISOMinuteOfHourDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,76,eturn new TestSuite(TestISOMinuteOfHourDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMinuteOfHourDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).minuteOfHour();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,58,mport org.joda.test.time.gj.TestGJMonthOfYearDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,67,ublic class TestISOMonthOfYearDateTimeField extends TestGJMonthOfYearDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,69,ublic TestISOMonthOfYearDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,76,eturn new TestSuite(TestISOMonthOfYearDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).monthOfYear();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,82,rotected int[] getDMYDS(long millis) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOMonthOfYearDateTimeField.java,83,"eturn super.getDMYDS(millis, Long.MIN_VALUE, Integer.MIN_VALUE, 0);"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,58,mport org.joda.test.time.gj.TestGJSecondOfDayDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,67,ublic class TestISOSecondOfDayDateTimeField extends TestGJSecondOfDayDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,69,ublic TestISOSecondOfDayDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,76,eturn new TestSuite(TestISOSecondOfDayDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfDayDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).secondOfDay();
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,58,mport org.joda.test.time.gj.TestGJSecondOfMinuteDateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,60,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,63, This class is a Junit unit test for the date time field.
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,65, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,67,ublic class TestISOSecondOfMinuteDateTimeField extends TestGJSecondOfMinuteDateTimeField {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,69,ublic TestISOSecondOfMinuteDateTimeField(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,70,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,72,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,73,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,75,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,76,eturn new TestSuite(TestISOSecondOfMinuteDateTimeField.class);
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,79,rotected DateTimeField getField() {
False,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,JodaTime/src/test/org/joda/test/time/iso/TestISOSecondOfMinuteDateTimeField.java,80,eturn ISOChronology.getInstance(getZone()).secondOfMinute();
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,54,ackage org.joda.test.time.iso;
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,59, This class is a Junit unit test suite.
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,61, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,63,ublic class TestSuiteISO extends TestSuite {
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,65,ublic TestSuiteISO(String name) {
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,66,uper(name);
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,69,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,70,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,73,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,74,estSuite suite = new TestSuite();
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,75,uite.addTest(TestISOMillisOfSecondDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,76,uite.addTest(TestISOMillisOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,77,uite.addTest(TestISOSecondOfMinuteDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,78,uite.addTest(TestISOSecondOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,79,uite.addTest(TestISOMinuteOfHourDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,80,uite.addTest(TestISOMinuteOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,81,uite.addTest(TestISOHalfdayOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,82,uite.addTest(TestISOHourOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,83,uite.addTest(TestISOHourOfHalfdayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,84,uite.addTest(TestISOClockhourOfDayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,85,uite.addTest(TestISOClockhourOfHalfdayDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,87,uite.addTest(TestISODayOfWeekDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,88,uite.addTest(TestISODayOfMonthDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,89,uite.addTest(TestISODayOfYearDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,91,uite.addTest(TestISOMonthOfYearDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,92,/        suite.addTest(TestISOYearDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,93,/        suite.addTest(TestISOYearOfEraDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,94,/        suite.addTest(TestISOYearOfCenturyDateTimeField.suite());
False,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,JodaTime/src/test/org/joda/test/time/iso/TestSuiteISO.java,95,eturn suite;
True,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,68,import junit.framework.TestCase;
False,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,70,mport org.joda.test.time.BulkTest;
False,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,78,ublic class TestDateTimeComparator extends BulkTest {
True,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,78,public class TestDateTimeComparator extends TestCase {
False,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,83, The main method for this test program.
False,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,84, @param args command line arguments.
False,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,90, TestSuite is a junit required method.
False,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,93,eturn BulkTest.makeSuite(TestDateTimeComparator.class);
True,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,87,return new TestSuite(TestDateTimeComparator.class);
False,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,96, TestDateTimeComparator constructor.
False,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,JodaTime/src/test/org/joda/time/TestDateTimeComparator.java,97, @param name
True,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,56,import junit.framework.TestCase;
False,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,58,mport org.joda.test.time.BulkTest;
False,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,65,ublic class TestDateTimeConstants extends BulkTest {
True,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,64,public class TestDateTimeConstants extends TestCase {
False,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,79,eturn BulkTest.makeSuite(TestDateTimeConstants.class);
True,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,JodaTime/src/test/org/joda/time/TestDateTimeConstants.java,78,return new TestSuite(TestDateTimeConstants.class);
True,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,57,import junit.framework.TestCase;
False,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,59,mport org.joda.test.time.*;
False,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,60,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,61,mport org.joda.time.MutableDateTime;
False,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,71,ublic class TestParseISO extends BulkTest {
True,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,69,public class TestParseISO extends TestCase {
False,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,88,eturn BulkTest.makeSuite(TestParseISO.class);
True,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,86,return new TestSuite(TestParseISO.class);
False,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,92, TestConstructors constructor.
True,JodaTime/src/test/org/joda/time/TestParseISO.java,JodaTime/src/test/org/joda/time/TestParseISO.java,90,* Constructor.
