is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/example/org/joda/example/time/Examples.java,JodaTime/src/example/org/joda/example/time/Examples.java,88,"ystem.out.println(""No time zone:          in.getDateTimeZone():     "" + in.getDateTimeZone());"
True,JodaTime/src/example/org/joda/example/time/Examples.java,JodaTime/src/example/org/joda/example/time/Examples.java,88,"System.out.println(""No time zone:          in.getDateTimeZone():     "" + in.getZone());"
False,JodaTime/src/example/org/joda/example/time/Examples.java,JodaTime/src/example/org/joda/example/time/Examples.java,108,"ystem.out.println(""Change zone IGNORED:   in.withDateTimeZone(...): "" + in.withDateTimeZone(null));"
False,JodaTime/src/example/org/joda/example/time/Examples.java,JodaTime/src/example/org/joda/example/time/Examples.java,109,"ystem.out.println(""Change zone IGNORED:   in.withDateTimeZoneMoved(...):"" + in.withDateTimeZoneMoved(null));"
True,JodaTime/src/example/org/joda/example/time/Examples.java,JodaTime/src/example/org/joda/example/time/Examples.java,108,"System.out.println(""Change zone IGNORED:   in.withZone(...):         "" + in.withZone(null));"
True,JodaTime/src/example/org/joda/example/time/Examples.java,JodaTime/src/example/org/joda/example/time/Examples.java,109,"System.out.println(""Change zone IGNORED:   in.withZoneRetainFields(...):"" + in.withZoneRetainFields(null));"
False,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,639,rotected void setDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,639,protected void setZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,643,f (iChronology.getDateTimeZone() != zone) {
True,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,643,if (iChronology.getZone() != zone) {
False,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,646,etChronology(iChronology.withDateTimeZone(zone));
True,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,646,setChronology(iChronology.withZone(zone));
False,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,656, @see #setDateTimeZone
True,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,656,* @see #setZone
False,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,662,ateTimeZone currentZone = iChronology.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,662,DateTimeZone currentZone = iChronology.getZone();
False,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,669,etChronology(iChronology.withDateTimeZone(zone));
True,JodaTime/src/java/org/joda/time/AbstractDateTime.java,JodaTime/src/java/org/joda/time/AbstractDateTime.java,669,setChronology(iChronology.withZone(zone));
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,94,ublic final DateTimeZone getDateTimeZone() {
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,94,public final DateTimeZone getZone() {
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,96,eturn (chrono != null ? chrono.getDateTimeZone() : null);
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,96,return (chrono != null ? chrono.getZone() : null);
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,137, @see #withDateTimeZoneRetainFields
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,137,* @see #withZoneRetainFields
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,139,ublic ReadableInstant withDateTimeZone(DateTimeZone newDateTimeZone) {
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,139,public ReadableInstant withZone(DateTimeZone newDateTimeZone) {
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,147,eturn withChronology(originalChrono.withDateTimeZone(newDateTimeZone));
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,147,return withChronology(originalChrono.withZone(newDateTimeZone));
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,165, @see #withDateTimeZone
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,165,* @see #withZone
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,167,ublic ReadableInstant withDateTimeZoneRetainFields(DateTimeZone newDateTimeZone) {
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,167,public ReadableInstant withZoneRetainFields(DateTimeZone newDateTimeZone) {
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,171,f (originalChrono == null || (originalZone = originalChrono.getDateTimeZone()) == null) {
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,171,if (originalChrono == null || (originalZone = originalChrono.getZone()) == null) {
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,178,eadableInstant newInstant = withChronology(originalChrono.withDateTimeZone(newDateTimeZone));
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,179,ewDateTimeZone = newInstant.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,178,ReadableInstant newInstant = withChronology(originalChrono.withZone(newDateTimeZone));
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,179,newDateTimeZone = newInstant.getZone();
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,239,f (this instanceof DateTime && getDateTimeZone() == zone) {
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,239,if (this instanceof DateTime && getZone() == zone) {
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,272,ateTimeZone zone = base.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,272,DateTimeZone zone = base.getZone();
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,276,"eturn new DateTime(getMillis(base), getChronology().withDateTimeZone(zone));"
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,276,"return new DateTime(getMillis(base), getChronology().withZone(zone));"
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,294,"eturn new DateTime(getMillis(base, zone), getChronology().withDateTimeZone(zone));"
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,294,"return new DateTime(getMillis(base, zone), getChronology().withZone(zone));"
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,312,"eturn new DateTime(getMillis(base, chronology.getDateTimeZone()), chronology);"
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,312,"return new DateTime(getMillis(base, chronology.getZone()), chronology);"
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,330,ateTimeZone zone = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,330,DateTimeZone zone = getZone();
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,396,ateTimeZone zone = base.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,396,DateTimeZone zone = base.getZone();
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,400,"eturn new MutableDateTime(getMillis(base), getChronology().withDateTimeZone(zone));"
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,400,"return new MutableDateTime(getMillis(base), getChronology().withZone(zone));"
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,418,"eturn new MutableDateTime(getMillis(base, zone), getChronology().withDateTimeZone(zone));"
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,418,"return new MutableDateTime(getMillis(base, zone), getChronology().withZone(zone));"
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,436,"eturn new MutableDateTime(getMillis(base, chronology.getDateTimeZone()), chronology);"
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,436,"return new MutableDateTime(getMillis(base, chronology.getZone()), chronology);"
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,522,ateTimeZone zone = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,522,DateTimeZone zone = getZone();
False,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,539,ateTimeZone zone = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractInstant.java,JodaTime/src/java/org/joda/time/AbstractInstant.java,539,DateTimeZone zone = getZone();
False,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,90,ateTimeZone zone = original.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,90,DateTimeZone zone = original.getZone();
False,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,110,ateTimeZone zone = chronology.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,110,DateTimeZone zone = chronology.getZone();
False,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,235,"eturn getMillis(base, base.getDateTimeZone());"
True,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,235,"return getMillis(base, base.getZone());"
False,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,256,ateTimeZone baseZone = base.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/AbstractPartialInstant.java,256,DateTimeZone baseZone = base.getZone();
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,87,ateTimeZone getDateTimeZone();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,87,DateTimeZone getZone();
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,105,hronology withDateTimeZone(DateTimeZone zone);
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,105,Chronology withZone(DateTimeZone zone);
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,207,ateTimeZone zone = cProvider.getDateTimeZone(id);
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,207,DateTimeZone zone = cProvider.getZone(id);
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,244,f (convId == null || (dtz = cProvider.getDateTimeZone(convId)) == null) {
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,245,tz = cProvider.getDateTimeZone(id);
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,244,if (convId == null || (dtz = cProvider.getZone(convId)) == null) {
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,245,dtz = cProvider.getZone(id);
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,328,"f (!UTC.equals(provider.getDateTimeZone(""UTC""))) {"
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,328,"if (!UTC.equals(provider.getZone(""UTC""))) {"
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,160,ublic ReadableInstant withDateTimeZone(DateTimeZone newDateTimeZone) {
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,160,public ReadableInstant withZone(DateTimeZone newDateTimeZone) {
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,171,ublic ReadableInstant withDateTimeZoneMoved(DateTimeZone newDateTimeZone) {
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,171,public ReadableInstant withZoneRetainFields(DateTimeZone newDateTimeZone) {
False,JodaTime/src/java/org/joda/time/MutableDateOnly.java,JodaTime/src/java/org/joda/time/MutableDateOnly.java,311,ublic void setDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/MutableDateOnly.java,JodaTime/src/java/org/joda/time/MutableDateOnly.java,311,public void setZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/MutableDateOnly.java,JodaTime/src/java/org/joda/time/MutableDateOnly.java,319,ublic void setDateTimeZoneRetainFields(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/MutableDateOnly.java,JodaTime/src/java/org/joda/time/MutableDateOnly.java,319,public void setZoneRetainFields(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,440, @see #setDateTimeZoneRetainFields
True,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,440,* @see #setZoneRetainFields
False,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,442,ublic void setDateTimeZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,443,uper.setDateTimeZone(zone);
True,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,442,public void setZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,443,super.setZone(zone);
False,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,455, @see #setDateTimeZone
True,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,455,* @see #setZone
False,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,457,ublic void setDateTimeZoneRetainFields(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/MutableDateTime.java,JodaTime/src/java/org/joda/time/MutableDateTime.java,457,public void setZoneRetainFields(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/MutableTimeOnly.java,JodaTime/src/java/org/joda/time/MutableTimeOnly.java,317,ublic void setDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/MutableTimeOnly.java,JodaTime/src/java/org/joda/time/MutableTimeOnly.java,317,public void setZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/MutableTimeOnly.java,JodaTime/src/java/org/joda/time/MutableTimeOnly.java,325,ublic void setDateTimeZoneRetainFields(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/MutableTimeOnly.java,JodaTime/src/java/org/joda/time/MutableTimeOnly.java,325,public void setZoneRetainFields(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,111, @see #setDateTimeZoneRetainFields
True,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,111,* @see #setZoneRetainFields
False,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,113,oid setDateTimeZone(DateTimeZone zone);
True,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,113,void setZone(DateTimeZone zone);
False,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,124, @see #setDateTimeZone
True,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,124,* @see #setZone
False,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,126,oid setDateTimeZoneRetainFields(DateTimeZone zone);
True,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,JodaTime/src/java/org/joda/time/ReadWritableInstant.java,126,void setZoneRetainFields(DateTimeZone zone);
False,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,127,ateTimeZone getDateTimeZone();
True,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,127,DateTimeZone getZone();
False,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,185, @see #withDateTimeZoneRetainFields
True,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,185,* @see #withZoneRetainFields
False,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,187,eadableInstant withDateTimeZone(DateTimeZone newDateTimeZone);
True,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,187,ReadableInstant withZone(DateTimeZone newDateTimeZone);
False,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,204, @see #withDateTimeZone
True,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,204,* @see #withZone
False,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,206,eadableInstant withDateTimeZoneRetainFields(DateTimeZone newDateTimeZone);
True,JodaTime/src/java/org/joda/time/ReadableInstant.java,JodaTime/src/java/org/joda/time/ReadableInstant.java,206,ReadableInstant withZoneRetainFields(DateTimeZone newDateTimeZone);
False,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,94,ublic abstract DateTimeZone getDateTimeZone();
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,94,public abstract DateTimeZone getZone();
False,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,112,ublic abstract Chronology withDateTimeZone(DateTimeZone zone);
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,112,public abstract Chronology withZone(DateTimeZone zone);
False,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,233,ublic DateTimeZone getDateTimeZone() {
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,233,public DateTimeZone getZone() {
False,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,236,eturn base.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,236,return base.getZone();
False,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,353,ateTimeZone zone = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,353,DateTimeZone zone = getZone();
False,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,141,ublic DateTimeZone getDateTimeZone() {
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,141,public DateTimeZone getZone() {
False,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,144,eturn base.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,144,return base.getZone();
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,161,eturn getInstance(getBase().getDateTimeZone());
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,161,return getInstance(getBase().getZone());
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,181,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,181,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,185,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,185,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,200,ateTimeZone zone = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,200,DateTimeZone zone = getZone();
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,203,eturn getInstance(getBase().getDateTimeZone());
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,203,return getInstance(getBase().getZone());
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,223,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,223,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,227,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,227,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,323,"eturn getInstance(getDateTimeZone(), iCutoverInstant, getMinimumDaysInFirstWeek());"
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,323,"return getInstance(getZone(), iCutoverInstant, getMinimumDaysInFirstWeek());"
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,326,ublic DateTimeZone getDateTimeZone() {
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,326,public DateTimeZone getZone() {
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,329,eturn base.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,329,return base.getZone();
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,342,eturn withDateTimeZone(DateTimeZone.UTC);
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,342,return withZone(DateTimeZone.UTC);
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,351,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,351,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,355,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,355,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,464,b.append(getDateTimeZone().getID());
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,464,sb.append(getZone().getID());
False,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,185,eturn getInstance(getBase().getDateTimeZone());
True,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,185,return getInstance(getBase().getZone());
False,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,205,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,205,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,209,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java,209,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,137,f (chrono != null && chrono.getDateTimeZone() == zone) {
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,137,if (chrono != null && chrono.getZone() == zone) {
False,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,178,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,178,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,182,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,182,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,197,ateTimeZone zone = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,197,DateTimeZone zone = getZone();
False,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,205,f (getBase().getDateTimeZone() == DateTimeZone.UTC) {
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,205,if (getBase().getZone() == DateTimeZone.UTC) {
False,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,221,eturn new Stub(getDateTimeZone());
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,221,return new Stub(getZone());
False,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,200,eturn getInstance(getBase().getDateTimeZone());
True,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,200,return getInstance(getBase().getZone());
False,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,220,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,220,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,224,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,JodaTime/src/java/org/joda/time/chrono/JulianChronology.java,224,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,102,f (getDateTimeZone() == DateTimeZone.UTC) {
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,102,if (getZone() == DateTimeZone.UTC) {
False,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,111,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,111,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,118,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,118,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,121,eturn LenientChronology.getInstance(getBase().withDateTimeZone(zone));
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,121,return LenientChronology.getInstance(getBase().withZone(zone));
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,93," withDateTimeZone is called, the returned LimitChronology instance has"
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,93,"* withZone is called, the returned LimitChronology instance has"
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,128," withDateTimeZone is called, the returned LimitChronology instance has"
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,128,"* withZone is called, the returned LimitChronology instance has"
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,166,eturn withDateTimeZone(DateTimeZone.UTC);
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,166,return withZone(DateTimeZone.UTC);
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,174,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,174,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,178,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,178,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,189,dt.setDateTimeZoneRetainFields(zone);
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,189,mdt.setZoneRetainFields(zone);
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,196,dt.setDateTimeZoneRetainFields(zone);
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,196,mdt.setZoneRetainFields(zone);
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,201,"getBase().withDateTimeZone(zone), lowerLimit, upperLimit);"
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,201,"(getBase().withZone(zone), lowerLimit, upperLimit);"
False,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,102,f (getDateTimeZone() == DateTimeZone.UTC) {
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,102,if (getZone() == DateTimeZone.UTC) {
False,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,111,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,111,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,118,f (zone == getDateTimeZone()) {
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,118,if (zone == getZone()) {
False,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,121,eturn StrictChronology.getInstance(getBase().withDateTimeZone(zone));
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,121,return StrictChronology.getInstance(getBase().withZone(zone));
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,119,ublic DateTimeZone getDateTimeZone() {
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,119,public DateTimeZone getZone() {
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,127,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,127,public Chronology withZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,169,"instant + getDateTimeZone().getOffset(instant),"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,169,"(instant + getZone().getOffset(instant),"
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,187,ateTimeZone zone = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,187,DateTimeZone zone = getZone();
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,251,"onedDurationField zonedField = new ZonedDurationField(field, getDateTimeZone());"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,251,"ZonedDurationField zonedField = new ZonedDurationField(field, getZone());"
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,264,"ew ZonedDateTimeField(field, getDateTimeZone(),"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,264,"new ZonedDateTimeField(field, getZone(),"
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,273,"eturn ""ZonedChronology["" + getBase() + "", "" + getDateTimeZone().getID() + ']';"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,273,"return ""ZonedChronology["" + getBase() + "", "" + getZone().getID() + ']';"
False,JodaTime/src/java/org/joda/time/convert/PartialInstantConverter.java,JodaTime/src/java/org/joda/time/convert/PartialInstantConverter.java,120,one = chrono.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/convert/PartialInstantConverter.java,JodaTime/src/java/org/joda/time/convert/PartialInstantConverter.java,120,zone = chrono.getZone();
False,JodaTime/src/java/org/joda/time/convert/PartialInstantConverter.java,JodaTime/src/java/org/joda/time/convert/PartialInstantConverter.java,143,eturn chrono.withDateTimeZone(DateTimeZone.getDefault());
True,JodaTime/src/java/org/joda/time/convert/PartialInstantConverter.java,JodaTime/src/java/org/joda/time/convert/PartialInstantConverter.java,143,return chrono.withZone(DateTimeZone.getDefault());
False,JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java,124,ateTimeZone chronoZone = chrono.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java,124,DateTimeZone chronoZone = chrono.getZone();
False,JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java,126,hrono = chrono.withDateTimeZone(zone);
True,JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java,JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java,126,chrono = chrono.withZone(zone);
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,118,ublic DateTimeZone getDateTimeZone() {
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,118,public DateTimeZone getZone() {
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,123,ateTimeZone zone = chrono.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,123,DateTimeZone zone = chrono.getZone();
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,131,"rintTo(buf, millisUTC, chrono.getDateTimeZone());"
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,131,"printTo(buf, millisUTC, chrono.getZone());"
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,141,"rintTo(out, millisUTC, chrono.getDateTimeZone());"
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,141,"printTo(out, millisUTC, chrono.getZone());"
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,157,one = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,157,zone = getZone();
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,165,one = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,165,zone = getZone();
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,175,"eturn print(millisUTC, chrono.getDateTimeZone());"
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,175,"return print(millisUTC, chrono.getZone());"
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,187,one = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,187,zone = getZone();
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,205,ateTimeZone zone = chrono.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,205,DateTimeZone zone = chrono.getZone();
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,260,ateTimeZone zone = instant.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,260,DateTimeZone zone = instant.getZone();
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,272,ateTimeZone zone = chrono.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,272,DateTimeZone zone = chrono.getZone();
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,274,ucket.setDateTimeZone(zone);
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,274,bucket.setZone(zone);
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,151,ateTimeZone zone = chrono.getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,151,DateTimeZone zone = chrono.getZone();
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1829,one = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1829,zone = getZone();
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1841,one = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1841,zone = getZone();
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1852,one = getDateTimeZone();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1852,zone = getZone();
False,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,106,ublic DateTimeZone getDateTimeZone() {
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,106,public DateTimeZone getZone() {
False,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,116,ublic void setDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,116,public void setZone(DateTimeZone zone) {
False,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,124, getDateTimeZone doesn't return null.
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,124,* getZone doesn't return null.
False,JodaTime/src/java/org/joda/time/tz/Provider.java,JodaTime/src/java/org/joda/time/tz/Provider.java,71,ateTimeZone getDateTimeZone(String id);
True,JodaTime/src/java/org/joda/time/tz/Provider.java,JodaTime/src/java/org/joda/time/tz/Provider.java,71,DateTimeZone getZone(String id);
False,JodaTime/src/java/org/joda/time/tz/UTCProvider.java,JodaTime/src/java/org/joda/time/tz/UTCProvider.java,72,ublic DateTimeZone getDateTimeZone(String id) {
True,JodaTime/src/java/org/joda/time/tz/UTCProvider.java,JodaTime/src/java/org/joda/time/tz/UTCProvider.java,72,public DateTimeZone getZone(String id) {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,180,ublic synchronized DateTimeZone getDateTimeZone(String id) {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,180,public synchronized DateTimeZone getZone(String id) {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,205,eturn getDateTimeZone((String)obj);
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,205,return getZone((String)obj);
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,213, Called if an exception is thrown from getDateTimeZone while loading zone
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,213,* Called if an exception is thrown from getZone while loading zone
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,126,"ssertSame(zone, BuddhistChronology.getInstance().getDateTimeZone());"
True,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,126,"assertSame(zone, BuddhistChronology.getInstance().getZone());"
False,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,132,"ssertSame(zone, BuddhistChronology.getInstance(zone).getDateTimeZone());"
True,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,JodaTime/src/test/org/joda/test/time/TestBuddhistChronology.java,132,"assertSame(zone, BuddhistChronology.getInstance(zone).getZone());"
False,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,359,"ssertEquals(msg + ""\nZone: "", z, dt.getDateTimeZone());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,359,"assertEquals(msg + ""\nZone: "", z, dt.getZone());"
False,JodaTime/src/test/org/joda/test/time/chrono/gj/TestGJChronology.java,JodaTime/src/test/org/joda/test/time/chrono/gj/TestGJChronology.java,132,ublic DateTimeZone getDateTimeZone() {
True,JodaTime/src/test/org/joda/test/time/chrono/gj/TestGJChronology.java,JodaTime/src/test/org/joda/test/time/chrono/gj/TestGJChronology.java,132,public DateTimeZone getZone() {
False,JodaTime/src/test/org/joda/test/time/chrono/gj/TestGJChronology.java,JodaTime/src/test/org/joda/test/time/chrono/gj/TestGJChronology.java,143,ublic Chronology withDateTimeZone(DateTimeZone zone) {
True,JodaTime/src/test/org/joda/test/time/chrono/gj/TestGJChronology.java,JodaTime/src/test/org/joda/test/time/chrono/gj/TestGJChronology.java,143,public Chronology withZone(DateTimeZone zone) {
