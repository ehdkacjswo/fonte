is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,273, Compares this duration field with another duration field for ascending
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,274," unit millisecond order. This ordering is inconsistent with equals, as it"
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,275, ignores name and precision.
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,277, @param durationField  a duration field to check against
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,278," @return negative value if this is less, 0 if equal, or positive value if greater"
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,279, @throws NullPointerException if the object is null
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,280, @throws ClassCastException if the object type is not supported
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,282,ublic abstract int compareTo(DurationField durationField);
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,272,// Adding this definition would be backwards incompatible with earlier subclasses
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,273,"// This definition of compareTo was present in previous versions, and still applies"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,275,//     * Compares this duration field with another duration field for ascending
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,276,"//     * unit millisecond order. This ordering is inconsistent with equals, as it"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,277,//     * ignores name and precision.
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,279,//     * @param durationField  a duration field to check against
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,280,"//     * @return negative value if this is less, 0 if equal, or positive value if greater"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,281,//     * @throws NullPointerException if the object is null
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,282,//     * @throws ClassCastException if the object type is not supported
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,284,//    public abstract int compareTo(DurationField durationField);
