is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,27,"uper(DateTimeFieldType.dayOfMonth(), chrono.MILLIS_PER_DAY, chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,27,"super(DateTimeFieldType.dayOfMonth(), TestGJChronology.MILLIS_PER_DAY, chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,41,eturn millis + value * iChronology.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,41,return millis + value * TestGJChronology.MILLIS_PER_DAY;
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,27,"uper(DateTimeFieldType.dayOfWeek(), chrono.MILLIS_PER_DAY, chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,27,"super(DateTimeFieldType.dayOfWeek(), TestGJChronology.MILLIS_PER_DAY, chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,31,"nt dayOfWeek = (int)iChronology.mod(iChronology.fixedFromMillis(millis), 7);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,31,"int dayOfWeek = (int) TestGJChronology.mod(iChronology.fixedFromMillis(millis), 7);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,43,eturn millis + value * iChronology.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,43,return millis + value * TestGJChronology.MILLIS_PER_DAY;
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,27,"uper(DateTimeFieldType.dayOfYear(), chrono.MILLIS_PER_DAY, chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,27,"super(DateTimeFieldType.dayOfYear(), TestGJChronology.MILLIS_PER_DAY, chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,41,eturn millis + value * iChronology.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,41,return millis + value * TestGJChronology.MILLIS_PER_DAY;
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,49," (int)iChronology.div(value, 12);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,50,"nt newMonth = get(millis) + (int)iChronology.mod(value, 12);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,49,"+ (int)TestGJChronology.div(value, 12);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,50,"int newMonth = get(millis) + (int)TestGJChronology.mod(value, 12);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java,28,"long)(chrono.MILLIS_PER_DAY * 7), chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java,28,"(long)(TestGJChronology.MILLIS_PER_DAY * 7), chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGregorianChronology.java,18,mport org.joda.time.Chronology;
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGregorianChronology.java,19,mport org.joda.time.DateTimeField;
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGregorianChronology.java,20,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianChronology.java,18,mport org.joda.time.Chronology;
False,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianChronology.java,20,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java,33,"nt newYear = year + (int)iChronology.div(value, 12);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java,33,"int newYear = year + (int)TestGJChronology.div(value, 12);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java,43,"nt newMonth = get(millis) + (int)iChronology.mod(value, 12);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java,43,"int newMonth = get(millis) + (int)TestGJChronology.mod(value, 12);"
