is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,65,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,193,ateTimePrinter p = (DateTimePrinter)this;
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,194,DateTimePrinter p = (DateTimePrinter) this;
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,200,public String print(ReadablePartial partial) {
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,201,DateTimePrinter p = (DateTimePrinter) this;
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,202,StringBuffer buf = new StringBuffer(p.estimatePrintedLength());
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,203,"p.printTo(buf, partial);"
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,204,return buf.toString();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,72,import org.joda.time.partial.ReadablePartial;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,708,"public void printTo(StringBuffer buf, ReadablePartial instant) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,709,"mPrinter.printTo(buf, instant);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,712,"public void printTo(Writer out, ReadablePartial instant) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,713,"mPrinter.printTo(out, instant);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,732,public String print(ReadablePartial partial) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,733,return mPrinter.print(partial);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,832,"public void printTo(StringBuffer buf, ReadablePartial instant) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,833,throw unsupported();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,836,"public void printTo(Writer out, ReadablePartial instant) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,837,throw unsupported();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,856,public String print(ReadablePartial partial) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,857,throw unsupported();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,67,import org.joda.time.partial.ReadablePartial;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,979,"protected void appendUnknownString(StringBuffer buf, int len) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,980,for (int i = len; --i >= 0;) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,981,buf.append('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,985,"protected void printUnknownString(Writer out, int len) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,986,for (int i = len; --i >= 0;) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,987,out.write('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1016,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1017,buf.append(iValue);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1020,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1021,out.write(iValue);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1028,public String print(ReadablePartial partial) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1029,return String.valueOf(iValue);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1084,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1085,buf.append(iValue);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1088,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1089,out.write(iValue);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1096,public String print(ReadablePartial partial) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1097,return iValue;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1216,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1217,if (partial.isSupported(iField)) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1218,try {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1219,"FormatUtils.appendUnpaddedInteger(buf, partial.get(iField));"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1220,} catch (RuntimeException e) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1221,buf.append('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1223,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1224,buf.append('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1228,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1229,if (partial.isSupported(iField)) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1230,try {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1231,"FormatUtils.writeUnpaddedInteger(out, partial.get(iField));"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1232,} catch (RuntimeException e) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1233,out.write('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1235,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1236,out.write('\ufffd');
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1198,ormatUtils.appendPaddedInteger
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1199,"buf, iField.get(instantLocal), iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1259,"FormatUtils.appendPaddedInteger(buf, iField.get(instantLocal), iMinPrintedDigits);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1201,or (int i=iMinPrintedDigits; --i>=0; ) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1202,uf.append('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1261,"appendUnknownString(buf, iMinPrintedDigits);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1210,ormatUtils.writePaddedInteger
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1211,"out, iField.get(instantLocal), iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1268,"FormatUtils.writePaddedInteger(out, iField.get(instantLocal), iMinPrintedDigits);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1213,or (int i=iMinPrintedDigits; --i>=0; ) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1214,ut.write('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1270,"printUnknownString(out, iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1274,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1275,if (partial.isSupported(iField)) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1276,try {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1277,"FormatUtils.appendPaddedInteger(buf, partial.get(iField), iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1278,} catch (RuntimeException e) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1279,"appendUnknownString(buf, iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1281,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1282,"appendUnknownString(buf, iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1286,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1287,if (partial.isSupported(iField)) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1288,try {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1289,"FormatUtils.writePaddedInteger(out, partial.get(iField), iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1290,} catch (RuntimeException e) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1291,"printUnknownString(out, iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1293,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1294,"printUnknownString(out, iMinPrintedDigits);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1386,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1387,int year = getTwoDigitYear(partial);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1388,if (year < 0) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1389,buf.append('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1390,buf.append('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1391,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1392,"FormatUtils.appendPaddedInteger(buf, year, 2);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1396,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1397,int year = getTwoDigitYear(partial);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1398,if (year < 0) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1399,out.write('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1400,out.write('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1401,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1402,"FormatUtils.writePaddedInteger(out, year, 2);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1406,private int getTwoDigitYear(ReadablePartial partial) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1407,if (partial.isSupported(iField)) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1408,try {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1409,int year = partial.get(iField);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1410,if (year < 0) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1411,year = -year;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1413,return year % 100;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1414,} catch (RuntimeException e) {}
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1416,return -1;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1465,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1466,try {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1467,buf.append(print(partial));
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1468,} catch (RuntimeException e) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1469,buf.append('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1473,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1474,try {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1475,out.write(print(partial));
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1476,} catch (RuntimeException e) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1477,out.write('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1489,public final String print(ReadablePartial partial) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1490,if (partial.isSupported(iField)) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1491,if (iShort) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1492,"return iField.getAsShortText(partial, iLocale);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1493,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1494,"return iField.getAsText(partial, iLocale);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1496,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1497,"return ""\ufffd"";"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1606,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1607,if (partial.isSupported(iField)) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1608,"long millis = partial.resolve(0L, DateTimeZone.UTC);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1609,try {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1610,"printTo(buf, null, millis);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1611,} catch (IOException e) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1612,// Not gonna happen.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1614,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1615,buf.append('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1619,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1620,if (partial.isSupported(iField)) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1621,"long millis = partial.resolve(0L, DateTimeZone.UTC);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1622,"printTo(null, out, millis);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1623,} else {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1624,out.write('\ufffd');
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1907,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1908,// no zone info
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1911,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1912,// no zone info
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2160,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2161,// no zone info
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2164,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2165,// no zone info
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2254,"public void printTo(StringBuffer buf, ReadablePartial partial) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2255,DateTimePrinter[] elements = iPrinters;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2256,if (elements == null) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2257,throw new UnsupportedOperationException();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2260,int len = elements.length;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2261,for (int i=0; i<len; i++) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2262,"elements[i].printTo(buf, partial);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2266,"public void printTo(Writer out, ReadablePartial partial) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2267,DateTimePrinter[] elements = iPrinters;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2268,if (elements == null) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2269,throw new UnsupportedOperationException();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2272,int len = elements.length;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2273,for (int i=0; i<len; i++) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2274,"elements[i].printTo(out, partial);"
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,62,import org.joda.time.partial.ReadablePartial;
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,176,* Prints a ReadablePartial.
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,178,* @param buf  formatted partial is appended to this buffer
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,179,* @param partial  partial to format
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,181,"void printTo(StringBuffer buf, ReadablePartial partial);"
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,184,* Prints a ReadablePartial.
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,186,* @param out  formatted partial is written out
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,187,* @param partial  partial to format
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,189,"void printTo(Writer out, ReadablePartial partial) throws IOException;"
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,232,* Prints a ReadablePartial to a new String.
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,234,* @param partial  partial to format
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,235,* @return the printed result
True,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,JodaTime/src/java/org/joda/time/format/DateTimePrinter.java,237,String print(ReadablePartial partial);
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,154,"se, // fractionOfSecond element (.SSS)"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,154,"lse, // millisOfSecond element (.SSS)"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,155,"fse, // fractionOfSecond element (.SSSSSSSSS)"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,169,"hmsl, // hour minute second millis"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,175,"dhmsl, // date hour minute second millis"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,180,"tt,  // Ttime"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,188,"btt, // basic Ttime"
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,423,append(hourMinuteSecondFraction())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,428,.append(hourMinuteSecondMillis())
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,431," Returns a formatter that combines a full date and time, separated by a"
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,432, 'T'. (yyyy-MM-dd'T'HH:mm:ss.SSSZ)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,436,"* Returns a formatter for a two digit hour of day, two digit minute of"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,437,"* hour, two digit second of minute, three digit fraction of second, and"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,438,* time zone offset prefixed by 'T'. ('T'HH:mm:ss.SSSZ)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,439,"* The time zone offset is 'Z' for zero, and of the form '\u00b1HH:mm' for non-zero."
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,441,public DateTimeFormatter tTime() {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,442,if (t == null) {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,443,t = new DateTimeFormatterBuilder(iChrono)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,444,.appendLiteral('T')
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,445,.append(time())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,446,.toFormatter();
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,448,return t;
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,452,"* Returns a formatter that combines a full date and time, separated by a 'T'."
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,453,* (yyyy-MM-dd'T'HH:mm:ss.SSSZ)
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,438,appendLiteral('T')
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,439,append(time())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,459,.append(tTime())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,522,"* Returns a basic formatter for a two digit hour of day, two digit minute"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,523,"* of hour, two digit second of minute, and time zone offset prefixed by 'T'."
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,524,* ('T'HHmmssZ)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,525,"* The time zone offset is blank for zero, and of the form '\u00b1HHmm' for non-zero."
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,527,public DateTimeFormatter basicTTime() {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,528,if (bt == null) {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,529,bt = new DateTimeFormatterBuilder(iChrono)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,530,.appendLiteral('T')
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,531,.append(basicTime())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,532,.toFormatter();
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,534,return bt;
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,509,appendLiteral('T')
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,510,append(basicTime())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,545,.append(basicTTime())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,692,"* Returns a formatter for a two digit hour of day, two digit minute of"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,693,"* hour, two digit second of minute, and three digit fraction of"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,694,* second. (HH:mm:ss.SSS)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,696,public DateTimeFormatter hourMinuteSecondMillis() {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,697,if (hmsl == null) {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,698,hmsl = new DateTimeFormatterBuilder(iChrono)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,699,.append(hourElement())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,700,.append(minuteElement())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,701,.append(secondElement())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,702,.append(millisElement())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,703,.toFormatter();
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,705,return hmsl;
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,772,"* Returns a formatter that combines a full date, two digit hour of day,"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,773,"* two digit minute of hour, two digit second of minute, and three digit"
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,774,* fraction of second. (yyyy-MM-dd'T'HH:mm:ss.SSS)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,776,public DateTimeFormatter dateHourMinuteSecondMillis() {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,777,if (dhmsl == null) {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,778,dhmsl = new DateTimeFormatterBuilder(iChrono)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,779,.append(date())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,780,.appendLiteral('T')
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,781,.append(hourMinuteSecondMillis())
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,782,.toFormatter();
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,784,return dhmsl;
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,901,private DateTimeFormatter millisElement() {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,902,if (lse == null) {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,903,lse = new DateTimeFormatterBuilder(iChrono)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,904,.appendLiteral('.')
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,905,.appendMillisOfSecond(3)
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,906,.toFormatter();
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,908,return lse;
False,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,486, Output the time in an ISO8601 format.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,488, @return ISO8601 formatted string
False,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,490,ublic String toString() {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,491,/ TODO
False,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,492,"eturn """";"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,61,import org.joda.time.format.ISODateTimeFormat;
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,413,* Output the time in the ISO8601 format THH:mm:ss.SSS.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,415,* @return ISO8601 formatted string
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,417,public String toString() {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,418,return ISODateTimeFormat.getInstanceUTC().tTime().print(this);
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,61,import org.joda.time.format.ISODateTimeFormat;
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,325,* Output the time in the ISO8601 format YYYY-MM-DD.
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,327,* @return ISO8601 formatted string
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,329,public String toString() {
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,330,return ISODateTimeFormat.getInstanceUTC().yearMonthDay().print(this);
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,806,/ TODO
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,806,"TimeOfDay test = new TimeOfDay(10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,807,"assertEquals(""T10:20:30.040"", test.toString());"
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,604,/ TODO
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,604,"YearMonthDay test = new YearMonthDay(1972, 6, 9);"
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,605,"assertEquals(""1972-06-09"", test.toString());"
