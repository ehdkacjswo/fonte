is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,58,mport org.joda.time.base.*;
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,59,mport org.joda.time.convert.ConverterManager;
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,60,mport org.joda.time.convert.DurationConverter;
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,58,import org.joda.time.base.BaseDuration;
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,77,ublic class Duration
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,78,xtends AbstractDuration
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,75,public final class Duration
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,76,extends BaseDuration
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,87,** The duration length */
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,88,rivate final long iMillis;
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,96,uper();
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,97,Millis = duration;
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,91,super(duration);
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,108,uper();
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,109,"Millis = FieldUtils.safeAdd(endInstant, -startInstant);"
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,102,"super(startInstant, endInstant);"
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,120,uper();
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,121,f (start == end) {
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,122,Millis = 0L;
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,123, else {
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,124,ong startMillis = DateTimeUtils.getInstantMillis(start);
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,125,ong endMillis = DateTimeUtils.getInstantMillis(end);
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,126,"Millis = FieldUtils.safeAdd(endMillis, -startMillis);"
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,113,"super(start, end);"
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,138,uper();
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,139,urationConverter converter = ConverterManager.getInstance().getDurationConverter(duration);
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,140,Millis = converter.getDurationMillis(duration);
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,145, Gets the total length of this duration in milliseconds.
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,147, @return the total length of the duration in milliseconds.
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,149,ublic final long getMillis() {
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,150,eturn iMillis;
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,124,super(duration);
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,160,ublic final Duration withMillis(long duration) {
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,134,public Duration withMillis(long duration) {
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,175,ublic final Duration withDurationAdded(long durationToAdd) {
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,149,public Duration withDurationAdded(long durationToAdd) {
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,188,"ublic final Duration withDurationAdded(long durationToAdd, int scalar) {"
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,162,"public Duration withDurationAdded(long durationToAdd, int scalar) {"
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,205,ublic final Duration withDurationAdded(ReadableDuration durationToAdd) {
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,179,public Duration withDurationAdded(ReadableDuration durationToAdd) {
False,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,221,"ublic final Duration withDurationAdded(ReadableDuration durationToAdd, int scalar) {"
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,195,"public Duration withDurationAdded(ReadableDuration durationToAdd, int scalar) {"
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,92,ublic final Duration toDuration() {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,92,public Duration toDuration() {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,126,ublic final Period toPeriod() {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,126,public Period toPeriod() {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,148,ublic final Period toPeriod(PeriodType type) {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,148,public Period toPeriod(PeriodType type) {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,161,ublic final int compareTo(Object obj) {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,161,public int compareTo(Object obj) {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,185,ublic final boolean isEqual(ReadableDuration duration) {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,185,public boolean isEqual(ReadableDuration duration) {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,198,ublic final boolean isLongerThan(ReadableDuration duration) {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,198,public boolean isLongerThan(ReadableDuration duration) {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,211,ublic final boolean isShorterThan(ReadableDuration duration) {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,211,public boolean isShorterThan(ReadableDuration duration) {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,226,ublic final boolean equals(Object duration) {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,226,public boolean equals(Object duration) {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,238, Gets a hash code for the duration that is compatable with the
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,238,* Gets a hash code for the duration that is compatible with the
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,243,ublic final int hashCode() {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,243,public int hashCode() {
False,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,260,ublic final String toString() {
True,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,JodaTime/src/java/org/joda/time/base/AbstractDuration.java,260,public String toString() {
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,6,* All rights reserved.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,10,* are met:
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,18,*    distribution.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,33,*    permission of the Joda project.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,46,* SUCH DAMAGE.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,54,package org.joda.time.base;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,56,import java.io.Serializable;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,58,import org.joda.time.DateTimeUtils;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,59,import org.joda.time.ReadableDuration;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,60,import org.joda.time.ReadableInstant;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,61,import org.joda.time.convert.ConverterManager;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,62,import org.joda.time.convert.DurationConverter;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,63,import org.joda.time.field.FieldUtils;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,66,* BaseDateTime is an abstract implementation of ReadableDuration that stores
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,67,* data in a <code>long</code> duration milliseconds field.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,68,* <p>
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,69,* This class should generally not be used directly by API users.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,70,* The {@link ReadableDateTime} interface should be used when different
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,71,* kinds of date/time objects are to be referenced.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,72,* <p>
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,73,* BaseDateTime subclasses may be mutable and not thread-safe.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,75,* @author Brian S O'Neill
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,76,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,77,* @since 1.0
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,79,public class BaseDuration
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,80,extends AbstractDuration
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,81,"implements ReadableDuration, Serializable {"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,83,/** Serialization version */
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,84,private static final long serialVersionUID = 2581698638990L;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,86,/** The duration length */
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,87,private long iMillis;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,90,* Creates a duration from the given millisecond duration.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,92,"* @param duration  the duration, in milliseconds"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,94,public BaseDuration(long duration) {
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,95,super();
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,96,iMillis = duration;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,100,* Creates a duration from the given interval endpoints.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,102,"* @param startInstant  interval start, in milliseconds"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,103,"* @param endInstant  interval end, in milliseconds"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,104,* @throws ArithmeticException if the duration exceeds a 64 bit long
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,106,"public BaseDuration(long startInstant, long endInstant) {"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,107,super();
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,108,"iMillis = FieldUtils.safeAdd(endInstant, -startInstant);"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,112,* Creates a duration from the given interval endpoints.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,114,"* @param start  interval start, null means now"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,115,"* @param end  interval end, null means now"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,116,* @throws ArithmeticException if the duration exceeds a 64 bit long
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,118,"public BaseDuration(ReadableInstant start, ReadableInstant end) {"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,119,super();
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,120,if (start == end) {
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,121,iMillis = 0L;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,122,} else {
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,123,long startMillis = DateTimeUtils.getInstantMillis(start);
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,124,long endMillis = DateTimeUtils.getInstantMillis(end);
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,125,"iMillis = FieldUtils.safeAdd(endMillis, -startMillis);"
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,130,* Creates a duration from the specified object using the
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,131,* {@link org.joda.time.convert.ConverterManager ConverterManager}.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,133,* @param duration  duration to convert
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,134,* @throws IllegalArgumentException if duration is invalid
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,136,public BaseDuration(Object duration) {
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,137,super();
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,138,DurationConverter converter = ConverterManager.getInstance().getDurationConverter(duration);
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,139,iMillis = converter.getDurationMillis(duration);
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,144,* Gets the length of this duration in milliseconds.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,146,* @return the length of the duration in milliseconds.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,148,public long getMillis() {
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,149,return iMillis;
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,154,* Sets the length of this duration in milliseconds.
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,156,* @param duration  the new length of the duration
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,158,public void setMillis(long duration) {
True,JodaTime/src/java/org/joda/time/base/BaseDuration.java,JodaTime/src/java/org/joda/time/base/BaseDuration.java,159,iMillis = duration;
