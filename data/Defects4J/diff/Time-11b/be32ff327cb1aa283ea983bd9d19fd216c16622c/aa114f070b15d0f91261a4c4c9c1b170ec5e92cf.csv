is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/field/TestAll.java,JodaTime/src/test/org/joda/time/field/TestAll.java,55,suite.addTest(TestUnsupportedDateTimeField.suite());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,2,*  Copyright 2001-2006 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,16,package org.joda.time.field;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,18,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,20,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,21,import org.joda.time.DateTimeField;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,22,import org.joda.time.DateTimeFieldType;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,23,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,24,import org.joda.time.DurationFieldType;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,25,import org.joda.time.LocalTime;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,26,import org.joda.time.ReadablePartial;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,27,import org.joda.time.chrono.GregorianChronology;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,28,import org.joda.time.chrono.IslamicChronology;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,30,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,31,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,34,* This class is a JUnit test to test only the UnsupportedDateTimeField class.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,35,* This set of test cases exercises everything described in the Javadoc for this
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,36,* class.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,38,* @author Jeremy R. Rickard
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,40,public class TestUnsupportedDateTimeField extends TestCase {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,42,private DurationFieldType weeks;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,43,private DurationFieldType months;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,44,private DateTimeFieldType dateTimeFieldTypeOne;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,45,private ReadablePartial localTime;
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,47,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,48,return new TestSuite(TestUnsupportedDateTimeField.class);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,51,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,52,weeks = DurationFieldType.weeks();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,53,months = DurationFieldType.months();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,54,dateTimeFieldTypeOne = DateTimeFieldType.centuryOfEra();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,55,localTime = new LocalTime();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,59,* Passing null values into UnsupportedDateTimeField.getInstance() should
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,60,* throw an IllegalArguementsException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,62,public void testNullValuesToGetInstanceThrowsException() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,64,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,65,"UnsupportedDateTimeField.getInstance(null, null);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,66,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,67,} catch (IllegalArgumentException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,68,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,74,* This test exercises the logic in UnsupportedDateTimeField.getInstance. If
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,75,* getInstance() is invoked twice with: - the same DateTimeFieldType -
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,76,* different duration fields
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,78,* Then the field returned in the first invocation should not be equal to
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,79,"* the field returned by the second invocation. In otherwords, the generated"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,80,* instance should be the same for a unique pairing of
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,81,* DateTimeFieldType/DurationField
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,83,public void testDifferentDurationReturnDifferentObjects() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,86,* The fields returned by getInstance should be the same when the
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,87,* duration is the same for both method calls.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,89,DateTimeField fieldOne = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,90,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,91,.getInstance(weeks));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,92,DateTimeField fieldTwo = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,93,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,94,.getInstance(weeks));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,95,"assertSame(fieldOne, fieldTwo);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,98,* The fields returned by getInstance should NOT be the same when the
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,99,* duration is the same for both method calls.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,101,DateTimeField fieldThree = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,102,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,103,.getInstance(months));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,104,"assertNotSame(fieldOne, fieldThree);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,108,* The getName() method should return the same value as the getName() method
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,109,* of the DateTimeFieldType that was used to create the instance.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,112,public void testPublicGetNameMethod() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,113,DateTimeField fieldOne = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,114,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,115,.getInstance(weeks));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,117,"assertSame(fieldOne.getName(), dateTimeFieldTypeOne.getName());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,121,"* As this is an unsupported date/time field, some normal methods will"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,122,"* always return false, as they are not supported. Verify that each method"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,123,* correctly returns null.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,125,public void testAlwaysFalseReturnTypes() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,126,DateTimeField fieldOne = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,127,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,128,.getInstance(weeks));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,129,assertFalse(fieldOne.isLenient());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,130,assertFalse(fieldOne.isSupported());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,134,"* According to the JavaDocs, there are two methods that should always"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,135,* return null. * getRangeDurationField() * getLeapDurationField()
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,137,* Ensure that these are in fact null.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,140,public void testMethodsThatShouldAlwaysReturnNull() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,141,DateTimeField fieldOne = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,142,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,143,.getInstance(weeks));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,145,assertNull(fieldOne.getLeapDurationField());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,146,assertNull(fieldOne.getRangeDurationField());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,150,"* As this is an unsupported date/time field, many normal methods are"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,151,* unsupported and throw an UnsupportedOperationException. Verify that each
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,152,"* method correctly throws this exception. * add(ReadablePartial instant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,153,"* int fieldIndex, int[] values, int valueToAdd) * addWrapField(long"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,154,"* instant, int value) * addWrapField(ReadablePartial instant, int"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,155,"* fieldIndex, int[] values, int valueToAdd) *"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,156,"* addWrapPartial(ReadablePartial instant, int fieldIndex, int[] values, int"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,157,"* valueToAdd) * get(long instant) * getAsShortText(int fieldValue, Locale"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,158,"* locale) * getAsShortText(long instant) * getAsShortText(long instant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,159,"* Locale locale) * getAsShortText(ReadablePartial partial, int fieldValue,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,160,"* Locale locale) * getAsShortText(ReadablePartial partial, Locale locale) *"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,161,"* getAsText(int fieldValue, Locale locale) * getAsText(long instant) *"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,162,"* getAsText(long instant, Locale locale) * getAsText(ReadablePartial"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,163,"* partial, int fieldValue, Locale locale) * getAsText(ReadablePartial"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,164,"* partial, Locale locale) * getLeapAmount(long instant) *"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,165,* getMaximumShortTextLength(Locale locale) * getMaximumTextLength(Locale
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,166,* locale) * getMaximumValue() * getMaximumValue(long instant) *
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,167,* getMaximumValue(ReadablePartial instant) *
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,168,"* getMaximumValue(ReadablePartial instant, int[] values) *"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,169,* getMinimumValue() * getMinimumValue(long instant) *
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,170,* getMinimumValue(ReadablePartial instant) *
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,171,"* getMinimumValue(ReadablePartial instant, int[] values) * isLeap(long"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,172,* instant) * remainder(long instant) * roundCeiling(long instant) *
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,173,* roundFloor(long instant) * roundHalfCeiling(long instant) *
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,174,* roundHalfEven(long instant) * roundHalfFloor(long instant) * set(long
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,175,"* instant, int value) * set(long instant, String text) * set(long instant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,176,"* String text, Locale locale) * set(ReadablePartial instant, int"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,177,"* fieldIndex, int[] values, int newValue) * set(ReadablePartial instant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,178,"* int fieldIndex, int[] values, String text, Locale locale)"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,180,public void testUnsupportedMethods() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,181,DateTimeField fieldOne = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,182,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,183,.getInstance(weeks));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,185,"// add(ReadablePartial instant, int fieldIndex, int[] values, int"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,186,// valueToAdd)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,187,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,188,"fieldOne.add(localTime, 0, new int[] { 0, 100 }, 100);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,189,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,190,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,191,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,193,"// addWrapField(long instant, int value)"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,194,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,195,"fieldOne.addWrapField(100000L, 250);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,196,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,197,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,198,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,200,"// addWrapField(ReadablePartial instant, int fieldIndex, int[] values,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,201,// int valueToAdd)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,202,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,203,"fieldOne.addWrapField(localTime, 0, new int[] { 0, 100 }, 100);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,204,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,205,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,206,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,208,"// addWrapPartial(ReadablePartial instant, int fieldIndex, int[] values,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,209,// int valueToAdd)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,210,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,211,"fieldOne.addWrapPartial(localTime, 0, new int[] { 0, 100 }, 100);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,212,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,213,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,214,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,216,// UnsupportedDateTimeField.get(long instant)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,217,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,218,fieldOne.get(1000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,219,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,220,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,221,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,224,"// UnsupportedDateTimeField.getAsShortText(int fieldValue,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,225,// Locale locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,226,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,227,"fieldOne.getAsShortText(0, Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,228,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,229,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,230,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,233,// UnsupportedDateTimeField.getAsShortText(long instant)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,234,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,235,fieldOne.getAsShortText(100000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,236,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,237,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,238,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,241,"// UnsupportedDateTimeField.getAsShortText(long instant, Locale locale)"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,242,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,243,"fieldOne.getAsShortText(100000L, Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,244,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,245,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,246,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,249,"// UnsupportedDateTimeField.getAsShortText(ReadablePartial partial,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,250,"// int fieldValue,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,251,// Locale locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,252,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,253,"fieldOne.getAsShortText(localTime, 0, Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,254,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,255,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,256,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,259,"// UnsupportedDateTimeField.getAsShortText(ReadablePartial partial,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,260,// Locale locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,261,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,262,"fieldOne.getAsShortText(localTime, Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,263,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,264,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,265,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,268,"// UnsupportedDateTimeField.getAsText(int fieldValue,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,269,// Locale locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,270,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,271,"fieldOne.getAsText(0, Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,272,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,273,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,274,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,277,// UnsupportedDateTimeField.getAsText(long instant)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,278,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,279,fieldOne.getAsText(1000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,280,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,281,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,282,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,285,"// UnsupportedDateTimeField.getAsText(long instant, Locale locale)"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,286,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,287,"fieldOne.getAsText(1000L, Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,288,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,289,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,290,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,293,"// UnsupportedDateTimeField.getAsText(ReadablePartial partial,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,294,"// int fieldValue,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,295,// Locale locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,296,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,297,"fieldOne.getAsText(localTime, 0, Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,298,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,299,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,300,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,303,"// UnsupportedDateTimeField.getAsText(ReadablePartial partial,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,304,// Locale locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,305,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,306,"fieldOne.getAsText(localTime, Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,307,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,308,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,309,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,312,// UnsupportedDateTimeField.getLeapAmount(long instant) is unsupported
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,313,// and should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,314,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,315,fieldOne.getLeapAmount(System.currentTimeMillis());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,316,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,317,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,318,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,321,// UnsupportedDateTimeField.getMaximumShortTextLength(Locale locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,322,// is unsupported and should always thrown an
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,323,// UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,324,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,325,fieldOne.getMaximumShortTextLength(Locale.getDefault());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,326,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,327,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,328,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,331,// UnsupportedDateTimeField.getMaximumTextLength(Locale locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,332,// is unsupported and should always thrown an
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,333,// UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,334,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,335,fieldOne.getMaximumTextLength(Locale.getDefault());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,336,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,337,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,338,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,341,// UnsupportedDateTimeField.getMaximumValue() is unsupported
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,342,// and should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,343,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,344,fieldOne.getMaximumValue();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,345,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,346,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,347,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,350,// UnsupportedDateTimeField.getMaximumValue(long instant)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,351,// is unsupported and should always thrown an
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,352,// UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,353,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,354,fieldOne.getMaximumValue(1000000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,355,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,356,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,357,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,360,// UnsupportedDateTimeField.getMaximumValue(ReadablePartial instant)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,361,// is unsupported and should always thrown an
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,362,// UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,363,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,364,fieldOne.getMaximumValue(localTime);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,365,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,366,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,367,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,370,"// UnsupportedDateTimeField.getMaximumValue(ReadablePartial instant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,371,// int[] values)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,372,// is unsupported and should always thrown an
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,373,// UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,374,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,375,"fieldOne.getMaximumValue(localTime, new int[] { 0 });"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,376,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,377,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,378,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,381,// UnsupportedDateTimeField.getMinumumValue() is unsupported
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,382,// and should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,383,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,384,fieldOne.getMinimumValue();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,385,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,386,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,387,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,390,// UnsupportedDateTimeField.getMinumumValue(long instant) is unsupported
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,391,// and should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,392,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,393,fieldOne.getMinimumValue(10000000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,394,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,395,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,396,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,399,// UnsupportedDateTimeField.getMinumumValue(ReadablePartial instant)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,400,// is unsupported and should always thrown an
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,401,// UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,402,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,403,fieldOne.getMinimumValue(localTime);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,404,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,405,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,406,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,409,"// UnsupportedDateTimeField.getMinumumValue(ReadablePartial instant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,410,// int[] values) is unsupported
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,411,// and should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,412,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,413,"fieldOne.getMinimumValue(localTime, new int[] { 0 });"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,414,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,415,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,416,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,419,// UnsupportedDateTimeField.isLeap(long instant) is unsupported and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,420,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,421,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,422,fieldOne.isLeap(System.currentTimeMillis());
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,423,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,424,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,425,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,428,// UnsupportedDateTimeField.remainder(long instant) is unsupported and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,429,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,430,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,431,fieldOne.remainder(1000000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,432,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,433,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,434,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,437,// UnsupportedDateTimeField.roundCeiling(long instant) is unsupported
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,438,// and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,439,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,440,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,441,fieldOne.roundCeiling(1000000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,442,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,443,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,444,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,447,// UnsupportedDateTimeField.roundFloor(long instant) is unsupported and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,448,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,449,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,450,fieldOne.roundFloor(1000000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,451,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,452,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,453,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,456,// UnsupportedDateTimeField.roundHalfCeiling(long instant) is
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,457,// unsupported and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,458,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,459,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,460,fieldOne.roundHalfCeiling(1000000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,461,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,462,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,463,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,466,// UnsupportedDateTimeField.roundHalfEven(long instant) is unsupported
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,467,// and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,468,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,469,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,470,fieldOne.roundHalfEven(1000000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,471,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,472,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,473,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,476,// UnsupportedDateTimeField.roundHalfFloor(long instant) is unsupported
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,477,// and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,478,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,479,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,480,fieldOne.roundHalfFloor(1000000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,481,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,482,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,483,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,486,"// UnsupportedDateTimeField.set(long instant, int value) is unsupported"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,487,// and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,488,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,489,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,490,"fieldOne.set(1000000L, 1000);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,491,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,492,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,493,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,496,"// UnsupportedDateTimeField.set(long instant, String test) is"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,497,// unsupported and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,498,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,499,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,500,"fieldOne.set(1000000L, ""Unsupported Operation"");"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,501,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,502,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,503,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,506,"// UnsupportedDateTimeField.set(long instant, String text, Locale"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,507,// locale)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,508,// is unsupported and should always thrown an
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,509,// UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,510,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,511,fieldOne
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,512,".set(1000000L, ""Unsupported Operation"", Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,513,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,514,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,515,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,518,"// UnsupportedDateTimeField.set(ReadablePartial instant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,519,"// int fieldIndex,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,520,"// int[] values,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,521,// int newValue) is unsupported and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,522,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,523,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,524,"fieldOne.set(localTime, 0, new int[] { 0 }, 10000);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,525,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,526,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,527,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,530,"// UnsupportedDateTimeField.set(ReadablePartial instant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,531,"// int fieldIndex,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,532,"// int[] values,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,533,"// String text,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,534,// Locale locale) is unsupported and
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,535,// should always thrown an UnsupportedOperationException
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,536,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,537,"fieldOne.set(localTime, 0, new int[] { 0 },"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,538,"""Unsupported Operation"", Locale.getDefault());"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,539,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,540,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,541,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,546,"* As this is an unsupported date/time field, many normal methods are"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,547,* unsupported. Some delegate and can possibly throw an
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,548,* UnsupportedOperationException or have a valid return. Verify that each
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,549,* method correctly throws this exception when appropriate and delegates
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,550,* correctly based on the Duration used to get the instance.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,552,public void testDelegatedMethods() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,553,DateTimeField fieldOne = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,554,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,555,.getInstance(weeks));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,556,PreciseDurationField hoursDuration = new PreciseDurationField(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,557,"DurationFieldType.hours(), 10L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,558,DateTimeField fieldTwo = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,559,"dateTimeFieldTypeOne, hoursDuration);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,561,"// UnsupportedDateTimeField.add(long instant, int value) should"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,562,// throw an UnsupportedOperationException when the duration does
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,563,"// not support the operation, otherwise it delegates to the duration."
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,564,// First
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,565,"// try it with an UnsupportedDurationField, then a PreciseDurationField."
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,566,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,567,"fieldOne.add(System.currentTimeMillis(), 100);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,568,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,569,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,570,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,572,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,573,long currentTime = System.currentTimeMillis();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,574,"long firstComputation = hoursDuration.add(currentTime, 100);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,575,"long secondComputation = fieldTwo.add(currentTime,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,576,100);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,577,System.out.println(firstComputation);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,578,System.out.println(secondComputation);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,579,"assertEquals(firstComputation,secondComputation);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,580,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,581,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,584,"// UnsupportedDateTimeField.add(long instant, long value) should"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,585,// throw an UnsupportedOperationException when the duration does
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,586,"// not support the operation, otherwise it delegates to the duration."
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,587,// First
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,588,"// try it with an UnsupportedDurationField, then a PreciseDurationField."
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,589,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,590,"fieldOne.add(System.currentTimeMillis(), 1000L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,591,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,592,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,593,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,596,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,597,long currentTime = System.currentTimeMillis();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,598,"long firstComputation = hoursDuration.add(currentTime, 1000L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,599,"long secondComputation = fieldTwo.add(currentTime,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,600,1000L);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,601,assertTrue(firstComputation == secondComputation);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,602,"assertEquals(firstComputation,secondComputation);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,603,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,604,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,607,"// UnsupportedDateTimeField.getDifference(long minuendInstant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,608,// long subtrahendInstant)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,609,// should throw an UnsupportedOperationException when the duration does
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,610,"// not support the operation, otherwise return the result from the"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,611,// delegated call.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,612,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,614,"fieldOne.getDifference(100000L, 1000L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,615,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,616,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,617,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,620,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,621,"int firstDifference = hoursDuration.getDifference(100000L, 1000L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,622,"int secondDifference = fieldTwo.getDifference(100000L, 1000L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,623,"assertEquals(firstDifference,secondDifference);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,624,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,625,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,628,"// UnsupportedDateTimeField.getDifferenceAsLong(long minuendInstant,"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,629,// long subtrahendInstant)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,630,// should throw an UnsupportedOperationException when the duration does
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,631,"// not support the operation, otherwise return the result from the"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,632,// delegated call.
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,633,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,635,"fieldOne.getDifferenceAsLong(100000L, 1000L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,636,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,637,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,638,assertTrue(true);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,641,try {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,642,"long firstDifference = hoursDuration.getDifference(100000L, 1000L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,643,"long secondDifference = fieldTwo.getDifference(100000L, 1000L);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,644,"assertEquals(firstDifference,secondDifference);"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,645,} catch (UnsupportedOperationException e) {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,646,assertTrue(false);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,651,* The toString method should return a suitable debug message (not null).
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,652,* Ensure that the toString method returns a string with length greater than
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,653,* 0 (and not null)
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,656,public void testToString() {
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,657,DateTimeField fieldOne = UnsupportedDateTimeField.getInstance(
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,658,"dateTimeFieldTypeOne, UnsupportedDurationField"
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,659,.getInstance(weeks));
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,661,String debugMessage = fieldOne.toString();
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,662,assertNotNull(debugMessage);
True,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java,663,assertTrue(debugMessage.length() > 0);
