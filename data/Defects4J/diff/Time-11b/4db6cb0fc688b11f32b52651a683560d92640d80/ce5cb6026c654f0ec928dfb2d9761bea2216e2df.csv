is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,19,mport java.io.DataInputStream;
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,193, @param zimap gets filled with string id to string id mappings
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,195,"tatic void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {"
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,196,/ Read the string pool.
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,197,nt size = din.readUnsignedShort();
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,198,tring[] pool = new String[size];
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,199,or (int i=0; i<size; i++) {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,200,ool[i] = din.readUTF().intern();
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,203,/ Read the mappings.
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,204,ize = din.readUnsignedShort();
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,205,or (int i=0; i<size; i++) {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,206,ry {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,207,"imap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);"
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,208, catch (ArrayIndexOutOfBoundsException e) {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,209,"hrow new IOException(""Corrupt zone info map"");"
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,41,rivate static Map loadZoneInfoMap(InputStream in) throws IOException {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,42,ap map = new TreeMap(String.CASE_INSENSITIVE_ORDER);
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,43,ataInputStream din = new DataInputStream(in);
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,44,ry {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,45,"oneInfoCompiler.readZoneInfoMap(din, map);"
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,46, finally {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,47,ry {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,48,in.close();
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,49, catch (IOException e) {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,52,"ap.put(""UTC"", new SoftReference(DateTimeZone.UTC));"
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,53,eturn map;
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,42,/** The directory where the files are held. */
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,44,/** The resource path. */
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,46,/** The class loader to use. */
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,60,/ Maps ids to strings or SoftReferences to DateTimeZones.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,48,/** Maps ids to strings or SoftReferences to DateTimeZones. */
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,132,* @param id  the id to load
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,133,* @return the loaded zone
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,164,* Gets a list of all the available zone ids.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,166,* @return the zone ids
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,176, Called if an exception is thrown from getZone while loading zone
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,177, data.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,173,* Called if an exception is thrown from getZone while loading zone data.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,175,* @param ex  the exception
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,179,rotected void uncaughtException(Exception e) {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,177,protected void uncaughtException(Exception ex) {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,181,".getThreadGroup().uncaughtException(t, e);"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,179,"t.getThreadGroup().uncaughtException(t, ex);"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,183,* Opens a resource from file or classpath.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,185,* @param name  the name to open
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,186,* @return the input stream
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,187,* @throws IOException if an error occurs
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,196,tringBuffer buf = new StringBuffer(40);
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,197,"uf.append(""Resource not found: \"""");"
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,198,uf.append(path);
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,199,"uf.append(""\"" ClassLoader: "");"
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,200,"uf.append(iLoader != null ? iLoader.toString() : ""system"");"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,201,StringBuffer buf = new StringBuffer(40)
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,202,".append(""Resource not found: \"""")"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,203,.append(path)
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,204,".append(""\"" ClassLoader: "")"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,205,".append(iLoader != null ? iLoader.toString() : ""system"");"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,213,* Loads the time zone data for one id.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,215,* @param id  the id to load
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,216,* @return the zone
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,241,* Loads the zone info map.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,243,* @param in  the input stream
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,244,* @return the map
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,246,private static Map loadZoneInfoMap(InputStream in) throws IOException {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,247,Map map = new TreeMap(String.CASE_INSENSITIVE_ORDER);
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,248,DataInputStream din = new DataInputStream(in);
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,249,try {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,250,"readZoneInfoMap(din, map);"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,251,} finally {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,252,try {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,253,din.close();
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,254,} catch (IOException e) {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,257,"map.put(""UTC"", new SoftReference(DateTimeZone.UTC));"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,258,return map;
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,262,* Reads the zone info map from file.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,264,* @param din  the input stream
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,265,* @param zimap  gets filled with string id to string id mappings
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,267,"private static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,268,// Read the string pool.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,269,int size = din.readUnsignedShort();
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,270,String[] pool = new String[size];
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,271,for (int i=0; i<size; i++) {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,272,pool[i] = din.readUTF().intern();
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,275,// Read the mappings.
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,276,size = din.readUnsignedShort();
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,277,for (int i=0; i<size; i++) {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,278,try {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,279,"zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,280,} catch (ArrayIndexOutOfBoundsException e) {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java,281,"throw new IOException(""Corrupt zone info map"");"
