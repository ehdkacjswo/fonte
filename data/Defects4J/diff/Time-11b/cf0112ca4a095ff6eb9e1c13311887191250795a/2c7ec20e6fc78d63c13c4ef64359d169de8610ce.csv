is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,5,* Copyright (c) 2001-2005 Stephen Colebourne.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,446, Gets a copy of this date with the specified field set to a new value.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,446,* Gets a copy of this time with the specified field set to a new value.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,464,f (value == 0) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,464,int index = indexOfSupported(fieldType);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,465,if (value == getValue(index)) {
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,467,nt index = indexOfSupported(fieldType);
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,474, Gets a copy of this date with the value of the specified field increased.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,474,"* Gets a copy of this time with the value of the specified field increased,"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,475,* wrapping to what would be a new day if required.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,480," TimeOfDay added = tod.withField(DateTimeFieldType.minuteOfHour(), 6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,481,"* TimeOfDay added = tod.withFieldAdded(DateTimeFieldType.minuteOfHour(), 6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,493,int index = indexOfSupported(fieldType);
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,495,nt index = indexOfSupported(fieldType);
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,497,"ewValues = getField(index).add(this, index, newValues, amount);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,498,"newValues = getField(index).addWrapPartial(this, index, newValues, amount);"
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,502, Gets a copy of this date with the specified period added.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,503,"* Gets a copy of this date with the specified period added,"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,504,* wrapping to what would be a new day if required.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,524,"ewValues = getField(index).add(this, index, newValues,"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,526,"newValues = getField(index).addWrapPartial(this, index, newValues,"
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,532, Gets a copy of this instance with the specified period added.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,534,"* Gets a copy of this instance with the specified period added,"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,535,* wrapping to what would be a new day if required.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,551, Gets a copy of this instance with the specified period take away.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,554,"* Gets a copy of this instance with the specified period take away,"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,555,* wrapping to what would be a new day if required.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,764, Adds to the value of this field in a copy of this TimeOfDay.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,768,"* Adds to the value of this field in a copy of this TimeOfDay,"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,769,* wrapping to what would be the next day if necessary.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,770," If the result would be too large, beyond 23:59:59:999, then an"
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,771, IllegalArgumentException is thrown.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,775,"* If the result would be too large, beyond 23:59:59:999, then the"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,776,* calculation wraps to 00:00:00.000. For the alternate strict behaviour
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,777,* with no wrapping see {@link #addNoWrapToCopy(int)}.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,787,int[] newValues = iTimeOfDay.getValues();
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,788,"newValues = getField().addWrapPartial(iTimeOfDay, iFieldIndex, newValues, valueToAdd);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,789,"return new TimeOfDay(iTimeOfDay, newValues);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,793,"* Adds to the value of this field in a copy of this TimeOfDay,"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,794,* throwing an Exception if the bounds are exceeded.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,795,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,796,* The value will be added to this field. If the value is too large to be
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,797,* added solely to this field then it will affect larger fields.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,798,* Smaller fields are unaffected.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,799,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,800,* If the result would be too large (beyond 23:59:59:999) or too
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,801,* small (less than 00:00:00.000) then an Execption is thrown.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,802,"* For the alternate behaviour which wraps to the next 'day',"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,803,* see {@link #addToCopy(int)}.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,804,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,805,* The TimeOfDay attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,806,"* Instead, a new instance is returned."
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,808,* @param valueToAdd  the value to add to the field in the copy
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,809,* @return a copy of the TimeOfDay with the field value changed
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,810,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,812,public TimeOfDay addNoWrapToCopy(int valueToAdd) {
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,5,* Copyright (c) 2001-2005 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,155,copy = test.hourOfDay().addToCopy(14);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,156,"check(copy, 0, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,158,copy = test.hourOfDay().addToCopy(-10);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,159,"check(copy, 0, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,161,copy = test.hourOfDay().addToCopy(-11);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,162,"check(copy, 23, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,165,public void testPropertyAddNoWrapHour() {
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,166,"TimeOfDay test = new TimeOfDay(10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,167,TimeOfDay copy = test.hourOfDay().addNoWrapToCopy(9);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,168,"check(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,169,"check(copy, 19, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,171,copy = test.hourOfDay().addNoWrapToCopy(0);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,172,"check(copy, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,174,copy = test.hourOfDay().addNoWrapToCopy(13);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,175,"check(copy, 23, 20, 30, 40);"
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,156,est.hourOfDay().addToCopy(14);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,178,test.hourOfDay().addNoWrapToCopy(14);
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,161,opy = test.hourOfDay().addToCopy(-10);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,183,copy = test.hourOfDay().addNoWrapToCopy(-10);
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,165,est.hourOfDay().addToCopy(-11);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,187,test.hourOfDay().addNoWrapToCopy(-11);
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,277,ry {
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,278,est.minuteOfHour().addToCopy(13 * 60 + 40);
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,279,ail();
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,280, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,281,"heck(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,299,copy = test.minuteOfHour().addToCopy(13 * 60 + 40);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,300,"check(copy, 0, 0, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,317,copy = test.minuteOfHour().addToCopy(-(10 * 60 + 21));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,318,"check(copy, 23, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,321,public void testPropertyAddNoWrapMinute() {
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,322,"TimeOfDay test = new TimeOfDay(10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,323,TimeOfDay copy = test.minuteOfHour().addNoWrapToCopy(9);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,324,"check(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,325,"check(copy, 10, 29, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,327,copy = test.minuteOfHour().addNoWrapToCopy(39);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,328,"check(copy, 10, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,330,copy = test.minuteOfHour().addNoWrapToCopy(40);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,331,"check(copy, 11, 0, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,333,copy = test.minuteOfHour().addNoWrapToCopy(1 * 60 + 45);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,334,"check(copy, 12, 5, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,336,copy = test.minuteOfHour().addNoWrapToCopy(13 * 60 + 39);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,337,"check(copy, 23, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,339,try {
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,340,test.minuteOfHour().addNoWrapToCopy(13 * 60 + 40);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,341,fail();
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,342,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,343,"check(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,345,copy = test.minuteOfHour().addNoWrapToCopy(-9);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,346,"check(copy, 10, 11, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,348,copy = test.minuteOfHour().addNoWrapToCopy(-19);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,349,"check(copy, 10, 1, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,351,copy = test.minuteOfHour().addNoWrapToCopy(-20);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,352,"check(copy, 10, 0, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,354,copy = test.minuteOfHour().addNoWrapToCopy(-21);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,355,"check(copy, 9, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,357,copy = test.minuteOfHour().addNoWrapToCopy(-(10 * 60 + 20));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,358,"check(copy, 0, 0, 30, 40);"
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,299,est.minuteOfHour().addToCopy(-(10 * 60 + 21));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,361,test.minuteOfHour().addNoWrapToCopy(-(10 * 60 + 21));
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,408,ry {
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,409,est.secondOfMinute().addToCopy(13 * 60 * 60 + 39 * 60 + 30);
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,410,ail();
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,411, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,412,"heck(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,470,copy = test.secondOfMinute().addToCopy(13 * 60 * 60 + 39 * 60 + 30);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,471,"check(copy, 0, 0, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,485,copy = test.secondOfMinute().addToCopy(-(10 * 60 * 60 + 20 * 60 + 31));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,486,"check(copy, 23, 59, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,489,public void testPropertyAddNoWrapSecond() {
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,490,"TimeOfDay test = new TimeOfDay(10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,491,TimeOfDay copy = test.secondOfMinute().addNoWrapToCopy(9);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,492,"check(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,493,"check(copy, 10, 20, 39, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,495,copy = test.secondOfMinute().addNoWrapToCopy(29);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,496,"check(copy, 10, 20, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,498,copy = test.secondOfMinute().addNoWrapToCopy(30);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,499,"check(copy, 10, 21, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,501,copy = test.secondOfMinute().addNoWrapToCopy(39 * 60 + 29);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,502,"check(copy, 10, 59, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,504,copy = test.secondOfMinute().addNoWrapToCopy(39 * 60 + 30);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,505,"check(copy, 11, 0, 0, 40);"
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,427,est.secondOfMinute().addToCopy(-(10 * 60 * 60 + 20 * 60 + 31));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,508,test.secondOfMinute().addNoWrapToCopy(13 * 60 * 60 + 39 * 60 + 30);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,509,fail();
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,510,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,511,"check(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,513,copy = test.secondOfMinute().addNoWrapToCopy(-9);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,514,"check(copy, 10, 20, 21, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,516,copy = test.secondOfMinute().addNoWrapToCopy(-30);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,517,"check(copy, 10, 20, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,519,copy = test.secondOfMinute().addNoWrapToCopy(-31);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,520,"check(copy, 10, 19, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,522,copy = test.secondOfMinute().addNoWrapToCopy(-(10 * 60 * 60 + 20 * 60 + 30));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,523,"check(copy, 0, 0, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,525,try {
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,526,test.secondOfMinute().addNoWrapToCopy(-(10 * 60 * 60 + 20 * 60 + 31));
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,533,ry {
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,534,est.millisOfSecond().addToCopy(13 * 60 * 60 * 1000 + 39 * 60 * 1000 + 29 * 1000 + 960);
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,535,ail();
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,536, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,537,"heck(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,632,copy = test.millisOfSecond().addToCopy(13 * 60 * 60 * 1000 + 39 * 60 * 1000 + 29 * 1000 + 960);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,633,"check(copy, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,647,copy = test.millisOfSecond().addToCopy(-(10 * 60 * 60 * 1000 + 20 * 60 * 1000 + 30 * 1000 + 41));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,648,"check(copy, 23, 59, 59, 999);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,651,public void testPropertyAddNoWrapMilli() {
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,652,"TimeOfDay test = new TimeOfDay(10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,653,TimeOfDay copy = test.millisOfSecond().addNoWrapToCopy(9);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,654,"check(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,655,"check(copy, 10, 20, 30, 49);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,657,copy = test.millisOfSecond().addNoWrapToCopy(959);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,658,"check(copy, 10, 20, 30, 999);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,660,copy = test.millisOfSecond().addNoWrapToCopy(960);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,661,"check(copy, 10, 20, 31, 0);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,663,copy = test.millisOfSecond().addNoWrapToCopy(13 * 60 * 60 * 1000 + 39 * 60 * 1000 + 29 * 1000 + 959);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,664,"check(copy, 23, 59, 59, 999);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,666,try {
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,667,test.millisOfSecond().addNoWrapToCopy(13 * 60 * 60 * 1000 + 39 * 60 * 1000 + 29 * 1000 + 960);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,668,fail();
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,669,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,670,"check(test, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,672,copy = test.millisOfSecond().addNoWrapToCopy(-9);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,673,"check(copy, 10, 20, 30, 31);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,675,copy = test.millisOfSecond().addNoWrapToCopy(-40);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,676,"check(copy, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,678,copy = test.millisOfSecond().addNoWrapToCopy(-41);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,679,"check(copy, 10, 20, 29, 999);"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,681,copy = test.millisOfSecond().addNoWrapToCopy(-(10 * 60 * 60 * 1000 + 20 * 60 * 1000 + 30 * 1000 + 40));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,682,"check(copy, 0, 0, 0, 0);"
False,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,552,est.millisOfSecond().addToCopy(-(10 * 60 * 60 * 1000 + 20 * 60 * 1000 + 30 * 1000 + 41));
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java,685,test.millisOfSecond().addNoWrapToCopy(-(10 * 60 * 60 * 1000 + 20 * 60 * 1000 + 30 * 1000 + 41));
