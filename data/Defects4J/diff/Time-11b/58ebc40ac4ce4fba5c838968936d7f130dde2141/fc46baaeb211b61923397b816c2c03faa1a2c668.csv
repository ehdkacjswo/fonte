is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,56,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,56,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,242,oid validate(PartialInstant instant);
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,242,void validate(ReadablePartial instant);
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,58,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,58,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,141,"ublic abstract String getAsText(PartialInstant partial, int fieldValue, Locale locale);"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,141,"public abstract String getAsText(ReadablePartial partial, int fieldValue, Locale locale);"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,151,"ublic String getAsText(PartialInstant partial, Locale locale) {"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,151,"public String getAsText(ReadablePartial partial, Locale locale) {"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,185,"ublic abstract String getAsShortText(PartialInstant partial, int fieldValue, Locale locale);"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,185,"public abstract String getAsShortText(ReadablePartial partial, int fieldValue, Locale locale);"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,195,"ublic String getAsShortText(PartialInstant partial, Locale locale) {"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,195,"public String getAsShortText(ReadablePartial partial, Locale locale) {"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,261,"ublic abstract int[] add(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd);"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,261,"public abstract int[] add(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd);"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,310,"ublic abstract int[] addInField(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd);"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,310,"public abstract int[] addInField(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd);"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,390,"ublic abstract int[] set(PartialInstant instant, int fieldIndex, int[] values, int newValue);"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,390,"public abstract int[] set(ReadablePartial instant, int fieldIndex, int[] values, int newValue);"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,426,"ublic abstract int[] set(PartialInstant instant, int fieldIndex, int[] values, String text, Locale locale);"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,426,"public abstract int[] set(ReadablePartial instant, int fieldIndex, int[] values, String text, Locale locale);"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,510,ublic abstract int getMinimumValue(PartialInstant instant);
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,510,public abstract int getMinimumValue(ReadablePartial instant);
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,520,"ublic abstract int getMinimumValue(PartialInstant instant, int[] values);"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,520,"public abstract int getMinimumValue(ReadablePartial instant, int[] values);"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,544,ublic abstract int getMaximumValue(PartialInstant instant);
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,544,public abstract int getMaximumValue(ReadablePartial instant);
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,554,"ublic abstract int getMaximumValue(PartialInstant instant, int[] values);"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,554,"public abstract int getMaximumValue(ReadablePartial instant, int[] values);"
False,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,64,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,64,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,284,ublic void validate(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,284,public void validate(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,59,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,59,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,104,ublic int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,104,public int getMaximumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,119,"ublic int getMaximumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,119,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,59,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,59,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,111,ublic int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,111,public int getMaximumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,123,"ublic int getMaximumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,123,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,59,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,59,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,110,ublic int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,110,public int getMaximumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,118,"ublic int getMaximumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,118,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,60,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,60,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,130,ublic int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,130,public int getMaximumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,138,"ublic int getMaximumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,138,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,59,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,59,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,100,"ublic int[] addInField(PartialInstant instant, int fieldIndex, int[] values, int years) {"
True,JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,100,"public int[] addInField(ReadablePartial instant, int fieldIndex, int[] values, int years) {"
False,JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,59,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,59,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,102,"ublic int[] addInField(PartialInstant instant, int fieldIndex, int[] values, int years) {"
True,JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,102,"public int[] addInField(ReadablePartial instant, int fieldIndex, int[] values, int years) {"
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,61,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,61,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,145,"ublic String getAsText(PartialInstant partial, int fieldValue, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,145,"public String getAsText(ReadablePartial partial, int fieldValue, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,192,"ublic String getAsShortText(PartialInstant partial, int fieldValue, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,192,"public String getAsShortText(ReadablePartial partial, int fieldValue, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,280,"ublic int[] add(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd) {"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,280,"public int[] add(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd) {"
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,391,"ublic int[] addInField(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd) {"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,391,"public int[] addInField(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd) {"
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,481,"ublic int[] set(PartialInstant instant, int fieldIndex, int[] values, int newValue) {"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,481,"public int[] set(ReadablePartial instant, int fieldIndex, int[] values, int newValue) {"
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,536,"ublic int[] set(PartialInstant instant, int fieldIndex, int[] values, String text, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,536,"public int[] set(ReadablePartial instant, int fieldIndex, int[] values, String text, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,640,ublic int getMinimumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,640,public int getMinimumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,654,"ublic int getMinimumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,654,"public int getMinimumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,686,ublic int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,686,public int getMaximumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,700,"ublic int getMaximumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,700,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,60,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,60,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,140,"ublic String getAsText(PartialInstant partial, int fieldValue, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,140,"public String getAsText(ReadablePartial partial, int fieldValue, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,144,"ublic String getAsText(PartialInstant partial, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,144,"public String getAsText(ReadablePartial partial, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,156,"ublic String getAsShortText(PartialInstant partial, int fieldValue, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,156,"public String getAsShortText(ReadablePartial partial, int fieldValue, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,160,"ublic String getAsShortText(PartialInstant partial, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,160,"public String getAsShortText(ReadablePartial partial, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,172,"ublic int[] add(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,172,"public int[] add(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,180,"ublic int[] addInField(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,180,"public int[] addInField(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,204,"ublic int[] set(PartialInstant instant, int fieldIndex, int[] values, int newValue) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,204,"public int[] set(ReadablePartial instant, int fieldIndex, int[] values, int newValue) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,208,"ublic int[] set(PartialInstant instant, int fieldIndex, int[] values, String text, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,208,"public int[] set(ReadablePartial instant, int fieldIndex, int[] values, String text, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,240,ublic int getMinimumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,240,public int getMinimumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,244,"ublic int getMinimumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,244,"public int getMinimumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,256,ublic int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,256,public int getMaximumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,260,"ublic int getMaximumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,260,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,58,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,58,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,105,"ublic int[] addInField(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd) {"
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,105,"public int[] addInField(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd) {"
False,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,161,ublic int getMinimumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,161,public int getMinimumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,170,"ublic int getMinimumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,170,"public int getMinimumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,200,ublic int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,200,public int getMaximumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,210,"ublic int getMaximumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,210,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,61,mport org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,61,import org.joda.time.partial.ReadablePartial;
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,165,"ublic String getAsText(PartialInstant partial, int fieldValue, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,165,"public String getAsText(ReadablePartial partial, int fieldValue, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,183,"ublic String getAsShortText(PartialInstant partial, int fieldValue, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,183,"public String getAsShortText(ReadablePartial partial, int fieldValue, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,210,"ublic int[] add(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd) {"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,210,"public int[] add(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd) {"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,228,"ublic int[] addInField(PartialInstant instant, int fieldIndex, int[] values, int valueToAdd) {"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,228,"public int[] addInField(ReadablePartial instant, int fieldIndex, int[] values, int valueToAdd) {"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,264,"ublic int[] set(PartialInstant instant, int fieldIndex, int[] values, int newValue) {"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,264,"public int[] set(ReadablePartial instant, int fieldIndex, int[] values, int newValue) {"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,282,"ublic int[] set(PartialInstant instant, int fieldIndex, int[] values, String text, Locale locale) {"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,282,"public int[] set(ReadablePartial instant, int fieldIndex, int[] values, String text, Locale locale) {"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,355,ublic int getMinimumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,355,public int getMinimumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,364,"ublic int getMinimumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,364,"public int getMinimumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,391,ublic int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,391,public int getMaximumValue(ReadablePartial instant) {
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,400,"ublic int getMaximumValue(PartialInstant instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,400,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,73, AbstractPartialInstant provides a standard base implementation of most methods
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,74, in the PartialInstant interface.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,73,* AbstractPartial provides a standard base implementation of most methods
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,74,* in the ReadablePartial interface.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,79, AbstractPartialInstant allows subclasses may be mutable and not thread-safe.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,79,* AbstractPartial allows subclasses may be mutable and not thread-safe.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,84,"ublic abstract class AbstractPartialInstant implements PartialInstant, Serializable {"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,84,"public abstract class AbstractPartial implements ReadablePartial, Serializable {"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,91,** The values of each field in this partial instant */
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,91,/** The values of each field in this partial */
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,93,** The values of each field in this partial instant */
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,93,/** The values of each field in this partial */
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,99," Constructs a AbstractPartialInstant with the current time, using ISOChronology in"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,99,"* Constructs a AbstractPartial with the current time, using ISOChronology in"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,106,ublic AbstractPartialInstant() {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,106,public AbstractPartial() {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,111," Constructs a AbstractPartialInstant with the current time, using the specified chronology"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,111,"* Constructs a AbstractPartial with the current time, using the specified chronology"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,120,ublic AbstractPartialInstant(Chronology chronology) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,120,public AbstractPartial(Chronology chronology) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,125, Constructs a AbstractPartialInstant extracting the partial fields from the specified
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,125,* Constructs a AbstractPartial extracting the partial fields from the specified
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,134,ublic AbstractPartialInstant(long instant) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,134,public AbstractPartial(long instant) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,139, Constructs a AbstractPartialInstant extracting the partial fields from the specified
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,139,* Constructs a AbstractPartial extracting the partial fields from the specified
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,149,"ublic AbstractPartialInstant(long instant, Chronology chronology) {"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,149,"public AbstractPartial(long instant, Chronology chronology) {"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,160, Constructs a AbstractPartialInstant from an Object that represents a time.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,160,* Constructs a AbstractPartial from an Object that represents a time.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,169,ublic AbstractPartialInstant(Object instant) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,169,public AbstractPartial(Object instant) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,172,long millis = converter.getInstantMillis(instant);
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,178,"Values = initValues(converter.getInstantMillis(instant), chronology);"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,179,"iValues = initValues(millis, chronology);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,182," Constructs a AbstractPartialInstant from an Object that represents a time, using the"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,183,"* Constructs a AbstractPartial from an Object that represents a time, using the"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,197,"ublic AbstractPartialInstant(Object instant, Chronology chronology) {"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,198,"public AbstractPartial(Object instant, Chronology chronology) {"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,201,"long millis = converter.getInstantMillis(instant, chronology);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,206,"Values = initValues(converter.getInstantMillis(instant, chronology), chronology);"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,208,"iValues = initValues(millis, chronology);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,210, Constructs a AbstractPartialInstant with specified time field values and chronology.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,212,* Constructs a AbstractPartial with specified time field values and chronology.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,219,"ublic AbstractPartialInstant(int[] values, Chronology chronology) {"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,221,"public AbstractPartial(int[] values, Chronology chronology) {"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,260, Gets the number of fields in this instant.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,262,* Gets the number of fields in this partial.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,298, Gets an array of the fields that this partial instant supports.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,300,* Gets an array of the fields that this partial supports.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,309, Gets an array of the value of each of the fields that this partial instant supports.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,311,* Gets an array of the value of each of the fields that this partial supports.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,336, The field specified must be one of those that is supported by the partial instant.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,338,* The field specified must be one of those that is supported by the partial.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,352, Checks whether the field specified is supported by this partial instant.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,354,* Checks whether the field specified is supported by this partial.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,368, Resolves this partial against another complete instant to create a new
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,369, full instant specifying values as milliseconds since 1970-01-01T00:00:00Z.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,370,* Resolves this partial against another complete millisecond instant to
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,371,* create a new full instant specifying the time zone to resolve with.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,371," For example, if this partial represents a time, then the result of this method"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,372, will be the date from the specified base plus the time from this instant.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,373,"* For example, if this partial represents a time, then the result of this"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,374,* method will be the datetime from the specified base instant plus the
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,375,* time from this partial set using the time zone specified.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,374, @param baseMillis  source of missing fields
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,375," @param zone  the zone to use, null means default"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,377,* @param baseInstant  source of missing fields
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,378,"* @param zone  the time zone to use, null means default"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,378,"ublic long resolve(long baseMillis, DateTimeZone zone) {"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,381,"public long resolve(long baseInstant, DateTimeZone zone) {"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,380,"eturn resolve(baseMillis, chrono);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,384, Resolves this partial into another complete instant setting the relevant fields
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,385, on the writable instant. The combination is performed using the chronology of the
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,386, specified instant.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,387, <p>
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,388," For example, if this partial represents a time, then the input writable instant"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,389, will be updated with the time from this instant.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,391," @param base  the instant to set into, must not be null"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,392, @throws IllegalArgumentException if the base instant is null
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,394,ublic void resolveInto(ReadWritableInstant base) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,395,f (base == null) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,396,"hrow new IllegalArgumentException(""The instant must not be null"");"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,398,hronology chrono = base.getChronology();
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,399,"ong resolved = resolve(base.getMillis(), chrono);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,400,ase.setMillis(resolved);
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,383,"return resolve(baseInstant, chrono);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,408," For example, if this partial represents a time, then the result of this method"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,409, will be the date from the specified base plus the time from this instant.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,391,"* For example, if this partial represents a time, then the result of this"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,392,* method will be the datetime from the specified base instant plus the
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,393,* time from this partial.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,411," @param base  the instant that provides the missing fields, null means now"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,395,"* @param baseInstant  the instant that provides the missing fields, null means now"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,414,ublic DateTime resolveDateTime(ReadableInstant base) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,398,public DateTime resolveDateTime(ReadableInstant baseInstant) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,417,f (base == null) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,401,if (baseInstant == null) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,421,hrono = base.getChronology();
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,422,"esolved = resolve(base.getMillis(), chrono);"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,405,chrono = baseInstant.getChronology();
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,406,"resolved = resolve(baseInstant.getMillis(), chrono);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,428, Resolve this partial instant into the base millis using the specified chronology.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,412,* Resolves this partial into another complete instant setting the relevant
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,413,* fields on the writable instant. The combination is performed using the
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,414,* chronology of the specified instant.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,415,* <p>
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,416,"* For example, if this partial represents a time, then the input writable"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,417,* instant will be updated with the time from this partial.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,419,"* @param baseInstant  the instant to set into, must not be null"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,420,* @throws IllegalArgumentException if the base instant is null
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,422,public void resolveInto(ReadWritableInstant baseInstant) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,423,if (baseInstant == null) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,424,"throw new IllegalArgumentException(""The instant must not be null"");"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,426,Chronology chrono = baseInstant.getChronology();
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,427,"long resolved = resolve(baseInstant.getMillis(), chrono);"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,428,baseInstant.setMillis(resolved);
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,432,* Resolve this partial into the base millis using the specified chronology.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,430, @param baseMillis  the base millis
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,434,* @param baseInstant  the base millisecond instant
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,434,"rotected long resolve(long baseMillis, Chronology chrono) {"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,435,ong millis = baseMillis;
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,438,"protected long resolve(long baseInstant, Chronology chrono) {"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,439,long millis = baseInstant;
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,444," Compares this PartialInstant with another returning true if the chronology,"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,448,"* Compares this ReadablePartial with another returning true if the chronology,"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,447, @param instant  an object to check against
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,451,* @param partial  an object to check against
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,450,ublic boolean equals(Object instant) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,451,f (instant instanceof AbstractPartialInstant) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,452,bstractPartialInstant other = (AbstractPartialInstant) instant;
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,454,public boolean equals(Object partial) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,455,if (partial instanceof AbstractPartial) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,456,AbstractPartial other = (AbstractPartial) partial;
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,456, else if (instant instanceof PartialInstant) {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,457,artialInstant other = (PartialInstant) instant;
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,460,} else if (partial instanceof ReadablePartial) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,461,ReadablePartial other = (ReadablePartial) partial;
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,466, Gets a hash code for the PartialInstant that is compatible with the
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialInstant.java,JodaTime/src/java/org/joda/time/partial/AbstractPartial.java,470,* Gets a hash code for the ReadablePartial that is compatible with the
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,64, PartialInstant to a DateTimeField.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,64,* ReadablePartial to a DateTimeField.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,104,ublic abstract PartialInstant getPartialInstant();
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,104,public abstract ReadablePartial getReadablePartial();
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,122,"eturn getField().getAsText(getPartialInstant(), get(), locale);"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,122,"return getField().getAsText(getReadablePartial(), get(), locale);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,143,"eturn getField().getAsShortText(getPartialInstant(), get(), locale);"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,143,"return getField().getAsShortText(getReadablePartial(), get(), locale);"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,195,eturn getField().getMinimumValue(getPartialInstant());
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,195,return getField().getMinimumValue(getReadablePartial());
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,215,eturn getField().getMaximumValue(getPartialInstant());
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,215,return getField().getMaximumValue(getReadablePartial());
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,272, this instant and the {@link PartialInstant#get(DateTimeField)} method
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,272,* this instant and the {@link ReadablePartial#get(DateTimeField)} method
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,281,ublic int compareTo(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,281,public int compareTo(ReadablePartial instant) {
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,60,import org.joda.time.ReadWritableInstant;
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,63, Defines an instant that does not support every datetime field.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,64,* Defines an partial time that does not support every datetime field.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,65, A PartialInstant supports a set of fields and cannot be compared to a
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,66, full complete instant. Methods are provided to resolve the partial instant
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,67, into a full instant by 'filling in the gaps'.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,66,* A <code>ReadablePartial</code> supports a set of fields which be be a
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,67,* subset of those on the chronology.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,68,* A <code>ReadablePartial</code> cannot be compared to a <code>ReadableInstant</code>.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,69,* <p>
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,70,* A <code>ReadablePartial</code> can be converted to a <code>ReadableInstant</code>
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,71,* using one of the <code>resolve</code> methods. These work by providing a full base
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,72,* instant that can be used to 'fill in the gaps'.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,71,ublic interface PartialInstant {
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,76,public interface ReadablePartial {
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,74, Gets the number of fields that this instant supports.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,79,* Gets the number of fields that this partial supports.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,90, Gets an array of the fields that this partial instant supports.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,95,* Gets an array of the fields that this partial supports.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,108, Gets an array of the value of each of the fields that this partial instant supports.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,113,* Gets an array of the value of each of the fields that this partial supports.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,130, The field specified must be one of those that is supported by the partial instant.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,135,* The field specified must be one of those that is supported by the partial.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,139, Checks whether the field specified is supported by this partial instant.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,144,* Checks whether the field specified is supported by this partial.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,150," For example, if this partial represents a time, then the result of this method"
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,151, will be the datetime from the specified base plus the time from this instant
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,152, set using the time zone specified.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,155,"* For example, if this partial represents a time, then the result of this"
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,156,* method will be the datetime from the specified base instant plus the
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,157,* time from this partial set using the time zone specified.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,154, @param baseMillis  source of missing fields
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,159,* @param baseInstant  source of missing fields
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,160,"* @param zone  the time zone to use, null means default"
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,157,"ong resolve(long baseMillis, DateTimeZone zone);"
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,163,"long resolve(long baseInstant, DateTimeZone zone);"
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,164," For example, if this partial represents a time, then the result of this method"
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,165, will be the date from the specified base plus the time from this instant.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,170,"* For example, if this partial represents a time, then the result of this"
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,171,* method will be the datetime from the specified base instant plus the
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,172,* time from this partial.
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,167," @param base  the instant that provides the missing fields, null means now"
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,174,"* @param baseInstant  the instant that provides the missing fields, null means now"
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,170,ateTime resolveDateTime(ReadableInstant base);
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,177,DateTime resolveDateTime(ReadableInstant baseInstant);
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,180,* Resolves this partial into another complete instant setting the relevant
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,181,* fields on the writable instant. The combination is performed using the
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,182,* chronology of the specified instant.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,183,* <p>
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,184,"* For example, if this partial represents a time, then the input writable"
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,185,* instant will be updated with the time from this partial.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,187,"* @param baseInstant  the instant to set into, must not be null"
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,188,* @throws IllegalArgumentException if the base instant is null
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,190,void resolveInto(ReadWritableInstant baseInstant);
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,175," on the implementation class, supported fields, chronology and values."
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,195,"* on the supported fields, chronology and values."
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,177, Instances of PartialInstant are not generally comparable to one another
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,178, as the comparison is based on the implementation class.
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,197,* Two instances of ReadablePartial are equal if they have the same
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,198,"* chronology, same fields in same order and same values."
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,180, @param object  the object to compare to
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,200,* @param partial  the object to compare to
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,183,oolean equals(Object object);
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,203,boolean equals(Object partial);
False,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,186, Gets a hash code for the instant that is compatible with the
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,206,* Gets a hash code for the partial that is compatible with the
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,208,* <p>
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,209,* The formula used must be:
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,210,* <pre>
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,211,*  int total = 157;
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,212,*  for (int i = 0; i < fields.length; i++) {
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,213,*      total = 23 * total + values[i];
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,214,*      total = 23 * total + fields[i].hashCode();
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,216,*  total += chronology.hashCode();
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,217,*  return total;
True,JodaTime/src/java/org/joda/time/partial/PartialInstant.java,JodaTime/src/java/org/joda/time/partial/ReadablePartial.java,218,* </pre>
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,63," TimeOfDay is an immutable partial instant supporting the hour, minute, second"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,63,"* TimeOfDay is an immutable partial supporting the hour, minute, second"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,92,"ublic final class TimeOfDay extends AbstractPartialInstant implements PartialInstant, Serializable {"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,92,"public final class TimeOfDay extends AbstractPartial implements ReadablePartial, Serializable {"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,416,** The instant */
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,417,rivate final TimeOfDay iInstant;
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,416,/** The partial */
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,417,private final TimeOfDay iTimeOfDay;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,424, @param instant  the partial instant
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,424,* @param partial  the partial instance
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,426, @param fieldIndex  the index in the instant
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,426,* @param fieldIndex  the index in the partial
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,428,"roperty(TimeOfDay instant, int fieldIndex) {"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,428,"Property(TimeOfDay partial, int fieldIndex) {"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,430,Instant = instant;
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,430,iTimeOfDay = partial;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,440,eturn iInstant.getField(iFieldIndex);
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,440,return iTimeOfDay.getField(iFieldIndex);
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,444, Gets the instant that this property belongs to.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,444,* Gets the partial that this property belongs to.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,446, @return the partial instant
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,446,* @return the partial
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,448,ublic PartialInstant getPartialInstant() {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,449,eturn iInstant;
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,448,public ReadablePartial getReadablePartial() {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,449,return iTimeOfDay;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,453, Gets the instant that this property belongs to.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,453,* Gets the partial that this property belongs to.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,455, @return the partial instant
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,455,* @return the partial
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,458,eturn iInstant;
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,458,return iTimeOfDay;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,462, Gets the value of the field that the partial instant is set to.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,462,* Gets the value of this field.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,467,eturn iInstant.getValue(iFieldIndex);
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,467,return iTimeOfDay.getValue(iFieldIndex);
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,489,nt[] newValues = iInstant.getValues();
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,490,"etField().add(iInstant, iFieldIndex, newValues, valueToAdd);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,491,"eturn new TimeOfDay(iInstant, newValues);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,489,int[] newValues = iTimeOfDay.getValues();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,490,"newValues = getField().add(iTimeOfDay, iFieldIndex, newValues, valueToAdd);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,491,"return new TimeOfDay(iTimeOfDay, newValues);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,513,nt[] newValues = iInstant.getValues();
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,514,"etField().addInField(iInstant, iFieldIndex, newValues, valueToAdd);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,515,"eturn new TimeOfDay(iInstant, newValues);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,513,int[] newValues = iTimeOfDay.getValues();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,514,"newValues = getField().addInField(iTimeOfDay, iFieldIndex, newValues, valueToAdd);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,515,"return new TimeOfDay(iTimeOfDay, newValues);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,530,nt[] newValues = iInstant.getValues();
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,531,"etField().set(iInstant, iFieldIndex, newValues, value);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,532,"eturn new TimeOfDay(iInstant, newValues);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,530,int[] newValues = iTimeOfDay.getValues();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,531,"newValues = getField().set(iTimeOfDay, iFieldIndex, newValues, value);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,532,"return new TimeOfDay(iTimeOfDay, newValues);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,547,nt[] newValues = iInstant.getValues();
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,548,"etField().set(iInstant, iFieldIndex, newValues, text, locale);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,549,"eturn new TimeOfDay(iInstant, newValues);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,547,int[] newValues = iTimeOfDay.getValues();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,548,"newValues = getField().set(iTimeOfDay, iFieldIndex, newValues, text, locale);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,549,"return new TimeOfDay(iTimeOfDay, newValues);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,566,/ TODO
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,569,/         * Rounds to the lowest whole unit of this field on a copy of this TimeOfDay.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,571,/         * @return a copy of the TimeOfDay with the field value changed
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,573,/        public TimeOfDay roundFloorCopy() {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,574,/            TimeOfDay instant = iInstant;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,575,/            return (TimeOfDay) instant.withMillis(iField.roundFloor(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,579,/         * Rounds to the highest whole unit of this field on a copy of this TimeOfDay.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,581,/         * @return a copy of the TimeOfDay with the field value changed
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,583,/        public TimeOfDay roundCeilingCopy() {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,584,/            TimeOfDay instant = iInstant;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,585,/            return (TimeOfDay) instant.withMillis(iField.roundCeiling(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,589,"/         * Rounds to the nearest whole unit of this field on a copy of this TimeOfDay,"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,590,/         * favoring the floor if halfway.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,592,/         * @return a copy of the TimeOfDay with the field value changed
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,594,/        public TimeOfDay roundHalfFloorCopy() {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,595,/            TimeOfDay instant = iInstant;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,596,/            return (TimeOfDay) instant.withMillis(iField.roundHalfFloor(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,600,"/         * Rounds to the nearest whole unit of this field on a copy of this TimeOfDay,"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,601,/         * favoring the ceiling if halfway.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,603,/         * @return a copy of the TimeOfDay with the field value changed
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,605,/        public TimeOfDay roundHalfCeilingCopy() {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,606,/            TimeOfDay instant = iInstant;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,607,/            return (TimeOfDay) instant.withMillis(iField.roundHalfCeiling(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,611,/         * Rounds to the nearest whole unit of this field on a copy of this TimeOfDay.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,612,"/         * If halfway, the ceiling is favored over the floor only if it makes this field's value even."
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,614,/         * @return a copy of the TimeOfDay with the field value changed
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,616,/        public TimeOfDay roundHalfEvenCopy() {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,617,/            TimeOfDay instant = iInstant;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,618,/            return (TimeOfDay) instant.withMillis(iField.roundHalfEven(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,63," YearMonthDay is an immutable partial instant supporting the year, monthOfYear"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,63,"* YearMonthDay is an immutable partial supporting the year, monthOfYear"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,91,"ublic final class YearMonthDay extends AbstractPartialInstant implements PartialInstant, Serializable {"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,91,"public final class YearMonthDay extends AbstractPartial implements ReadablePartial, Serializable {"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,328,** The instant */
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,329,rivate final YearMonthDay iInstant;
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,328,/** The partial */
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,329,private final YearMonthDay iYearMonthDay;
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,336, @param instant  the partial instant
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,336,* @param partial  the partial instance
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,338, @param fieldIndex  the index in the instant
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,338,* @param fieldIndex  the index in the partial
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,340,"roperty(YearMonthDay instant, int fieldIndex) {"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,340,"Property(YearMonthDay partial, int fieldIndex) {"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,342,Instant = instant;
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,342,iYearMonthDay = partial;
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,352,eturn iInstant.getField(iFieldIndex);
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,352,return iYearMonthDay.getField(iFieldIndex);
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,356, Gets the instant that this property belongs to.
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,356,* Gets the partial that this property belongs to.
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,358, @return the partial instant
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,358,* @return the partial
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,360,ublic PartialInstant getPartialInstant() {
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,361,eturn iInstant;
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,360,public ReadablePartial getReadablePartial() {
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,361,return iYearMonthDay;
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,365, Gets the instant that this property belongs to.
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,365,* Gets the partial that this property belongs to.
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,367, @return the partial instant
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,367,* @return the partial
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,370,eturn iInstant;
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,370,return iYearMonthDay;
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,374, Gets the value of the field that the partial instant is set to.
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,374,* Gets the value of this field.
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,379,eturn iInstant.getValue(iFieldIndex);
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,379,return iYearMonthDay.getValue(iFieldIndex);
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,401,nt[] newValues = iInstant.getValues();
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,402,"etField().add(iInstant, iFieldIndex, newValues, valueToAdd);"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,403,"eturn new YearMonthDay(iInstant, newValues);"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,401,int[] newValues = iYearMonthDay.getValues();
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,402,"newValues = getField().add(iYearMonthDay, iFieldIndex, newValues, valueToAdd);"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,403,"return new YearMonthDay(iYearMonthDay, newValues);"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,425,nt[] newValues = iInstant.getValues();
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,426,"etField().addInField(iInstant, iFieldIndex, newValues, valueToAdd);"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,427,"eturn new YearMonthDay(iInstant, newValues);"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,425,int[] newValues = iYearMonthDay.getValues();
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,426,"newValues = getField().addInField(iYearMonthDay, iFieldIndex, newValues, valueToAdd);"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,427,"return new YearMonthDay(iYearMonthDay, newValues);"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,442,nt[] newValues = iInstant.getValues();
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,443,"etField().set(iInstant, iFieldIndex, newValues, value);"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,444,"eturn new YearMonthDay(iInstant, newValues);"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,442,int[] newValues = iYearMonthDay.getValues();
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,443,"newValues = getField().set(iYearMonthDay, iFieldIndex, newValues, value);"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,444,"return new YearMonthDay(iYearMonthDay, newValues);"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,459,nt[] newValues = iInstant.getValues();
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,460,"etField().set(iInstant, iFieldIndex, newValues, text, locale);"
False,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,461,"eturn new YearMonthDay(iInstant, newValues);"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,459,int[] newValues = iYearMonthDay.getValues();
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,460,"newValues = getField().set(iYearMonthDay, iFieldIndex, newValues, text, locale);"
True,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,JodaTime/src/java/org/joda/time/partial/YearMonthDay.java,461,"return new YearMonthDay(iYearMonthDay, newValues);"
True,JodaTime/src/test/org/joda/time/partial/MockPartialInstant.java,JodaTime/src/test/org/joda/time/partial/MockPartial.java,60,import org.joda.time.ReadWritableInstant;
False,JodaTime/src/test/org/joda/time/partial/MockPartialInstant.java,JodaTime/src/test/org/joda/time/partial/MockPartial.java,68,ublic class MockPartialInstant implements PartialInstant {
True,JodaTime/src/test/org/joda/time/partial/MockPartialInstant.java,JodaTime/src/test/org/joda/time/partial/MockPartial.java,69,public class MockPartial implements ReadablePartial {
False,JodaTime/src/test/org/joda/time/partial/MockPartialInstant.java,JodaTime/src/test/org/joda/time/partial/MockPartial.java,70,ublic static final PartialInstant EMPTY_INSTANCE = new MockPartialInstant();
True,JodaTime/src/test/org/joda/time/partial/MockPartialInstant.java,JodaTime/src/test/org/joda/time/partial/MockPartial.java,71,public static final ReadablePartial EMPTY_INSTANCE = new MockPartial();
True,JodaTime/src/test/org/joda/time/partial/MockPartialInstant.java,JodaTime/src/test/org/joda/time/partial/MockPartial.java,97,public void resolveInto(ReadWritableInstant base) {
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,703,"ssertEquals(false, test1.equals(MockPartialInstant.EMPTY_INSTANCE));"
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,703,"assertEquals(false, test1.equals(MockPartial.EMPTY_INSTANCE));"
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,706,lass MockInstant extends MockPartialInstant {
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,706,class MockInstant extends MockPartial {
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,815,"ssertSame(test, test.hourOfDay().getPartialInstant());"
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,815,"assertSame(test, test.hourOfDay().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,910,est1.hourOfDay().compareTo((PartialInstant) null);
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,910,test1.hourOfDay().compareTo((ReadablePartial) null);
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,931,"ssertSame(test, test.minuteOfHour().getPartialInstant());"
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,931,"assertSame(test, test.minuteOfHour().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1041,est1.minuteOfHour().compareTo((PartialInstant) null);
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1041,test1.minuteOfHour().compareTo((ReadablePartial) null);
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1062,"ssertSame(test, test.secondOfMinute().getPartialInstant());"
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1062,"assertSame(test, test.secondOfMinute().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1169,est1.secondOfMinute().compareTo((PartialInstant) null);
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1169,test1.secondOfMinute().compareTo((ReadablePartial) null);
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1190,"ssertSame(test, test.millisOfSecond().getPartialInstant());"
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1190,"assertSame(test, test.millisOfSecond().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1294,est1.millisOfSecond().compareTo((PartialInstant) null);
True,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/time/partial/TestTimeOfDay.java,1294,test1.millisOfSecond().compareTo((ReadablePartial) null);
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,514,"ssertEquals(false, test1.equals(MockPartialInstant.EMPTY_INSTANCE));"
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,514,"assertEquals(false, test1.equals(MockPartial.EMPTY_INSTANCE));"
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,517,lass MockInstant extends MockPartialInstant {
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,517,class MockInstant extends MockPartial {
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,613,"ssertSame(test, test.year().getPartialInstant());"
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,613,"assertSame(test, test.year().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,702,est1.year().compareTo((PartialInstant) null);
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,702,test1.year().compareTo((ReadablePartial) null);
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,723,"ssertSame(test, test.monthOfYear().getPartialInstant());"
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,723,"assertSame(test, test.monthOfYear().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,846,est1.monthOfYear().compareTo((PartialInstant) null);
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,846,test1.monthOfYear().compareTo((ReadablePartial) null);
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,867,"ssertSame(test, test.dayOfMonth().getPartialInstant());"
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,867,"assertSame(test, test.dayOfMonth().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,987,est1.dayOfMonth().compareTo((PartialInstant) null);
True,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,JodaTime/src/test/org/joda/time/partial/TestYearMonthDay.java,987,test1.dayOfMonth().compareTo((ReadablePartial) null);
