is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,251,eturn 1;
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,251,return -292269337;
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,256,/ TODO
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,257,eturn 292272992;
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,256,return 292271022;
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,275,fields.year = new CopticYearDateTimeField(this);
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,276,fields.years = fields.year.getDurationField();
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,6,* All rights reserved.
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,10,* are met:
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,18,*    distribution.
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,33,*    permission of the Joda project.
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,46,* SUCH DAMAGE.
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,54,package org.joda.time.chrono;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,56,import org.joda.time.DateTimeConstants;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,57,import org.joda.time.DurationField;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,58,import org.joda.time.field.ImpreciseDateTimeField;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,59,import org.joda.time.field.FieldUtils;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,63,* @author Brian S O'Neill
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,64,* @since 1.0
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,66,final class CopticYearDateTimeField extends ImpreciseDateTimeField {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,68,static final long serialVersionUID = 8990199361773280783L;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,70,private final AbstractGJChronology iChronology;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,73,* Restricted constructor
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,75,CopticYearDateTimeField(AbstractGJChronology chronology) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,76,"super(""year"", ""years"", chronology.getAverageMillisPerYear());"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,77,iChronology = chronology;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,80,public boolean isLenient() {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,81,return false;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,84,public int get(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,85,return iChronology.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,88,"public long add(long instant, int years) {"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,89,if (years == 0) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,90,return instant;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,92,"return set(instant, get(instant) + years);"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,95,"public long add(long instant, long years) {"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,96,"return add(instant, FieldUtils.safeToInt(years));"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,99,"public long addWrapped(long instant, int years) {"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,100,if (years == 0) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,101,return instant;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,103,// Return newly calculated millis value
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,104,int thisYear = iChronology.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,105,int wrappedYear = FieldUtils.getWrappedValue
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,106,"(thisYear, years, iChronology.getMinYear(), iChronology.getMaxYear());"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,107,"return set(instant, wrappedYear);"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,110,"public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,111,if (minuendInstant < subtrahendInstant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,112,"return -getDifference(subtrahendInstant, minuendInstant);"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,115,int minuendYear = get(minuendInstant);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,116,int subtrahendYear = get(subtrahendInstant);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,118,// Inlined remainder method to avoid duplicate calls to get.
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,119,long minuendRem = minuendInstant - iChronology.getYearMillis(minuendYear);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,120,long subtrahendRem = subtrahendInstant - iChronology.getYearMillis(subtrahendYear);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,122,int difference = minuendYear - subtrahendYear;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,123,if (minuendRem < subtrahendRem) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,124,difference--;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,126,return difference;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,129,"public long set(long instant, int year) {"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,130,FieldUtils.verifyValueBounds
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,131,"(this, year, iChronology.getMinYear(), iChronology.getMaxYear());"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,133,AbstractGJChronology chrono = iChronology;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,135,int thisYear = chrono.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,136,"int dayOfYear = chrono.getDayOfYear(instant, thisYear);"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,137,int millisOfDay = chrono.getMillisOfDay(instant);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,139,if (dayOfYear > 365) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,140,"// Current year is leap, and day is leap."
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,141,if (!chrono.isLeapYear(year)) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,142,"// Moving to a non-leap year, leap day doesn't exist."
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,143,dayOfYear--;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,147,"instant = chrono.getYearMonthDayMillis(year, 1, dayOfYear);"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,148,instant += millisOfDay;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,150,return instant;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,153,public DurationField getRangeDurationField() {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,154,return null;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,157,public boolean isLeap(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,158,return iChronology.isLeapYear(get(instant));
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,161,public int getLeapAmount(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,162,if (iChronology.isLeapYear(get(instant))) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,163,return 1;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,164,} else {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,165,return 0;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,169,public DurationField getLeapDurationField() {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,170,return iChronology.days();
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,173,public int getMinimumValue() {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,174,return iChronology.getMinYear();
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,177,public int getMaximumValue() {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,178,return iChronology.getMaxYear();
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,181,public long roundFloor(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,182,return iChronology.getYearMillis(get(instant));
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,185,public long roundCeiling(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,186,int year = get(instant);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,187,long yearStartMillis = iChronology.getYearMillis(year);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,188,if (instant != yearStartMillis) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,189,// Bump up to start of next year.
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,190,instant = iChronology.getYearMillis(year + 1);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,192,return instant;
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,195,public long remainder(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,196,return instant - roundFloor(instant);
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,200,* Serialization singleton
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,202,private Object readResolve() {
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,203,return iChronology.year();
