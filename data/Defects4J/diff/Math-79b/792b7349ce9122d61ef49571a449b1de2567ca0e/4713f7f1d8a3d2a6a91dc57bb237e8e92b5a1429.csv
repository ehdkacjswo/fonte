is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,5, reserved.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,9, are met:
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,17,    distribution.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,54,ackage org.apache.commons.math;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,57, Provide the Brent algorithm for solving for zeros of real univariate
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,58, functions.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,59, It will only search for one zero in the given interval.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,60, The function is supposed to be continuous but not necessarily smooth.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,62, @author pietsch at apache.org
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,64,ublic class BrentSolver extends UnivariateRealSolverImpl {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,66,rivate UnivariateRealFunction f;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,68,ublic BrentSolver(UnivariateRealFunction f) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,69,"uper(100, 1E-6);"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,70,his.f = f;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,73,* (non-Javadoc)
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,74," @see org.apache.commons.math.UnivariateRealSolver#solve(double, double)"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,76,"ublic double solve(double min, double max) throws MathException {"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,77,learResult();
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,78,ouble x0 = min;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,79,ouble x1 = max;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,80,ouble y0 = f.value(x0);
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,81,ouble y1 = f.value(x1);
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,82,f ((y0 > 0) == (y1 > 0)) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,83,"hrow new MathException(""Interval doesn't bracket a zero."");"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,85,ouble x2 = x0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,86,ouble y2 = y0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,87,ouble delta = x1 - x0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,88,ouble oldDelta = delta;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,90,nt i = 0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,91,hile (i < maximalIterationCount) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,92,f (Math.abs(y2) < Math.abs(y1)) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,93,0 = x1;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,94,1 = x2;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,95,2 = x0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,96,0 = y1;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,97,1 = y2;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,98,2 = y0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,100,"ouble tolerance = Math.max(relativeAccuracy * Math.abs ( x1 ),"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,101,bsoluteAccuracy);
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,102,f (Math.abs(y1) <= functionValueAccuracy) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,103,/ Avoid division by very small values. Assume
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,104,/ the iteration has converged (the problem may
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,105,/ still be ill conditioned
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,106,"etResult(x1,i);"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,107,eturn result;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,109,ouble dx = 0.5 * (x2 - x1);
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,110,f (Math.abs(dx) <= tolerance) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,111,"etResult(x1,i);"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,112,eturn result;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,114,f (Math.abs(oldDelta) < tolerance || Math.abs(y0) <= Math.abs(y1)) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,115,/ Force bisection.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,116,elta = dx;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,117,ldDelta = delta;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,118, else {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,119,ouble r3 = y1 / y0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,120,ouble p;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,121,ouble p1;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,122,f (x0 == x2) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,123,/ Linear interpolation.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,124, = 2.0 * dx * r3;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,125,1 = 1.0 - r3;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,126, else {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,127,/ Inverse quadratic interpolation.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,128,ouble r1 = y0 / y2;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,129,ouble r2 = y1 / y2;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,130, = r3 * (2.0 * dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,131,1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,133,f (p > 0.0) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,134,1 = -p1;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,135, else {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,136, = -p;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,138,f (2.0 * p >= 3.0 * dx * p1 - Math.abs(tolerance * p1)
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,139,| p >= Math.abs(0.5 * oldDelta * p1)) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,140,/ Inverse quadratic interpolation gives a value
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,141,"/ in the wrong direction, or progress is slow."
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,142,/ Fall back to bisection.
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,143,elta = dx;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,144,ldDelta = delta;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,145, else {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,146,ldDelta = delta;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,147,elta = p / p1;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,150,"/ Save old X1, Y1"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,151,0 = x1;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,152,0 = y1;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,153,"/ Compute new X1, Y1"
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,154,f (Math.abs(delta) > tolerance) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,155,1 = x1 + delta;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,156, else if (dx > 0.0) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,157,1 = x1 + tolerance;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,158, else if (dx <= 0.0) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,159,1 = x1 - tolerance;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,161,1 = f.value(x1);
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,162,f ((y1 > 0) == (y2 > 0)) {
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,163,2 = x0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,164,2 = y0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,165,elta = x1 - x0;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,166,ldDelta = delta;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,168,++;
False,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,170,"hrow new MathException(""Maximal iteration number exceeded."");"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,5, reserved.
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,9, are met:
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,17,    distribution.
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,54,ackage org.apache.commons.math;
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,57, Signals a configuration problem with any of the factory methods.
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,59, @author pietsch at apache.org
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,62,ublic class MathConfigurationException extends MathException {
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,67,ublic MathConfigurationException() {
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,68,uper();
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,72, @param message message describing the problem
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,74,ublic MathConfigurationException(String message) {
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,75,uper(message);
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,79, @param message message describing the problem
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,80, @param throwable caught exception causing this problem
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,82,"ublic MathConfigurationException(String message, Throwable throwable) {"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,83,"uper(message, throwable);"
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,87, @param throwable caught exception causing this problem
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,89,ublic MathConfigurationException(Throwable throwable) {
False,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,90,uper(throwable);
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,5, reserved.
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,9, are met:
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,17,    distribution.
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,54,ackage org.apache.commons.math;
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,57, A generic exception indicating problems in the math package.
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,59, @author pietsch at apache.org
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,61,ublic class MathException extends Exception {
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,66,ublic MathException() {
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,67,uper();
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,71, @param message message describing the problem
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,73,ublic MathException(String message) {
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,74,uper(message);
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,78, @param message message describing the problem
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,79, @param throwable caught exception causing this problem
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,81,"ublic MathException(String message, Throwable throwable) {"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,82,"uper(message, throwable);"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,86, @param throwable caught exception causing this problem
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,88,ublic MathException(Throwable throwable) {
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,89,uper(throwable);
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,5, reserved.
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,9, are met:
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,17,    distribution.
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,54,ackage org.apache.commons.math;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,57, Provide the Regula Falsi algorithm for solving for zeros of real univariate
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,58," functions. This is the same as the secant algorithm with mandatory bracketing,"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,59, hence the name. The real secant algorithm has a higher theoretical order of
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,60," convergence, but may easer run awry."
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,61, It will only search for one zero in the given interval.
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,62, The function is supposed to be continuous but not necessarily smooth.
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,64, @author pietsch at apache.org
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,66,ublic class SecantSolver extends UnivariateRealSolverImpl {
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,68,rivate UnivariateRealFunction f;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,70,ublic SecantSolver(UnivariateRealFunction f) {
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,71,"uper(100, 1E-6);"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,72,his.f = f;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,75,* (non-Javadoc)
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,76," @see org.apache.commons.math.UnivariateRealSolver#solve(double, double)"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,78,"ublic double solve(double min, double max) throws MathException {"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,79,learResult();
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,80,ouble x0 = min;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,81,ouble x1 = max;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,82,ouble y0 = f.value(x0);
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,83,ouble y1 = f.value(x1);
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,84,oolean y0positive = y0 > 0;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,85,oolean y1positive = y1 > 0;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,86,f (y0positive == y1positive) {
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,87,"hrow new MathException(""Interval doesn't bracket a zero."");"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,89,nt i = 0;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,90,hile (i < maximalIterationCount) {
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,91,ouble x2 = x0 + (x0 - x1) / (y1 / y0 - 1);
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,92,ouble y2 = f.value(x2);
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,93,f (Math.abs(y2) <= functionValueAccuracy) {
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,94,"etResult(x2,i);"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,95,eturn result;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,97,oolean y2positive = y2 > 0;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,98,f (y0positive == y2positive) {
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,99,"/ New bracket is (x2,x1)."
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,100,"f (Math.abs(x1 - x2) < Math.max(relativeAccuracy * Math.abs ( x2 ), absoluteAccuracy)) {"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,101,"etResult((x2 + (x2 - x1) / (y1 / y2 - 1) ), i);"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,102,eturn result;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,104,0 = x2;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,105,0 = y2;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,106, else {
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,107,"/ New bracket is (x0,x2)."
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,108,"f (Math.abs(x2 - x0) < Math.max(relativeAccuracy * Math.abs ( x2 ),"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,109,bsoluteAccuracy)) {
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,110,"etResult(x0 + (x0 - x2) / (y2 / y0 - 1), i);"
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,111,eturn result;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,113,1 = x2;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,114,1 = y2;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,116,++;
False,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,118,"hrow new MathException(""Maximal iteration number exceeded"");"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,5, reserved.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,9, are met:
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,17,    distribution.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,54,ackage org.apache.commons.math;
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,57, Provide an interface univariate real functions.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,58, The object may held temporary data which is shared between calculations
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,59, of the value and the derivatives for the same argument. It is not guaranteed
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,60," that derivatives are evaluated after the value, the evaluation algorithm"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,61, should throw an InvalidStateException if it can't cope with this.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,63, @author pietsch at apache.org
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,65,ublic interface UnivariateRealFunction {
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,68, Compute the value for the function.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,69, @param x the point for which the function value should be computed
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,70, @return the value
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,71, @throws MathException if the function couldn't be computed due to
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,72,  missing additional data or other environmental problems.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,73," @throws RuntimeException if the operation isn't supported, the argument"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,74,  was outside the supported domain or any other problem.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,77,ublic double value(double x) throws MathException;
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,80, Compute the value for the first derivative of the function.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,81, It is recommended to provide this method only if the first derivative is
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,82, analytical. Numerical derivatives may be acceptable in some cases.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,83, An implementation should throw an UnsupportedOperationException if
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,84, this method is not implemented.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,85, @param x the point for which the first derivative should be computed
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,86, @return the value
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,87, @throws MathException if the derivative couldn't be computed.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,88," @throws RuntimeException if the operation isn't supported, the argument"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,89,  was outside the supported domain or any other problem.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,92,ublic double firstDerivative(double x) throws MathException;
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,95, Compute the value for the second derivative of the function.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,96, It is recommended to provide this method only if the second derivative is
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,97, analytical. Numerical derivatives may be acceptable in some cases.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,98, An implementation should throw an UnsupportedOperationException if
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,99, this method is not implemented.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,100, @param x the point for which the first derivative should be computed
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,101, @return the value
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,102, @throws MathException if the second derivative couldn't be computed.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,103," @throws RuntimeException if the operation isn't supported, the argument"
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,104,  was outside the supported domain or any other problem.
False,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,107,ublic double secondDerivative(double x) throws MathException;
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,5, reserved.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,9, are met:
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,17,    distribution.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,54,ackage org.apache.commons.math;
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,57, Provide an interface to algorithms for solving for zeros of real univariate
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,58, functions.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,59, An implementation will only search for one zero in the given interval.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,61, @author pietsch at apache.org
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,63,ublic interface UnivariateRealSolver {
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,66, Set the upper limit for the number of iterations.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,67," Usually a high iteration count indicates convergence problems. However,"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,68," the ""reasonable value"" varies widely for different solvers, users are"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,69, advised to use the default value supplied by the solver.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,70, An exception will be thrown if the number is exceeded.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,72, @param count
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,74,ublic void setMaximalIterationCount(int count);
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,77, Get the upper limit for the number of iterations.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,78, @return the actual upper limit
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,80,ublic int getMaximalIterationCount();
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,83, Reset the upper limit for the number of iterations to the default.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,84, The default value is supplied by the solver implementation.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,86, @see #setMaximalIterationCount(int)
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,88,ublic void resetMaximalIterationCount();
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,91, Set the absolute accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,92, The default is usually choosen so taht roots in the interval
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,93, -10..-0.1 and +0.1..+10 can be found wit a reasonable accuracy. If the expected
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,94," absolute value of your roots is of much smaller magnitude, set this to a smaller"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,95, value.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,96," Solvers are advised to do a plausibility check with the relative accuracy, but"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,97, clients should not rely on this.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,98, @param accuracy the accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,99, @throws MathException if the accuracy can't be achieved by the solver or is
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,100, otherwise deemed unreasonable.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,102,ublic void setAbsoluteAccuracy(double accuracy) throws MathException;
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,105, Get the actual absolute accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,106, @return the accuracy
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,108,ublic double getAbsoluteAccuracy();
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,111, Reset the absolute accuracy to the default.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,112, The default value is provided by the solver implementation.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,114,ublic void resetAbsoluteAccuracy();
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,117, Set the relative accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,118, This is used to stop iterations if the absolute accuracy can't be achieved
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,119, due to large values or short mantissa length.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,120, If this should be the primary criterium for convergence rather then a safety
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,121," measure, set the absolute accuracy to a ridiculously small value, like 1E-1000."
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,122, @param accuracy the relative accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,123, @throws MathException if the accuracy can't be achieved by the solver or is
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,124, otherwise deemed unreasonable.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,126,ublic void setRelativeAccuracy(double Accuracy) throws MathException;
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,129, Get the actual relative accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,130, @return the accuracy
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,132,ublic double getRelativeAccuracy();
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,135, Reset the relative accuracy to the default.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,136, The default value is provided by the solver implementation.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,138,ublic void resetRelativeAccuracy();
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,141, Set the function value accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,142, This is used to determine whan an evaluated function value or some other
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,143, value which is used as divisor is zero.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,144, This is a safety guard and it shouldn't be necesary to change this in general.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,145, @param accuracy the accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,146, @throws MathException if the accuracy can't be achieved by the solver or is
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,147, otherwise deemed unreasonable.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,149,ublic void setFunctionValueAccuracy(double Accuracy) throws MathException;
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,152, Get the actual function value accuracy.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,153, @return the accuracy
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,155,ublic double getFunctionValueAccuracy();
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,158, Reset the actual function accuracy to the default.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,159, The default value is provided by the solver implementation.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,161,ublic void resetFunctionValueAccuracy();
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,164, Solve for a zero root in the given interval.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,165, A solver may require that the interval brackets a single zero root.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,166, @param min the lower bound for the interval.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,167, @param max the upper bound for the interval.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,168, @return the value where the function is zero
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,169, @throws MathException if the iteration count was exceeded or the
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,170,  solver detects convergence problems otherwise.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,172,"ublic double solve(double min, double max) throws MathException;"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,175," Solve for a zero in the given interval, start at startValue."
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,176, A solver may require that the interval brackets a single zero root.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,177, @param min the lower bound for the interval.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,178, @param max the upper bound for the interval.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,179, @param startValue the start value to use
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,180, @return the value where the function is zero
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,181, @throws MathException if the iteration count was exceeded or the
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,182,  solver detects convergence problems otherwise.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,184,"ublic double solve(double min, double max, double startValue)"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,185,hrows MathException;
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,188, Get the result of the last run of the solver.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,189, @return the last result.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,190," @throws MathException if there is no result available, either"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,191, because no result was yet computed or the last attempt failed.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,193,ublic double getResult() throws MathException;
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,196, Get the number of iterations in the last run of the solver.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,197, This is mainly meant for testing purposes. It may occasionally
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,198, help track down performance problems: if the iteration count
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,199," is notoriously high, check whether the function is evaluated"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,200," properly, and whether another solver is more amenable to the"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,201, problem.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,202, @return the last iteration count.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,203," @throws MathException if there is no result available, either"
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,204, because no result was yet computed or the last attempt failed.
False,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,206,ublic double getIterationCount() throws MathException;
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,5, reserved.
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,9, are met:
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,17,    distribution.
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,54,ackage org.apache.commons.math;
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,56,mport java.lang.reflect.InvocationTargetException;
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,59, @author pietsch at apache.org
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,61, A factory to easily get a default solver and some convenience
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,62, functions.
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,63," Because solvers are easily reusable, the factory does not"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,64, store configuration data and creates preconfigured solvers
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,65," (this may be controversial, because the configuration data"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,66, may also be used for the default solver used by the static
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,67, solve() method).
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,70,ublic class UnivariateRealSolverFactory {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,71,rotected UnivariateRealSolverFactory() {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,74,ublic static UnivariateRealSolver newSolver(UnivariateRealFunction f)
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,75,hrows MathConfigurationException {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,76,tring solverClassName =
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,77,ystem.getProperty(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,78,"org.apache.commons.math.UnivariateRealSolver"","
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,79,"org.apache.commons.math.BrentSolver"");"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,80,ry {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,81,lass clazz = Class.forName(solverClassName);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,82,lass paramClass[] = new Class[1];
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,83,aramClass[1] =
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,84,"lass.forName(""org.apache.commons.math.UnivariateRealFunction"");"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,85,bject param[] = new Object[1];
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,86,aram[1] = f;
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,87,eturn (UnivariateRealSolver)clazz.getConstructor(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,88,aramClass).newInstance(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,89,aram);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,90, catch (IllegalArgumentException e) {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,91,hrow new MathConfigurationException(e);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,92, catch (SecurityException e) {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,93,hrow new MathConfigurationException(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,94,"Can't access "" + solverClassName,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,95,);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,96, catch (ClassNotFoundException e) {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,97,hrow new MathConfigurationException(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,98,"Class not found: "" + solverClassName,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,99,);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,100, catch (InstantiationException e) {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,101,hrow new MathConfigurationException(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,102,"Can't instantiate "" + solverClassName,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,103,);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,104, catch (IllegalAccessException e) {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,105,hrow new MathConfigurationException(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,106,"Can't access "" + solverClassName,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,107,);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,108, catch (InvocationTargetException e) {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,109,hrow new MathConfigurationException(e);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,110, catch (NoSuchMethodException e) {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,111,hrow new MathConfigurationException(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,112,"No constructor with UnivariateRealFunction in """
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,113," solverClassName,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,114,);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,118,"ublic static double solve(UnivariateRealFunction f, double x0, double x1)"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,119,hrows MathException {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,120,"eturn newSolver(f).solve(x0, x1);"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,123,ublic static double solve(
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,124,"nivariateRealFunction f,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,125,"ouble x0,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,126,"ouble x1,"
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,127,ouble absoluteAccuracy)
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,128,hrows MathException {
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,129,nivariateRealSolver solver = newSolver(f);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,130,olver.setAbsoluteAccuracy(absoluteAccuracy);
False,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,131,"eturn solver.solve(x0, x1);"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,5, reserved.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,9, are met:
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,17,    distribution.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,55,ackage org.apache.commons.math;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,58, Provide a default implementation for several functions useful to generic
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,59, solvers.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,61, @author pietsch at apache.org
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,63,ublic abstract class UnivariateRealSolverImpl
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,64,mplements UnivariateRealSolver {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,66,rotected double absoluteAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,67,rotected double relativeAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,68,rotected double functionValueAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,69,rotected int maximalIterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,71,rotected double defaultAbsoluteAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,72,rotected double defaultRelativeAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,73,rotected double defaultFunctionValueAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,74,rotected int defaultMaximalIterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,76,rotected boolean resultComputed = false;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,77,rotected double result;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,78,/ Mainly for test framework.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,79,rotected int iterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,81,rotected UnivariateRealSolverImpl(
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,82,"nt defaultMaximalIterationCount,"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,83,ouble defaultAbsoluteAccuracy) {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,84,his.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,85,his.defaultRelativeAccuracy = 1E-14;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,86,his.defaultFunctionValueAccuracy = 1E-15;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,87,his.absoluteAccuracy = defaultAbsoluteAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,88,his.relativeAccuracy = defaultRelativeAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,89,his.functionValueAccuracy = defaultFunctionValueAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,90,his.defaultMaximalIterationCount = defaultMaximalIterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,91,his.maximalIterationCount = defaultMaximalIterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,94,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,95," @see org.apache.commons.math.UnivariateRealSolver#solve(double, double)"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,97,"ublic double solve(double min, double max) throws MathException {"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,98,hrow new UnsupportedOperationException();
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,101,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,102," @see org.apache.commons.math.UnivariateRealSolver#solve(double, double, double)"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,104,"ublic double solve(double min, double max, double startValue)"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,105,hrows MathException {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,106,hrow new UnsupportedOperationException();
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,110, Get result of last solver run.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,111, @see org.apache.commons.math.UnivariateRealSolver#getResult()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,113,ublic double getResult() throws MathException {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,114,f (resultComputed) {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,115,eturn result;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,116, else {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,117,"hrow new MathException(""No result available"");"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,121,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,122, @see org.apache.commons.math.UnivariateRealSolver#getIterationCount()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,124,ublic double getIterationCount() throws MathException {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,125,f (resultComputed) {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,126,eturn iterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,127, else {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,128,"hrow new MathException(""No result available"");"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,133, Convenience function for implementations.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,134, @param result the result to set
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,135, @param iteratinCount the iteration count to set
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,137,"rotected final void setResult(double result, int iterationCount) {"
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,138,his.result = result;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,139,his.iterationCount = iterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,140,his.resultComputed = true;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,144, Convenience function for implementations.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,146,rotected final void clearResult() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,147,his.resultComputed = false;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,150,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,151, @see org.apache.commons.math.UnivariateRealSolver#setAccuracy(double)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,153,ublic void setAbsoluteAccuracy(double accuracy)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,154,hrows MathException {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,155,bsoluteAccuracy = accuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,158,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,159, @see org.apache.commons.math.UnivariateRealSolver#getAccuracy()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,161,ublic double getAbsoluteAccuracy() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,162,eturn absoluteAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,165,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,166, @see org.apache.commons.math.UnivariateRealSolver#resetAbsoluteAccuracy()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,168,ublic void resetAbsoluteAccuracy() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,169,bsoluteAccuracy = defaultAbsoluteAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,172,* Set maximum iteration count.
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,173, @see org.apache.commons.math.UnivariateRealSolver#setMaximalIterationCount(int)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,175,ublic void setMaximalIterationCount(int count) {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,176,aximalIterationCount = count;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,179,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,180, @see org.apache.commons.math.UnivariateRealSolver#getMaximalIterationCount()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,182,ublic int getMaximalIterationCount() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,183,eturn maximalIterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,186,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,187, @see org.apache.commons.math.UnivariateRealSolver#resetMaximalIterationCount()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,189,ublic void resetMaximalIterationCount() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,190,aximalIterationCount = defaultMaximalIterationCount;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,193,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,194, @see org.apache.commons.math.UnivariateRealSolver#setRelativeAccuracy(double)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,196,ublic void setRelativeAccuracy(double accuracy) throws MathException {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,197,elativeAccuracy = accuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,200,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,201, @see org.apache.commons.math.UnivariateRealSolver#getRelativeAccuracy()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,203,ublic double getRelativeAccuracy() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,204,eturn relativeAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,207,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,208, @see org.apache.commons.math.UnivariateRealSolver#resetRelativeAccuracy()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,210,ublic void resetRelativeAccuracy() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,211,elativeAccuracy = defaultRelativeAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,214,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,215, @see org.apache.commons.math.UnivariateRealSolver#setFunctionValueAccuracy(double)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,217,ublic void setFunctionValueAccuracy(double accuracy)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,218,hrows MathException {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,219,unctionValueAccuracy = accuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,222,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,223, @see org.apache.commons.math.UnivariateRealSolver#getFunctionValueAccuracy()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,225,ublic double getFunctionValueAccuracy() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,226,eturn functionValueAccuracy;
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,229,* (non-Javadoc)
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,230, @see org.apache.commons.math.UnivariateRealSolver#resetFunctionValueAccuracy()
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,232,ublic void resetFunctionValueAccuracy() {
False,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,233,unctionValueAccuracy = defaultFunctionValueAccuracy;
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,5, reserved.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,9, are met:
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,17,    distribution.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,54,ackage org.apache.commons.math;
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,57, Auxillary class for testing solvers.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,59, @author pietsch at apache.org
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,62,ublic class QuinticFunction implements UnivariateRealFunction {
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,64,* Evaluate quintic.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,65, @see org.apache.commons.math.UnivariateRealFunction#value(double)
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,67,ublic double value(double x) throws MathException {
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,68,eturn (x-1)*(x-0.5)*x*(x+0.5)*(x+1);
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,71,* First derivative of quintic.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,72, @see org.apache.commons.math.UnivariateRealFunction#firstDerivative(double)
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,74,ublic double firstDerivative(double x) throws MathException {
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,75,eturn (5*x*x-3.75)*x*x+0.25;
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,78,* Second order derivative of quintic.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,79, Unsupported.
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,80, @see org.apache.commons.math.UnivariateRealFunction#secondDerivative(double)
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,82,ublic double secondDerivative(double x) throws MathException {
False,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,83,hrow new UnsupportedOperationException();
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,5, reserved.
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,9, are met:
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,17,    distribution.
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,54,ackage org.apache.commons.math;
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,56,mport junit.framework.Assert;
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,57,mport junit.framework.Test;
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,58,mport junit.framework.TestCase;
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,59,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,62, @author pietsch at apache.org
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,64, Testcase for UnivariateRealSolver.
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,67,ublic final class RealSolverTest extends TestCase {
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,69,ublic RealSolverTest(String name) {
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,70,uper(name);
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,73,ublic static Test suite() {
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,74,estSuite suite = new TestSuite(RealSolverTest.class);
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,75,"uite.setName(""UnivariateRealSolver Tests"");"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,76,eturn suite;
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,79,ublic void testSinZero() throws MathException {
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,80,nivariateRealFunction f = new SinFunction();
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,81,ouble result;
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,82,nivariateRealSolver solver = new BrentSolver(f);
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,83,"esult = solver.solve(3, 4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,84,"ssert.assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,85,olver = new SecantSolver(f);
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,86,"esult = solver.solve(3, 4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,87,"ssert.assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,90,ublic void testQuinticZero() throws MathException {
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,91,nivariateRealFunction f = new QuinticFunction();
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,92,ouble result;
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,93,nivariateRealSolver solver = new BrentSolver(f);
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,94,/ symmetric bracket around 0
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,95,"esult = solver.solve(-0.2, 0.2);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,96,"ssert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,97,/ asymmetric bracket around 0
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,98,"esult = solver.solve(-0.2, 0.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,99,"ssert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,100,/ symmetric bracket around 0.5
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,101,"esult = solver.solve(0.2, 0.8);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,102,"ssert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,103,/ asymmetric bracket around 0.5
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,104,"esult = solver.solve(0.2, 0.6);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,105,"ssert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,106,/ symmetric bracket around 1
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,107,"esult = solver.solve(0.6, 1.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,108,"ssert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,109,/ asymmetric bracket around 1
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,110,"esult = solver.solve(0.7, 2.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,111,"ssert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,112,olver = new SecantSolver(f);
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,113,/ symmetric bracket around 0
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,114,"esult = solver.solve(-0.2, 0.2);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,115,"ssert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,116,/ asymmetric bracket around 0
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,117,"esult = solver.solve(-0.2, 0.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,118,"ssert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,119,/ symmetric bracket around 0.5
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,120,"esult = solver.solve(0.2, 0.8);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,121,"ssert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,122,/ asymmetric bracket around 0.5
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,123,"esult = solver.solve(0.2, 0.6);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,124,"ssert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,125,/ symmetric bracket around 1
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,126,"esult = solver.solve(0.6, 1.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,127,"ssert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,128,/ asymmetric bracket around 1
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,129,"esult = solver.solve(0.7, 2.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,130,"ssert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,131,/ Static solve method
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,132,/ symmetric bracket around 0
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,133,"esult = UnivariateRealSolverFactory.solve(f,-0.2, 0.2);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,134,"ssert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,135,/ asymmetric bracket around 0
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,136,"esult = UnivariateRealSolverFactory.solve(f,-0.2, 0.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,137,"ssert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,138,/ symmetric bracket around 0.5
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,139,"esult = UnivariateRealSolverFactory.solve(f,0.2, 0.8);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,140,"ssert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,141,/ asymmetric bracket around 0.5
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,142,"esult = UnivariateRealSolverFactory.solve(f,0.2, 0.6);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,143,"ssert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,144,/ symmetric bracket around 1
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,145,"esult = UnivariateRealSolverFactory.solve(f,0.6, 1.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,146,"ssert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,147,/ asymmetric bracket around 1
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,148,"esult = UnivariateRealSolverFactory.solve(f,0.7, 2.4);"
False,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,149,"ssert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,5, reserved.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,9, are met:
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,17,    distribution.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,54,ackage org.apache.commons.math;
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,57, Auxillary class for testing solvers.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,59, The function is extraordinarily well behaved around zero roots: it
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,60," has an inflection point there (second order derivative is zero),"
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,61, which means linear approximation (Regula Falsi) will converge
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,62, quadratically.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,64, @author pietsch at apache.org
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,67,ublic class SinFunction implements UnivariateRealFunction {
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,69,* Evaluate sinus fuction.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,70, @see org.apache.commons.math.UnivariateRealFunction#value(double)
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,72,ublic double value(double x) throws MathException {
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,73,eturn Math.sin(x);
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,76,* First derivative of sinus function
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,77, @see org.apache.commons.math.UnivariateRealFunction#firstDerivative(double)
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,79,ublic double firstDerivative(double x) throws MathException {
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,80,eturn Math.cos(x);
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,83,* Second derivative of sinus function.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,84, Unsupported.
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,85, @see org.apache.commons.math.UnivariateRealFunction#secondDerivative(double)
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,87,ublic double secondDerivative(double x) throws MathException {
False,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,88,hrow new UnsupportedOperationException();
