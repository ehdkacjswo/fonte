is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,63, @version $Revision: 1.12 $ $Date: 2003/11/14 22:22:17 $
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,63,* @version $Revision: 1.13 $ $Date: 2003/11/18 15:07:12 $
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,154,x > 1) || (a <= 0.0) || (b <= 0.0)) {
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,154,(x > 1) || (a <= 0.0) || (b <= 0.0))
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,157,} else if (x > (a + 1.0) / (a + b + 1.0)) {
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,158,"ret = 1.0 - regularizedBeta(1.0 - x, b, a, epsilon, maxIterations);"
False,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,87, @version $Revision: 1.9 $ $Date: 2003/11/15 16:01:38 $
True,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,87,* @version $Revision: 1.10 $ $Date: 2003/11/18 15:07:12 $
False,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,136,umXX += ((double) n / (double) (n + 1)) * (x - xbar) * (x - xbar);
False,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,137,umYY += ((double) n / (double) (n + 1)) * (y - ybar) * (y - ybar);
False,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,138,umXY += ((double) n / (double) (n + 1)) * (x - xbar) * (y - ybar);
False,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,139,bar += (1d / (double) (n + 1)) * (x - xbar);
False,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,140,bar += (1d / (double) (n + 1)) * (y - ybar);
True,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,136,double dx = x - xbar;
True,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,137,double dy = y - ybar;
True,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,138,sumXX += dx * dx * (double) n / (double) (n + 1.0);
True,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,139,sumYY += dy * dy * (double) n / (double) (n + 1.0);
True,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,140,sumXY += dx * dy * (double) n / (double) (n + 1.0);
True,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,141,xbar += dx / (double) (n + 1.0);
True,src/java/org/apache/commons/math/stat/BivariateRegression.java,src/java/org/apache/commons/math/stat/BivariateRegression.java,142,ybar += dy / (double) (n + 1.0);
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,56,import java.util.Random;
False,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,62, @version $Revision: 1.8 $ $Date: 2003/11/14 22:22:18 $
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,64,* @version $Revision: 1.9 $ $Date: 2003/11/18 15:07:12 $
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,265,public void testPerfect() {
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,266,BivariateRegression regression = new BivariateRegression();
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,267,int n = 100;
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,268,for (int i = 0; i < n; i++) {
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,269,"regression.addData(((double) i) / (n - 1), i);"
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,271,"assertEquals(0.0, regression.getSignificance(), 1.0e-5);"
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,272,assertTrue(regression.getSlope() > 0.0);
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,275,public void testPerfectNegative() {
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,276,BivariateRegression regression = new BivariateRegression();
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,277,int n = 100;
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,278,for (int i = 0; i < n; i++) {
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,279,"regression.addData(-((double) i) / (n - 1), i);"
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,281,"assertEquals(0.0, regression.getSignificance(), 1.0e-5);"
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,282,assertTrue(regression.getSlope() < 0.0);
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,285,public void testRandom() {
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,286,BivariateRegression regression = new BivariateRegression();
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,287,Random random = new Random(1);
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,288,int n = 100;
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,289,for (int i = 0; i < n; i++) {
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,290,"regression.addData(((double) i) / (n - 1), random.nextDouble());"
True,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,292,assertTrue(0.0 < regression.getSignificance() && regression.getSignificance() < 1.0);
