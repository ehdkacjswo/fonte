is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,33, @version $Revision: 1.26 $ $Date: 2004/04/11 19:00:45 $
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,33,* @version $Revision: 1.27 $ $Date: 2004/05/24 05:30:33 $
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,319,* Returns the sum of the (signed) differences between corresponding elements of the
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,320,"* input arrays -- i.e., sum(sample1[i] - sample2[i])."
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,322,* @param sample1  the first array
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,323,* @param sample2  the second array
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,324,* @return sum of paired differences
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,325,* @throws IllegalArgumentException if the arrays do not have the same
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,326,* (positive) length
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,328,"public static double sumDifference(final double[] sample1, final double[] sample2)"
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,329,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,330,int n = sample1.length;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,331,if (n  != sample2.length || n < 1) {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,332,throw new IllegalArgumentException
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,333,"(""Input arrays must have the same (positive) length."");"
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,335,double result = 0;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,336,for (int i = 0; i < n; i++) {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,337,result += sample1[i] - sample2[i];
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,339,return result;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,343,* Returns the mean of the (signed) differences between corresponding elements of the
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,344,"* input arrays -- i.e., sum(sample1[i] - sample2[i]) / sample1.length."
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,346,* @param sample1  the first array
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,347,* @param sample2  the second array
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,348,* @return mean of paired differences
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,349,* @throws IllegalArgumentException if the arrays do not have the same
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,350,* (positive) length
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,352,"public static double meanDifference(final double[] sample1, final double[] sample2)"
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,353,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,354,"return sumDifference(sample1, sample2) / (double) sample1.length;"
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,358,* Returns the variance of the (signed) differences between corresponding elements of the
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,359,"* input arrays -- i.e., var(sample1[i] - sample2[i])."
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,361,* @param sample1  the first array
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,362,* @param sample2  the second array
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,363,* @param meanDifference   the mean difference between corresponding entries
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,364,"* @see #meanDifference(double[],double[])"
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,365,* @return variance of paired differences
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,366,* @throws IllegalArgumentException if the arrays do not have the same
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,367,* length or their common length is less than 2.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,369,"public static double varianceDifference(final double[] sample1, final double[] sample2,"
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,370,double meanDifference)  throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,371,double sum1 = 0d;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,372,double sum2 = 0d;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,373,double diff = 0d;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,374,int n = sample1.length;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,375,if (n < 2) {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,376,"throw new IllegalArgumentException(""Input array lengths must be at least 2."");"
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,378,for (int i = 0; i < n; i++) {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,379,diff = sample1[i] - sample2[i];
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,380,sum1 += (diff - meanDifference) *(diff - meanDifference);
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,381,sum2 += diff - meanDifference;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,383,return (sum1 - (sum2 * sum2 / (double) n)) / (double) (n - 1);
False,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,26, @version $Revision: 1.16 $ $Date: 2004/05/23 00:56:15 $
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,26,* @version $Revision: 1.17 $ $Date: 2004/05/24 05:33:42 $
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,394,public void testDifferenceStats() throws Exception {
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,395,"double sample1[] = {1d, 2d, 3d, 4d};"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,396,"double sample2[] = {1d, 3d, 4d, 2d};"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,397,"double diff[] = {0d, -1d, -1d, 2d};"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,398,"double small[] = {1d, 4d};"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,399,"double meanDifference = StatUtils.meanDifference(sample1, sample2);"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,400,"assertEquals(StatUtils.sumDifference(sample1, sample2), StatUtils.sum(diff), tolerance);"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,401,"assertEquals(meanDifference, StatUtils.mean(diff), tolerance);"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,402,"assertEquals(StatUtils.varianceDifference(sample1, sample2, meanDifference),"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,403,"StatUtils.variance(diff), tolerance);"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,404,try {
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,405,"StatUtils.meanDifference(sample1, small);"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,406,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,407,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/StatUtilsTest.java,src/test/org/apache/commons/math/stat/StatUtilsTest.java,408,// expected
