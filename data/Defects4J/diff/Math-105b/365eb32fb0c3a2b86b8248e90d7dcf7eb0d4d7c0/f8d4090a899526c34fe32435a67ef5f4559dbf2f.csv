is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,23,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,24,* Tests can be:<ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,25,* <li>One-sample or two-sample</li>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,26,* <li>One-sided or two-sided</li>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,27,* <li>Paired or unpaired (for two-sample tests)</li>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,28,* <li>Homoscedastic (equal variance assumption) or heteroscedastic
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,29,* (for two sample tests)</li>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,30,* <li>Fixed significance level (boolean-valued) or returning p-values.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,31,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,32,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,33,"* Test statistics are available for all tests.  Methods including ""Test"" in"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,34,"* in their names perform tests, all other methods return t-statistics.  Among"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,35,"* the ""Test"" methods, <code>double-</code>valued methods return p-values;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,36,* <code>boolean-</code>valued methods perform fixed significance level tests.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,37,* Significance levels are always specified as numbers between 0 and 0.5
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,38,* (e.g. tests at the 95% level  use <code>alpha=0.05</code>).
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,39,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,40,* Input to tests can be either <code>double[]</code> arrays or
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,41,* {@link StatisticalSummary} instances.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,24, @version $Revision: 1.6 $ $Date: 2004/06/23 16:26:14 $
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,44,* @version $Revision: 1.7 $ $Date: 2004/08/02 04:20:08 $
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,49,"ouble pairedT(double[] sample1, double[] sample2)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,50,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,67,"public abstract double pairedT(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,68,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,54," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,55," p-value</a>, associated with a paired, two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,71,"* <i> p-value</i>, associated with a paired, two-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,86,"ouble pairedTTest(double[] sample1, double[] sample2)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,87,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,102,"public abstract double pairedTTest(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,103,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,90, Performs a paired t-test</a> evaluating the null hypothesis that the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,105,* Performs a paired t-test evaluating the null hypothesis that the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,121,"oolean pairedTTest(double[] sample1, double[] sample2, double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,122,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,136,public abstract boolean pairedTTest(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,137,"double[] sample1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,138,"double[] sample2,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,139,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,140,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,139,"ouble t(double mu, double[] observed)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,140,hrows IllegalArgumentException;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,156,"public abstract double t(double mu, double[] observed)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,157,throws IllegalArgumentException;
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,158,"ouble t(double mu, StatisticalSummary sampleStats)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,159,hrows IllegalArgumentException;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,174,"public abstract double t(double mu, StatisticalSummary sampleStats)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,175,throws IllegalArgumentException;
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,162," Computes a <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,163, 2-sample t statistic. </a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,177,"* Computes a 2-sample t statistic,  under the hypothesis of equal"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,178,* subpopulation variances.  To compute a t-statistic without the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,179,"* equal variances hypothesis, use {@link #t(double[], double[])}."
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,165, This statistic can be used to perform a two-sample t-test to compare
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,166, sample means.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,181,* This statistic can be used to perform a (homoscedastic) two-sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,182,* t-test to compare sample means.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,168," If <code>equalVariances</code> is <code>true</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,184,* The t-statisitc is
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,170, (1) &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,186,* &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,184," If <code>equalVariances</code> is <code>false</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,200,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,201,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,202,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,204,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,205,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,206,* @return t statistic
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,207,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,209,"public abstract double homoscedasticT(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,210,throws IllegalArgumentException;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,212,"* Computes a 2-sample t statistic, without the hypothesis of equal"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,213,* subpopulation variances.  To compute a t-statistic assuming equal
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,214,"* variances, use {@link #homoscedasticT(double[], double[])}."
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,186, (2) &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,216,* This statistic can be used to perform a two-sample t-test to compare
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,217,* sample means.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,218,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,219,* The t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,220,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,221,* &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,222,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,223,*  where <strong><code>n1</code></strong> is the size of the first sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,224,* <strong><code> n2</code></strong> is the size of the second sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,225,* <strong><code> m1</code></strong> is the mean of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,226,* <strong><code> m2</code></strong> is the mean of the second sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,227,* <strong><code> var1</code></strong> is the variance of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,228,* <strong><code> var2</code></strong> is the variance of the second sample;
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,194, @param equalVariances are the sample variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,197, @throws MathException if the statistic can not be computed do to a
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,198,         convergence or other numerical error.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,200,"ouble t(double[] sample1, double[] sample2, boolean equalVariances)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,201,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,239,"public abstract double t(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,240,throws IllegalArgumentException;
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,204," Computes a <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,205," 2-sample t statistic </a>, comparing the means of the datasets described"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,206, by two {@link StatisticalSummary} instances.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,242,"* Computes a 2-sample t statistic </a>, comparing the means of the datasets"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,243,"* described by two {@link StatisticalSummary} instances, without the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,244,* assumption of equal subpopulation variances.  Use
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,245,"* {@link #homoscedasticT(StatisticalSummary, StatisticalSummary)} to"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,246,* compute a t-statistic under the equal variances assumption.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,211," If <code>equalVariances</code> is <code>true</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,251,* The returned  t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,252,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,253,* &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,213, (1) &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,255,* where <strong><code>n1</code></strong> is the size of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,256,* <strong><code> n2</code></strong> is the size of the second sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,257,* <strong><code> m1</code></strong> is the mean of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,258,* <strong><code> m2</code></strong> is the mean of the second sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,259,* <strong><code> var1</code></strong> is the variance of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,260,* <strong><code> var2</code></strong> is the variance of the second sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,261,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,262,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,263,* <li>The datasets described by the two Univariates must each contain
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,264,* at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,265,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,267,* @param sampleStats1 StatisticalSummary describing data from the first sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,268,* @param sampleStats2 StatisticalSummary describing data from the second sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,269,* @return t statistic
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,270,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,272,public abstract double t(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,273,"StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,274,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,275,throws IllegalArgumentException;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,277,"* Computes a 2-sample t statistic, comparing the means of the datasets"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,278,"* described by two {@link StatisticalSummary} instances, under the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,279,* assumption of equal subpopulation variances.  To compute a t-statistic
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,280,"* without the equal variances assumption, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,281,"* {@link #t(StatisticalSummary, StatisticalSummary)}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,282,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,283,* This statistic can be used to perform a (homoscedastic) two-sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,284,* t-test to compare sample means.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,285,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,286,* The t-statisitc returned is
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,287,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,288,* &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,218, <strong><code> m2</code></strong> is the mean of second sample</li>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,219, </ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,293,* <strong><code> m2</code></strong> is the mean of second sample
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,227," If <code>equalVariances</code> is <code>false</code>,  the t-statisitc is"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,228, <p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,229, (2) &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,230, <p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,238, @param equalVariances are the sample variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,242,"ouble t(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,243,oolean equalVariances)
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,244,hrows IllegalArgumentException;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,311,public abstract double homoscedasticT(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,312,"StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,313,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,314,throws IllegalArgumentException;
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,248," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,249," p-value</a>, associated with a one-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,317,"* <i>p-value</i>, associated with a one-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,273,"ouble tTest(double mu, double[] sample)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,274,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,341,"public abstract double tTest(double mu, double[] sample)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,342,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,279,  which <code>sample</code> is drawn equals <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,346,* which <code>sample</code> is drawn equals <code>mu</code>.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,311,"oolean tTest(double mu, double[] sample, double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,312,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,378,"public abstract boolean tTest(double mu, double[] sample, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,379,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,316," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,317," p-value</a>, associated with a one-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,382,"* <i>p-value</i>, associated with a one-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,330," <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,395,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,396,* here</a>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,342,"ouble tTest(double mu, StatisticalSummary sampleStats)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,343,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,408,"public abstract double tTest(double mu, StatisticalSummary sampleStats)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,409,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,347, two-sided t-test</a> evaluating the null hypothesis that the mean of the population from
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,348, which the dataset described by <code>stats</code> is drawn equals <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,412,* two-sided t-test</a> evaluating the null hypothesis that the mean of the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,413,* population from which the dataset described by <code>stats</code> is
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,414,* drawn equals <code>mu</code>.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,350, Returns <code>true</code> iff the null hypothesis can be
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,351, rejected with confidence <code>1 - alpha</code>.  To
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,352," perform a 1-sided test, use <code>alpha / 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,416,* Returns <code>true</code> iff the null hypothesis can be rejected with
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,417,"* confidence <code>1 - alpha</code>.  To  perform a 1-sided test, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,418,* <code>alpha / 2.</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,380,"oolean tTest(double mu, StatisticalSummary sampleStats, double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,381,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,446,public abstract boolean tTest(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,447,"double mu,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,448,"StatisticalSummary sampleStats,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,449,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,450,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,385," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,386," p-value</a>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,453,"* <i>p-value</i>, associated with a two-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,394," If the <code>equalVariances</code> parameter is <code>false,</code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,395, the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,461,* The test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,397," sample data to compute the p-value.  In this case, formula (1) for the"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,398," {@link #t(double[], double[], boolean)} statistic is used"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,399," and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,463,* sample data to compute the p-value.  The t-statistic used is as defined in
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,464,"* {@link #t(double[], double[])} and the Welch-Satterthwaite approximation"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,465,"* to the degrees of freedom is used,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,402, here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,468,* here.</a>  To perform the test under the assumption of equal subpopulation
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,469,"* variances, use {@link #homoscedasticTTest(double[], double[])}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,470,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,471,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,472,* The validity of the p-value depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,473,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,474,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,475,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,476,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,477,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,478,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,479,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,481,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,482,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,483,* @return p-value for t-test
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,484,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,485,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,487,"public abstract double tTest(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,488,"throws IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,490,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,491,"* <i>p-value</i>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,492,"* comparing the means of the input arrays, under the assumption that"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,493,* the two samples are drawn from subpopulations with equal variances.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,494,"* To perform the test without the equal variances assumption, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,495,"* {@link #tTest(double[], double[])}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,496,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,497,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,498,* at which one can reject the null hypothesis that the two means are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,499,* equal in favor of the two-sided alternative that they are different.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,500,"* For a one-sided test, divide the returned value by 2."
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,404," If <code>equalVariances</code> is <code>true</code>, a pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,405, estimate is used to compute the t-statistic (formula (2)) and the sum of the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,406, sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,502,* A pooled variance estimate is used to compute the t-statistic.  See
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,503,"* {@link #homoscedasticT(double[], double[])}. The sum of the sample sizes"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,504,* minus 2 is used as the degrees of freedom.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,420, @param equalVariances are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,425,"ouble tTest(double[] sample1, double[] sample2, boolean equalVariances)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,426,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,522,public abstract double homoscedasticTTest(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,523,"double[] sample1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,524,double[] sample2)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,525,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,429," Performs a <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,527,* Performs a
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,528,"* <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,432, with significance level <code>alpha</code>.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,531,* with significance level <code>alpha</code>.  This test does not assume
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,532,* that the subpopulation variances are equal.  To perform the test assuming
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,533,"* equal variances, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,534,"* {@link #homoscedasticTTest(double[], double[], double)}."
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,438," If the <code>equalVariances</code> parameter is <code>false,</code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,439, the test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,440, equal  and it uses approximated degrees of freedom computed from the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,441," sample data to compute the p-value.  In this case, formula (1) for the"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,442," {@link #t(double[], double[], boolean)} statistic is used"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,443," and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,444, as described
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,540,"* See {@link #t(double[], double[])} for the formula used to compute the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,541,* t-statistic.  Degrees of freedom are approximated using the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,446, here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,543,* Welch-Satterthwaite approximation.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,545,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,546,* <strong>Examples:</strong><br><ol>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,547,* <li>To test the (2-sided) hypothesis <code>mean 1 = mean 2 </code> at
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,548,"* the 95% level,  use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,549,"* <br><code>tTest(sample1, sample2, 0.05). </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,550,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,551,"* <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code>,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,552,* first verify that the measured  mean of <code>sample 1</code> is less
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,553,* than the mean of <code>sample 2</code> and then use
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,554,"* <br><code>tTest(sample1, sample2, 0.005) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,555,* </li></ol>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,448," If <code>equalVariances</code> is <code>true</code>, a pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,449, estimate is used to compute the t-statistic (formula (2)) and the sum of the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,450, sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,557,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,558,* The validity of the test depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,559,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,560,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,561,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,562,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,563,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,564,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,565,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,566,* <li> <code> 0 < alpha < 0.5 </code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,567,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,569,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,570,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,571,* @param alpha significance level of the test
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,572,* @return true if the null hypothesis can be rejected with
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,573,* confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,574,* @throws IllegalArgumentException if the preconditions are not met
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,575,* @throws MathException if an error occurs performing the test
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,577,public abstract boolean tTest(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,578,"double[] sample1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,579,"double[] sample2,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,580,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,581,"throws IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,583,* Performs a
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,584,"* <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,585,* two-sided t-test</a> evaluating the null hypothesis that <code>sample1</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,586,"* and <code>sample2</code> are drawn from populations with the same mean,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,587,"* with significance level <code>alpha</code>,  assuming that the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,588,* subpopulation variances are equal.  Use
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,589,"* {@link #tTest(double[], double[], double)} to perform the test without"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,590,* the assumption of equal variances.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,591,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,592,* Returns <code>true</code> iff the null hypothesis that the means are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,593,* equal can be rejected with confidence <code>1 - alpha</code>.  To
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,594,"* perform a 1-sided test, use <code>alpha / 2.</code>  To perform the test"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,595,"* without the assumption of equal subpopulation variances, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,596,"* {@link #tTest(double[], double[], double)}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,597,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,598,* A pooled variance estimate is used to compute the t-statistic. See
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,599,"* {@link #t(double[], double[])} for the formula. The sum of the sample"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,600,* sizes minus 2 is used as the degrees of freedom.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,454," the 95% level, under the assumption of equal subpopulation variances,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,455," use <br><code>tTest(sample1, sample2, 0.05, true) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,604,"* the 95% level, use <br><code>tTest(sample1, sample2, 0.05). </code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,457, <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,458," at the 99% level without assuming equal variances, first verify that the measured"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,459, mean of <code>sample 1</code> is less than the mean of <code>sample 2</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,460," and then use <br><code>tTest(sample1, sample2, 0.005, false) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,606,"* <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2, </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,607,"* at the 99% level, first verify that the measured mean of"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,608,* <code>sample 1</code> is less than the mean of <code>sample 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,609,* and then use
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,610,"* <br><code>tTest(sample1, sample2, 0.005) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,478, @param equalVariances are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,484,"oolean tTest(double[] sample1, double[] sample2, double alpha,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,485,oolean equalVariances)
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,486,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,633,public abstract boolean homoscedasticTTest(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,634,"double[] sample1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,635,"double[] sample2,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,636,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,637,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,490," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,491," p-value</a>, associated with a two-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,492, comparing the means of the datasets described by two Univariates.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,640,"* <i>p-value</i>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,641,* comparing the means of the datasets described by two StatisticalSummary
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,642,* instances.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,499," If the <code>equalVariances</code> parameter is <code>false,</code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,500, the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,649,* The test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,502," sample data to compute the p-value.  In this case, formula (1) for the"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,503," {@link #t(double[], double[], boolean)} statistic is used"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,504," and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,505, as described
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,506," <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,507, here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,651,* sample data to compute the p-value.   To perform the test assuming
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,652,"* equal variances, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,653,"* {@link #homoscedasticTTest(StatisticalSummary, StatisticalSummary)}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,654,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,655,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,656,* The validity of the p-value depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,657,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,658,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,659,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,660,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,661,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,662,* <li>The datasets described by the two Univariates must each contain
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,663,* at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,664,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,666,* @param sampleStats1  StatisticalSummary describing data from the first sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,667,* @param sampleStats2  StatisticalSummary describing data from the second sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,668,* @return p-value for t-test
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,669,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,670,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,672,public abstract double tTest(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,673,"StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,674,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,675,"throws IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,677,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,678,"* <i>p-value</i>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,679,* comparing the means of the datasets described by two StatisticalSummary
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,680,"* instances, under the hypothesis of equal subpopulation variances. To"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,681,"* perform a test without the equal variances assumption, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,682,"* {@link #tTest(StatisticalSummary, StatisticalSummary)}."
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,509," If <code>equalVariances</code> is <code>true</code>, a pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,510, estimate is used to compute the t-statistic (formula (2)) and the sum of the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,511, sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,684,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,685,* at which one can reject the null hypothesis that the two means are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,686,* equal in favor of the two-sided alternative that they are different.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,687,"* For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,688,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,689,"* See {@link #homoscedasticT(double[], double[])} for the formula used to"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,690,* compute the t-statistic. The sum of the  sample sizes minus 2 is used as
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,691,* the degrees of freedom.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,525, @param equalVariances  are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,530,"ouble tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,531,oolean equalVariances)
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,532,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,709,public abstract double homoscedasticTTest(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,710,"StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,711,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,712,"throws IllegalArgumentException, MathException;"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,535," Performs a <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,536, two-sided t-test</a> evaluating the null hypothesis that <code>sampleStats1</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,537, and <code>sampleStats2</code> describe datasets drawn from populations with the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,538," same mean, with significance level <code>alpha</code>."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,714,* Performs a
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,715,"* <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,716,* two-sided t-test</a> evaluating the null hypothesis that
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,717,* <code>sampleStats1</code> and <code>sampleStats2</code> describe
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,718,"* datasets drawn from populations with the same mean, with significance"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,719,* level <code>alpha</code>.   This test does not assume that the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,720,* subpopulation variances are equal.  To perform the test under the equal
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,721,"* variances assumption, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,722,"* {@link #homoscedasticTTest(StatisticalSummary, StatisticalSummary)}."
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,544," If the <code>equalVariances</code> parameter is <code>false,</code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,545, the test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,546, equal  and it uses approximated degrees of freedom computed from the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,547," sample data to compute the p-value.  In this case, formula (1) for the"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,548," {@link #t(double[], double[], boolean)} statistic is used"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,549," and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,550, as described
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,728,"* See {@link #t(double[], double[])} for the formula used to compute the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,729,* t-statistic.  Degrees of freedom are approximated using the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,552, here.</a>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,553, <p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,554," If <code>equalVariances</code> is <code>true</code>, a pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,555, estimate is used to compute the t-statistic (formula (2)) and the sum of the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,556, sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,731,* Welch-Satterthwaite approximation.</a>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,560," the 95% level under the assumption of equal subpopulation variances, use"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,561," <br><code>tTest(sampleStats1, sampleStats2, 0.05, true) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,735,"* the 95%, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,736,"* <br><code>tTest(sampleStats1, sampleStats2, 0.05) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,564," at the 99% level without assuming that subpopulation variances are equal,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,565, first verify that the measured mean of  <code>sample 1</code> is less than
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,566, the mean of <code>sample 2</code> and then use
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,567," <br><code>tTest(sampleStats1, sampleStats2, 0.005, false) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,739,"* at the 99% level,  first verify that the measured mean of"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,740,* <code>sample 1</code> is less than  the mean of <code>sample 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,741,* and then use
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,742,"* <br><code>tTest(sampleStats1, sampleStats2, 0.005) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,586, @param equalVariances  are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,592,"oolean tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,593,"ouble alpha, boolean equalVariances)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,594,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,766,public abstract boolean tTest(
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,767,"StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,768,"StatisticalSummary sampleStats2,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,769,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,770,"throws IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,26,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,27,* Uses commons-math {@link org.apache.commons.math.distribution.TDistribution}
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,28,* implementation to estimate exact p-values.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,27, @version $Revision: 1.8 $ $Date: 2004/06/23 16:26:14 $
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,30,* @version $Revision: 1.9 $ $Date: 2004/08/02 04:20:08 $
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,75," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,76," p-value</a>, associated with a paired, two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,78,"* <i> p-value</i>, associated with a paired, two-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,116, Performs a paired t-test</a> evaluating the null hypothesis that the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,118,* Performs a paired t-test evaluating the null hypothesis that the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,175,"eturn t(StatUtils.mean(observed), mu, StatUtils.variance(observed), observed.length);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,177,"return t(StatUtils.mean(observed), mu, StatUtils.variance(observed),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,178,observed.length);
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,199,"eturn t(sampleStats.getMean(), mu, sampleStats.getVariance(), sampleStats.getN());"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,202,"return t(sampleStats.getMean(), mu, sampleStats.getVariance(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,203,sampleStats.getN());
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,203," Computes a <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,204, 2-sample t statistic. </a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,207,"* Computes a 2-sample t statistic,  under the hypothesis of equal"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,208,* subpopulation variances.  To compute a t-statistic without the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,209,"* equal variances hypothesis, use {@link #t(double[], double[])}."
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,206, This statistic can be used to perform a two-sample t-test to compare
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,207, sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,211,* This statistic can be used to perform a (homoscedastic) two-sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,212,* t-test to compare sample means.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,209," If <code>equalVariances</code> is <code>true</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,214,* The t-statisitc is
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,211, (1) &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,216,* &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,225," If <code>equalVariances</code> is <code>false</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,230,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,231,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,232,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,234,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,235,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,236,* @return t statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,237,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,239,"public double homoscedasticT(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,240,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,241,if ((sample1 == null) || (sample2 == null ||
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,242,"Math.min(sample1.length, sample2.length) < 2)) {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,243,"throw new IllegalArgumentException(""insufficient data for t statistic"");"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,245,"return homoscedasticT(StatUtils.mean(sample1), StatUtils.mean(sample2),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,246,"StatUtils.variance(sample1), StatUtils.variance(sample2),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,247,"(double) sample1.length, (double) sample2.length);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,251,"* Computes a 2-sample t statistic, without the hypothesis of equal"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,252,* subpopulation variances.  To compute a t-statistic assuming equal
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,253,"* variances, use {@link #homoscedasticT(double[], double[])}."
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,227, (2) &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,255,* This statistic can be used to perform a two-sample t-test to compare
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,256,* sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,257,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,258,* The t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,259,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,260,* &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,261,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,262,*  where <strong><code>n1</code></strong> is the size of the first sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,263,* <strong><code> n2</code></strong> is the size of the second sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,264,* <strong><code> m1</code></strong> is the mean of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,265,* <strong><code> m2</code></strong> is the mean of the second sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,266,* <strong><code> var1</code></strong> is the variance of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,267,* <strong><code> var2</code></strong> is the variance of the second sample;
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,235, @param equalVariances are the sample variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,239,"ublic double t(double[] sample1, double[] sample2, boolean equalVariances)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,278,"public double t(double[] sample1, double[] sample2)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,245,"eturn t(StatUtils.mean(sample1), StatUtils.mean(sample2), StatUtils.variance(sample1),"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,246,"tatUtils.variance(sample2),  (double) sample1.length,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,247,"double) sample2.length, equalVariances);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,284,"return t(StatUtils.mean(sample1), StatUtils.mean(sample2),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,285,"StatUtils.variance(sample1), StatUtils.variance(sample2),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,286,"(double) sample1.length, (double) sample2.length);"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,251," Computes a <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,252," 2-sample t statistic </a>, comparing the means of the datasets described"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,253, by two {@link StatisticalSummary} instances.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,290,"* Computes a 2-sample t statistic </a>, comparing the means of the datasets"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,291,"* described by two {@link StatisticalSummary} instances, without the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,292,* assumption of equal subpopulation variances.  Use
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,293,"* {@link #homoscedasticT(StatisticalSummary, StatisticalSummary)} to"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,294,* compute a t-statistic under the equal variances assumption.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,258," If <code>equalVariances</code> is <code>true</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,299,* The returned  t-statisitc is
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,260, (1) &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,301,* &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,302,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,303,* where <strong><code>n1</code></strong> is the size of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,304,* <strong><code> n2</code></strong> is the size of the second sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,305,* <strong><code> m1</code></strong> is the mean of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,306,* <strong><code> m2</code></strong> is the mean of the second sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,307,* <strong><code> var1</code></strong> is the variance of the first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,308,* <strong><code> var2</code></strong> is the variance of the second sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,309,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,310,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,311,* <li>The datasets described by the two Univariates must each contain
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,312,* at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,313,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,315,* @param sampleStats1 StatisticalSummary describing data from the first sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,316,* @param sampleStats2 StatisticalSummary describing data from the second sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,317,* @return t statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,318,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,320,"public double t(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,321,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,322,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,323,if ((sampleStats1 == null) ||
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,324,(sampleStats2 == null ||
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,325,"Math.min(sampleStats1.getN(), sampleStats2.getN()) < 2)) {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,326,"throw new IllegalArgumentException(""insufficient data for t statistic"");"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,328,"return t(sampleStats1.getMean(), sampleStats2.getMean(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,329,"sampleStats1.getVariance(), sampleStats2.getVariance(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,330,"(double) sampleStats1.getN(), (double) sampleStats2.getN());"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,334,"* Computes a 2-sample t statistic, comparing the means of the datasets"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,335,"* described by two {@link StatisticalSummary} instances, under the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,336,* assumption of equal subpopulation variances.  To compute a t-statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,337,"* without the equal variances assumption, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,338,"* {@link #t(StatisticalSummary, StatisticalSummary)}."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,339,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,340,* This statistic can be used to perform a (homoscedastic) two-sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,341,* t-test to compare sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,342,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,343,* The t-statisitc returned is
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,344,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,345,* &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,265, <strong><code> m2</code></strong> is the mean of second sample</li>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,266, </ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,350,* <strong><code> m2</code></strong> is the mean of second sample
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,274," If <code>equalVariances</code> is <code>false</code>,  the t-statisitc is"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,275, <p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,276, (2) &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,277, <p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,285, @param equalVariances are the sample variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,289,"ublic double t(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,290,oolean equalVariances)
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,368,"public double homoscedasticT(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,369,StatisticalSummary sampleStats2)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,297,"eturn t(sampleStats1.getMean(), sampleStats2.getMean(), sampleStats1.getVariance(),"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,298,"ampleStats2.getVariance(), (double) sampleStats1.getN(),"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,299,"double) sampleStats2.getN(), equalVariances);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,376,"return homoscedasticT(sampleStats1.getMean(), sampleStats2.getMean(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,377,"sampleStats1.getVariance(), sampleStats2.getVariance(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,378,"(double) sampleStats1.getN(), (double) sampleStats2.getN());"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,304," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,305," p-value</a>, associated with a one-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,383,"* <i>p-value</i>, associated with a one-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,334,"eturn tTest( StatUtils.mean(sample), mu, StatUtils.variance(sample), sample.length);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,412,"return tTest( StatUtils.mean(sample), mu, StatUtils.variance(sample),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,413,sample.length);
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,340,  which <code>sample</code> is drawn equals <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,419,* which <code>sample</code> is drawn equals <code>mu</code>.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,382," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,383," p-value</a>, associated with a one-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,461,"* <i>p-value</i>, associated with a one-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,396," <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,474,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,475,* here</a>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,413,"eturn tTest(sampleStats.getMean(), mu, sampleStats.getVariance(), sampleStats.getN());"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,492,"return tTest(sampleStats.getMean(), mu, sampleStats.getVariance(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,493,sampleStats.getN());
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,418, two-sided t-test</a> evaluating the null hypothesis that the mean of the population from
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,419, which the dataset described by <code>stats</code> is drawn equals <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,498,* two-sided t-test</a> evaluating the null hypothesis that the mean of the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,499,* population from which the dataset described by <code>stats</code> is
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,500,* drawn equals <code>mu</code>.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,421, Returns <code>true</code> iff the null hypothesis can be
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,422, rejected with confidence <code>1 - alpha</code>.  To
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,423," perform a 1-sided test, use <code>alpha / 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,502,* Returns <code>true</code> iff the null hypothesis can be rejected with
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,503,"* confidence <code>1 - alpha</code>.  To  perform a 1-sided test, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,504,* <code>alpha / 2.</code>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,451,"ublic boolean tTest( double mu, StatisticalSummary sampleStats, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,532,"public boolean tTest( double mu, StatisticalSummary sampleStats,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,533,double alpha)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,461," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,462," p-value</a>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,543,"* <i>p-value</i>, associated with a two-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,470," If the <code>equalVariances</code> parameter is <code>false,</code>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,471, the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,551,* The test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,473," sample data to compute the p-value.  In this case, formula (1) for the"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,474," {@link #t(double[], double[], boolean)} statistic is used"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,475," and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,553,* sample data to compute the p-value.  The t-statistic used is as defined in
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,554,"* {@link #t(double[], double[])} and the Welch-Satterthwaite approximation"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,555,"* to the degrees of freedom is used,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,478, here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,558,* here.</a>  To perform the test under the assumption of equal subpopulation
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,559,"* variances, use {@link #homoscedasticTTest(double[], double[])}."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,560,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,561,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,562,* The validity of the p-value depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,563,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,564,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,565,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,566,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,567,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,568,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,569,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,571,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,572,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,573,* @return p-value for t-test
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,574,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,575,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,577,"public double tTest(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,578,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,579,if ((sample1 == null) || (sample2 == null ||
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,580,"Math.min(sample1.length, sample2.length) < 2)) {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,581,"throw new IllegalArgumentException(""insufficient data"");"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,583,"return tTest(StatUtils.mean(sample1), StatUtils.mean(sample2),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,584,"StatUtils.variance(sample1), StatUtils.variance(sample2),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,585,"(double) sample1.length, (double) sample2.length);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,589,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,590,"* <i>p-value</i>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,591,"* comparing the means of the input arrays, under the assumption that"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,592,* the two samples are drawn from subpopulations with equal variances.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,593,"* To perform the test without the equal variances assumption, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,594,"* {@link #tTest(double[], double[])}."
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,480," If <code>equalVariances</code> is <code>true</code>, a pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,481, estimate is used to compute the t-statistic (formula (2)) and the sum of the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,482, sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,596,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,597,* at which one can reject the null hypothesis that the two means are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,598,* equal in favor of the two-sided alternative that they are different.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,599,"* For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,600,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,601,* A pooled variance estimate is used to compute the t-statistic.  See
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,602,"* {@link #homoscedasticT(double[], double[])}. The sum of the sample sizes"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,603,* minus 2 is used as the degrees of freedom.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,496, @param equalVariances are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,501,"ublic double tTest(double[] sample1, double[] sample2, boolean equalVariances)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,621,"public double homoscedasticTTest(double[] sample1, double[] sample2)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,507,"eturn tTest(StatUtils.mean(sample1), StatUtils.mean(sample2), StatUtils.variance(sample1),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,627,"return homoscedasticTTest(StatUtils.mean(sample1),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,628,"StatUtils.mean(sample2), StatUtils.variance(sample1),"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,509,"double) sample2.length, equalVariances);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,630,(double) sample2.length);
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,513," Performs a <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,635,* Performs a
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,636,"* <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,516, with significance level <code>alpha</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,639,* with significance level <code>alpha</code>.  This test does not assume
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,640,* that the subpopulation variances are equal.  To perform the test assuming
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,641,"* equal variances, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,642,"* {@link #homoscedasticTTest(double[], double[], double)}."
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,522," If the <code>equalVariances</code> parameter is <code>false,</code>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,523, the test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,524, equal  and it uses approximated degrees of freedom computed from the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,525," sample data to compute the p-value.  In this case, formula (1) for the"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,526," {@link #t(double[], double[], boolean)} statistic is used"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,527," and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,528, as described
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,648,"* See {@link #t(double[], double[])} for the formula used to compute the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,649,* t-statistic.  Degrees of freedom are approximated using the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,530, here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,651,* Welch-Satterthwaite approximation.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,653,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,654,* <strong>Examples:</strong><br><ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,655,* <li>To test the (2-sided) hypothesis <code>mean 1 = mean 2 </code> at
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,656,"* the 95% level,  use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,657,"* <br><code>tTest(sample1, sample2, 0.05). </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,658,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,659,"* <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code>,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,660,* first verify that the measured  mean of <code>sample 1</code> is less
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,661,* than the mean of <code>sample 2</code> and then use
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,662,"* <br><code>tTest(sample1, sample2, 0.005) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,663,* </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,664,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,665,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,666,* The validity of the test depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,667,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,668,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,669,* here</a>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,532," If <code>equalVariances</code> is <code>true</code>, a pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,533, estimate is used to compute the t-statistic (formula (2)) and the sum of the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,534, sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,671,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,672,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,673,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,674,* <li> <code> 0 < alpha < 0.5 </code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,675,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,677,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,678,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,679,* @param alpha significance level of the test
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,680,* @return true if the null hypothesis can be rejected with
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,681,* confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,682,* @throws IllegalArgumentException if the preconditions are not met
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,683,* @throws MathException if an error occurs performing the test
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,685,"public boolean tTest(double[] sample1, double[] sample2,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,686,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,687,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,688,if ((alpha <= 0) || (alpha > 0.5)) {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,689,"throw new IllegalArgumentException(""bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,691,"return (tTest(sample1, sample2) < alpha);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,695,* Performs a
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,696,"* <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,697,* two-sided t-test</a> evaluating the null hypothesis that <code>sample1</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,698,"* and <code>sample2</code> are drawn from populations with the same mean,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,699,"* with significance level <code>alpha</code>,  assuming that the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,700,* subpopulation variances are equal.  Use
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,701,"* {@link #tTest(double[], double[], double)} to perform the test without"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,702,* the assumption of equal variances.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,703,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,704,* Returns <code>true</code> iff the null hypothesis that the means are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,705,* equal can be rejected with confidence <code>1 - alpha</code>.  To
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,706,"* perform a 1-sided test, use <code>alpha / 2.</code>  To perform the test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,707,"* without the assumption of equal subpopulation variances, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,708,"* {@link #tTest(double[], double[], double)}."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,709,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,710,* A pooled variance estimate is used to compute the t-statistic. See
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,711,"* {@link #t(double[], double[])} for the formula. The sum of the sample"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,712,* sizes minus 2 is used as the degrees of freedom.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,538," the 95% level, under the assumption of equal subpopulation variances,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,539," use <br><code>tTest(sample1, sample2, 0.05, true) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,716,"* the 95% level, use <br><code>tTest(sample1, sample2, 0.05). </code>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,541, <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,542," at the 99% level without assuming equal variances, first verify that the measured"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,543, mean of <code>sample 1</code> is less than the mean of <code>sample 2</code>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,544," and then use <br><code>tTest(sample1, sample2, 0.005, false) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,718,"* <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2, </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,719,"* at the 99% level, first verify that the measured mean of"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,720,* <code>sample 1</code> is less than the mean of <code>sample 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,721,* and then use
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,722,"* <br><code>tTest(sample1, sample2, 0.005) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,562, @param equalVariances are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,568,"ublic boolean tTest(double[] sample1, double[] sample2, double alpha,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,569,oolean equalVariances)
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,745,"public boolean homoscedasticTTest(double[] sample1, double[] sample2,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,746,double alpha)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,574,"eturn (tTest(sample1, sample2, equalVariances) < alpha);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,751,"return (homoscedasticTTest(sample1, sample2) < alpha);"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,579," <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,580," p-value</a>, associated with a two-sample, two-tailed t-test"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,581, comparing the means of the datasets described by two Univariates.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,756,"* <i>p-value</i>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,757,* comparing the means of the datasets described by two StatisticalSummary
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,758,* instances.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,588," If the <code>equalVariances</code> parameter is <code>false,</code>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,589, the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,765,* The test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,591," sample data to compute the p-value.  In this case, formula (1) for the"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,592," {@link #t(double[], double[], boolean)} statistic is used"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,593," and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,594, as described
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,595," <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,596, here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,767,* sample data to compute the p-value.   To perform the test assuming
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,768,"* equal variances, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,769,"* {@link #homoscedasticTTest(StatisticalSummary, StatisticalSummary)}."
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,598," If <code>equalVariances</code> is <code>true</code>, a pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,599, estimate is used to compute the t-statistic (formula (2)) and the sum of the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,600, sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,771,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,772,* The validity of the p-value depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,773,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,774,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,775,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,776,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,777,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,778,* <li>The datasets described by the two Univariates must each contain
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,779,* at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,780,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,782,* @param sampleStats1  StatisticalSummary describing data from the first sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,783,* @param sampleStats2  StatisticalSummary describing data from the second sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,784,* @return p-value for t-test
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,785,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,786,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,788,"public double tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,789,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,790,if ((sampleStats1 == null) || (sampleStats2 == null ||
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,791,"Math.min(sampleStats1.getN(), sampleStats2.getN()) < 2)) {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,792,"throw new IllegalArgumentException(""insufficient data for t statistic"");"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,794,"return tTest(sampleStats1.getMean(), sampleStats2.getMean(), sampleStats1.getVariance(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,795,"sampleStats2.getVariance(), (double) sampleStats1.getN(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,796,(double) sampleStats2.getN());
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,800,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,801,"* <i>p-value</i>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,802,* comparing the means of the datasets described by two StatisticalSummary
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,803,"* instances, under the hypothesis of equal subpopulation variances. To"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,804,"* perform a test without the equal variances assumption, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,805,"* {@link #tTest(StatisticalSummary, StatisticalSummary)}."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,806,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,807,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,808,* at which one can reject the null hypothesis that the two means are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,809,* equal in favor of the two-sided alternative that they are different.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,810,"* For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,811,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,812,"* See {@link #homoscedasticT(double[], double[])} for the formula used to"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,813,* compute the t-statistic. The sum of the  sample sizes minus 2 is used as
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,814,* the degrees of freedom.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,614, @param equalVariances  are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,619,"ublic double tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,620,oolean equalVariances)
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,832,"public double homoscedasticTTest(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,833,StatisticalSummary sampleStats2)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,626,"eturn tTest(sampleStats1.getMean(), sampleStats2.getMean(), sampleStats1.getVariance(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,839,"return homoscedasticTTest(sampleStats1.getMean(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,840,"sampleStats2.getMean(), sampleStats1.getVariance(),"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,628,"double) sampleStats2.getN(), equalVariances);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,842,(double) sampleStats2.getN());
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,632," Performs a <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,633, two-sided t-test</a> evaluating the null hypothesis that <code>sampleStats1</code>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,634, and <code>sampleStats2</code> describe datasets drawn from populations with the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,635," same mean, with significance level <code>alpha</code>."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,846,* Performs a
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,847,"* <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,848,* two-sided t-test</a> evaluating the null hypothesis that
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,849,* <code>sampleStats1</code> and <code>sampleStats2</code> describe
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,850,"* datasets drawn from populations with the same mean, with significance"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,851,* level <code>alpha</code>.   This test does not assume that the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,852,* subpopulation variances are equal.  To perform the test under the equal
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,853,"* variances assumption, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,854,"* {@link #homoscedasticTTest(StatisticalSummary, StatisticalSummary)}."
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,641," If the <code>equalVariances</code> parameter is <code>false,</code>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,642, the test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,643, equal  and it uses approximated degrees of freedom computed from the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,644," sample data to compute the p-value.  In this case, formula (1) for the"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,645," {@link #t(double[], double[], boolean)} statistic is used"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,646," and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,647, as described
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,860,"* See {@link #t(double[], double[])} for the formula used to compute the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,861,* t-statistic.  Degrees of freedom are approximated using the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,649, here.</a>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,650, <p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,651," If <code>equalVariances</code> is <code>true</code>, a pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,652, estimate is used to compute the t-statistic (formula (2)) and the sum of the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,653, sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,863,* Welch-Satterthwaite approximation.</a>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,657," the 95% level under the assumption of equal subpopulation variances, use"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,658," <br><code>tTest(sampleStats1, sampleStats2, 0.05, true) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,867,"* the 95%, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,868,"* <br><code>tTest(sampleStats1, sampleStats2, 0.05) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,661," at the 99% level without assuming that subpopulation variances are equal,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,662, first verify that the measured mean of  <code>sample 1</code> is less than
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,663, the mean of <code>sample 2</code> and then use
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,664," <br><code>tTest(sampleStats1, sampleStats2, 0.005, false) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,871,"* at the 99% level,  first verify that the measured mean of"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,872,* <code>sample 1</code> is less than  the mean of <code>sample 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,873,* and then use
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,874,"* <br><code>tTest(sampleStats1, sampleStats2, 0.005) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,683, @param equalVariances  are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,689,"ublic boolean tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,690,"ouble alpha, boolean equalVariances)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,898,"public boolean tTest(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,899,"StatisticalSummary sampleStats2, double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,695,"eturn (tTest(sampleStats1, sampleStats2, equalVariances) < alpha);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,904,"return (tTest(sampleStats1, sampleStats2) < alpha);"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,741," If equalVariance is true,  the pooled variance"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,742, estimate is computed and used.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,950,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,951,* Does not assume that subpopulation variances are equal.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,750, @param equalVariances  are variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,754,"ouble n2, boolean equalVariances)  {"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,755,f (equalVariances) {
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,756,ouble pooledVariance = ((n1  - 1) * v1 + (n2 -1) * v2 ) / (n1 + n2 - 2);
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,757,eturn (m1 - m2) / Math.sqrt(pooledVariance * (1d / n1 + 1d / n2));
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,758, else {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,962,double n2)  {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,967,* Computes t test statistic for 2-sample t-test under the hypothesis
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,968,* of equal subpopulation variances.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,970,* @param m1 first sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,971,* @param m2 second sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,972,* @param v1 first sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,973,* @param v2 second sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,974,* @param n1 first sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,975,* @param n2 second sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,976,* @return t test statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,978,"protected double homoscedasticT(double m1, double m2,  double v1,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,979,"double v2, double n1, double n2)  {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,980,double pooledVariance = ((n1  - 1) * v1 + (n2 -1) * v2 ) / (n1 + n2 - 2);
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,981,return (m1 - m2) / Math.sqrt(pooledVariance * (1d / n1 + 1d / n2));
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,783," If equalVariances is true, the sum of the sample sizes minus 2"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,784, is used as df; otherwise df is approximated from the data.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1004,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1005,* Does not assume subpopulation variances are equal. Degrees of freedom
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1006,* are estimated from the data.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,792, @param equalVariances  are variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,797,"ouble n1, double n2, boolean equalVariances)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1018,"double n1, double n2)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1019,throws MathException {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1020,"double t = Math.abs(t(m1, m2, v1, v2, n1, n2));"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1021,double degreesOfFreedom = 0;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1022,"degreesOfFreedom= df(v1, v2, n1, n2);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1023,TDistribution tDistribution =
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1024,getDistributionFactory().createTDistribution(degreesOfFreedom);
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1025,"return 1.0 - tDistribution.cumulativeProbability(-t, t);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1029,"* Computes p-value for 2-sided, 2-sample t-test, under the assumption"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1030,* of equal subpopulation variances.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1031,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1032,* The sum of the sample sizes minus 2 is used as degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1034,* @param m1 first sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1035,* @param m2 second sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1036,* @param v1 first sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1037,* @param v2 second sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1038,* @param n1 first sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1039,* @param n2 second sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1040,* @return p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1041,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1043,"protected double homoscedasticTTest(double m1, double m2, double v1,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1044,"double v2, double n1, double n2)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,799,"ouble t = Math.abs(t(m1, m2, v1, v2, n1, n2, equalVariances));"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1046,"double t = Math.abs(t(m1, m2, v1, v2, n1, n2));"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,801,f (equalVariances) {
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,803, else {
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,804,"egreesOfFreedom= df(v1, v2, n1, n2);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,26, @version $Revision: 1.5 $ $Date: 2004/06/02 13:08:55 $
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,26,* @version $Revision: 1.6 $ $Date: 2004/08/02 04:20:09 $
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,169,"estStatistic.t(sample1, sample2, false), 1E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,169,"testStatistic.t(sample1, sample2), 1E-6);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,171,"estStatistic.t(sampleStats1, sampleStats2, false), 1E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,171,"testStatistic.t(sampleStats1, sampleStats2), 1E-6);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,173,"estStatistic.tTest(sample1, sample2, false), 1E-7);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,173,"testStatistic.tTest(sample1, sample2), 1E-7);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,175,"estStatistic.tTest(sampleStats1, sampleStats2, false), 1E-7);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,175,"testStatistic.tTest(sampleStats1, sampleStats2), 1E-7);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,177,"estStatistic.tTest(sample1, sample2, 0.2, false));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,177,"testStatistic.tTest(sample1, sample2, 0.2));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,179,"estStatistic.tTest(sampleStats1, sampleStats2, 0.2, false));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,179,"testStatistic.tTest(sampleStats1, sampleStats2, 0.2));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,181,"testStatistic.tTest(sample1, sample2, 0.1, false));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,181,"!testStatistic.tTest(sample1, sample2, 0.1));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,183,"testStatistic.tTest(sampleStats1, sampleStats2, 0.1, false));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,183,"!testStatistic.tTest(sampleStats1, sampleStats2, 0.1));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,186,"estStatistic.tTest(sample1, sample2, .95, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,186,"testStatistic.tTest(sample1, sample2, .95);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,189,/ exptected
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,189,// expected
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,193,"estStatistic.tTest(sampleStats1, sampleStats2, .95, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,193,"testStatistic.tTest(sampleStats1, sampleStats2, .95);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,200,"estStatistic.tTest(sample1, tooShortObs, .01, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,200,"testStatistic.tTest(sample1, tooShortObs, .01);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,207,"estStatistic.tTest(sampleStats1, tooShortStats, .01, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,207,"testStatistic.tTest(sampleStats1, tooShortStats, .01);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,214,"estStatistic.tTest(sample1, tooShortObs, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,214,"testStatistic.tTest(sample1, tooShortObs);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,221,"estStatistic.tTest(sampleStats1, tooShortStats, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,221,"testStatistic.tTest(sampleStats1, tooShortStats);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,228,"estStatistic.t(sample1, tooShortObs, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,228,"testStatistic.t(sample1, tooShortObs);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,235,"estStatistic.t(sampleStats1, tooShortStats, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,235,"testStatistic.t(sampleStats1, tooShortStats);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,255,"estStatistic.t(sample1, sample2, true), 10E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,255,"testStatistic.homoscedasticT(sample1, sample2), 10E-6);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,257,"estStatistic.tTest(sampleStats1, sampleStats2, true), 1E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,257,"testStatistic.homoscedasticTTest(sampleStats1, sampleStats2), 1E-6);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,259,"estStatistic.tTest(sample1, sample2, 0.3, true));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,259,"testStatistic.homoscedasticTTest(sample1, sample2, 0.3));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,261,"testStatistic.tTest(sample1, sample2, 0.2, true));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,261,"!testStatistic.homoscedasticTTest(sample1, sample2, 0.2));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,269,"ssertEquals(-2.2361, testStatistic.t(sample1, sample2, false), 1E-4);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,270,"ssertEquals(0.1987, testStatistic.tTest(sample1, sample2, false), 1E-4);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,269,"assertEquals(-2.2361, testStatistic.t(sample1, sample2), 1E-4);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,270,"assertEquals(0.1987, testStatistic.tTest(sample1, sample2), 1E-4);"
