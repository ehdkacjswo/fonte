is_addition,old_file_path,new_file_path,line_num,content
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,2, Copyright 2003-2004 The Apache Software Foundation.
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,5, you may not use this file except in compliance with the License.
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,6, You may obtain a copy of the License at
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,13, See the License for the specific language governing permissions and
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,14, limitations under the License.
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,16,ackage org.apache.commons.math.util;
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,18,mport java.lang.reflect.InvocationTargetException;
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,19,mport org.apache.commons.math.MathException;
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,20,mport org.apache.commons.beanutils.PropertyUtils;
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,23, Uses PropertyUtils to map a Bean getter to a double value.
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,24, @version $Revision: 1.1 $ $Date: 2004/06/01 22:10:17 $
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,26,ublic class BeanTransformer implements NumberTransformer {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,29, The propertyName for this Transformer
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,31,rivate String propertyName;
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,34, Create a BeanTransformer
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,36,ublic BeanTransformer() {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,37,his(null);
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,41, Create a BeanTransformer with a specific PropertyName.
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,42, @param property The property.
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,44,ublic BeanTransformer(final String property) {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,45,uper();
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,46,etPropertyName(property);
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,50, Get the property String
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,51, @return the Property Name String
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,53,ublic String getPropertyName() {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,54,eturn propertyName;
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,58, Set the propertyString
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,59, @param string The string to set the property to.
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,61,ublic void setPropertyName(final String string) {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,62,ropertyName = string;
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,66, @see org.apache.commons.math.util.NumberTransformer#transform(java.lang.Object)
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,68,ublic double transform(final Object o) throws MathException {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,69,ry {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,70,"eturn ((Number) PropertyUtils.getProperty(o, getPropertyName())).doubleValue();"
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,71, catch (IllegalAccessException e) {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,72,"hrow new MathException(""IllegalAccessException in Transformation: "" + e.getMessage(), e);"
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,73, catch (InvocationTargetException e) {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,74,"hrow new MathException(""InvocationTargetException in Transformation: "" + e.getMessage(), e);"
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,75, catch (NoSuchMethodException e) {
False,src/experimental/org/apache/commons/math/util/BeanTransformer.java,src/experimental/org/apache/commons/math/util/BeanTransformer.java,76,"hrow new MathException(""oSuchMethodException in Transformation: "" + e.getMessage(), e);"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,2, Copyright 2003-2004 The Apache Software Foundation.
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,5, you may not use this file except in compliance with the License.
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,6, You may obtain a copy of the License at
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,13, See the License for the specific language governing permissions and
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,14, limitations under the License.
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,17,ackage org.apache.commons.math.util;
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,19,mport org.apache.commons.math.MathException;
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,20,mport org.apache.commons.math.TestUtils;
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,22,mport junit.framework.TestCase;
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,25, @version $Revision: 1.1 $ $Date: 2004/06/01 22:10:17 $
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,27,ublic class BeanTransformerTest extends TestCase {
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,32,ublic void testConstructor(){
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,33,eanTransformer b = new BeanTransformer();
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,34,ssertNull(b.getPropertyName());
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,40,ublic void testConstructorString(){
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,41,"tring name = ""property"";"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,42,eanTransformer b = new BeanTransformer(name);
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,43,"ssertEquals(name, b.getPropertyName());"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,49,ublic void testSetPropertyName(){
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,50,"tring name = ""property"";"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,51,eanTransformer b = new BeanTransformer();
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,52,.setPropertyName(name);
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,53,"ssertEquals(name, b.getPropertyName());"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,59,ublic void testTransformNoSuchMethod(){
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,60,"eanTransformer b = new BeanTransformer(""z"");"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,61,estBean target = new TestBean();
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,62,ry {
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,63,.transform(target);
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,64,"ail(""Expecting MathException"");"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,65, catch (MathException e) {
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,66,/ expected
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,73,ublic void testTransform() throws Exception {
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,74,"eanTransformer b = new BeanTransformer(""x"");"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,75,estBean target = new TestBean();
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,76,ouble value = Double.NaN;
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,77,alue = b.transform(target);
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,78,"estUtils.assertEquals(1.0, value, 1.0e-2);"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,84,ublic void testTransformInvalidType() throws Exception {
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,85,"eanTransformer b = new BeanTransformer(""y"");"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,86,estBean target = new TestBean();
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,87,ry {
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,88,.transform(target);
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,89,"ail(""Expecting ClassCastException"");"
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,90, catch(ClassCastException ex){
False,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,91,/ success
