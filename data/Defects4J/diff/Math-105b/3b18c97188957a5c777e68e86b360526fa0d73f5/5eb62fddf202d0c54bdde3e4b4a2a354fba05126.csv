is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,5,* reserved.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,9,* are met:
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,17,*    distribution.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,57,* Provide the Brent algorithm for solving for zeros of real univariate
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,58,* functions.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,59,* It will only search for one zero in the given interval.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,60,* The function is supposed to be continuous but not necessarily smooth.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,62,* @author pietsch at apache.org
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,64,public class BrentSolver extends UnivariateRealSolverImpl {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,66,private UnivariateRealFunction f;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,68,public BrentSolver(UnivariateRealFunction f) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,69,"super(100, 1E-6);"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,70,this.f = f;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,73,/* (non-Javadoc)
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,74,"* @see org.apache.commons.math.UnivariateRealSolver#solve(double, double)"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,76,"public double solve(double min, double max) throws MathException {"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,77,clearResult();
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,78,double x0 = min;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,79,double x1 = max;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,80,double y0 = f.value(x0);
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,81,double y1 = f.value(x1);
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,82,if ((y0 > 0) == (y1 > 0)) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,83,"throw new MathException(""Interval doesn't bracket a zero."");"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,85,double x2 = x0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,86,double y2 = y0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,87,double delta = x1 - x0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,88,double oldDelta = delta;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,90,int i = 0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,91,while (i < maximalIterationCount) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,92,if (Math.abs(y2) < Math.abs(y1)) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,93,x0 = x1;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,94,x1 = x2;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,95,x2 = x0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,96,y0 = y1;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,97,y1 = y2;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,98,y2 = y0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,100,"double tolerance = Math.max(relativeAccuracy * Math.abs ( x1 ),"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,101,absoluteAccuracy);
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,102,if (Math.abs(y1) <= functionValueAccuracy) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,103,// Avoid division by very small values. Assume
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,104,// the iteration has converged (the problem may
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,105,// still be ill conditioned
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,106,"setResult(x1,i);"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,107,return result;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,109,double dx = 0.5 * (x2 - x1);
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,110,if (Math.abs(dx) <= tolerance) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,111,"setResult(x1,i);"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,112,return result;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,114,if (Math.abs(oldDelta) < tolerance || Math.abs(y0) <= Math.abs(y1)) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,115,// Force bisection.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,116,delta = dx;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,117,oldDelta = delta;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,118,} else {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,119,double r3 = y1 / y0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,120,double p;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,121,double p1;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,122,if (x0 == x2) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,123,// Linear interpolation.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,124,p = 2.0 * dx * r3;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,125,p1 = 1.0 - r3;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,126,} else {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,127,// Inverse quadratic interpolation.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,128,double r1 = y0 / y2;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,129,double r2 = y1 / y2;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,130,p = r3 * (2.0 * dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,131,p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,133,if (p > 0.0) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,134,p1 = -p1;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,135,} else {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,136,p = -p;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,138,if (2.0 * p >= 3.0 * dx * p1 - Math.abs(tolerance * p1)
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,139,|| p >= Math.abs(0.5 * oldDelta * p1)) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,140,// Inverse quadratic interpolation gives a value
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,141,"// in the wrong direction, or progress is slow."
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,142,// Fall back to bisection.
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,143,delta = dx;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,144,oldDelta = delta;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,145,} else {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,146,oldDelta = delta;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,147,delta = p / p1;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,150,"// Save old X1, Y1"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,151,x0 = x1;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,152,y0 = y1;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,153,"// Compute new X1, Y1"
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,154,if (Math.abs(delta) > tolerance) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,155,x1 = x1 + delta;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,156,} else if (dx > 0.0) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,157,x1 = x1 + tolerance;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,158,} else if (dx <= 0.0) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,159,x1 = x1 - tolerance;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,161,y1 = f.value(x1);
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,162,if ((y1 > 0) == (y2 > 0)) {
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,163,x2 = x0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,164,y2 = y0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,165,delta = x1 - x0;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,166,oldDelta = delta;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,168,i++;
True,src/java/org/apache/commons/math/BrentSolver.java,src/java/org/apache/commons/math/BrentSolver.java,170,"throw new MathException(""Maximal iteration number exceeded."");"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,5,* reserved.
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,9,* are met:
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,17,*    distribution.
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,57,* Signals a configuration problem with any of the factory methods.
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,59,* @author pietsch at apache.org
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,62,public class MathConfigurationException extends MathException {
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,67,public MathConfigurationException() {
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,68,super();
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,72,* @param message message describing the problem
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,74,public MathConfigurationException(String message) {
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,75,super(message);
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,79,* @param message message describing the problem
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,80,* @param throwable caught exception causing this problem
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,82,"public MathConfigurationException(String message, Throwable throwable) {"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,83,"super(message, throwable);"
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,87,* @param throwable caught exception causing this problem
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,89,public MathConfigurationException(Throwable throwable) {
True,src/java/org/apache/commons/math/MathConfigurationException.java,src/java/org/apache/commons/math/MathConfigurationException.java,90,super(throwable);
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,5,* reserved.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,9,* are met:
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,17,*    distribution.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,57,* A generic exception indicating problems in the math package.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,59,* @author pietsch at apache.org
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,61,public class MathException extends Exception {
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,66,public MathException() {
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,67,super();
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,71,* @param message message describing the problem
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,73,public MathException(String message) {
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,74,super(message);
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,78,* @param message message describing the problem
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,79,* @param throwable caught exception causing this problem
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,81,"public MathException(String message, Throwable throwable) {"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,82,"super(message, throwable);"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,86,* @param throwable caught exception causing this problem
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,88,public MathException(Throwable throwable) {
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,89,super(throwable);
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,5,* reserved.
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,9,* are met:
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,17,*    distribution.
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,57,* Provide the Regula Falsi algorithm for solving for zeros of real univariate
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,58,"* functions. This is the same as the secant algorithm with mandatory bracketing,"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,59,* hence the name. The real secant algorithm has a higher theoretical order of
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,60,"* convergence, but may easer run awry."
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,61,* It will only search for one zero in the given interval.
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,62,* The function is supposed to be continuous but not necessarily smooth.
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,64,* @author pietsch at apache.org
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,66,public class SecantSolver extends UnivariateRealSolverImpl {
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,68,private UnivariateRealFunction f;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,70,public SecantSolver(UnivariateRealFunction f) {
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,71,"super(100, 1E-6);"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,72,this.f = f;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,75,/* (non-Javadoc)
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,76,"* @see org.apache.commons.math.UnivariateRealSolver#solve(double, double)"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,78,"public double solve(double min, double max) throws MathException {"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,79,clearResult();
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,80,double x0 = min;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,81,double x1 = max;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,82,double y0 = f.value(x0);
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,83,double y1 = f.value(x1);
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,84,boolean y0positive = y0 > 0;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,85,boolean y1positive = y1 > 0;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,86,if (y0positive == y1positive) {
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,87,"throw new MathException(""Interval doesn't bracket a zero."");"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,89,int i = 0;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,90,while (i < maximalIterationCount) {
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,91,double x2 = x0 + (x0 - x1) / (y1 / y0 - 1);
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,92,double y2 = f.value(x2);
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,93,if (Math.abs(y2) <= functionValueAccuracy) {
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,94,"setResult(x2,i);"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,95,return result;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,97,boolean y2positive = y2 > 0;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,98,if (y0positive == y2positive) {
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,99,"// New bracket is (x2,x1)."
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,100,"if (Math.abs(x1 - x2) < Math.max(relativeAccuracy * Math.abs ( x2 ), absoluteAccuracy)) {"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,101,"setResult((x2 + (x2 - x1) / (y1 / y2 - 1) ), i);"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,102,return result;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,104,x0 = x2;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,105,y0 = y2;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,106,} else {
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,107,"// New bracket is (x0,x2)."
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,108,"if (Math.abs(x2 - x0) < Math.max(relativeAccuracy * Math.abs ( x2 ),"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,109,absoluteAccuracy)) {
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,110,"setResult(x0 + (x0 - x2) / (y2 / y0 - 1), i);"
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,111,return result;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,113,x1 = x2;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,114,y1 = y2;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,116,i++;
True,src/java/org/apache/commons/math/SecantSolver.java,src/java/org/apache/commons/math/SecantSolver.java,118,"throw new MathException(""Maximal iteration number exceeded"");"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,5,* reserved.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,9,* are met:
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,17,*    distribution.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,57,* Provide an interface univariate real functions.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,58,* The object may held temporary data which is shared between calculations
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,59,* of the value and the derivatives for the same argument. It is not guaranteed
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,60,"* that derivatives are evaluated after the value, the evaluation algorithm"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,61,* should throw an InvalidStateException if it can't cope with this.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,63,* @author pietsch at apache.org
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,65,public interface UnivariateRealFunction {
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,68,* Compute the value for the function.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,69,* @param x the point for which the function value should be computed
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,70,* @return the value
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,71,* @throws MathException if the function couldn't be computed due to
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,72,*  missing additional data or other environmental problems.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,73,"* @throws RuntimeException if the operation isn't supported, the argument"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,74,*  was outside the supported domain or any other problem.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,77,public double value(double x) throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,80,* Compute the value for the first derivative of the function.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,81,* It is recommended to provide this method only if the first derivative is
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,82,* analytical. Numerical derivatives may be acceptable in some cases.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,83,* An implementation should throw an UnsupportedOperationException if
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,84,* this method is not implemented.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,85,* @param x the point for which the first derivative should be computed
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,86,* @return the value
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,87,* @throws MathException if the derivative couldn't be computed.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,88,"* @throws RuntimeException if the operation isn't supported, the argument"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,89,*  was outside the supported domain or any other problem.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,92,public double firstDerivative(double x) throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,95,* Compute the value for the second derivative of the function.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,96,* It is recommended to provide this method only if the second derivative is
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,97,* analytical. Numerical derivatives may be acceptable in some cases.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,98,* An implementation should throw an UnsupportedOperationException if
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,99,* this method is not implemented.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,100,* @param x the point for which the first derivative should be computed
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,101,* @return the value
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,102,* @throws MathException if the second derivative couldn't be computed.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,103,"* @throws RuntimeException if the operation isn't supported, the argument"
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,104,*  was outside the supported domain or any other problem.
True,src/java/org/apache/commons/math/UnivariateRealFunction.java,src/java/org/apache/commons/math/UnivariateRealFunction.java,107,public double secondDerivative(double x) throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,5,* reserved.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,9,* are met:
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,17,*    distribution.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,57,* Provide an interface to algorithms for solving for zeros of real univariate
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,58,* functions.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,59,* An implementation will only search for one zero in the given interval.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,61,* @author pietsch at apache.org
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,63,public interface UnivariateRealSolver {
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,66,* Set the upper limit for the number of iterations.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,67,"* Usually a high iteration count indicates convergence problems. However,"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,68,"* the ""reasonable value"" varies widely for different solvers, users are"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,69,* advised to use the default value supplied by the solver.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,70,* An exception will be thrown if the number is exceeded.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,72,* @param count
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,74,public void setMaximalIterationCount(int count);
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,77,* Get the upper limit for the number of iterations.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,78,* @return the actual upper limit
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,80,public int getMaximalIterationCount();
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,83,* Reset the upper limit for the number of iterations to the default.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,84,* The default value is supplied by the solver implementation.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,86,* @see #setMaximalIterationCount(int)
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,88,public void resetMaximalIterationCount();
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,91,* Set the absolute accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,92,* The default is usually choosen so taht roots in the interval
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,93,* -10..-0.1 and +0.1..+10 can be found wit a reasonable accuracy. If the expected
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,94,"* absolute value of your roots is of much smaller magnitude, set this to a smaller"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,95,* value.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,96,"* Solvers are advised to do a plausibility check with the relative accuracy, but"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,97,* clients should not rely on this.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,98,* @param accuracy the accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,99,* @throws MathException if the accuracy can't be achieved by the solver or is
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,100,* otherwise deemed unreasonable.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,102,public void setAbsoluteAccuracy(double accuracy) throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,105,* Get the actual absolute accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,106,* @return the accuracy
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,108,public double getAbsoluteAccuracy();
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,111,* Reset the absolute accuracy to the default.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,112,* The default value is provided by the solver implementation.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,114,public void resetAbsoluteAccuracy();
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,117,* Set the relative accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,118,* This is used to stop iterations if the absolute accuracy can't be achieved
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,119,* due to large values or short mantissa length.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,120,* If this should be the primary criterium for convergence rather then a safety
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,121,"* measure, set the absolute accuracy to a ridiculously small value, like 1E-1000."
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,122,* @param accuracy the relative accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,123,* @throws MathException if the accuracy can't be achieved by the solver or is
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,124,* otherwise deemed unreasonable.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,126,public void setRelativeAccuracy(double Accuracy) throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,129,* Get the actual relative accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,130,* @return the accuracy
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,132,public double getRelativeAccuracy();
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,135,* Reset the relative accuracy to the default.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,136,* The default value is provided by the solver implementation.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,138,public void resetRelativeAccuracy();
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,141,* Set the function value accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,142,* This is used to determine whan an evaluated function value or some other
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,143,* value which is used as divisor is zero.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,144,* This is a safety guard and it shouldn't be necesary to change this in general.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,145,* @param accuracy the accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,146,* @throws MathException if the accuracy can't be achieved by the solver or is
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,147,* otherwise deemed unreasonable.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,149,public void setFunctionValueAccuracy(double Accuracy) throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,152,* Get the actual function value accuracy.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,153,* @return the accuracy
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,155,public double getFunctionValueAccuracy();
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,158,* Reset the actual function accuracy to the default.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,159,* The default value is provided by the solver implementation.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,161,public void resetFunctionValueAccuracy();
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,164,* Solve for a zero root in the given interval.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,165,* A solver may require that the interval brackets a single zero root.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,166,* @param min the lower bound for the interval.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,167,* @param max the upper bound for the interval.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,168,* @return the value where the function is zero
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,169,* @throws MathException if the iteration count was exceeded or the
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,170,*  solver detects convergence problems otherwise.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,172,"public double solve(double min, double max) throws MathException;"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,175,"* Solve for a zero in the given interval, start at startValue."
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,176,* A solver may require that the interval brackets a single zero root.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,177,* @param min the lower bound for the interval.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,178,* @param max the upper bound for the interval.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,179,* @param startValue the start value to use
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,180,* @return the value where the function is zero
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,181,* @throws MathException if the iteration count was exceeded or the
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,182,*  solver detects convergence problems otherwise.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,184,"public double solve(double min, double max, double startValue)"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,185,throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,188,* Get the result of the last run of the solver.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,189,* @return the last result.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,190,"* @throws MathException if there is no result available, either"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,191,* because no result was yet computed or the last attempt failed.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,193,public double getResult() throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,196,* Get the number of iterations in the last run of the solver.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,197,* This is mainly meant for testing purposes. It may occasionally
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,198,* help track down performance problems: if the iteration count
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,199,"* is notoriously high, check whether the function is evaluated"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,200,"* properly, and whether another solver is more amenable to the"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,201,* problem.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,202,* @return the last iteration count.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,203,"* @throws MathException if there is no result available, either"
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,204,* because no result was yet computed or the last attempt failed.
True,src/java/org/apache/commons/math/UnivariateRealSolver.java,src/java/org/apache/commons/math/UnivariateRealSolver.java,206,public double getIterationCount() throws MathException;
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,5,* reserved.
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,9,* are met:
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,17,*    distribution.
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,56,import java.lang.reflect.InvocationTargetException;
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,59,* @author pietsch at apache.org
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,61,* A factory to easily get a default solver and some convenience
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,62,* functions.
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,63,"* Because solvers are easily reusable, the factory does not"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,64,* store configuration data and creates preconfigured solvers
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,65,"* (this may be controversial, because the configuration data"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,66,* may also be used for the default solver used by the static
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,67,* solve() method).
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,70,public class UnivariateRealSolverFactory {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,71,protected UnivariateRealSolverFactory() {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,74,public static UnivariateRealSolver newSolver(UnivariateRealFunction f)
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,75,throws MathConfigurationException {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,76,String solverClassName =
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,77,System.getProperty(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,78,"""org.apache.commons.math.UnivariateRealSolver"","
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,79,"""org.apache.commons.math.BrentSolver"");"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,80,try {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,81,Class clazz = Class.forName(solverClassName);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,82,Class paramClass[] = new Class[1];
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,83,paramClass[1] =
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,84,"Class.forName(""org.apache.commons.math.UnivariateRealFunction"");"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,85,Object param[] = new Object[1];
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,86,param[1] = f;
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,87,return (UnivariateRealSolver)clazz.getConstructor(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,88,paramClass).newInstance(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,89,param);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,90,} catch (IllegalArgumentException e) {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,91,throw new MathConfigurationException(e);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,92,} catch (SecurityException e) {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,93,throw new MathConfigurationException(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,94,"""Can't access "" + solverClassName,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,95,e);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,96,} catch (ClassNotFoundException e) {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,97,throw new MathConfigurationException(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,98,"""Class not found: "" + solverClassName,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,99,e);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,100,} catch (InstantiationException e) {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,101,throw new MathConfigurationException(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,102,"""Can't instantiate "" + solverClassName,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,103,e);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,104,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,105,throw new MathConfigurationException(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,106,"""Can't access "" + solverClassName,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,107,e);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,108,} catch (InvocationTargetException e) {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,109,throw new MathConfigurationException(e);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,110,} catch (NoSuchMethodException e) {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,111,throw new MathConfigurationException(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,112,"""No constructor with UnivariateRealFunction in """
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,113,"+ solverClassName,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,114,e);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,118,"public static double solve(UnivariateRealFunction f, double x0, double x1)"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,119,throws MathException {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,120,"return newSolver(f).solve(x0, x1);"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,123,public static double solve(
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,124,"UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,125,"double x0,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,126,"double x1,"
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,127,double absoluteAccuracy)
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,128,throws MathException {
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,129,UnivariateRealSolver solver = newSolver(f);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,130,solver.setAbsoluteAccuracy(absoluteAccuracy);
True,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,src/java/org/apache/commons/math/UnivariateRealSolverFactory.java,131,"return solver.solve(x0, x1);"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,5,* reserved.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,9,* are met:
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,17,*    distribution.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,55,package org.apache.commons.math;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,58,* Provide a default implementation for several functions useful to generic
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,59,* solvers.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,61,* @author pietsch at apache.org
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,63,public abstract class UnivariateRealSolverImpl
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,64,implements UnivariateRealSolver {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,66,protected double absoluteAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,67,protected double relativeAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,68,protected double functionValueAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,69,protected int maximalIterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,71,protected double defaultAbsoluteAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,72,protected double defaultRelativeAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,73,protected double defaultFunctionValueAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,74,protected int defaultMaximalIterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,76,protected boolean resultComputed = false;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,77,protected double result;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,78,// Mainly for test framework.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,79,protected int iterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,81,protected UnivariateRealSolverImpl(
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,82,"int defaultMaximalIterationCount,"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,83,double defaultAbsoluteAccuracy) {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,84,this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,85,this.defaultRelativeAccuracy = 1E-14;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,86,this.defaultFunctionValueAccuracy = 1E-15;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,87,this.absoluteAccuracy = defaultAbsoluteAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,88,this.relativeAccuracy = defaultRelativeAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,89,this.functionValueAccuracy = defaultFunctionValueAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,90,this.defaultMaximalIterationCount = defaultMaximalIterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,91,this.maximalIterationCount = defaultMaximalIterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,94,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,95,"* @see org.apache.commons.math.UnivariateRealSolver#solve(double, double)"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,97,"public double solve(double min, double max) throws MathException {"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,98,throw new UnsupportedOperationException();
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,101,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,102,"* @see org.apache.commons.math.UnivariateRealSolver#solve(double, double, double)"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,104,"public double solve(double min, double max, double startValue)"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,105,throws MathException {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,106,throw new UnsupportedOperationException();
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,110,* Get result of last solver run.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,111,* @see org.apache.commons.math.UnivariateRealSolver#getResult()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,113,public double getResult() throws MathException {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,114,if (resultComputed) {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,115,return result;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,116,} else {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,117,"throw new MathException(""No result available"");"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,121,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,122,* @see org.apache.commons.math.UnivariateRealSolver#getIterationCount()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,124,public double getIterationCount() throws MathException {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,125,if (resultComputed) {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,126,return iterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,127,} else {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,128,"throw new MathException(""No result available"");"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,133,* Convenience function for implementations.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,134,* @param result the result to set
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,135,* @param iteratinCount the iteration count to set
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,137,"protected final void setResult(double result, int iterationCount) {"
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,138,this.result = result;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,139,this.iterationCount = iterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,140,this.resultComputed = true;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,144,* Convenience function for implementations.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,146,protected final void clearResult() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,147,this.resultComputed = false;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,150,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,151,* @see org.apache.commons.math.UnivariateRealSolver#setAccuracy(double)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,153,public void setAbsoluteAccuracy(double accuracy)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,154,throws MathException {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,155,absoluteAccuracy = accuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,158,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,159,* @see org.apache.commons.math.UnivariateRealSolver#getAccuracy()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,161,public double getAbsoluteAccuracy() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,162,return absoluteAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,165,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,166,* @see org.apache.commons.math.UnivariateRealSolver#resetAbsoluteAccuracy()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,168,public void resetAbsoluteAccuracy() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,169,absoluteAccuracy = defaultAbsoluteAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,172,/* Set maximum iteration count.
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,173,* @see org.apache.commons.math.UnivariateRealSolver#setMaximalIterationCount(int)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,175,public void setMaximalIterationCount(int count) {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,176,maximalIterationCount = count;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,179,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,180,* @see org.apache.commons.math.UnivariateRealSolver#getMaximalIterationCount()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,182,public int getMaximalIterationCount() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,183,return maximalIterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,186,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,187,* @see org.apache.commons.math.UnivariateRealSolver#resetMaximalIterationCount()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,189,public void resetMaximalIterationCount() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,190,maximalIterationCount = defaultMaximalIterationCount;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,193,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,194,* @see org.apache.commons.math.UnivariateRealSolver#setRelativeAccuracy(double)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,196,public void setRelativeAccuracy(double accuracy) throws MathException {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,197,relativeAccuracy = accuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,200,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,201,* @see org.apache.commons.math.UnivariateRealSolver#getRelativeAccuracy()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,203,public double getRelativeAccuracy() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,204,return relativeAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,207,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,208,* @see org.apache.commons.math.UnivariateRealSolver#resetRelativeAccuracy()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,210,public void resetRelativeAccuracy() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,211,relativeAccuracy = defaultRelativeAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,214,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,215,* @see org.apache.commons.math.UnivariateRealSolver#setFunctionValueAccuracy(double)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,217,public void setFunctionValueAccuracy(double accuracy)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,218,throws MathException {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,219,functionValueAccuracy = accuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,222,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,223,* @see org.apache.commons.math.UnivariateRealSolver#getFunctionValueAccuracy()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,225,public double getFunctionValueAccuracy() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,226,return functionValueAccuracy;
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,229,/* (non-Javadoc)
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,230,* @see org.apache.commons.math.UnivariateRealSolver#resetFunctionValueAccuracy()
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,232,public void resetFunctionValueAccuracy() {
True,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/UnivariateRealSolverImpl.java,233,functionValueAccuracy = defaultFunctionValueAccuracy;
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,5,* reserved.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,9,* are met:
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,17,*    distribution.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,57,* Auxillary class for testing solvers.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,59,* @author pietsch at apache.org
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,62,public class QuinticFunction implements UnivariateRealFunction {
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,64,/* Evaluate quintic.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,65,* @see org.apache.commons.math.UnivariateRealFunction#value(double)
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,67,public double value(double x) throws MathException {
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,68,return (x-1)*(x-0.5)*x*(x+0.5)*(x+1);
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,71,/* First derivative of quintic.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,72,* @see org.apache.commons.math.UnivariateRealFunction#firstDerivative(double)
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,74,public double firstDerivative(double x) throws MathException {
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,75,return (5*x*x-3.75)*x*x+0.25;
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,78,/* Second order derivative of quintic.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,79,* Unsupported.
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,80,* @see org.apache.commons.math.UnivariateRealFunction#secondDerivative(double)
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,82,public double secondDerivative(double x) throws MathException {
True,src/test/org/apache/commons/math/QuinticFunction.java,src/test/org/apache/commons/math/QuinticFunction.java,83,throw new UnsupportedOperationException();
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,5,* reserved.
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,9,* are met:
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,17,*    distribution.
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,56,import junit.framework.Assert;
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,57,import junit.framework.Test;
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,58,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,59,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,62,* @author pietsch at apache.org
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,64,* Testcase for UnivariateRealSolver.
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,67,public final class RealSolverTest extends TestCase {
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,69,public RealSolverTest(String name) {
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,70,super(name);
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,73,public static Test suite() {
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,74,TestSuite suite = new TestSuite(RealSolverTest.class);
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,75,"suite.setName(""UnivariateRealSolver Tests"");"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,76,return suite;
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,79,public void testSinZero() throws MathException {
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,80,UnivariateRealFunction f = new SinFunction();
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,81,double result;
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,82,UnivariateRealSolver solver = new BrentSolver(f);
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,83,"result = solver.solve(3, 4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,84,"Assert.assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,85,solver = new SecantSolver(f);
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,86,"result = solver.solve(3, 4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,87,"Assert.assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,90,public void testQuinticZero() throws MathException {
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,91,UnivariateRealFunction f = new QuinticFunction();
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,92,double result;
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,93,UnivariateRealSolver solver = new BrentSolver(f);
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,94,// symmetric bracket around 0
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,95,"result = solver.solve(-0.2, 0.2);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,96,"Assert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,97,// asymmetric bracket around 0
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,98,"result = solver.solve(-0.2, 0.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,99,"Assert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,100,// symmetric bracket around 0.5
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,101,"result = solver.solve(0.2, 0.8);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,102,"Assert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,103,// asymmetric bracket around 0.5
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,104,"result = solver.solve(0.2, 0.6);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,105,"Assert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,106,// symmetric bracket around 1
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,107,"result = solver.solve(0.6, 1.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,108,"Assert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,109,// asymmetric bracket around 1
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,110,"result = solver.solve(0.7, 2.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,111,"Assert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,112,solver = new SecantSolver(f);
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,113,// symmetric bracket around 0
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,114,"result = solver.solve(-0.2, 0.2);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,115,"Assert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,116,// asymmetric bracket around 0
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,117,"result = solver.solve(-0.2, 0.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,118,"Assert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,119,// symmetric bracket around 0.5
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,120,"result = solver.solve(0.2, 0.8);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,121,"Assert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,122,// asymmetric bracket around 0.5
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,123,"result = solver.solve(0.2, 0.6);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,124,"Assert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,125,// symmetric bracket around 1
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,126,"result = solver.solve(0.6, 1.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,127,"Assert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,128,// asymmetric bracket around 1
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,129,"result = solver.solve(0.7, 2.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,130,"Assert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,131,// Static solve method
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,132,// symmetric bracket around 0
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,133,"result = UnivariateRealSolverFactory.solve(f,-0.2, 0.2);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,134,"Assert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,135,// asymmetric bracket around 0
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,136,"result = UnivariateRealSolverFactory.solve(f,-0.2, 0.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,137,"Assert.assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,138,// symmetric bracket around 0.5
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,139,"result = UnivariateRealSolverFactory.solve(f,0.2, 0.8);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,140,"Assert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,141,// asymmetric bracket around 0.5
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,142,"result = UnivariateRealSolverFactory.solve(f,0.2, 0.6);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,143,"Assert.assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,144,// symmetric bracket around 1
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,145,"result = UnivariateRealSolverFactory.solve(f,0.6, 1.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,146,"Assert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,147,// asymmetric bracket around 1
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,148,"result = UnivariateRealSolverFactory.solve(f,0.7, 2.4);"
True,src/test/org/apache/commons/math/RealSolverTest.java,src/test/org/apache/commons/math/RealSolverTest.java,149,"Assert.assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,5,* reserved.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,9,* are met:
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,17,*    distribution.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,57,* Auxillary class for testing solvers.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,59,* The function is extraordinarily well behaved around zero roots: it
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,60,"* has an inflection point there (second order derivative is zero),"
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,61,* which means linear approximation (Regula Falsi) will converge
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,62,* quadratically.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,64,* @author pietsch at apache.org
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,67,public class SinFunction implements UnivariateRealFunction {
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,69,/* Evaluate sinus fuction.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,70,* @see org.apache.commons.math.UnivariateRealFunction#value(double)
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,72,public double value(double x) throws MathException {
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,73,return Math.sin(x);
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,76,/* First derivative of sinus function
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,77,* @see org.apache.commons.math.UnivariateRealFunction#firstDerivative(double)
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,79,public double firstDerivative(double x) throws MathException {
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,80,return Math.cos(x);
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,83,/* Second derivative of sinus function.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,84,* Unsupported.
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,85,* @see org.apache.commons.math.UnivariateRealFunction#secondDerivative(double)
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,87,public double secondDerivative(double x) throws MathException {
True,src/test/org/apache/commons/math/SinFunction.java,src/test/org/apache/commons/math/SinFunction.java,88,throw new UnsupportedOperationException();
