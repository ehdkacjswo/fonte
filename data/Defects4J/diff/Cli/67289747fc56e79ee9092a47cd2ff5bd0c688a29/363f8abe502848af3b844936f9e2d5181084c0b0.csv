is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,23,* This is a collection of tests that test real world applications command lines.
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,24, This is a collection of tests that test real world
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,25, applications command lines.
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,26, </p>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,28, <p>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,29, The following are the applications that are tested:
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,26,* The following applications are tested:
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,31, <li>Ant</li>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,28,*   <li>ls</li>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,29,*   <li>Ant</li>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,30,*   <li>Groovy</li>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,167,"ommandLine line = parser.parse(options, new String[] { ""-e"", ""println 'hello'"" });"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,166,"CommandLine line = parser.parse(options, new String[] { ""-e"", ""println 'hello'"" }, true);"
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,26,ublic class BasicParserTest extends TestCase
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,24,public class BasicParserTest extends ParserTestCase
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,28,ublic void testParser() throws Exception {
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,29,"tring[] args = new String[] { ""-f"", ""1"" };"
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,26,public void setUp()
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,28,super.setUp();
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,29,parser = new BasicParser();
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,31,ptions options = new Options();
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,32,"ptions.addOption(""f"", ""foo"", true, null);"
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,32,public void testPropertiesOption() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,34,// not supported by the BasicParser
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,34,"ommandLine cl = new BasicParser().parse(options, args);"
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,37,public void testShortWithEqual() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,39,// not supported by the BasicParser
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,36,"ssertNotNull(""null CommandLine"", cl);"
False,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,37,"ssertEquals(""1"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,42,public void testShortWithoutEqual() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,44,// not supported by the BasicParser
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,47,public void testLongWithEqual() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,49,// not supported by the BasicParser
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,52,public void testLongWithEqualSingleDash() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,54,// not supported by the BasicParser
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,20,mport java.util.Arrays;
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,21,mport java.util.List;
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,23,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,25,ublic class GnuParserTest extends TestCase
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,20,public class GnuParserTest extends ParserTestCase
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,27,rivate Options options;
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,28,rivate Parser parser;
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,32,ptions = new Options()
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,33,"addOption(""a"", ""enable-a"", false, ""turn [a] on or off"")"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,34,"addOption(""b"", ""bfile"", true, ""set the value of [b]"")"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,35,"addOption(""c"", ""copt"", false, ""turn [c] on or off"");"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,37,arser = new GnuParser( );
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,40,ublic void testSimpleShort() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,42,"tring[] args = new String[] { ""-a"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,43,"-b"", ""toast"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,44,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,46,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,48,"ssertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,49,"ssertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,50,"ssertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,51,"ssertTrue(""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,54,ublic void testSimpleLong() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,56,"tring[] args = new String[] { ""--enable-a"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,57,"--bfile"", ""toast"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,58,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,60,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,62,"ssertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,63,"ssertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,64,"ssertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,65,"ssertTrue(""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,68,ublic void testUnrecognizedOption() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,70,"tring[] args = new String[] { ""-a"", ""-d"", ""-b"", ""toast"", ""foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,72,ry
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,74,"arser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,75,"ail(""UnrecognizedOptionException wasn't thrown"");"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,77,atch (UnrecognizedOptionException e)
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,79,"ssertEquals(""-d"", e.getOption());"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,83,ublic void testMissingArg() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,85,"tring[] args = new String[] { ""-b"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,87,oolean caught = false;
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,89,ry
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,91,"arser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,93,atch (MissingArgumentException e)
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,95,aught = true;
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,96,"ssertEquals(""option missing an argument"", ""b"", e.getOption().getOpt());"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,99,"ssertTrue( ""Confirm MissingArgumentException caught"", caught );"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,102,ublic void testStop() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,104,"tring[] args = new String[] { ""-c"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,105,"foober"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,106,"-b"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,107,"toast"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,109,"ommandLine cl = parser.parse(options, args, true);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,110,"ssertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,111,"ssertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,114,ublic void testMultiple() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,116,"tring[] args = new String[] { ""-c"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,117,"foobar"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,118,"-b"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,119,"toast"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,121,"ommandLine cl = parser.parse(options, args, true);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,122,"ssertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,123,"ssertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,125,"l = parser.parse(options, cl.getArgs());"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,127,"ssertTrue(""Confirm -c is not set"", !cl.hasOption(""c""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,128,"ssertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,129,"ssertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,130,"ssertTrue(""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,131,"ssertTrue(""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,134,ublic void testMultipleWithLong() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,136,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,137,"foobar"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,138,"--bfile"", ""toast"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,140,"ommandLine cl = parser.parse(options,args, true);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,141,"ssertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,142,"ssertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,144,"l = parser.parse(options, cl.getArgs());"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,146,"ssertTrue(""Confirm -c is not set"", !cl.hasOption(""c""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,147,"ssertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,148,"ssertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,149,"ssertTrue(""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,150,"ssertTrue(""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,153,ublic void testDoubleDash() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,155,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,157,"-b"", ""toast"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,159,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,161,"ssertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,162,"ssertTrue(""Confirm -b is not set"", !cl.hasOption(""b""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,163,"ssertTrue(""Confirm 2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,166,ublic void testSingleDash() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,168,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,169,"-b"", ""-"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,170,"-a"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,173,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,175,"ssertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,176,"ssertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,177,"ssertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""-""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,178,"ssertTrue(""Confirm 1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,179,"ssertTrue(""Confirm value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""-""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,182,ublic void testNegativeArgument() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,184,"tring[] args = new String[] { ""-a"", ""-1""} ;"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,186,ptions options = new Options();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,187,"ptions.addOption(OptionBuilder.hasArg().create(""a""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,189,arser parser = new GnuParser();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,190,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,191,"ssertEquals(""-1"", cl.getOptionValue(""a""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,194,ublic void testShortWithEqual() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,196,"tring[] args = new String[] { ""-f=bar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,198,ptions options = new Options();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,199,"ptions.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,201,arser parser = new GnuParser();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,202,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,204,"ssertEquals(""bar"", cl.getOptionValue(""foo""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,207,ublic void testShortWithoutEqual() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,209,"tring[] args = new String[] { ""-fbar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,211,ptions options = new Options();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,212,"ptions.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,214,arser parser = new GnuParser();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,215,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,217,"ssertEquals(""bar"", cl.getOptionValue(""foo""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,220,ublic void testLongWithEqual() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,222,"tring[] args = new String[] { ""--foo=bar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,224,ptions options = new Options();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,225,"ptions.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,227,arser parser = new GnuParser();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,228,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,230,"ssertEquals(""bar"", cl.getOptionValue(""foo""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,233,ublic void testLongWithEqualSingleDash() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,235,"tring[] args = new String[] { ""-foo=bar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,237,ptions options = new Options();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,238,"ptions.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,240,arser parser = new GnuParser();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,241,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,243,"ssertEquals(""bar"", cl.getOptionValue(""foo""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,246,ublic void testPropertiesOption() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,248,"tring[] args = new String[] { ""-Jsource=1.5"", ""-Jtarget=1.5"", ""foo"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,250,ptions options = new Options();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,251,ptions.addOption(OptionBuilder.withValueSeparator().hasArgs(2).create('J'));
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,253,arser parser = new GnuParser();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,254,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,256,"ist values = Arrays.asList(cl.getOptionValues(""J""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,257,"ssertNotNull(""null values"", values);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,258,"ssertEquals(""number of values"", 4, values.size());"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,259,"ssertEquals(""value 1"", ""source"", values.get(0));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,260,"ssertEquals(""value 2"", ""1.5"", values.get(1));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,261,"ssertEquals(""value 3"", ""target"", values.get(2));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,262,"ssertEquals(""value 4"", ""1.5"", values.get(3));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,263,ist argsleft = cl.getArgList();
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,264,"ssertEquals(""Should be 1 arg left"",1,argsleft.size());"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,265,"ssertEquals(""Expecting foo"",""foo"",argsleft.get(0));"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,24,super.setUp();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,25,parser = new GnuParser();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,20,import java.util.Arrays;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,21,import java.util.List;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,23,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,26,* Abstract test case testing common parser features.
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,28,* @author Emmanuel Bourg
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,29,"* @version $Revision$, $Date$"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,31,public abstract class ParserTestCase extends TestCase
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,33,protected Parser parser;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,35,protected Options options;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,37,public void setUp()
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,39,options = new Options()
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,40,".addOption(""a"", ""enable-a"", false, ""turn [a] on or off"")"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,41,".addOption(""b"", ""bfile"", true, ""set the value of [b]"")"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,42,".addOption(""c"", ""copt"", false, ""turn [c] on or off"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,45,public void testSimpleShort() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,47,"String[] args = new String[] { ""-a"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,48,"""-b"", ""toast"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,49,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,51,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,53,"assertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,54,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,55,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,56,"assertTrue(""Confirm size of extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,59,public void testSimpleLong() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,61,"String[] args = new String[] { ""--enable-a"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,62,"""--bfile"", ""toast"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,63,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,65,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,67,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,68,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,69,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,70,"assertTrue( ""Confirm arg of --bfile"", cl.getOptionValue( ""bfile"" ).equals( ""toast"" ) );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,71,"assertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,74,public void testMultiple() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,76,"String[] args = new String[] { ""-c"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,77,"""foobar"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,78,"""-b"", ""toast"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,80,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,81,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,82,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,84,"cl = parser.parse(options, cl.getArgs());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,86,"assertTrue(""Confirm -c is not set"", !cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,87,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,88,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,89,"assertTrue(""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,90,"assertTrue(""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,93,public void testMultipleWithLong() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,95,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,96,"""foobar"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,97,"""--bfile"", ""toast"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,99,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,100,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,101,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,103,"cl = parser.parse(options, cl.getArgs());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,105,"assertTrue(""Confirm -c is not set"", !cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,106,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,107,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,108,"assertTrue(""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,109,"assertTrue(""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,112,public void testUnrecognizedOption() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,114,"String[] args = new String[] { ""-a"", ""-d"", ""-b"", ""toast"", ""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,116,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,118,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,119,"fail(""UnrecognizedOptionException wasn't thrown"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,121,catch (UnrecognizedOptionException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,123,"assertEquals(""-d"", e.getOption());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,127,public void testMissingArg() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,129,"String[] args = new String[] { ""-b"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,131,boolean caught = false;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,133,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,135,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,137,catch (MissingArgumentException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,139,caught = true;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,140,"assertEquals(""option missing an argument"", ""b"", e.getOption().getOpt());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,143,"assertTrue( ""Confirm MissingArgumentException caught"", caught );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,146,public void testDoubleDash() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,148,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,150,"""-b"", ""toast"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,152,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,154,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,155,"assertTrue(""Confirm -b is not set"", !cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,156,"assertTrue(""Confirm 2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,159,public void testSingleDash() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,161,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,162,"""-b"", ""-"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,163,"""-a"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,166,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,168,"assertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,169,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,170,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""-""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,171,"assertTrue(""Confirm 1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,172,"assertTrue(""Confirm value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""-""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,175,public void testStopAtUnexpectedArg() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,177,"String[] args = new String[] { ""-c"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,178,"""foober"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,179,"""-b"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,180,"""toast"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,182,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,183,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,184,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,187,public void testStopAtExpectedArg() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,189,"String[] args = new String[]{""-b"", ""foo""};"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,191,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,193,"assertTrue(""Confirm -b is set"", cl.hasOption('b'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,194,"assertEquals(""Confirm -b is set"", ""foo"", cl.getOptionValue('b'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,195,"assertTrue(""Confirm no extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,198,public void testStopAtNonOptionShort() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,200,"String[] args = new String[]{""-z"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,201,"""-a"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,202,"""-btoast""};"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,204,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,205,"assertFalse(""Confirm -a is not set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,206,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,209,public void testStopAtNonOptionLong() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,211,"String[] args = new String[]{""--zop==1"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,212,"""-abtoast"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,213,"""--b=bar""};"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,215,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,217,"assertFalse(""Confirm -a is not set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,218,"assertFalse(""Confirm -b is not set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,219,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,222,public void testNegativeArgument() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,224,"String[] args = new String[] { ""-b"", ""-1""} ;"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,226,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,227,"assertEquals(""-1"", cl.getOptionValue(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,230,public void testShortWithEqual() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,232,"String[] args = new String[] { ""-f=bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,234,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,235,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,237,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,239,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,242,public void testShortWithoutEqual() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,244,"String[] args = new String[] { ""-fbar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,246,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,247,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,249,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,251,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,254,public void testLongWithEqual() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,256,"String[] args = new String[] { ""--foo=bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,258,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,259,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,261,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,263,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,266,public void testLongWithEqualSingleDash() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,268,"String[] args = new String[] { ""-foo=bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,270,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,271,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,273,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,275,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,278,public void testPropertiesOption() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,280,"String[] args = new String[] { ""-Jsource=1.5"", ""-J"", ""target"", ""1.5"", ""foo"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,282,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,283,options.addOption(OptionBuilder.withValueSeparator().hasArgs(2).create('J'));
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,285,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,287,"List values = Arrays.asList(cl.getOptionValues(""J""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,288,"assertNotNull(""null values"", values);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,289,"assertEquals(""number of values"", 4, values.size());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,290,"assertEquals(""value 1"", ""source"", values.get(0));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,291,"assertEquals(""value 2"", ""1.5"", values.get(1));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,292,"assertEquals(""value 3"", ""target"", values.get(2));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,293,"assertEquals(""value 4"", ""1.5"", values.get(3));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,294,List argsleft = cl.getArgList();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,295,"assertEquals(""Should be 1 arg left"",1,argsleft.size());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,296,"assertEquals(""Expecting foo"",""foo"",argsleft.get(0));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,20,mport java.util.Arrays;
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,21,mport java.util.List;
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,23,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,30,ublic class PosixParserTest extends TestCase
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,25,public class PosixParserTest extends ParserTestCase
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,32,rivate Options options = null;
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,33,rivate Parser parser = null;
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,37,ptions = new Options()
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,38,"addOption(""a"", ""enable-a"", false, ""turn [a] on or off"")"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,39,"addOption(""b"", ""bfile"", true, ""set the value of [b]"")"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,40,"addOption(""c"", ""copt"", false, ""turn [c] on or off"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,29,super.setUp();
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,45,ublic void testSimpleShort() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,47,"tring[] args = new String[] { ""-a"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,48,"-b"", ""toast"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,49,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,51,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,53,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,54,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,55,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,56,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,59,ublic void testSimpleLong() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,61,"tring[] args = new String[] { ""--enable-a"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,62,"--bfile"", ""toast"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,63,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,65,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,67,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,68,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,69,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,70,"ssertTrue( ""Confirm arg of --bfile"", cl.getOptionValue( ""bfile"" ).equals( ""toast"" ) );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,71,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,74,ublic void testComplexShort() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,33,public void testBursting() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,88,ublic void testUnrecognizedOption() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,47,public void testUnrecognizedOptionWithBursting() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,103,ublic void testUnrecognizedOption2() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,105,"tring[] args = new String[] { ""-z"", ""-abtoast"", ""foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,107,ry
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,109,"arser.parse(options, args);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,110,"ail(""UnrecognizedOptionException wasn't thrown"");"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,112,atch (UnrecognizedOptionException e)
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,114,"ssertEquals(""-z"", e.getOption());"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,118,ublic void testMissingArg() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,62,public void testMissingArgWithBursting() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,137,ublic void testStop() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,139,"tring[] args = new String[] { ""-c"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,140,"foober"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,141,"-btoast"" };"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,143,"ommandLine cl = parser.parse(options, args, true);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,144,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,145,"ssertTrue( ""Confirm  2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,148,ublic void testStop2() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,150,"tring[] args = new String[]{""-z"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,151,"-a"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,152,"-btoast""};"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,154,"ommandLine cl = parser.parse(options, args, true);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,155,"ssertFalse(""Confirm -a is not set"", cl.hasOption(""a""));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,156,"ssertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,159,ublic void testStop3() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,161,"tring[] args = new String[]{""--zop==1"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,162,"-abtoast"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,163,"--b=bar""};"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,165,"ommandLine cl = parser.parse(options, args, true);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,167,"ssertFalse(""Confirm -a is not set"", cl.hasOption(""a""));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,168,"ssertFalse(""Confirm -b is not set"", cl.hasOption(""b""));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,169,"ssertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,184,ublic void testMultiple() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,93,public void testStopBursting2() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,191,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,192,"ssertTrue( ""Confirm  2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,194,"l = parser.parse(options, cl.getArgs() );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,196,"ssertTrue( ""Confirm -c is not set"", ! cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,197,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,198,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,199,"ssertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,200,"ssertTrue( ""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,203,ublic void testMultipleWithLong() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,205,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,206,"foobar"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,207,"--bfile"", ""toast"" };"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,209,"ommandLine cl = parser.parse(options,args, true);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,210,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,211,"ssertTrue( ""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,213,"l = parser.parse(options, cl.getArgs() );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,100,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,101,"assertTrue(""Confirm  2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,215,"ssertTrue( ""Confirm -c is not set"", ! cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,216,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,217,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,218,"ssertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,219,"ssertTrue( ""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,222,ublic void testDoubleDash() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,224,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,226,"-b"", ""toast"" };"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,103,"cl = parser.parse(options, cl.getArgs());"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,228,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,230,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,231,"ssertTrue( ""Confirm -b is not set"", ! cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,232,"ssertTrue( ""Confirm 2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,235,ublic void testSingleDash() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,237,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,238,"-b"", ""-"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,239,"-a"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,242,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,244,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,245,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,246,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""-"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,247,"ssertTrue( ""Confirm 1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,248,"ssertTrue( ""Confirm value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""-"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,105,"assertTrue(""Confirm -c is not set"", !cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,106,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,107,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,108,"assertTrue(""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,109,"assertTrue(""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar""));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,262,"withDescription(""Set time limit for execution, in mintues"")"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,123,".withDescription(""Set time limit for execution, in minutes"")"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,318,ublic void testPropertiesOption() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,179,public void testLongWithEqualSingleDash() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,320,"tring[] args = new String[] { ""-Jsource=1.5"", ""-J"", ""target"", ""1.5"", ""foo"" };"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,322,ptions options = new Options();
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,323,ptions.addOption(OptionBuilder.withValueSeparator().hasArgs(2).create('J'));
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,325,arser parser = new PosixParser();
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,326,"ommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,181,// not supported by the PosixParser
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,328,"ist values = Arrays.asList(cl.getOptionValues(""J""));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,329,"ssertNotNull(""null values"", values);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,330,"ssertEquals(""number of values"", 4, values.size());"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,331,"ssertEquals(""value 1"", ""source"", values.get(0));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,332,"ssertEquals(""value 2"", ""1.5"", values.get(1));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,333,"ssertEquals(""value 3"", ""target"", values.get(2));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,334,"ssertEquals(""value 4"", ""1.5"", values.get(3));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,335,ist argsleft = cl.getArgList();
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,336,"ssertEquals(""Should be 1 arg left"",1,argsleft.size());"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,337,"ssertEquals(""Expecting foo"",""foo"",argsleft.get(0));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,184,public void testShortWithEqual() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,186,// not supported by the PosixParser
