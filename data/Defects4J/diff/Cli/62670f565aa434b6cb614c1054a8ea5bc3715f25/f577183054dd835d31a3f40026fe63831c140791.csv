is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,272,"uff.append( ""-"" ).append( option.getOpt() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,273,"if( !"" "".equals( option.getOpt() ) ) {"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,274,"buff.append( ""-"" ).append( option.getOpt() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,276,else {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,277,"buff.append( ""--"" ).append( option.getLongOpt() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,280,if( option.getValueSeparator() != (char)0 ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,281,buff.append( option.getValueSeparator() );
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,283,else if( option.hasArg() ){
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,284,"buff.append( "" "" );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,276,"uff.append( "" arg"" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,289,buff.append( option.getArgName() );
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,287,"ystem.out.println( ""->"" + buff.toString() );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,337,or ( Iterator i = options.getOptions().iterator(); i.hasNext(); )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,349,List optList = options.helpOptions();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,350,"Collections.sort( optList, new StringBufferComparator() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,351,for ( Iterator i = optList.iterator(); i.hasNext(); )
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,357,f ( option.hasArg() )
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,359,/FIXME - should have a way to specify arg name per option
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,360,ptBuf.append(' ').append(defaultArgName);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,370,if( option.hasArg() ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,371,if( option.hasArgName() ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,372,optBuf.append( option.getArgName() );
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,374,else {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,375,optBuf.append(' ');
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,366,/right pad the prefixes
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,367,or ( Iterator i = prefixList.iterator(); i.hasNext(); )
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,369,ptBuf = (StringBuffer) i.next();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,372,ptBuf.append(createPadding(max-optBuf.length()));
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,384,optBuf.append(createPadding(max-optBuf.length()));
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,377,/sort this list ascending
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,378,"ollections.sort(prefixList, new StringBufferComparator());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,380,/finally render options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,381,nt nextLineTabStop = max + descPad;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,382,tring opt;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,383,nt optOffset = leftPad + defaultOptPrefix.length();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,385,or ( Iterator i = prefixList.iterator(); i.hasNext(); )
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,387,ptBuf = (StringBuffer) i.next();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,388,pt = optBuf.toString().trim();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,389,"f( opt.indexOf( ',' ) != -1 ) {"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,390,"pt = opt.substring(0, opt.indexOf( ',', optOffset ) );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,392,ption = options.getOption(opt);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,388,int nextLineTabStop = max + descPad;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,398,b.append(defaultNewLine);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,393,sb.append(defaultNewLine);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,109,/** argName specifies the name of the argument for this option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,110,private String argName;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,373,* <p>Sets the display name for the argument value.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,375,* @param argName the display name for the argument value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,377,public void setArgName( String argName ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,378,this.argName = argName;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,382,* <p>Gets the display name for the argument value.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,384,* @return the display name for the argument value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,386,public String getArgName() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,387,return this.argName;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,391,* <p>Returns whether the display name for the argument value
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,392,* has been set.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,394,* @return if the display name for the argument value has been
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,395,* set.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,397,public boolean hasArgName() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,398,return (this.argName != null || this.argName.length() > 0 );
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.10 2002/09/19 22:59:43 jkeyes Exp $"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3, $Revision: 1.10 $
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4, $Date: 2002/09/19 22:59:43 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.11 2002/10/08 21:24:11 jkeyes Exp $"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3,* $Revision: 1.11 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4,* $Date: 2002/10/08 21:24:11 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,79,/** argument name */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,80,private static String argName;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,104,argName = null;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,149,* <p>The next Option created will have the specified argument value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,150,* name.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,152,* @param name the name for the argument value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,153,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,155,public static OptionBuilder withArgName( String name ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,156,instance.argName = name;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,157,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,362,option.setArgName( argName );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,199,* <p>Returns the Options for use by the HelpFormatter.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,201,* @return the List of Options
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,203,List helpOptions() {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,204,return new ArrayList( shortOpts.values() );
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.5 2002/09/19 22:59:43 jkeyes Exp $"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,3, $Revision: 1.5 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,4, $Date: 2002/09/19 22:59:43 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.6 2002/10/08 21:24:11 jkeyes Exp $"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,3,* $Revision: 1.6 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,4,* $Date: 2002/10/08 21:24:11 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75, @version $Revision: 1.5 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75,* @version $Revision: 1.6 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,220,hrows ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,220,throws ParseException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,222,f( !iter.hasNext() && !opt.hasOptionalArg() ) {
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,223,"hrow new MissingArgumentException( ""no argument for:"" + opt.getOpt() );"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,226,// found an Option
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,233,/ its a value
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,234,lse {
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,235,f( !opt.addValue( var ) ) {
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,236,ter.previous();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,237,reak;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,231,// found a value
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,232,else if( !opt.addValue( var ) ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,233,iter.previous();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,234,break;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,238,if( opt.getValues() == null && !opt.hasOptionalArg() ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,239,"throw new MissingArgumentException( ""no argument for:"" + opt.getOpt() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8," $Id: BugsTest.java,v 1.7 2002/09/19 22:59:44 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8,"* $Id: BugsTest.java,v 1.8 2002/10/08 21:24:11 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,233,public void test13425() {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,234,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,235,"Option oldpass = OptionBuilder.withLongOpt( ""old-password"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,236,".withDescription( ""Use this option to specify the old password"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,237,.hasArg()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,238,.create( 'o' );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,239,"Option newpass = OptionBuilder.withLongOpt( ""new-password"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,240,".withDescription( ""Use this option to specify the new password"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,241,.hasArg()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,242,.create( 'n' );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,244,String[] args = {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,245,"""-o"","
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,246,"""-n"","
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,247,"""newpassword"""
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,250,options.addOption( oldpass );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,251,options.addOption( newpass );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,253,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,255,try {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,256,"CommandLine line = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,258,// catch the exception and leave the method
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,259,catch( Exception exp ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,260,assertTrue( exp != null );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,261,return;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,263,"fail( ""MissingArgumentException not caught."" );"
