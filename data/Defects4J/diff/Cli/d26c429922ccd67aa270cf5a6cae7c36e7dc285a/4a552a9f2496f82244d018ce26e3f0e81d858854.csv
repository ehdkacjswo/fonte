is_addition,old_file_path,new_file_path,line_num,content
False,CLI2Converter.java,CLI2Converter.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,CLI2Converter.java,CLI2Converter.java,3, contributor license agreements.  See the NOTICE file distributed with
False,CLI2Converter.java,CLI2Converter.java,4, this work for additional information regarding copyright ownership.
False,CLI2Converter.java,CLI2Converter.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,CLI2Converter.java,CLI2Converter.java,6," (the ""License""); you may not use this file except in compliance with"
False,CLI2Converter.java,CLI2Converter.java,7, the License.  You may obtain a copy of the License at
False,CLI2Converter.java,CLI2Converter.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,CLI2Converter.java,CLI2Converter.java,11," Unless required by applicable law or agreed to in writing, software"
False,CLI2Converter.java,CLI2Converter.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,CLI2Converter.java,CLI2Converter.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,CLI2Converter.java,CLI2Converter.java,14, See the License for the specific language governing permissions and
False,CLI2Converter.java,CLI2Converter.java,15, limitations under the License.
False,CLI2Converter.java,CLI2Converter.java,17,ackage org.apache.commons.cli;
False,CLI2Converter.java,CLI2Converter.java,19,mport java.util.HashSet;
False,CLI2Converter.java,CLI2Converter.java,20,mport java.util.Iterator;
False,CLI2Converter.java,CLI2Converter.java,21,mport java.util.List;
False,CLI2Converter.java,CLI2Converter.java,22,mport java.util.ListIterator;
False,CLI2Converter.java,CLI2Converter.java,23,mport java.util.Set;
False,CLI2Converter.java,CLI2Converter.java,25,mport org.apache.commons.cli2.Group;
False,CLI2Converter.java,CLI2Converter.java,26,mport org.apache.commons.cli2.Option;
False,CLI2Converter.java,CLI2Converter.java,27,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,CLI2Converter.java,CLI2Converter.java,28,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,CLI2Converter.java,CLI2Converter.java,29,mport org.apache.commons.cli2.builder.GroupBuilder;
False,CLI2Converter.java,CLI2Converter.java,30,mport org.apache.commons.cli2.validation.InvalidArgumentException;
False,CLI2Converter.java,CLI2Converter.java,31,mport org.apache.commons.cli2.validation.Validator;
False,CLI2Converter.java,CLI2Converter.java,34, A utility class for converting data structures version 1 to
False,CLI2Converter.java,CLI2Converter.java,35, version 2 Option instances.
False,CLI2Converter.java,CLI2Converter.java,37,ublic class CLI2Converter {
False,CLI2Converter.java,CLI2Converter.java,39,rivate CLI2Converter(){
False,CLI2Converter.java,CLI2Converter.java,40,/ prevent creation of static utility class
False,CLI2Converter.java,CLI2Converter.java,44, Creates a version 2 Option instance from a version 1 Option instance.
False,CLI2Converter.java,CLI2Converter.java,46, @param option1 the version 1 Option to convert
False,CLI2Converter.java,CLI2Converter.java,47, @return a version 2 Option
False,CLI2Converter.java,CLI2Converter.java,49,ublic static Option option(final org.apache.commons.cli.Option option1){
False,CLI2Converter.java,CLI2Converter.java,51,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,CLI2Converter.java,CLI2Converter.java,52,builder.withRequired(option1.isRequired());
False,CLI2Converter.java,CLI2Converter.java,54,inal String shortName = option1.getOpt();
False,CLI2Converter.java,CLI2Converter.java,55,"f(shortName!=null && !"" "".equals(shortName)){"
False,CLI2Converter.java,CLI2Converter.java,56,builder.withShortName(shortName);
False,CLI2Converter.java,CLI2Converter.java,59,inal String longName = option1.getLongOpt();
False,CLI2Converter.java,CLI2Converter.java,60,f(longName!=null){
False,CLI2Converter.java,CLI2Converter.java,61,builder.withLongName(longName);
False,CLI2Converter.java,CLI2Converter.java,63,builder.withId(option1.getId());
False,CLI2Converter.java,CLI2Converter.java,65,inal String description = option1.getDescription();
False,CLI2Converter.java,CLI2Converter.java,66,f(description!=null){
False,CLI2Converter.java,CLI2Converter.java,67,builder.withDescription(description);
False,CLI2Converter.java,CLI2Converter.java,70,f(option1.hasArg()){
False,CLI2Converter.java,CLI2Converter.java,71,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,CLI2Converter.java,CLI2Converter.java,72,inal String argName = option1.getArgName();
False,CLI2Converter.java,CLI2Converter.java,73,builder.withName(argName);
False,CLI2Converter.java,CLI2Converter.java,74,builder.withMaximum(option1.getArgs());
False,CLI2Converter.java,CLI2Converter.java,75,f(option1.hasValueSeparator()){
False,CLI2Converter.java,CLI2Converter.java,76,builder.withSubsequentSeparator(option1.getValueSeparator());
False,CLI2Converter.java,CLI2Converter.java,78,f(option1.hasOptionalArg()){
False,CLI2Converter.java,CLI2Converter.java,79,builder.withMinimum(0);
False,CLI2Converter.java,CLI2Converter.java,81,lse{
False,CLI2Converter.java,CLI2Converter.java,82,/TODO check what non-optional arg means
False,CLI2Converter.java,CLI2Converter.java,83,builder.withMinimum(option1.getArgs());
False,CLI2Converter.java,CLI2Converter.java,86,inal Object type = option1.getType();
False,CLI2Converter.java,CLI2Converter.java,87,f(type!=null){
False,CLI2Converter.java,CLI2Converter.java,88,builder.withValidator(new TypeHandlerValidator(type));
False,CLI2Converter.java,CLI2Converter.java,91,builder.withArgument(abuilder.create());
False,CLI2Converter.java,CLI2Converter.java,94,eturn obuilder.create();
False,CLI2Converter.java,CLI2Converter.java,98, Creates a version 2 Group instance from a version 1 OptionGroup instance.
False,CLI2Converter.java,CLI2Converter.java,100, @param optionGroup1 the version 1 OptionGroup to convert
False,CLI2Converter.java,CLI2Converter.java,101, @return a version 2 Group
False,CLI2Converter.java,CLI2Converter.java,103,ublic static Group group(final OptionGroup optionGroup1){
False,CLI2Converter.java,CLI2Converter.java,105,inal GroupBuilder gbuilder = new GroupBuilder();
False,CLI2Converter.java,CLI2Converter.java,107,or(final Iterator i = optionGroup1.getOptions().iterator();i.hasNext();){
False,CLI2Converter.java,CLI2Converter.java,108,inal org.apache.commons.cli.Option option1 = (org.apache.commons.cli.Option)i.next();
False,CLI2Converter.java,CLI2Converter.java,109,inal Option option2 = option(option1);
False,CLI2Converter.java,CLI2Converter.java,110,builder.withOption(option2);
False,CLI2Converter.java,CLI2Converter.java,113,builder.withMaximum(1);
False,CLI2Converter.java,CLI2Converter.java,115,f(optionGroup1.isRequired()){
False,CLI2Converter.java,CLI2Converter.java,116,builder.withMinimum(1);
False,CLI2Converter.java,CLI2Converter.java,119,eturn gbuilder.create();
False,CLI2Converter.java,CLI2Converter.java,123, Creates a version 2 Group instance from a version 1 Options instance.
False,CLI2Converter.java,CLI2Converter.java,125, @param options1 the version 1 Options to convert
False,CLI2Converter.java,CLI2Converter.java,126, @return a version 2 Group
False,CLI2Converter.java,CLI2Converter.java,128,ublic static Group group(final Options options1){
False,CLI2Converter.java,CLI2Converter.java,130,inal GroupBuilder gbuilder = new GroupBuilder();
False,CLI2Converter.java,CLI2Converter.java,132,inal Set optionGroups = new HashSet();
False,CLI2Converter.java,CLI2Converter.java,134,or(final Iterator i = options1.getOptionGroups().iterator();i.hasNext();){
False,CLI2Converter.java,CLI2Converter.java,135,inal OptionGroup optionGroup1 = (OptionGroup)i.next();
False,CLI2Converter.java,CLI2Converter.java,136,roup group = group(optionGroup1);
False,CLI2Converter.java,CLI2Converter.java,137,builder.withOption(group);
False,CLI2Converter.java,CLI2Converter.java,138,ptionGroups.add(optionGroup1);
False,CLI2Converter.java,CLI2Converter.java,141,or(final Iterator i = options1.getOptions().iterator();i.hasNext();){
False,CLI2Converter.java,CLI2Converter.java,142,inal org.apache.commons.cli.Option option1 = (org.apache.commons.cli.Option)i.next();
False,CLI2Converter.java,CLI2Converter.java,143,"f(!optionInAGroup(option1,optionGroups)){"
False,CLI2Converter.java,CLI2Converter.java,144,inal Option option2 = option(option1);
False,CLI2Converter.java,CLI2Converter.java,145,builder.withOption(option2);
False,CLI2Converter.java,CLI2Converter.java,149,eturn gbuilder.create();
False,CLI2Converter.java,CLI2Converter.java,152,"rivate static boolean optionInAGroup(final org.apache.commons.cli.Option option1, final Set optionGroups) {"
False,CLI2Converter.java,CLI2Converter.java,153,or (Iterator i = optionGroups.iterator(); i.hasNext();) {
False,CLI2Converter.java,CLI2Converter.java,154,ptionGroup group = (OptionGroup) i.next();
False,CLI2Converter.java,CLI2Converter.java,155,f(group.getOptions().contains(option1)){
False,CLI2Converter.java,CLI2Converter.java,156,eturn true;
False,CLI2Converter.java,CLI2Converter.java,159,eturn false;
False,CLI2Converter.java,CLI2Converter.java,163,lass TypeHandlerValidator implements Validator{
False,CLI2Converter.java,CLI2Converter.java,165,rivate final Object type;
False,CLI2Converter.java,CLI2Converter.java,168, Creates a new Validator using the TypeHandler class.
False,CLI2Converter.java,CLI2Converter.java,170, @see TypeHandler
False,CLI2Converter.java,CLI2Converter.java,171, @param type The required type for valid elements
False,CLI2Converter.java,CLI2Converter.java,173,ublic TypeHandlerValidator(final Object type){
False,CLI2Converter.java,CLI2Converter.java,174,his.type = type;
False,CLI2Converter.java,CLI2Converter.java,177,* (non-Javadoc)
False,CLI2Converter.java,CLI2Converter.java,178, @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
False,CLI2Converter.java,CLI2Converter.java,180,ublic void validate(final List values) throws InvalidArgumentException {
False,CLI2Converter.java,CLI2Converter.java,181,inal ListIterator i = values.listIterator();
False,CLI2Converter.java,CLI2Converter.java,182,hile(i.hasNext()){
False,CLI2Converter.java,CLI2Converter.java,183,inal String value = (String)i.next();
False,CLI2Converter.java,CLI2Converter.java,184,"inal Object converted = TypeHandler.createValue(value,type);"
False,CLI2Converter.java,CLI2Converter.java,185,f(converted==null){
False,CLI2Converter.java,CLI2Converter.java,186,"hrow new InvalidArgumentException(""Unable to understand value: "" + value);"
False,CLI2Converter.java,CLI2Converter.java,188,.set(converted);
False,CLI2ConverterTest.java,CLI2ConverterTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,CLI2ConverterTest.java,CLI2ConverterTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,CLI2ConverterTest.java,CLI2ConverterTest.java,4, this work for additional information regarding copyright ownership.
False,CLI2ConverterTest.java,CLI2ConverterTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,7, the License.  You may obtain a copy of the License at
False,CLI2ConverterTest.java,CLI2ConverterTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,CLI2ConverterTest.java,CLI2ConverterTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,CLI2ConverterTest.java,CLI2ConverterTest.java,14, See the License for the specific language governing permissions and
False,CLI2ConverterTest.java,CLI2ConverterTest.java,15, limitations under the License.
False,CLI2ConverterTest.java,CLI2ConverterTest.java,17,ackage org.apache.commons.cli;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,19,mport org.apache.commons.cli2.Group;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,20,mport org.apache.commons.cli2.builder.PatternBuilder;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,21,mport org.apache.commons.cli2.option.GroupImpl;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,23,mport junit.framework.TestCase;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,25,ublic class CLI2ConverterTest extends TestCase {
False,CLI2ConverterTest.java,CLI2ConverterTest.java,27,rivate Options aceOptions;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,28,rivate OptionGroup aceOptionGroup;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,29,rivate Options abcdeOptions;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,30,rivate Options pattern;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,32,rivate Option a;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,33,rivate Option bbb;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,34,rivate Option c;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,35,rivate Option ddd;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,36,rivate Option e;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,37,rivate Option f;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,38,rivate Option g;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,39,rivate Option h;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,40,rivate Option i;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,42,ublic void setUp(){
False,CLI2ConverterTest.java,CLI2ConverterTest.java,43," = OptionBuilder.withDescription(""A description"").create('a');"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,44,"bb = OptionBuilder.create(""bbb"");"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,45," = OptionBuilder.withLongOpt(""ccc"").create('c');"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,46,"dd = OptionBuilder.withLongOpt(""ddd"").create();"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,47," = OptionBuilder.isRequired(true).create(""e"");"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,48," = OptionBuilder.hasArg().withArgName(""argument"").create('f');"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,49, = OptionBuilder.hasArgs(5).create('g');
False,CLI2ConverterTest.java,CLI2ConverterTest.java,50, = OptionBuilder.hasOptionalArg().create('h');
False,CLI2ConverterTest.java,CLI2ConverterTest.java,51, = OptionBuilder.hasOptionalArgs(5).create('i');
False,CLI2ConverterTest.java,CLI2ConverterTest.java,53,ceOptions = new Options();
False,CLI2ConverterTest.java,CLI2ConverterTest.java,54,ceOptions.addOption(OptionBuilder.create('a'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,55,ceOptions.addOption(OptionBuilder.create('c'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,56,ceOptions.addOption(OptionBuilder.create('e'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,58,ceOptionGroup = new OptionGroup();
False,CLI2ConverterTest.java,CLI2ConverterTest.java,59,ceOptionGroup.addOption(OptionBuilder.create('a'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,60,ceOptionGroup.addOption(OptionBuilder.create('c'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,61,ceOptionGroup.addOption(OptionBuilder.create('e'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,63,bcdeOptions = new Options();
False,CLI2ConverterTest.java,CLI2ConverterTest.java,64,bcdeOptions.addOption(OptionBuilder.create('d'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,65,ptionGroup og = new OptionGroup();
False,CLI2ConverterTest.java,CLI2ConverterTest.java,66,g.addOption(OptionBuilder.create('a'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,67,g.addOption(OptionBuilder.create('c'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,68,g.addOption(OptionBuilder.create('e'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,69,bcdeOptions.addOptionGroup(og);
False,CLI2ConverterTest.java,CLI2ConverterTest.java,70,bcdeOptions.addOption(OptionBuilder.create('b'));
False,CLI2ConverterTest.java,CLI2ConverterTest.java,72,"attern = PatternOptionBuilder.parsePattern(""a%ce:"");"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,76, Class to test for Option option(Option)
False,CLI2ConverterTest.java,CLI2ConverterTest.java,78,ublic void testOption() {
False,CLI2ConverterTest.java,CLI2ConverterTest.java,79,ssertTrue(e.isRequired());
False,CLI2ConverterTest.java,CLI2ConverterTest.java,81,"ssertEquals(""A description"",a.getDescription());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,82,"ssertEquals('a',a.getId());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,83,"ssertEquals(""[-a]"",CLI2Converter.option(a).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,84,"ssertEquals(""[-bbb]"",CLI2Converter.option(bbb).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,85,"ssertEquals(""[-c (--ccc)]"",CLI2Converter.option(c).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,86,"ssertEquals(""[--ddd]"",CLI2Converter.option(ddd).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,87,"ssertEquals(""-e"",CLI2Converter.option(e).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,88,"ssertEquals(""[-f <argument>]"",CLI2Converter.option(f).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,89,"ssertEquals(""[-g <arg1> <arg2> <arg3> <arg4> <arg5>]"",CLI2Converter.option(g).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,90,"ssertEquals(""[-h [<arg>]]"",CLI2Converter.option(h).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,91,"ssertEquals(""[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]"",CLI2Converter.option(i).toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,94, Class to test for Group group(OptionGroup)
False,CLI2ConverterTest.java,CLI2ConverterTest.java,96,ublic void testGroupOptionGroup() {
False,CLI2ConverterTest.java,CLI2ConverterTest.java,97,roupImpl group;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,99,roup = (GroupImpl)CLI2Converter.group(aceOptionGroup);
False,CLI2ConverterTest.java,CLI2ConverterTest.java,100,"ssertEquals(""[-a|-c|-e]"",group.toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,101,"ssertEquals(0,group.getMinimum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,102,"ssertEquals(1,group.getMaximum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,104,ceOptionGroup.setRequired(true);
False,CLI2ConverterTest.java,CLI2ConverterTest.java,105,roup = (GroupImpl)CLI2Converter.group(aceOptionGroup);
False,CLI2ConverterTest.java,CLI2ConverterTest.java,106,"ssertEquals(""-a|-c|-e"",group.toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,107,"ssertEquals(1,group.getMinimum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,108,"ssertEquals(1,group.getMaximum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,111, Class to test for Group group(Options)
False,CLI2ConverterTest.java,CLI2ConverterTest.java,113,ublic void testGroupOptions() {
False,CLI2ConverterTest.java,CLI2ConverterTest.java,115,roupImpl group;
False,CLI2ConverterTest.java,CLI2ConverterTest.java,117,roup = (GroupImpl)CLI2Converter.group(aceOptions);
False,CLI2ConverterTest.java,CLI2ConverterTest.java,118,"ssertEquals(""[-a|-c|-e]"",group.toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,119,"ssertEquals(0,group.getMinimum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,120,"ssertEquals(Integer.MAX_VALUE,group.getMaximum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,122,roup = (GroupImpl)CLI2Converter.group(abcdeOptions);
False,CLI2ConverterTest.java,CLI2ConverterTest.java,124,"ssertEquals(""[-a|-c|-e|-d|-b]"",group.toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,125,"ssertEquals(0,group.getMinimum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,126,"ssertEquals(Integer.MAX_VALUE,group.getMaximum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,128,roup = (GroupImpl)CLI2Converter.group(pattern);
False,CLI2ConverterTest.java,CLI2ConverterTest.java,129,"ssertEquals(""[-a <arg>|-c|-e <arg>]"",group.toString());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,130,"ssertEquals(0,group.getMinimum());"
False,CLI2ConverterTest.java,CLI2ConverterTest.java,131,"ssertEquals(Integer.MAX_VALUE,group.getMaximum());"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,21,* Thrown when more than one option in an option group
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,22,* has been provided.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,24,* @author John Keyes ( john at integralsource.com )
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,25,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,27,public class AlreadySelectedException extends ParseException
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,29,/** The option group selected. */
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,30,private OptionGroup group;
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,32,/** The option that triggered the exception. */
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,33,private Option option;
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,36,* Construct a new <code>AlreadySelectedException</code>
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,37,* with the specified detail message.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,39,* @param message the detail message
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,41,public AlreadySelectedException(String message)
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,43,super(message);
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,47,* Construct a new <code>AlreadySelectedException</code>
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,48,* for the specified option group.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,50,* @param group  the option group already selected
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,51,* @param option the option that triggered the exception
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,52,* @since 1.2
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,54,"public AlreadySelectedException(OptionGroup group, Option option)"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,56,"this(""The option '"" + option.getKey() + ""' was specified but an option from this group """
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,57,"+ ""has already been selected: '"" + group.getSelected() + ""'"");"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,58,this.group = group;
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,59,this.option = option;
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,63,* Returns the option group where another option has been selected.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,65,* @return the related option group
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,66,* @since 1.2
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,68,public OptionGroup getOptionGroup()
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,70,return group;
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,74,* Returns the option that was added to the group and triggered the exception.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,76,* @return the related option
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,77,* @since 1.2
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,79,public Option getOption()
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,81,return option;
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,21,* The class BasicParser provides a very simple implementation of
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,22,"* the {@link Parser#flatten(Options,String[],boolean) flatten} method."
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,24,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,25,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,27,public class BasicParser extends Parser
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,30,* <p>A simple implementation of {@link Parser}'s abstract
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,31,"* {@link Parser#flatten(Options, String[], boolean) flatten} method.</p>"
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,33,* <p><b>Note:</b> <code>options</code> and <code>stopAtNonOption</code>
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,34,* are not used in this <code>flatten</code> method.</p>
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,36,* @param options The command line {@link Options}
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,37,* @param arguments The command line arguments to be parsed
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,38,* @param stopAtNonOption Specifies whether to stop flattening
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,39,* when an non option is found.
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,40,* @return The <code>arguments</code> String array.
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,42,"protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,44,// just echo the arguments
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,45,return arguments;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,20,import java.io.Serializable;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,21,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,22,import java.util.Collection;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,23,import java.util.Iterator;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,24,import java.util.LinkedList;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,25,import java.util.List;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,26,import java.util.Properties;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,29,* Represents list of arguments parsed against a {@link Options} descriptor.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,31,"* <p>It allows querying of a boolean {@link #hasOption(String opt)},"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,32,* in addition to retrieving the {@link #getOptionValue(String opt)}
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,33,* for options requiring arguments.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,35,"* <p>Additionally, any left-over or unrecognized arguments,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,36,* are available for further processing.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,38,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,39,"* @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,40,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,41,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,43,public class CommandLine implements Serializable
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,45,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,47,/** the unrecognised options/arguments */
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,48,private List args = new LinkedList();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,50,/** the processed options */
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,51,private List options = new ArrayList();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,54,* Creates a command line.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,56,CommandLine()
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,58,// nothing to do
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,62,* Query to see if an option has been set.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,64,* @param opt Short name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,65,"* @return true if set, false if not"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,67,public boolean hasOption(String opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,69,return options.contains(resolveOption(opt));
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,73,* Query to see if an option has been set.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,75,* @param opt character name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,76,"* @return true if set, false if not"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,78,public boolean hasOption(char opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,80,return hasOption(String.valueOf(opt));
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,84,* Return the <code>Object</code> type of this <code>Option</code>.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,86,* @param opt the name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,87,* @return the type of this <code>Option</code>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,88,* @deprecated due to System.err message. Instead use getParsedOptionValue(String)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,90,public Object getOptionObject(String opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,92,try {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,93,return getParsedOptionValue(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,94,} catch(ParseException pe) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,95,"System.err.println(""Exception found converting "" + opt + "" to desired type: "" +"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,96,pe.getMessage() );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,97,return null;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,102,* Return a version of this <code>Option</code> converted to a particular type.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,104,* @param opt the name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,105,* @return the value parsed into a particluar object
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,106,* @throws ParseException if there are problems turning the option value into the desired type
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,107,* @see PatternOptionBuilder
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,109,public Object getParsedOptionValue(String opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,110,throws ParseException
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,112,String res = getOptionValue(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,114,Option option = resolveOption(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,115,if (option == null)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,117,return null;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,120,Object type = option.getType();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,122,"return (res == null)        ? null : TypeHandler.createValue(res, type);"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,126,* Return the <code>Object</code> type of this <code>Option</code>.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,128,* @param opt the name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,129,* @return the type of opt
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,131,public Object getOptionObject(char opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,133,return getOptionObject(String.valueOf(opt));
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,137,"* Retrieve the argument, if any, of this option."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,139,* @param opt the name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,140,"* @return Value of the argument if option is set, and has an argument,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,141,* otherwise null.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,143,public String getOptionValue(String opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,145,String[] values = getOptionValues(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,147,return (values == null) ? null : values[0];
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,151,"* Retrieve the argument, if any, of this option."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,153,* @param opt the character name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,154,"* @return Value of the argument if option is set, and has an argument,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,155,* otherwise null.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,157,public String getOptionValue(char opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,159,return getOptionValue(String.valueOf(opt));
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,163,"* Retrieves the array of values, if any, of an option."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,165,* @param opt string name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,166,"* @return Values of the argument if option is set, and has an argument,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,167,* otherwise null.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,169,public String[] getOptionValues(String opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,171,List values = new ArrayList();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,173,for (Iterator it = options.iterator(); it.hasNext();)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,175,Option option = (Option) it.next();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,176,if (opt.equals(option.getOpt()) || opt.equals(option.getLongOpt()))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,178,values.addAll(option.getValuesList());
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,182,return values.isEmpty() ? null : (String[]) values.toArray(new String[values.size()]);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,186,* Retrieves the option object given the long or short option as a String
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,188,* @param opt short or long name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,189,* @return Canonicalized option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,191,private Option resolveOption(String opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,193,opt = Util.stripLeadingHyphens(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,194,for (Iterator it = options.iterator(); it.hasNext();)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,196,Option option = (Option) it.next();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,197,if (opt.equals(option.getOpt()))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,199,return option;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,202,if (opt.equals(option.getLongOpt()))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,204,return option;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,208,return null;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,212,"* Retrieves the array of values, if any, of an option."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,214,* @param opt character name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,215,"* @return Values of the argument if option is set, and has an argument,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,216,* otherwise null.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,218,public String[] getOptionValues(char opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,220,return getOptionValues(String.valueOf(opt));
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,224,"* Retrieve the argument, if any, of an option."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,226,* @param opt name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,227,* @param defaultValue is the default value to be returned if the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,228,* is not specified
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,229,"* @return Value of the argument if option is set, and has an argument,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,230,* otherwise <code>defaultValue</code>.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,232,"public String getOptionValue(String opt, String defaultValue)"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,234,String answer = getOptionValue(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,236,return (answer != null) ? answer : defaultValue;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,240,"* Retrieve the argument, if any, of an option."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,242,* @param opt character name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,243,* @param defaultValue is the default value to be returned if the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,244,* is not specified
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,245,"* @return Value of the argument if option is set, and has an argument,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,246,* otherwise <code>defaultValue</code>.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,248,"public String getOptionValue(char opt, String defaultValue)"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,250,"return getOptionValue(String.valueOf(opt), defaultValue);"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,254,* Retrieve the map of values associated to the option. This is convenient
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,255,* for options specifying Java properties like <tt>-Dparam1=value1
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,256,"* -Dparam2=value2</tt>. The first argument of the option is the key, and"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,257,* the 2nd argument is the value. If the option has only one argument
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,258,* (<tt>-Dfoo</tt>) it is considered as a boolean flag and the value is
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,259,"* <tt>""true""</tt>."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,261,* @param opt name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,262,"* @return The Properties mapped by the option, never <tt>null</tt>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,263,*         even if the option doesn't exists
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,264,* @since 1.2
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,266,public Properties getOptionProperties(String opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,268,Properties props = new Properties();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,270,for (Iterator it = options.iterator(); it.hasNext();)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,272,Option option = (Option) it.next();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,274,if (opt.equals(option.getOpt()) || opt.equals(option.getLongOpt()))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,276,List values = option.getValuesList();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,277,if (values.size() >= 2)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,279,// use the first 2 arguments as the key/value pair
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,280,"props.put(values.get(0), values.get(1));"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,282,else if (values.size() == 1)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,284,"// no explicit value, handle it as a boolean"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,285,"props.put(values.get(0), ""true"");"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,290,return props;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,294,* Retrieve any left-over non-recognized options and arguments
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,296,* @return remaining items passed in but not parsed as an array
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,298,public String[] getArgs()
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,300,String[] answer = new String[args.size()];
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,302,args.toArray(answer);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,304,return answer;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,308,* Retrieve any left-over non-recognized options and arguments
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,310,* @return remaining items passed in but not parsed as a <code>List</code>.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,312,public List getArgList()
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,314,return args;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,318,* jkeyes
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,319,* - commented out until it is implemented properly
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,320,"* <p>Dump state, suitable for debugging.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,322,* @return Stringified form of this object
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,326,public String toString() {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,327,StringBuffer buf = new StringBuffer();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,329,"buf.append(""[ CommandLine: [ options: "");"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,330,buf.append(options.toString());
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,331,"buf.append("" ] [ args: "");"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,332,buf.append(args.toString());
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,333,"buf.append("" ] ]"");"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,335,return buf.toString();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,340,* Add left-over unrecognized option/argument.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,342,* @param arg the unrecognised option/argument.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,344,void addArg(String arg)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,346,args.add(arg);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,350,* Add an option to the command line.  The values of the option are stored.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,352,* @param opt the processed option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,354,void addOption(Option opt)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,356,options.add(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,360,* Returns an iterator over the Option members of CommandLine.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,362,* @return an <code>Iterator</code> over the processed {@link Option}
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,363,* members of this {@link CommandLine}
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,365,public Iterator iterator()
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,367,return options.iterator();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,371,* Returns an array of the processed {@link Option}s.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,373,* @return an array of the processed {@link Option}s.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,375,public Option[] getOptions()
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,377,Collection processed = options;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,379,// reinitialise array
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,380,Option[] optionsArray = new Option[processed.size()];
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,382,// return the array
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,383,return (Option[]) processed.toArray(optionsArray);
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,21,* A class that implements the <code>CommandLineParser</code> interface
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,22,* can parse a String array according to the {@link Options} specified
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,23,* and return a {@link CommandLine}.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,25,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,26,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,28,public interface CommandLineParser
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,31,* Parse the arguments according to the specified options.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,33,* @param options the specified Options
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,34,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,35,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,37,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,38,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,40,"CommandLine parse(Options options, String[] arguments) throws ParseException;"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,43,* Parse the arguments according to the specified options and
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,44,* properties.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,46,* @param options the specified Options
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,47,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,48,* @param properties command line option name-value pairs
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,49,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,51,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,52,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,54,"/* To maintain binary compatibility, this is commented out."
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,55,"It is still in the abstract Parser class, so most users will"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,56,still reap the benefit.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,57,"CommandLine parse(Options options, String[] arguments, Properties properties)"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,58,throws ParseException;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,62,* Parse the arguments according to the specified options.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,64,* @param options the specified Options
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,65,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,66,* @param stopAtNonOption specifies whether to continue parsing the
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,67,* arguments if a non option is encountered.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,69,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,70,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,71,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,73,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException;"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,76,* Parse the arguments according to the specified options and
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,77,* properties.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,79,* @param options the specified Options
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,80,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,81,* @param properties command line option name-value pairs
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,82,* @param stopAtNonOption specifies whether to continue parsing the
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,84,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,85,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,86,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,88,"/* To maintain binary compatibility, this is commented out."
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,89,"It is still in the abstract Parser class, so most users will"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,90,still reap the benefit.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,91,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,92,throws ParseException;
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,20,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,21,import java.util.List;
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,24,* The class GnuParser provides an implementation of the
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,25,"* {@link Parser#flatten(Options, String[], boolean) flatten} method."
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,27,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,28,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,30,public class GnuParser extends Parser
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,33,* This flatten method does so using the following rules:
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,34,* <ol>
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,35,*   <li>If an {@link Option} exists for the first character of
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,36,*   the <code>arguments</code> entry <b>AND</b> an {@link Option}
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,37,*   does not exist for the whole <code>argument</code> then
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,38,*   add the first character as an option to the processed tokens
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,39,"*   list e.g. ""-D"" and add the rest of the entry to the also.</li>"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,40,*   <li>Otherwise just add the token to the processed tokens list.</li>
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,41,* </ol>
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,43,* @param options         The Options to parse the arguments by.
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,44,* @param arguments       The arguments that have to be flattened.
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,45,* @param stopAtNonOption specifies whether to stop flattening when
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,46,*                        a non option has been encountered
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,47,* @return a String array of the flattened arguments
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,49,"protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,51,List tokens = new ArrayList();
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,53,boolean eatTheRest = false;
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,55,for (int i = 0; i < arguments.length; i++)
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,57,String arg = arguments[i];
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,59,"if (""--"".equals(arg))"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,61,eatTheRest = true;
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,62,"tokens.add(""--"");"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,64,"else if (""-"".equals(arg))"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,66,"tokens.add(""-"");"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,68,"else if (arg.startsWith(""-""))"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,70,String opt = Util.stripLeadingHyphens(arg);
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,72,if (options.hasOption(opt))
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,74,tokens.add(arg);
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,76,else
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,78,"if (opt.indexOf('=') != -1 && options.hasOption(opt.substring(0, opt.indexOf('='))))"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,80,// the format is --foo=value or -foo=value
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,81,"tokens.add(arg.substring(0, arg.indexOf('='))); // --foo"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,82,tokens.add(arg.substring(arg.indexOf('=') + 1)); // value
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,84,"else if (options.hasOption(arg.substring(0, 2)))"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,86,// the format is a special properties option (-Dproperty=value)
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,87,"tokens.add(arg.substring(0, 2)); // -D"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,88,tokens.add(arg.substring(2)); // property=value
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,90,else
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,92,eatTheRest = stopAtNonOption;
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,93,tokens.add(arg);
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,97,else
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,99,tokens.add(arg);
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,102,if (eatTheRest)
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,104,for (i++; i < arguments.length; i++)
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,106,tokens.add(arguments[i]);
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,111,return (String[]) tokens.toArray(new String[tokens.size()]);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,20,import java.io.PrintWriter;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,21,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,22,import java.util.Collection;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,23,import java.util.Collections;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,24,import java.util.Comparator;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,25,import java.util.Iterator;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,26,import java.util.List;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,29,* A formatter of help messages for the current command line options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,31,* @author Slawek Zachcial
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,32,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,33,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,35,public class HelpFormatter
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,37,// --------------------------------------------------------------- Constants
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,39,/** default number of characters per line */
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,40,public static final int DEFAULT_WIDTH = 74;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,42,/** default padding to the left of each line */
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,43,public static final int DEFAULT_LEFT_PAD = 1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,46,* the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,47,* to each description line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,49,public static final int DEFAULT_DESC_PAD = 3;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,51,/** the string to display at the beginning of the usage statement */
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,52,"public static final String DEFAULT_SYNTAX_PREFIX = ""usage: "";"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,54,/** default prefix for shortOpts */
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,55,"public static final String DEFAULT_OPT_PREFIX = ""-"";"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,57,/** default prefix for long Option */
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,58,"public static final String DEFAULT_LONG_OPT_PREFIX = ""--"";"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,60,/** default name for an argument */
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,61,"public static final String DEFAULT_ARG_NAME = ""arg"";"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,63,// -------------------------------------------------------------- Attributes
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,66,* number of characters per line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,68,* @deprecated Scope will be made private for next major version
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,69,* - use get/setWidth methods instead.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,71,public int defaultWidth = DEFAULT_WIDTH;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,74,* amount of padding to the left of each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,76,* @deprecated Scope will be made private for next major version
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,77,* - use get/setLeftPadding methods instead.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,79,public int defaultLeftPad = DEFAULT_LEFT_PAD;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,82,* the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,83,* to each description line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,85,* @deprecated Scope will be made private for next major version
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,86,* - use get/setDescPadding methods instead.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,88,public int defaultDescPad = DEFAULT_DESC_PAD;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,91,* the string to display at the begining of the usage statement
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,93,* @deprecated Scope will be made private for next major version
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,94,* - use get/setSyntaxPrefix methods instead.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,96,public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,99,* the new line string
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,101,* @deprecated Scope will be made private for next major version
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,102,* - use get/setNewLine methods instead.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,104,"public String defaultNewLine = System.getProperty(""line.separator"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,107,* the shortOpt prefix
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,109,* @deprecated Scope will be made private for next major version
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,110,* - use get/setOptPrefix methods instead.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,112,public String defaultOptPrefix = DEFAULT_OPT_PREFIX;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,115,* the long Opt prefix
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,117,* @deprecated Scope will be made private for next major version
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,118,* - use get/setLongOptPrefix methods instead.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,120,public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,123,* the name of the argument
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,125,* @deprecated Scope will be made private for next major version
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,126,* - use get/setArgName methods instead.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,128,public String defaultArgName = DEFAULT_ARG_NAME;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,131,* Comparator used to sort the options when they output in help text
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,133,* Defaults to case-insensitive alphabetical sorting by option key
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,135,protected Comparator optionComparator = new OptionComparator();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,138,* Sets the 'width'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,140,* @param width the new value of 'width'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,142,public void setWidth(int width)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,144,this.defaultWidth = width;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,148,* Returns the 'width'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,150,* @return the 'width'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,152,public int getWidth()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,154,return defaultWidth;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,158,* Sets the 'leftPadding'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,160,* @param padding the new value of 'leftPadding'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,162,public void setLeftPadding(int padding)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,164,this.defaultLeftPad = padding;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,168,* Returns the 'leftPadding'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,170,* @return the 'leftPadding'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,172,public int getLeftPadding()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,174,return defaultLeftPad;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,178,* Sets the 'descPadding'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,180,* @param padding the new value of 'descPadding'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,182,public void setDescPadding(int padding)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,184,this.defaultDescPad = padding;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,188,* Returns the 'descPadding'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,190,* @return the 'descPadding'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,192,public int getDescPadding()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,194,return defaultDescPad;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,198,* Sets the 'syntaxPrefix'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,200,* @param prefix the new value of 'syntaxPrefix'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,202,public void setSyntaxPrefix(String prefix)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,204,this.defaultSyntaxPrefix = prefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,208,* Returns the 'syntaxPrefix'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,210,* @return the 'syntaxPrefix'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,212,public String getSyntaxPrefix()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,214,return defaultSyntaxPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,218,* Sets the 'newLine'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,220,* @param newline the new value of 'newLine'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,222,public void setNewLine(String newline)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,224,this.defaultNewLine = newline;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,228,* Returns the 'newLine'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,230,* @return the 'newLine'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,232,public String getNewLine()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,234,return defaultNewLine;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,238,* Sets the 'optPrefix'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,240,* @param prefix the new value of 'optPrefix'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,242,public void setOptPrefix(String prefix)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,244,this.defaultOptPrefix = prefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,248,* Returns the 'optPrefix'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,250,* @return the 'optPrefix'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,252,public String getOptPrefix()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,254,return defaultOptPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,258,* Sets the 'longOptPrefix'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,260,* @param prefix the new value of 'longOptPrefix'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,262,public void setLongOptPrefix(String prefix)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,264,this.defaultLongOptPrefix = prefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,268,* Returns the 'longOptPrefix'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,270,* @return the 'longOptPrefix'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,272,public String getLongOptPrefix()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,274,return defaultLongOptPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,278,* Sets the 'argName'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,280,* @param name the new value of 'argName'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,282,public void setArgName(String name)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,284,this.defaultArgName = name;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,288,* Returns the 'argName'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,290,* @return the 'argName'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,292,public String getArgName()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,294,return defaultArgName;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,298,* Comparator used to sort the options when they output in help text
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,300,* Defaults to case-insensitive alphabetical sorting by option key
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,302,public Comparator getOptionComparator()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,304,return optionComparator;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,308,* Set the comparator used to sort the options when they output in help text
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,310,* Passing in a null parameter will set the ordering to the default mode
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,312,public void setOptionComparator(Comparator comparator)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,314,if (comparator == null)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,316,this.optionComparator = new OptionComparator();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,318,else
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,320,this.optionComparator = comparator;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,325,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,326,* command line syntax.  This method prints help information to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,327,* System.out.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,329,* @param cmdLineSyntax the syntax for this application
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,330,* @param options the Options instance
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,332,"public void printHelp(String cmdLineSyntax, Options options)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,334,"printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,338,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,339,* command line syntax.  This method prints help information to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,340,* System.out.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,342,* @param cmdLineSyntax the syntax for this application
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,343,* @param options the Options instance
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,344,* @param autoUsage whether to print an automatically generated
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,345,* usage statement
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,347,"public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,349,"printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,353,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,354,* command line syntax.  This method prints help information to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,355,* System.out.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,357,* @param cmdLineSyntax the syntax for this application
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,358,* @param header the banner to display at the begining of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,359,* @param options the Options instance
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,360,* @param footer the banner to display at the end of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,362,"public void printHelp(String cmdLineSyntax, String header, Options options, String footer)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,364,"printHelp(cmdLineSyntax, header, options, footer, false);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,368,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,369,* command line syntax.  This method prints help information to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,370,* System.out.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,372,* @param cmdLineSyntax the syntax for this application
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,373,* @param header the banner to display at the begining of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,374,* @param options the Options instance
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,375,* @param footer the banner to display at the end of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,376,* @param autoUsage whether to print an automatically generated
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,377,* usage statement
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,379,"public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,381,"printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,385,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,386,* command line syntax.  This method prints help information to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,387,* System.out.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,389,* @param width the number of characters to be displayed on each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,390,* @param cmdLineSyntax the syntax for this application
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,391,* @param header the banner to display at the beginning of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,392,* @param options the Options instance
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,393,* @param footer the banner to display at the end of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,395,"public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,397,"printHelp(width, cmdLineSyntax, header, options, footer, false);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,401,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,402,* command line syntax.  This method prints help information to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,403,* System.out.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,405,* @param width the number of characters to be displayed on each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,406,* @param cmdLineSyntax the syntax for this application
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,407,* @param header the banner to display at the begining of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,408,* @param options the Options instance
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,409,* @param footer the banner to display at the end of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,410,* @param autoUsage whether to print an automatically generated
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,411,* usage statement
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,413,"public void printHelp(int width, String cmdLineSyntax, String header,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,414,"Options options, String footer, boolean autoUsage)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,416,PrintWriter pw = new PrintWriter(System.out);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,418,"printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,419,pw.flush();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,423,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,424,* command line syntax.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,426,* @param pw the writer to which the help will be written
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,427,* @param width the number of characters to be displayed on each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,428,* @param cmdLineSyntax the syntax for this application
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,429,* @param header the banner to display at the begining of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,430,* @param options the Options instance
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,431,* @param leftPad the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,432,* to each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,433,* @param descPad the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,434,* to each description line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,435,* @param footer the banner to display at the end of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,437,* @throws IllegalStateException if there is no room to print a line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,439,"public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,440,"String header, Options options, int leftPad,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,441,"int descPad, String footer)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,443,"printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,448,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,449,* command line syntax.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,451,* @param pw the writer to which the help will be written
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,452,* @param width the number of characters to be displayed on each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,453,* @param cmdLineSyntax the syntax for this application
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,454,* @param header the banner to display at the begining of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,455,* @param options the Options instance
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,456,* @param leftPad the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,457,* to each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,458,* @param descPad the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,459,* to each description line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,460,* @param footer the banner to display at the end of the help
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,461,* @param autoUsage whether to print an automatically generated
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,462,* usage statement
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,464,* @throws IllegalStateException if there is no room to print a line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,466,"public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,467,"String header, Options options, int leftPad,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,468,"int descPad, String footer, boolean autoUsage)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,470,if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,472,"throw new IllegalArgumentException(""cmdLineSyntax not provided"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,475,if (autoUsage)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,477,"printUsage(pw, width, cmdLineSyntax, options);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,479,else
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,481,"printUsage(pw, width, cmdLineSyntax);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,484,if ((header != null) && (header.trim().length() > 0))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,486,"printWrapped(pw, width, header);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,489,"printOptions(pw, width, options, leftPad, descPad);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,491,if ((footer != null) && (footer.trim().length() > 0))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,493,"printWrapped(pw, width, footer);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,498,* <p>Prints the usage statement for the specified application.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,500,* @param pw The PrintWriter to print the usage statement
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,501,* @param width The number of characters to display per line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,502,* @param app The application name
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,503,* @param options The command line Options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,506,"public void printUsage(PrintWriter pw, int width, String app, Options options)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,508,// initialise the string buffer
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,509,"StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append("" "");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,511,// create a list for processed option groups
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,512,final Collection processedGroups = new ArrayList();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,514,// temp variable
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,515,Option option;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,517,List optList = new ArrayList(options.getOptions());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,518,"Collections.sort(optList, getOptionComparator());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,519,// iterate over the options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,520,for (Iterator i = optList.iterator(); i.hasNext();)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,522,// get the next Option
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,523,option = (Option) i.next();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,525,// check if the option is part of an OptionGroup
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,526,OptionGroup group = options.getOptionGroup(option);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,528,// if the option is part of a group
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,529,if (group != null)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,531,// and if the group has not already been processed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,532,if (!processedGroups.contains(group))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,534,// add the group to the processed list
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,535,processedGroups.add(group);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,538,// add the usage clause
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,539,"appendOptionGroup(buff, group);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,542,// otherwise the option was displayed in the group
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,543,// previously so ignore it.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,546,// if the Option is not part of an OptionGroup
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,547,else
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,549,"appendOption(buff, option, option.isRequired());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,552,if (i.hasNext())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,554,"buff.append("" "");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,559,// call printWrapped
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,560,"printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,564,* Appends the usage clause for an OptionGroup to a StringBuffer.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,565,* The clause is wrapped in square brackets if the group is required.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,566,* The display of the options is handled by appendOption
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,567,* @param buff the StringBuffer to append to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,568,* @param group the group to append
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,569,"* @see #appendOption(StringBuffer,Option,boolean)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,571,"private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,573,if (!group.isRequired())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,575,"buff.append(""["");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,578,List optList = new ArrayList(group.getOptions());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,579,"Collections.sort(optList, getOptionComparator());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,580,// for each option in the OptionGroup
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,581,for (Iterator i = optList.iterator(); i.hasNext();)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,583,// whether the option is required or not is handled at group level
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,584,"appendOption(buff, (Option) i.next(), true);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,586,if (i.hasNext())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,588,"buff.append("" | "");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,592,if (!group.isRequired())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,594,"buff.append(""]"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,599,* Appends the usage clause for an Option to a StringBuffer.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,601,* @param buff the StringBuffer to append to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,602,* @param option the Option to append
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,603,* @param required whether the Option is required or not
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,605,"private static void appendOption(final StringBuffer buff, final Option option, final boolean required)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,607,if (!required)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,609,"buff.append(""["");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,612,if (option.getOpt() != null)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,614,"buff.append(""-"").append(option.getOpt());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,616,else
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,618,"buff.append(""--"").append(option.getLongOpt());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,621,// if the Option has a value
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,622,if (option.hasArg() && option.hasArgName())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,624,"buff.append("" <"").append(option.getArgName()).append("">"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,627,// if the Option is not a required option
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,628,if (!required)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,630,"buff.append(""]"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,635,"* Print the cmdLineSyntax to the specified writer, using the"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,636,* specified width.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,638,* @param pw The printWriter to write the help to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,639,* @param width The number of characters per line for the usage statement.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,640,* @param cmdLineSyntax The usage statement.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,642,"public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,644,int argPos = cmdLineSyntax.indexOf(' ') + 1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,646,"printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,650,"* <p>Print the help for the specified Options to the specified writer,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,651,"* using the specified width, left padding and description padding.</p>"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,653,* @param pw The printWriter to write the help to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,654,* @param width The number of characters to display per line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,655,* @param options The command line Options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,656,* @param leftPad the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,657,* to each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,658,* @param descPad the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,659,* to each description line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,661,"public void printOptions(PrintWriter pw, int width, Options options,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,662,"int leftPad, int descPad)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,664,StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,666,"renderOptions(sb, width, options, leftPad, descPad);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,667,pw.println(sb.toString());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,671,* Print the specified text to the specified PrintWriter.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,673,* @param pw The printWriter to write the help to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,674,* @param width The number of characters to display per line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,675,* @param text The text to be written to the PrintWriter
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,677,"public void printWrapped(PrintWriter pw, int width, String text)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,679,"printWrapped(pw, width, 0, text);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,683,* Print the specified text to the specified PrintWriter.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,685,* @param pw The printWriter to write the help to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,686,* @param width The number of characters to display per line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,687,* @param nextLineTabStop The position on the next line for the first tab.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,688,* @param text The text to be written to the PrintWriter
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,690,"public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,692,StringBuffer sb = new StringBuffer(text.length());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,694,"renderWrappedText(sb, width, nextLineTabStop, text);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,695,pw.println(sb.toString());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,698,// --------------------------------------------------------------- Protected
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,701,* Render the specified Options and return the rendered Options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,702,* in a StringBuffer.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,704,* @param sb The StringBuffer to place the rendered Options into.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,705,* @param width The number of characters to display per line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,706,* @param options The command line Options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,707,* @param leftPad the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,708,* to each line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,709,* @param descPad the number of characters of padding to be prefixed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,710,* to each description line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,712,* @return the StringBuffer with the rendered Options contents.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,714,"protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,716,final String lpad = createPadding(leftPad);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,717,final String dpad = createPadding(descPad);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,719,"// first create list containing only <lpad>-a,--aaa where"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,720,// -a is opt and --aaa is long opt; in parallel look for
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,721,// the longest opt string this list will be then used to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,722,// sort options ascending
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,723,int max = 0;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,724,StringBuffer optBuf;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,725,List prefixList = new ArrayList();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,727,List optList = options.helpOptions();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,729,"Collections.sort(optList, getOptionComparator());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,731,for (Iterator i = optList.iterator(); i.hasNext();)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,733,Option option = (Option) i.next();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,734,optBuf = new StringBuffer(8);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,736,if (option.getOpt() == null)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,738,"optBuf.append(lpad).append(""   "" + defaultLongOptPrefix).append(option.getLongOpt());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,740,else
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,742,optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,744,if (option.hasLongOpt())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,746,"optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,750,if (option.hasArg())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,752,if (option.hasArgName())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,754,"optBuf.append("" <"").append(option.getArgName()).append("">"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,756,else
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,758,optBuf.append(' ');
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,762,prefixList.add(optBuf);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,763,max = (optBuf.length() > max) ? optBuf.length() : max;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,766,int x = 0;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,768,for (Iterator i = optList.iterator(); i.hasNext();)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,770,Option option = (Option) i.next();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,771,optBuf = new StringBuffer(prefixList.get(x++).toString());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,773,if (optBuf.length() < max)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,775,optBuf.append(createPadding(max - optBuf.length()));
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,778,optBuf.append(dpad);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,780,int nextLineTabStop = max + descPad;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,782,if (option.getDescription() != null)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,784,optBuf.append(option.getDescription());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,787,"renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,789,if (i.hasNext())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,791,sb.append(defaultNewLine);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,795,return sb;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,799,* Render the specified text and return the rendered Options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,800,* in a StringBuffer.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,802,* @param sb The StringBuffer to place the rendered text into.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,803,* @param width The number of characters to display per line
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,804,* @param nextLineTabStop The position on the next line for the first tab.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,805,* @param text The text to be rendered.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,807,* @return the StringBuffer with the rendered Options contents.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,809,"protected StringBuffer renderWrappedText(StringBuffer sb, int width,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,810,"int nextLineTabStop, String text)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,812,"int pos = findWrapPos(text, width, 0);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,814,if (pos == -1)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,816,sb.append(rtrim(text));
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,818,return sb;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,820,"sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,822,if (nextLineTabStop >= width)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,824,// stops infinite loop happening
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,825,nextLineTabStop = 1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,828,// all following lines must be padded with nextLineTabStop space
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,829,// characters
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,830,final String padding = createPadding(nextLineTabStop);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,832,while (true)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,834,text = padding + text.substring(pos).trim();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,835,"pos = findWrapPos(text, width, 0);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,837,if (pos == -1)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,839,sb.append(text);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,841,return sb;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,844,if ( (text.length() > width) && (pos == nextLineTabStop - 1) )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,846,pos = width;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,849,"sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,854,* Finds the next text wrap position after <code>startPos</code> for the
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,855,* text in <code>text</code> with the column width <code>width</code>.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,856,* The wrap point is the last postion before startPos+width having a
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,857,"* whitespace character (space, \n, \r)."
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,859,* @param text The text being searched for the wrap position
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,860,* @param width width of the wrapped text
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,861,* @param startPos position from which to start the lookup whitespace
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,862,* character
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,863,* @return postion on which the text must be wrapped or -1 if the wrap
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,864,* position is at the end of the text
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,866,"protected int findWrapPos(String text, int width, int startPos)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,868,int pos = -1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,870,// the line ends before the max wrap pos or a new line char found
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,871,"if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,872,"|| ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,874,return pos + 1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,876,else if (startPos + width >= text.length())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,878,return -1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,882,// look for the last whitespace character before startPos+width
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,883,pos = startPos + width;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,885,char c;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,887,while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,888,&& (c != '\n') && (c != '\r'))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,890,--pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,893,// if we found it - just return
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,894,if (pos > startPos)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,896,return pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,899,// must look for the first whitespace chearacter after startPos
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,900,// + width
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,901,pos = startPos + width;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,903,while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,904,&& (c != '\n') && (c != '\r'))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,906,++pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,909,return (pos == text.length()) ? (-1) : pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,913,* Return a String of padding of length <code>len</code>.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,915,* @param len The length of the String of padding to create.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,917,* @return The String of padding
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,919,protected String createPadding(int len)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,921,StringBuffer sb = new StringBuffer(len);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,923,for (int i = 0; i < len; ++i)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,925,sb.append(' ');
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,928,return sb.toString();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,932,* Remove the trailing whitespace from the specified String.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,934,* @param s The String to remove the trailing padding from.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,936,* @return The String of without the trailing padding
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,938,protected String rtrim(String s)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,940,if ((s == null) || (s.length() == 0))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,942,return s;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,945,int pos = s.length();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,947,while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,949,--pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,952,"return s.substring(0, pos);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,955,// ------------------------------------------------------ Package protected
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,956,// ---------------------------------------------------------------- Private
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,957,// ---------------------------------------------------------- Inner classes
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,959,* This class implements the <code>Comparator</code> interface
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,960,* for comparing Options.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,962,private static class OptionComparator implements Comparator
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,966,* Compares its two arguments for order. Returns a negative
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,967,"* integer, zero, or a positive integer as the first argument"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,968,"* is less than, equal to, or greater than the second."
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,970,* @param o1 The first Option to be compared.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,971,* @param o2 The second Option to be compared.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,972,"* @return a negative integer, zero, or a positive integer as"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,973,"*         the first argument is less than, equal to, or greater than the"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,974,*         second.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,976,"public int compare(Object o1, Object o2)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,978,Option opt1 = (Option) o1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,979,Option opt2 = (Option) o2;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,981,return opt1.getKey().compareToIgnoreCase(opt2.getKey());
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,21,* Thrown when an option requiring an argument
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,22,* is not provided with an argument.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,24,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,25,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,27,public class MissingArgumentException extends ParseException
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,29,/** The option requiring additional arguments */
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,30,private Option option;
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,33,* Construct a new <code>MissingArgumentException</code>
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,34,* with the specified detail message.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,36,* @param message the detail message
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,38,public MissingArgumentException(String message)
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,40,super(message);
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,44,* Construct a new <code>MissingArgumentException</code>
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,45,* with the specified detail message.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,47,* @param option the option requiring an argument
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,48,* @since 1.2
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,50,public MissingArgumentException(Option option)
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,52,"this(""Missing argument for option: "" + option.getKey());"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,53,this.option = option;
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,57,* Return the option requiring an argument that wasn't provided
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,58,* on the command line.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,60,* @return the related option
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,61,* @since 1.2
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,63,public Option getOption()
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,65,return option;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,20,import java.util.List;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,21,import java.util.Iterator;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,24,* Thrown when a required option has not been provided.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,26,* @author John Keyes ( john at integralsource.com )
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,27,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,29,public class MissingOptionException extends ParseException
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,31,/** The list of missing options */
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,32,private List missingOptions;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,35,* Construct a new <code>MissingSelectedException</code>
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,36,* with the specified detail message.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,38,* @param message the detail message
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,40,public MissingOptionException(String message)
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,42,super(message);
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,46,* Constructs a new <code>MissingSelectedException</code> with the
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,47,* specified list of missing options.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,49,* @param missingOptions the list of missing options
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,50,* @since 1.2
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,52,public MissingOptionException(List missingOptions)
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,54,this(createMessage(missingOptions));
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,55,this.missingOptions = missingOptions;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,59,* Return the list of options (as strings) missing in the command line parsed.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,61,* @return the missing options
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,62,* @since 1.2
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,64,public List getMissingOptions()
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,66,return missingOptions;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,70,* Build the exception message from the specified list of options.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,72,* @param missingOptions
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,73,* @since 1.2
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,75,private static String createMessage(List missingOptions)
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,77,"StringBuffer buff = new StringBuffer(""Missing required option"");"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,78,"buff.append(missingOptions.size() == 1 ? """" : ""s"");"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,79,"buff.append("": "");"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,81,Iterator it = missingOptions.iterator();
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,82,while (it.hasNext())
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,84,buff.append(it.next());
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,85,if (it.hasNext())
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,87,"buff.append("", "");"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,91,return buff.toString();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,20,import java.io.Serializable;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,21,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,22,import java.util.List;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,24,/** <p>Describes a single command-line option.  It maintains
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,25,"* information regarding the short-name of the option, the long-name,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,26,"* if any exists, a flag indicating if an argument is required for"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,27,"* this option, and a self-documenting description of the option.</p>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,29,"* <p>An Option is not created independantly, but is create through"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,30,* an instance of {@link Options}.<p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,32,* @see org.apache.commons.cli.Options
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,33,* @see org.apache.commons.cli.CommandLine
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,35,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,36,"* @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,37,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,39,"public class Option implements Cloneable, Serializable"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,41,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,43,/** constant that specifies the number of argument values has not been specified */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,44,public static final int UNINITIALIZED = -1;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,46,/** constant that specifies the number of argument values is infinite */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,47,public static final int UNLIMITED_VALUES = -2;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,49,/** the name of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,50,private String opt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,52,/** the long representation of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,53,private String longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,55,/** the name of the argument for this option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,56,"private String argName = ""arg"";"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,58,/** description of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,59,private String description;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,61,/** specifies whether this option is required to be present */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,62,private boolean required;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,64,/** specifies whether the argument value of this Option is optional */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,65,private boolean optionalArg;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,67,/** the number of argument values this option can have */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,68,private int numberOfArgs = UNINITIALIZED;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,70,/** the type of this Option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,71,private Object type;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,73,/** the list of argument values **/
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,74,private List values = new ArrayList();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,76,/** the character that is the value separator */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,77,private char valuesep;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,80,* Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,82,* @param opt short representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,83,* @param description describes the function of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,85,* @throws IllegalArgumentException if there are any non valid
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,86,* Option characters in <code>opt</code>.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,88,"public Option(String opt, String description) throws IllegalArgumentException"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,90,"this(opt, null, false, description);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,94,* Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,96,* @param opt short representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,97,* @param hasArg specifies whether the Option takes an argument or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,98,* @param description describes the function of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,100,* @throws IllegalArgumentException if there are any non valid
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,101,* Option characters in <code>opt</code>.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,103,"public Option(String opt, boolean hasArg, String description) throws IllegalArgumentException"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,105,"this(opt, null, hasArg, description);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,109,* Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,111,* @param opt short representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,112,* @param longOpt the long representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,113,* @param hasArg specifies whether the Option takes an argument or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,114,* @param description describes the function of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,116,* @throws IllegalArgumentException if there are any non valid
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,117,* Option characters in <code>opt</code>.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,119,"public Option(String opt, String longOpt, boolean hasArg, String description)"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,120,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,122,// ensure that the option is valid
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,123,OptionValidator.validateOption(opt);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,125,this.opt = opt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,126,this.longOpt = longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,128,// if hasArg is set then the number of arguments is 1
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,129,if (hasArg)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,131,this.numberOfArgs = 1;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,134,this.description = description;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,138,* Returns the id of this Option.  This is only set when the
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,139,* Option shortOpt is a single character.  This is used for switch
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,140,* statements.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,142,* @return the id of this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,144,public int getId()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,146,return getKey().charAt(0);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,150,* Returns the 'unique' Option identifier.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,152,* @return the 'unique' Option identifier
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,154,String getKey()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,156,"// if 'opt' is null, then it is a 'long' option"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,157,if (opt == null)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,159,return longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,162,return opt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,166,* Retrieve the name of this Option.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,168,* It is this String which can be used with
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,169,* {@link CommandLine#hasOption(String opt)} and
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,170,* {@link CommandLine#getOptionValue(String opt)} to check
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,171,* for existence and argument.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,173,* @return The name of this option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,175,public String getOpt()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,177,return opt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,181,* Retrieve the type of this Option.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,183,* @return The type of this option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,185,public Object getType()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,187,return type;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,191,* Sets the type of this Option.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,193,* @param type the type of this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,195,public void setType(Object type)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,197,this.type = type;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,201,* Retrieve the long name of this Option.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,203,"* @return Long name of this option, or null, if there is no long name"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,205,public String getLongOpt()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,207,return longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,211,* Sets the long name of this Option.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,213,* @param longOpt the long name of this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,215,public void setLongOpt(String longOpt)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,217,this.longOpt = longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,221,* Sets whether this Option can have an optional argument.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,223,* @param optionalArg specifies whether the Option can have
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,224,* an optional argument.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,226,public void setOptionalArg(boolean optionalArg)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,228,this.optionalArg = optionalArg;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,232,* @return whether this Option can have an optional argument
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,234,public boolean hasOptionalArg()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,236,return optionalArg;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,240,* Query to see if this Option has a long name
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,242,* @return boolean flag indicating existence of a long name
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,244,public boolean hasLongOpt()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,246,return longOpt != null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,250,* Query to see if this Option requires an argument
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,252,* @return boolean flag indicating if an argument is required
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,254,public boolean hasArg()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,256,return numberOfArgs > 0 || numberOfArgs == UNLIMITED_VALUES;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,260,* Retrieve the self-documenting description of this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,262,* @return The string description of this option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,264,public String getDescription()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,266,return description;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,270,* Sets the self-documenting description of this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,272,* @param description The description of this option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,273,* @since 1.1
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,275,public void setDescription(String description)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,277,this.description = description;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,281,* Query to see if this Option requires an argument
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,283,* @return boolean flag indicating if an argument is required
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,285,public boolean isRequired()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,287,return required;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,291,* Sets whether this Option is mandatory.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,293,* @param required specifies whether this Option is mandatory
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,295,public void setRequired(boolean required)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,297,this.required = required;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,301,* Sets the display name for the argument value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,303,* @param argName the display name for the argument value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,305,public void setArgName(String argName)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,307,this.argName = argName;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,311,* Gets the display name for the argument value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,313,* @return the display name for the argument value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,315,public String getArgName()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,317,return argName;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,321,* Returns whether the display name for the argument value
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,322,* has been set.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,324,* @return if the display name for the argument value has been
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,325,* set.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,327,public boolean hasArgName()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,329,return argName != null && argName.length() > 0;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,333,* Query to see if this Option can take many values.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,335,* @return boolean flag indicating if multiple values are allowed
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,337,public boolean hasArgs()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,339,return numberOfArgs > 1 || numberOfArgs == UNLIMITED_VALUES;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,343,* Sets the number of argument values this Option can take.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,345,* @param num the number of argument values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,347,public void setArgs(int num)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,349,this.numberOfArgs = num;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,353,* Sets the value separator.  For example if the argument value
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,354,"* was a Java property, the value separator would be '='."
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,356,* @param sep The value separator.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,358,public void setValueSeparator(char sep)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,360,this.valuesep = sep;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,364,* Returns the value separator character.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,366,* @return the value separator character.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,368,public char getValueSeparator()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,370,return valuesep;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,374,* Return whether this Option has specified a value separator.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,376,* @return whether this Option has specified a value separator.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,377,* @since 1.1
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,379,public boolean hasValueSeparator()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,381,return valuesep > 0;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,385,* Returns the number of argument values this Option can take.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,387,* @return num the number of argument values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,389,public int getArgs()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,391,return numberOfArgs;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,395,* Adds the specified value to this Option.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,397,* @param value is a/the value of this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,399,void addValueForProcessing(String value)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,401,switch (numberOfArgs)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,403,case UNINITIALIZED:
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,404,"throw new RuntimeException(""NO_ARGS_ALLOWED"");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,406,default:
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,407,processValue(value);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,412,* Processes the value.  If this Option has a value separator
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,413,* the value will have to be parsed into individual tokens.  When
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,414,* n-1 tokens have been processed and there are more value separators
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,415,"* in the value, parsing is ceased and the remaining characters are"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,416,* added as a single token.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,418,* @param value The String to be processed.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,420,* @since 1.0.1
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,422,private void processValue(String value)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,424,// this Option has a separator character
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,425,if (hasValueSeparator())
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,427,// get the separator character
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,428,char sep = getValueSeparator();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,430,// store the index for the value separator
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,431,int index = value.indexOf(sep);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,433,// while there are more value separators
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,434,while (index != -1)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,436,// next value to be added
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,437,if (values.size() == (numberOfArgs - 1))
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,439,break;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,442,// store
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,443,"add(value.substring(0, index));"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,445,// parse
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,446,value = value.substring(index + 1);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,448,// get new index
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,449,index = value.indexOf(sep);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,453,// store the actual value or the last value that has been parsed
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,454,add(value);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,458,* Add the value to this Option.  If the number of arguments
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,459,* is greater than zero and there is enough space in the list then
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,460,"* add the value.  Otherwise, throw a runtime exception."
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,462,* @param value The value to be added to this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,464,* @since 1.0.1
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,466,private void add(String value)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,468,if ((numberOfArgs > 0) && (values.size() > (numberOfArgs - 1)))
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,470,"throw new RuntimeException(""Cannot add value, list full."");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,473,// store value
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,474,values.add(value);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,478,* Returns the specified value of this Option or
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,479,* <code>null</code> if there is no value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,481,* @return the value/first value of this Option or
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,482,* <code>null</code> if there is no value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,484,public String getValue()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,486,return hasNoValues() ? null : (String) values.get(0);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,490,* Returns the specified value of this Option or
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,491,* <code>null</code> if there is no value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,493,* @param index The index of the value to be returned.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,495,* @return the specified value of this Option or
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,496,* <code>null</code> if there is no value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,498,* @throws IndexOutOfBoundsException if index is less than 1
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,499,* or greater than the number of the values for this Option.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,501,public String getValue(int index) throws IndexOutOfBoundsException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,503,return hasNoValues() ? null : (String) values.get(index);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,507,* Returns the value/first value of this Option or the
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,508,* <code>defaultValue</code> if there is no value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,510,* @param defaultValue The value to be returned if ther
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,511,* is no value.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,513,* @return the value/first value of this Option or the
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,514,* <code>defaultValue</code> if there are no values.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,516,public String getValue(String defaultValue)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,518,String value = getValue();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,520,return (value != null) ? value : defaultValue;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,524,* Return the values of this Option as a String array
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,525,* or null if there are no values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,527,* @return the values of this Option as a String array
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,528,* or null if there are no values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,530,public String[] getValues()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,532,return hasNoValues() ? null : (String[]) values.toArray(new String[values.size()]);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,536,* @return the values of this Option as a List
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,537,* or null if there are no values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,539,public List getValuesList()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,541,return values;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,545,"* Dump state, suitable for debugging."
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,547,* @return Stringified form of this object
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,549,public String toString()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,551,"StringBuffer buf = new StringBuffer().append(""[ option: "");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,553,buf.append(opt);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,555,if (longOpt != null)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,557,"buf.append("" "").append(longOpt);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,560,"buf.append("" "");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,562,if (hasArgs())
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,564,"buf.append(""[ARG...]"");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,566,else if (hasArg())
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,568,"buf.append("" [ARG]"");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,571,"buf.append("" :: "").append(description);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,573,if (type != null)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,575,"buf.append("" :: "").append(type);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,578,"buf.append("" ]"");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,580,return buf.toString();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,584,* Returns whether this Option has any values.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,586,* @return whether this Option has any values.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,588,private boolean hasNoValues()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,590,return values.isEmpty();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,593,public boolean equals(Object o)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,595,if (this == o)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,597,return true;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,599,if (o == null || getClass() != o.getClass())
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,601,return false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,604,Option option = (Option) o;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,607,if (opt != null ? !opt.equals(option.opt) : option.opt != null)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,609,return false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,611,if (longOpt != null ? !longOpt.equals(option.longOpt) : option.longOpt != null)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,613,return false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,616,return true;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,619,public int hashCode()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,621,int result;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,622,result = (opt != null ? opt.hashCode() : 0);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,623,result = 31 * result + (longOpt != null ? longOpt.hashCode() : 0);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,624,return result;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,628,* A rather odd clone method - due to incorrect code in 1.0 it is public
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,629,* and in 1.1 rather than throwing a CloneNotSupportedException it throws
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,630,* a RuntimeException so as to maintain backwards compat at the API level.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,632,"* After calling this method, it is very likely you will want to call"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,633,* clearValues().
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,635,* @throws RuntimeException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,637,public Object clone()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,639,try
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,641,Option option = (Option) super.clone();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,642,option.values = new ArrayList(values);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,643,return option;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,645,catch (CloneNotSupportedException cnse)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,647,"throw new RuntimeException(""A CloneNotSupportedException was thrown: "" + cnse.getMessage());"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,652,"* Clear the Option values. After a parse is complete, these are left with"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,653,* data in them and they need clearing if another parse is done.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,655,"* See: <a href=""https://issues.apache.org/jira/browse/CLI-71"">CLI-71</a>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,657,void clearValues()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,659,values.clear();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,663,* This method is not intended to be used. It was a piece of internal
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,664,* API that was made public in 1.0. It currently throws an UnsupportedOperationException.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,665,* @deprecated
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,666,* @throws UnsupportedOperationException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,668,public boolean addValue(String value)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,670,"throw new UnsupportedOperationException(""The addValue method is not intended for client use. """
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,671,"+ ""Subclasses should use the addValueForProcessing method instead. "");"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,21,* OptionBuilder allows the user to create Options using descriptive methods.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,23,* <p>Details on the Builder pattern can be found at
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,24,"* <a href=""http://c2.com/cgi-bin/wiki?BuilderPattern"">"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,25,* http://c2.com/cgi-bin/wiki?BuilderPattern</a>.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,27,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,28,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,29,* @since 1.0
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,31,public final class OptionBuilder
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,33,/** long option */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,34,private static String longopt;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,36,/** option description */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,37,private static String description;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,39,/** argument name */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,40,private static String argName;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,42,/** is required? */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,43,private static boolean required;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,45,/** the number of arguments */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,46,private static int numberOfArgs = Option.UNINITIALIZED;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,48,/** option type */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,49,private static Object type;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,51,/** option can have an optional argument value */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,52,private static boolean optionalArg;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,54,/** value separator for argument value */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,55,private static char valuesep;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,57,/** option builder instance */
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,58,private static OptionBuilder instance = new OptionBuilder();
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,61,* private constructor to prevent instances being created
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,63,private OptionBuilder()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,65,// hide the constructor
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,69,* Resets the member variables to their default values.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,71,private static void reset()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,73,description = null;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,74,"argName = ""arg"";"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,75,longopt = null;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,76,type = null;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,77,required = false;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,78,numberOfArgs = Option.UNINITIALIZED;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,81,// PMM 9/6/02 - these were missing
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,82,optionalArg = false;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,83,valuesep = (char) 0;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,87,* The next Option created will have the following long option value.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,89,* @param newLongopt the long option value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,90,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,92,public static OptionBuilder withLongOpt(String newLongopt)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,94,OptionBuilder.longopt = newLongopt;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,96,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,100,* The next Option created will require an argument value.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,102,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,104,public static OptionBuilder hasArg()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,106,OptionBuilder.numberOfArgs = 1;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,108,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,112,* The next Option created will require an argument value if
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,113,* <code>hasArg</code> is true.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,115,* @param hasArg if true then the Option has an argument value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,116,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,118,public static OptionBuilder hasArg(boolean hasArg)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,120,OptionBuilder.numberOfArgs = hasArg ? 1 : Option.UNINITIALIZED;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,122,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,126,* The next Option created will have the specified argument value name.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,128,* @param name the name for the argument value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,129,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,131,public static OptionBuilder withArgName(String name)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,133,OptionBuilder.argName = name;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,135,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,139,* The next Option created will be required.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,141,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,143,public static OptionBuilder isRequired()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,145,OptionBuilder.required = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,147,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,151,* The next Option created uses <code>sep</code> as a means to
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,152,* separate argument values.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,154,* <b>Example:</b>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,155,* <pre>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,156,* Option opt = OptionBuilder.withValueSeparator(':')
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,157,*                           .create('D');
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,159,* CommandLine line = parser.parse(args);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,160,* String propertyName = opt.getValue(0);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,161,* String propertyValue = opt.getValue(1);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,162,* </pre>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,164,* @param sep The value separator to be used for the argument values.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,166,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,168,public static OptionBuilder withValueSeparator(char sep)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,170,OptionBuilder.valuesep = sep;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,172,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,176,* The next Option created uses '<code>=</code>' as a means to
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,177,* separate argument values.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,179,* <b>Example:</b>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,180,* <pre>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,181,* Option opt = OptionBuilder.withValueSeparator()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,182,*                           .create('D');
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,184,* CommandLine line = parser.parse(args);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,185,* String propertyName = opt.getValue(0);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,186,* String propertyValue = opt.getValue(1);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,187,* </pre>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,189,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,191,public static OptionBuilder withValueSeparator()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,193,OptionBuilder.valuesep = '=';
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,195,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,199,* The next Option created will be required if <code>required</code>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,200,* is true.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,202,* @param newRequired if true then the Option is required
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,203,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,205,public static OptionBuilder isRequired(boolean newRequired)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,207,OptionBuilder.required = newRequired;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,209,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,213,* The next Option created can have unlimited argument values.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,215,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,217,public static OptionBuilder hasArgs()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,219,OptionBuilder.numberOfArgs = Option.UNLIMITED_VALUES;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,221,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,225,* The next Option created can have <code>num</code> argument values.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,227,* @param num the number of args that the option can have
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,228,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,230,public static OptionBuilder hasArgs(int num)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,232,OptionBuilder.numberOfArgs = num;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,234,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,238,* The next Option can have an optional argument.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,240,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,242,public static OptionBuilder hasOptionalArg()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,244,OptionBuilder.numberOfArgs = 1;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,245,OptionBuilder.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,247,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,251,* The next Option can have an unlimited number of optional arguments.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,253,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,255,public static OptionBuilder hasOptionalArgs()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,257,OptionBuilder.numberOfArgs = Option.UNLIMITED_VALUES;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,258,OptionBuilder.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,260,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,264,* The next Option can have the specified number of optional arguments.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,266,* @param numArgs - the maximum number of optional arguments
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,267,* the next Option created can have.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,268,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,270,public static OptionBuilder hasOptionalArgs(int numArgs)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,272,OptionBuilder.numberOfArgs = numArgs;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,273,OptionBuilder.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,275,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,279,* The next Option created will have a value that will be an instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,280,* of <code>type</code>.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,282,* @param newType the type of the Options argument value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,283,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,285,public static OptionBuilder withType(Object newType)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,287,OptionBuilder.type = newType;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,289,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,293,* The next Option created will have the specified description
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,295,* @param newDescription a description of the Option's purpose
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,296,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,298,public static OptionBuilder withDescription(String newDescription)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,300,OptionBuilder.description = newDescription;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,302,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,306,* Create an Option using the current settings and with
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,307,* the specified Option <code>char</code>.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,309,* @param opt the character representation of the Option
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,310,* @return the Option instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,311,* @throws IllegalArgumentException if <code>opt</code> is not
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,312,* a valid character.  See Option.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,314,public static Option create(char opt) throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,316,return create(String.valueOf(opt));
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,320,* Create an Option using the current settings
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,322,* @return the Option instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,323,* @throws IllegalArgumentException if <code>longOpt</code> has not been set.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,325,public static Option create() throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,327,if (longopt == null)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,329,OptionBuilder.reset();
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,330,"throw new IllegalArgumentException(""must specify longopt"");"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,333,return create(null);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,337,* Create an Option using the current settings and with
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,338,* the specified Option <code>char</code>.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,340,* @param opt the <code>java.lang.String</code> representation
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,341,* of the Option
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,342,* @return the Option instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,343,* @throws IllegalArgumentException if <code>opt</code> is not
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,344,* a valid character.  See Option.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,346,public static Option create(String opt) throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,348,Option option = null;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,349,try {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,350,// create the option
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,351,"option = new Option(opt, description);"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,353,// set the option properties
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,354,option.setLongOpt(longopt);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,355,option.setRequired(required);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,356,option.setOptionalArg(optionalArg);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,357,option.setArgs(numberOfArgs);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,358,option.setType(type);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,359,option.setValueSeparator(valuesep);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,360,option.setArgName(argName);
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,361,} finally {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,362,// reset the OptionBuilder properties
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,363,OptionBuilder.reset();
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,366,// return the Option instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,367,return option;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,20,import java.io.Serializable;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,21,import java.util.Collection;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,22,import java.util.HashMap;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,23,import java.util.Iterator;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,24,import java.util.Map;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,27,* A group of mutually exclusive options.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,29,* @author John Keyes ( john at integralsource.com )
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,30,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,32,public class OptionGroup implements Serializable
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,34,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,36,/** hold the options */
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,37,private Map optionMap = new HashMap();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,39,/** the name of the selected option */
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,40,private String selected;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,42,/** specified whether this group is required */
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,43,private boolean required;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,46,* Add the specified <code>Option</code> to this group.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,48,* @param option the option to add to this group
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,49,* @return this option group with the option added
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,51,public OptionGroup addOption(Option option)
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,53,// key   - option name
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,54,// value - the option
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,55,"optionMap.put(option.getKey(), option);"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,57,return this;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,61,* @return the names of the options in this group as a
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,62,* <code>Collection</code>
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,64,public Collection getNames()
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,66,// the key set is the collection of names
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,67,return optionMap.keySet();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,71,* @return the options in this group as a <code>Collection</code>
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,73,public Collection getOptions()
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,75,// the values are the collection of options
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,76,return optionMap.values();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,80,* Set the selected option of this group to <code>name</code>.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,82,* @param option the option that is selected
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,83,* @throws AlreadySelectedException if an option from this group has
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,84,* already been selected.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,86,public void setSelected(Option option) throws AlreadySelectedException
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,88,// if no option has already been selected or the
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,89,// same option is being reselected then set the
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,90,// selected member variable
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,91,if (selected == null || selected.equals(option.getOpt()))
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,93,selected = option.getOpt();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,95,else
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,97,"throw new AlreadySelectedException(this, option);"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,102,* @return the selected option name
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,104,public String getSelected()
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,106,return selected;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,110,* @param required specifies if this group is required
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,112,public void setRequired(boolean required)
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,114,this.required = required;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,118,* Returns whether this option group is required.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,120,* @return whether this option group is required
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,122,public boolean isRequired()
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,124,return required;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,128,* Returns the stringified version of this OptionGroup.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,130,* @return the stringified representation of this group
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,132,public String toString()
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,134,StringBuffer buff = new StringBuffer();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,136,Iterator iter = getOptions().iterator();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,138,"buff.append(""["");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,140,while (iter.hasNext())
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,142,Option option = (Option) iter.next();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,144,if (option.getOpt() != null)
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,146,"buff.append(""-"");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,147,buff.append(option.getOpt());
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,149,else
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,151,"buff.append(""--"");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,152,buff.append(option.getLongOpt());
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,155,"buff.append("" "");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,156,buff.append(option.getDescription());
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,158,if (iter.hasNext())
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,160,"buff.append("", "");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,164,"buff.append(""]"");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,166,return buff.toString();
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,21,* Validates an Option string.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,23,* @author John Keyes ( john at integralsource.com )
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,24,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,25,* @since 1.1
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,27,class OptionValidator
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,30,* Validates whether <code>opt</code> is a permissable Option
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,31,* shortOpt.  The rules that specify if the <code>opt</code>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,32,* is valid are:
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,34,* <ul>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,35,*  <li><code>opt</code> is not NULL</li>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,36,*  <li>a single character <code>opt</code> that is either
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,37,"*  ' '(special case), '?', '@' or a letter</li>"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,38,*  <li>a multi character <code>opt</code> that only contains
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,39,*  letters.</li>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,40,* </ul>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,42,* @param opt The option string to validate
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,43,* @throws IllegalArgumentException if the Option is not valid.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,45,static void validateOption(String opt) throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,47,// check that opt is not NULL
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,48,if (opt == null)
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,50,return;
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,53,// handle the single character opt
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,54,else if (opt.length() == 1)
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,56,char ch = opt.charAt(0);
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,58,if (!isValidOpt(ch))
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,60,"throw new IllegalArgumentException(""illegal option value '"" + ch + ""'"");"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,64,// handle the multi character opt
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,65,else
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,67,char[] chars = opt.toCharArray();
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,69,for (int i = 0; i < chars.length; i++)
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,71,if (!isValidChar(chars[i]))
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,73,"throw new IllegalArgumentException(""opt contains illegal character value '"" + chars[i] + ""'"");"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,80,* Returns whether the specified character is a valid Option.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,82,* @param c the option to validate
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,83,"* @return true if <code>c</code> is a letter, ' ', '?' or '@',"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,84,*         otherwise false.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,86,private static boolean isValidOpt(char c)
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,88,return isValidChar(c) || c == ' ' || c == '?' || c == '@';
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,92,* Returns whether the specified character is a valid character.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,94,* @param c the character to validate
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,95,* @return true if <code>c</code> is a letter.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,97,private static boolean isValidChar(char c)
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,99,return Character.isJavaIdentifierPart(c);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,20,import java.io.Serializable;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,21,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,22,import java.util.Collection;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,23,import java.util.Collections;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,24,import java.util.HashMap;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,25,import java.util.HashSet;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,26,import java.util.Iterator;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,27,import java.util.List;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,28,import java.util.Map;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,31,* <p>Main entry-point into the library.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,33,"* <p>Options represents a collection of {@link Option} objects, which"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,34,* describe the possible options for a command-line.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,36,"* <p>It may flexibly parse long and short options, with or without"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,37,"* values.  Additionally, it may parse only a portion of a commandline,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,38,* allowing for flexible multi-stage parsing.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,40,* @see org.apache.commons.cli.CommandLine
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,42,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,43,"* @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,44,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,46,public class Options implements Serializable
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,48,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,50,/** a map of the options with the character key */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,51,private Map shortOpts = new HashMap();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,53,/** a map of the options with the long key */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,54,private Map longOpts = new HashMap();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,56,/** a map of the required options */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,57,private List requiredOpts = new ArrayList();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,59,/** a map of the option groups */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,60,private Map optionGroups = new HashMap();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,63,* Add the specified option group.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,65,* @param group the OptionGroup that is to be added
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,66,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,68,public Options addOptionGroup(OptionGroup group)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,70,Iterator options = group.getOptions().iterator();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,72,if (group.isRequired())
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,74,requiredOpts.add(group);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,77,while (options.hasNext())
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,79,Option option = (Option) options.next();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,81,// an Option cannot be required if it is in an
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,82,"// OptionGroup, either the group is required or"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,83,// nothing is required
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,84,option.setRequired(false);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,85,addOption(option);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,87,"optionGroups.put(option.getKey(), group);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,90,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,94,* Lists the OptionGroups that are members of this Options instance.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,96,* @return a Collection of OptionGroup instances.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,98,Collection getOptionGroups()
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,100,return new HashSet(optionGroups.values());
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,104,* Add an option that only contains a short-name.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,105,* It may be specified as requiring an argument.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,107,* @param opt Short single-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,108,* @param hasArg flag signally if an argument is required after this option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,109,* @param description Self-documenting description
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,110,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,112,"public Options addOption(String opt, boolean hasArg, String description)"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,114,"addOption(opt, null, hasArg, description);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,116,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,120,* Add an option that contains a short-name and a long-name.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,121,* It may be specified as requiring an argument.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,123,* @param opt Short single-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,124,* @param longOpt Long multi-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,125,* @param hasArg flag signally if an argument is required after this option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,126,* @param description Self-documenting description
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,127,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,129,"public Options addOption(String opt, String longOpt, boolean hasArg, String description)"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,131,"addOption(new Option(opt, longOpt, hasArg, description));"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,133,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,137,* Adds an option instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,139,* @param opt the option that is to be added
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,140,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,142,public Options addOption(Option opt)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,144,String key = opt.getKey();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,146,// add it to the long option list
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,147,if (opt.hasLongOpt())
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,149,"longOpts.put(opt.getLongOpt(), opt);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,152,// if the option is required add it to the required list
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,153,if (opt.isRequired())
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,155,if (requiredOpts.contains(key))
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,157,requiredOpts.remove(requiredOpts.indexOf(key));
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,159,requiredOpts.add(key);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,162,"shortOpts.put(key, opt);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,164,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,168,* Retrieve a read-only list of options in this set
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,170,* @return read-only Collection of {@link Option} objects in this descriptor
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,172,public Collection getOptions()
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,174,return Collections.unmodifiableCollection(helpOptions());
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,178,* Returns the Options for use by the HelpFormatter.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,180,* @return the List of Options
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,182,List helpOptions()
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,184,return new ArrayList(shortOpts.values());
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,188,* Returns the required options.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,190,* @return List of required options
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,192,public List getRequiredOptions()
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,194,return requiredOpts;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,198,* Retrieve the {@link Option} matching the long or short name specified.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,199,* The leading hyphens in the name are ignored (up to 2).
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,201,* @param opt short or long name of the {@link Option}
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,202,* @return the option represented by opt
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,204,public Option getOption(String opt)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,206,opt = Util.stripLeadingHyphens(opt);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,208,if (shortOpts.containsKey(opt))
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,210,return (Option) shortOpts.get(opt);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,213,return (Option) longOpts.get(opt);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,217,* Returns whether the named {@link Option} is a member of this {@link Options}.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,219,* @param opt short or long name of the {@link Option}
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,220,* @return true if the named {@link Option} is a member
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,221,* of this {@link Options}
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,223,public boolean hasOption(String opt)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,225,opt = Util.stripLeadingHyphens(opt);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,227,return shortOpts.containsKey(opt) || longOpts.containsKey(opt);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,231,* Returns the OptionGroup the <code>opt</code> belongs to.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,232,* @param opt the option whose OptionGroup is being queried.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,234,* @return the OptionGroup if <code>opt</code> is part
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,235,"* of an OptionGroup, otherwise return null"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,237,public OptionGroup getOptionGroup(Option opt)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,239,return (OptionGroup) optionGroups.get(opt.getKey());
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,243,"* Dump state, suitable for debugging."
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,245,* @return Stringified form of this object
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,247,public String toString()
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,249,StringBuffer buf = new StringBuffer();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,251,"buf.append(""[ Options: [ short "");"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,252,buf.append(shortOpts.toString());
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,253,"buf.append("" ] [ long "");"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,254,buf.append(longOpts);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,255,"buf.append("" ]"");"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,257,return buf.toString();
False,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,17,ackage org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,18,package org.apache.commons.cli;
False,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,20, An exception indicating validation failure.
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,21,* Base for Exceptions thrown during parsing of a command-line.
False,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,22, @author Rob Oxspring
False,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,23, @author John Keyes
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,23,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,24,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,25,ublic class InvalidArgumentException extends Exception {
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,26,public class ParseException extends Exception
False,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,28, Creates a new exception
False,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,29, @param message the reason for failure
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,29,* Construct a new <code>ParseException</code>
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,30,* with the specified detail message.
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,32,* @param message the detail message
False,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,31,ublic InvalidArgumentException(final String message) {
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli/ParseException.java,34,public ParseException(String message)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,20,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,21,import java.util.Arrays;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,22,import java.util.Enumeration;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,23,import java.util.Iterator;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,24,import java.util.List;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,25,import java.util.ListIterator;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,26,import java.util.Properties;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,29,* <code>Parser</code> creates {@link CommandLine}s.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,31,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,32,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,34,public abstract class Parser implements CommandLineParser
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,36,/** commandline instance */
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,37,protected CommandLine cmd;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,39,/** current Options */
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,40,private Options options;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,42,/** list of required options strings */
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,43,private List requiredOptions;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,45,protected void setOptions(final Options options)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,47,this.options = options;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,48,this.requiredOptions = new ArrayList(options.getRequiredOptions());
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,51,protected Options getOptions()
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,53,return options;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,56,protected List getRequiredOptions()
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,58,return requiredOptions;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,62,* Subclasses must implement this method to reduce
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,63,* the <code>arguments</code> that have been passed to the parse method.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,65,* @param opts The Options to parse the arguments by.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,66,* @param arguments The arguments that have to be flattened.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,67,* @param stopAtNonOption specifies whether to stop
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,68,* flattening when a non option has been encountered
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,69,* @return a String array of the flattened arguments
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,71,"protected abstract String[] flatten(Options opts, String[] arguments, boolean stopAtNonOption);"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,74,* Parses the specified <code>arguments</code> based
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75,* on the specifed {@link Options}.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,77,* @param options the <code>Options</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,78,* @param arguments the <code>arguments</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,79,* @return the <code>CommandLine</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,80,* @throws ParseException if an error occurs when parsing the
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,81,* arguments.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,83,"public CommandLine parse(Options options, String[] arguments) throws ParseException"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,85,"return parse(options, arguments, null, false);"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,89,* Parse the arguments according to the specified options and properties.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,91,* @param options    the specified Options
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,92,* @param arguments  the command line arguments
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,93,* @param properties command line option name-value pairs
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,94,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,95,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,96,*                        while parsing the command line tokens.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,98,* @since 1.1
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,100,"public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,102,"return parse(options, arguments, properties, false);"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,106,* Parses the specified <code>arguments</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,107,* based on the specifed {@link Options}.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,109,* @param options         the <code>Options</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,110,* @param arguments       the <code>arguments</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,111,* @param stopAtNonOption specifies whether to stop interpreting the
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,112,*                        arguments when a non option has been encountered
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,113,*                        and to add them to the CommandLines args list.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,114,* @return the <code>CommandLine</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,115,* @throws ParseException if an error occurs when parsing the arguments.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,117,"public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,119,"return parse(options, arguments, null, stopAtNonOption);"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,123,* Parse the arguments according to the specified options and
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,124,* properties.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,126,* @param options the specified Options
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,127,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,128,* @param properties command line option name-value pairs
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,129,* @param stopAtNonOption stop parsing the arguments when the first
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,130,* non option is encountered.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,132,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,134,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,135,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,137,* @since 1.1
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,139,"public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,140,throws ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,142,// clear out the data in options in case it's been used before (CLI-71)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,143,for (Iterator it = options.helpOptions().iterator(); it.hasNext();)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,145,Option opt = (Option) it.next();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,146,opt.clearValues();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,149,// initialise members
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,150,setOptions(options);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,152,cmd = new CommandLine();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,154,boolean eatTheRest = false;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,156,if (arguments == null)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,158,arguments = new String[0];
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,161,"List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,163,ListIterator iterator = tokenList.listIterator();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,165,// process each flattened token
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,166,while (iterator.hasNext())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,168,String t = (String) iterator.next();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,170,// the value is the double-dash
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,171,"if (""--"".equals(t))"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,173,eatTheRest = true;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,176,// the value is a single dash
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,177,"else if (""-"".equals(t))"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,179,if (stopAtNonOption)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,181,eatTheRest = true;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,183,else
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,185,cmd.addArg(t);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,189,// the value is an option
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,190,"else if (t.startsWith(""-""))"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,192,if (stopAtNonOption && !getOptions().hasOption(t))
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,194,eatTheRest = true;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,195,cmd.addArg(t);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,197,else
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,199,"processOption(t, iterator);"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,203,// the value is an argument
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,204,else
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,206,cmd.addArg(t);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,208,if (stopAtNonOption)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,210,eatTheRest = true;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,214,// eat the remaining tokens
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,215,if (eatTheRest)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,217,while (iterator.hasNext())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,219,String str = (String) iterator.next();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,221,// ensure only one double-dash is added
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,222,"if (!""--"".equals(str))"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,224,cmd.addArg(str);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,230,processProperties(properties);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,231,checkRequiredOptions();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,233,return cmd;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,237,* Sets the values of Options using the values in <code>properties</code>.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,239,* @param properties The value properties to be processed.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,241,protected void processProperties(Properties properties)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,243,if (properties == null)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,245,return;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,248,for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,250,String option = e.nextElement().toString();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,252,if (!cmd.hasOption(option))
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,254,Option opt = getOptions().getOption(option);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,256,// get the value from the properties instance
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,257,String value = properties.getProperty(option);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,259,if (opt.hasArg())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,261,if (opt.getValues() == null || opt.getValues().length == 0)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,263,try
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,265,opt.addValueForProcessing(value);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,267,catch (RuntimeException exp)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,269,// if we cannot add the value don't worry about it
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,273,"else if (!(""yes"".equalsIgnoreCase(value)"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,274,"|| ""true"".equalsIgnoreCase(value)"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,275,"|| ""1"".equalsIgnoreCase(value)))"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,277,"// if the value is not yes, true or 1 then don't add the"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,278,// option to the CommandLine
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,279,break;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,282,cmd.addOption(opt);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,288,* Throws a {@link MissingOptionException} if all of the required options
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,289,* are not present.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,291,* @throws MissingOptionException if any of the required Options
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,292,* are not present.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,294,protected void checkRequiredOptions() throws MissingOptionException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,296,// if there are required options that have not been processsed
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,297,if (!getRequiredOptions().isEmpty())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,299,throw new MissingOptionException(getRequiredOptions());
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,304,* <p>Process the argument values for the specified Option
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,305,* <code>opt</code> using the values retrieved from the
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,306,* specified iterator <code>iter</code>.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,308,* @param opt The current Option
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,309,* @param iter The iterator over the flattened command line
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,310,* Options.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,312,* @throws ParseException if an argument value is required
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,313,* and it is has not been found.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,315,"public void processArgs(Option opt, ListIterator iter) throws ParseException"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,317,// loop until an option is found
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,318,while (iter.hasNext())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,320,String str = (String) iter.next();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,322,"// found an Option, not an argument"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,323,"if (getOptions().hasOption(str) && str.startsWith(""-""))"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,325,iter.previous();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,326,break;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,329,// found a value
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,330,try
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,332,opt.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(str));
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,334,catch (RuntimeException exp)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,336,iter.previous();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,337,break;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,341,if (opt.getValues() == null && !opt.hasOptionalArg())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,343,throw new MissingArgumentException(opt);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,348,* Process the Option specified by <code>arg</code> using the values
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,349,* retrieved from the specfied iterator <code>iter</code>.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,351,* @param arg The String value representing an Option
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,352,* @param iter The iterator over the flattened command line arguments.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,354,* @throws ParseException if <code>arg</code> does not represent an Option
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,356,"protected void processOption(String arg, ListIterator iter) throws ParseException"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,358,boolean hasOption = getOptions().hasOption(arg);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,360,// if there is no option throw an UnrecognisedOptionException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,361,if (!hasOption)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,363,"throw new UnrecognizedOptionException(""Unrecognized option: "" + arg, arg);"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,366,// get the option represented by arg
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,367,Option opt = (Option) getOptions().getOption(arg).clone();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,369,// if the option is a required option remove the option from
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,370,// the requiredOptions list
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,371,if (opt.isRequired())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,373,getRequiredOptions().remove(opt.getKey());
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,376,// if the option is in an OptionGroup make that option the selected
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,377,// option of the group
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,378,if (getOptions().getOptionGroup(opt) != null)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,380,OptionGroup group = getOptions().getOptionGroup(opt);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,382,if (group.isRequired())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,384,getRequiredOptions().remove(group);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,387,group.setSelected(opt);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,390,// if the option takes an argument value
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,391,if (opt.hasArg())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,393,"processArgs(opt, iter);"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,396,// set the option on the command line
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,397,cmd.addOption(opt);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,20,import java.io.File;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,21,import java.io.FileInputStream;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,22,import java.net.URL;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,23,import java.util.Date;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,26,* <p>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,27,* Allows Options to be created from a single String.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,28,* The pattern contains various single character flags and via
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,29,"* an optional punctuation character, their expected type."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,30,* </p>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,32,"* <table border=""1"">"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,33,* <tr><td>a</td><td>-a flag</td></tr>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,34,* <tr><td>b@</td><td>-b [classname]</td></tr>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,35,* <tr><td>c&gt;</td><td>-c [filename]</td></tr>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,36,* <tr><td>d+</td><td>-d [classname] (creates object via empty contructor)</td></tr>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,37,* <tr><td>e%</td><td>-e [number] (creates Double/Long instance depeding on existing of a '.')</td></tr>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,38,* <tr><td>f/</td><td>-f [url]</td></tr>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,39,* <tr><td>g:</td><td>-g [string]</td></tr>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,40,* </table>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,42,* <p>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,43,"* For example, the following allows command line flags of '-v -p string-value -f /dir/file'."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,44,* The exclamation mark precede a mandatory option.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,45,* </p>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,46,"* <code>Options options = PatternOptionBuilder.parsePattern(""vp:!f/"");</code>"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,48,* <p>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,49,* TODO These need to break out to OptionType and also
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,50,* to be pluggable.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,51,* </p>
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,53,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,55,public class PatternOptionBuilder
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,57,/** String class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,58,public static final Class STRING_VALUE = String.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,60,/** Object class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,61,public static final Class OBJECT_VALUE = Object.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,63,/** Number class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,64,public static final Class NUMBER_VALUE = Number.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,66,/** Date class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,67,public static final Class DATE_VALUE = Date.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,69,/** Class class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,70,public static final Class CLASS_VALUE = Class.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,72,/// can we do this one??
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,73,"// is meant to check that the file exists, else it errors."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,74,// ie) it's for reading not writing.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,76,/** FileInputStream class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,77,public static final Class EXISTING_FILE_VALUE = FileInputStream.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,79,/** File class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,80,public static final Class FILE_VALUE = File.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,82,/** File array class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,83,public static final Class FILES_VALUE = File[].class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,85,/** URL class */
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,86,public static final Class URL_VALUE = URL.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,89,* Retrieve the class that <code>ch</code> represents.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,91,* @param ch the specified character
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,92,* @return The class that <code>ch</code> represents
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,94,public static Object getValueClass(char ch)
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,96,switch (ch)
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,98,case '@':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,99,return PatternOptionBuilder.OBJECT_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,100,case ':':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,101,return PatternOptionBuilder.STRING_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,102,case '%':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,103,return PatternOptionBuilder.NUMBER_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,104,case '+':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,105,return PatternOptionBuilder.CLASS_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,106,case '#':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,107,return PatternOptionBuilder.DATE_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,108,case '<':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,109,return PatternOptionBuilder.EXISTING_FILE_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,110,case '>':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,111,return PatternOptionBuilder.FILE_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,112,case '*':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,113,return PatternOptionBuilder.FILES_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,114,case '/':
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,115,return PatternOptionBuilder.URL_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,118,return null;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,122,"* Returns whether <code>ch</code> is a value code, i.e."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,123,* whether it represents a class in a pattern.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,125,* @param ch the specified character
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,126,"* @return true if <code>ch</code> is a value code, otherwise false."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,128,public static boolean isValueCode(char ch)
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,130,return ch == '@'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,131,|| ch == ':'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,132,|| ch == '%'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,133,|| ch == '+'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,134,|| ch == '#'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,135,|| ch == '<'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,136,|| ch == '>'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,137,|| ch == '*'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,138,|| ch == '/'
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,139,|| ch == '!';
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,143,* Returns the {@link Options} instance represented by <code>pattern</code>.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,145,* @param pattern the pattern string
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,146,* @return The {@link Options} instance
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,148,public static Options parsePattern(String pattern)
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,150,char opt = ' ';
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,151,boolean required = false;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,152,Object type = null;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,154,Options options = new Options();
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,156,for (int i = 0; i < pattern.length(); i++)
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,158,char ch = pattern.charAt(i);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,160,// a value code comes after an option and specifies
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,161,// details about it
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,162,if (!isValueCode(ch))
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,164,if (opt != ' ')
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,166,OptionBuilder.hasArg(type != null);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,167,OptionBuilder.isRequired(required);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,168,OptionBuilder.withType(type);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,170,// we have a previous one to deal with
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,171,options.addOption(OptionBuilder.create(opt));
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,172,required = false;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,173,type = null;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,174,opt = ' ';
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,177,opt = ch;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,179,else if (ch == '!')
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,181,required = true;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,183,else
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,185,type = getValueClass(ch);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,189,if (opt != ' ')
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,191,OptionBuilder.hasArg(type != null);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,192,OptionBuilder.isRequired(required);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,193,OptionBuilder.withType(type);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,195,// we have a final one to deal with
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,196,options.addOption(OptionBuilder.create(opt));
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,199,return options;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,20,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,21,import java.util.Arrays;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,22,import java.util.Iterator;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,23,import java.util.List;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,26,* The class PosixParser provides an implementation of the
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,27,"* {@link Parser#flatten(Options,String[],boolean) flatten} method."
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,29,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,30,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,32,public class PosixParser extends Parser
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,34,/** holder for flattened tokens */
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,35,private List tokens = new ArrayList();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,37,/** specifies if bursting should continue */
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,38,private boolean eatTheRest;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,40,/** holder for the current option */
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,41,private Option currentOption;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,43,/** the command line Options */
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,44,private Options options;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,47,* Resets the members to their original state i.e. remove
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,48,* all of <code>tokens</code> entries and set <code>eatTheRest</code>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,49,* to false.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,51,private void init()
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,53,eatTheRest = false;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,54,tokens.clear();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,58,* <p>An implementation of {@link Parser}'s abstract
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,59,"* {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,61,* <p>The following are the rules used by this flatten method.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,62,* <ol>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,63,*  <li>if <code>stopAtNonOption</code> is <b>true</b> then do not
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,64,"*  burst anymore of <code>arguments</code> entries, just add each"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,65,"*  successive entry without further processing.  Otherwise, ignore"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,66,*  <code>stopAtNonOption</code>.</li>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,67,"*  <li>if the current <code>arguments</code> entry is ""<b>--</b>"""
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,68,*  just add the entry to the list of processed tokens</li>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,69,"*  <li>if the current <code>arguments</code> entry is ""<b>-</b>"""
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,70,*  just add the entry to the list of processed tokens</li>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,71,*  <li>if the current <code>arguments</code> entry is two characters
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,72,"*  in length and the first character is ""<b>-</b>"" then check if this"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,73,"*  is a valid {@link Option} id.  If it is a valid id, then add the"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,74,*  entry to the list of processed tokens and set the current {@link Option}
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,75,*  member.  If it is not a valid id and <code>stopAtNonOption</code>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,76,"*  is true, then the remaining entries are copied to the list of"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,77,"*  processed tokens.  Otherwise, the current entry is ignored.</li>"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,78,*  <li>if the current <code>arguments</code> entry is more than two
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,79,"*  characters in length and the first character is ""<b>-</b>"" then"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,80,*  we need to burst the entry to determine its constituents.  For more
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,81,*  information on the bursting algorithm see
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,82,"*  {@link PosixParser#burstToken(String, boolean) burstToken}.</li>"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,83,*  <li>if the current <code>arguments</code> entry is not handled
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,84,"*  by any of the previous rules, then the entry is added to the list"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,85,*  of processed tokens.</li>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,86,* </ol>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,87,* </p>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,89,* @param options The command line {@link Options}
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,90,* @param arguments The command line arguments to be parsed
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,91,* @param stopAtNonOption Specifies whether to stop flattening
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,92,* when an non option is found.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,93,* @return The flattened <code>arguments</code> String array.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,95,"protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,97,init();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,98,this.options = options;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,100,// an iterator for the command line tokens
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,101,Iterator iter = Arrays.asList(arguments).iterator();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,103,// process each command line token
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,104,while (iter.hasNext())
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,106,// get the next command line token
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,107,String token = (String) iter.next();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,109,// handle long option --foo or --foo=bar
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,110,"if (token.startsWith(""--""))"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,112,int pos = token.indexOf('=');
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,113,"String opt = pos == -1 ? token : token.substring(0, pos); // --foo"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,115,if (!options.hasOption(opt))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,117,"processNonOptionToken(token, stopAtNonOption);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,119,else
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,121,currentOption = options.getOption(opt);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,123,tokens.add(opt);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,124,if (pos != -1)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,126,tokens.add(token.substring(pos + 1));
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,131,// single hyphen
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,132,"else if (""-"".equals(token))"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,134,tokens.add(token);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,136,"else if (token.startsWith(""-""))"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,138,if (token.length() == 2 || options.hasOption(token))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,140,"processOptionToken(token, stopAtNonOption);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,142,// requires bursting
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,143,else
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,145,"burstToken(token, stopAtNonOption);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,148,else
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,150,"processNonOptionToken(token, stopAtNonOption);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,153,gobble(iter);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,156,return (String[]) tokens.toArray(new String[tokens.size()]);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,160,* Adds the remaining tokens to the processed tokens list.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,162,* @param iter An iterator over the remaining tokens
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,164,private void gobble(Iterator iter)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,166,if (eatTheRest)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,168,while (iter.hasNext())
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,170,tokens.add(iter.next());
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,176,"* Add the special token ""<b>--</b>"" and the current <code>value</code>"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,177,* to the processed tokens list. Then add all the remaining
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,178,* <code>argument</code> values to the processed tokens list.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,180,* @param value The current token
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,182,"private void processNonOptionToken(String value, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,184,if (stopAtNonOption && (currentOption == null || !currentOption.hasArg()))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,186,eatTheRest = true;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,187,"tokens.add(""--"");"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,190,tokens.add(value);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,194,* <p>If an {@link Option} exists for <code>token</code> then
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,195,* add the token to the processed list.</p>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,197,* <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,198,* is set then add the remaining tokens to the processed tokens list
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,199,* directly.</p>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,201,* @param token The current option token
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,202,* @param stopAtNonOption Specifies whether flattening should halt
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,203,* at the first non option.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,205,"private void processOptionToken(String token, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,207,if (stopAtNonOption && !options.hasOption(token))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,209,eatTheRest = true;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,212,if (options.hasOption(token))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,214,currentOption = options.getOption(token);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,217,tokens.add(token);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,221,* Breaks <code>token</code> into its constituent parts
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,222,* using the following algorithm.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,224,* <ul>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,225,"*  <li>ignore the first character (""<b>-</b>"")</li>"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,226,*  <li>foreach remaining character check if an {@link Option}
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,227,*  exists with that id.</li>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,228,*  <li>if an {@link Option} does exist then add that character
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,229,"*  prepended with ""<b>-</b>"" to the list of processed tokens.</li>"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,230,*  <li>if the {@link Option} can have an argument value and there
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,231,*  are remaining characters in the token then add the remaining
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,232,*  characters as a token to the list of processed tokens.</li>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,233,*  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,234,*  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,235,"*  ""<b>--</b>"" followed by the remaining characters and also"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,236,*  the remaining tokens directly to the processed tokens list.</li>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,237,*  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,238,*  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,239,"*  character prepended with ""<b>-</b>"".</li>"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,240,* </ul>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,242,* @param token The current token to be <b>burst</b>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,243,* @param stopAtNonOption Specifies whether to stop processing
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,244,* at the first non-Option encountered.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,246,"protected void burstToken(String token, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,248,for (int i = 1; i < token.length(); i++)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,250,String ch = String.valueOf(token.charAt(i));
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,252,if (options.hasOption(ch))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,254,"tokens.add(""-"" + ch);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,255,currentOption = options.getOption(ch);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,257,if (currentOption.hasArg() && (token.length() != (i + 1)))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,259,tokens.add(token.substring(i + 1));
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,261,break;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,264,else if (stopAtNonOption)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,266,"processNonOptionToken(token.substring(i), true);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,267,break;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,269,else
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,271,tokens.add(token);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,272,break;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,20,import java.io.File;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,22,import java.net.MalformedURLException;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,23,import java.net.URL;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,25,import java.util.Date;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,28,* This is a temporary implementation. TypeHandler will handle the
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,29,* pluggableness of OptionTypes and it will direct all of these types
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,30,* of conversion functionalities to ConvertUtils component in Commons
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,31,* already. BeanUtils I think.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,33,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,35,public class TypeHandler
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,38,* Returns the <code>Object</code> of type <code>obj</code>
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,39,* with the value of <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,41,* @param str the command line value
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,42,* @param obj the type of argument
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,43,* @return The instance of <code>obj</code> initialised with
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,44,* the value of <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,46,"public static Object createValue(String str, Object obj)"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,47,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,49,"return createValue(str, (Class) obj);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,53,* Returns the <code>Object</code> of type <code>clazz</code>
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,54,* with the value of <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,56,* @param str the command line value
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,57,* @param clazz the type of argument
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,58,* @return The instance of <code>clazz</code> initialised with
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,59,* the value of <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,61,"public static Object createValue(String str, Class clazz)"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,62,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,64,if (PatternOptionBuilder.STRING_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,66,return str;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,68,else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,70,return createObject(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,72,else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,74,return createNumber(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,76,else if (PatternOptionBuilder.DATE_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,78,return createDate(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,80,else if (PatternOptionBuilder.CLASS_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,82,return createClass(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,84,else if (PatternOptionBuilder.FILE_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,86,return createFile(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,88,else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,90,return createFile(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,92,else if (PatternOptionBuilder.FILES_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,94,return createFiles(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,96,else if (PatternOptionBuilder.URL_VALUE == clazz)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,98,return createURL(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,100,else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,102,return null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,107,* Create an Object from the classname and empty constructor.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,109,* @param classname the argument value
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,110,"* @return the initialised object, or null if it couldn't create"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,111,* the Object.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,113,public static Object createObject(String classname)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,114,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,116,Class cl = null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,118,try
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,120,cl = Class.forName(classname);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,122,catch (ClassNotFoundException cnfe)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,124,"throw new ParseException(""Unable to find the class: "" + classname);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,127,Object instance = null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,129,try
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,131,instance = cl.newInstance();
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,133,catch (Exception e)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,135,"throw new ParseException(e.getClass().getName() + ""; Unable to create an instance of: "" + classname);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,138,return instance;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,142,"* Create a number from a String. If a . is present, it creates a"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,143,"* Double, otherwise a Long."
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,145,* @param str the value
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,146,"* @return the number represented by <code>str</code>, if <code>str</code>"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,147,"* is not a number, null is returned."
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,149,public static Number createNumber(String str)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,150,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,152,try
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,154,if (str.indexOf('.') != -1)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,156,return Double.valueOf(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,158,else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,160,return Long.valueOf(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,163,catch (NumberFormatException e)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,165,throw new ParseException(e.getMessage());
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,170,* Returns the class whose name is <code>classname</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,172,* @param classname the class name
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,173,"* @return The class if it is found, otherwise return null"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,175,public static Class createClass(String classname)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,176,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,178,try
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,180,return Class.forName(classname);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,182,catch (ClassNotFoundException e)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,184,"throw new ParseException(""Unable to find the class: "" + classname);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,189,* Returns the date represented by <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,191,* @param str the date string
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,192,"* @return The date if <code>str</code> is a valid date string,"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,193,* otherwise return null.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,195,public static Date createDate(String str)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,196,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,198,"throw new UnsupportedOperationException(""Not yet implemented"");"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,202,* Returns the URL represented by <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,204,* @param str the URL string
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,205,"* @return The URL is <code>str</code> is well-formed, otherwise"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,206,* return null.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,208,public static URL createURL(String str)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,209,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,211,try
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,213,return new URL(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,215,catch (MalformedURLException e)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,217,"throw new ParseException(""Unable to parse the URL: "" + str);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,222,* Returns the File represented by <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,224,* @param str the File location
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,225,* @return The file represented by <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,227,public static File createFile(String str)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,228,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,230,return new File(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,234,* Returns the File[] represented by <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,236,* @param str the paths to the files
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,237,* @return The File[] represented by <code>str</code>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,239,public static File[] createFiles(String str)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,240,throws ParseException
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,242,// to implement/port:
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,243,//        return FileW.findFiles(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,244,"throw new UnsupportedOperationException(""Not yet implemented"");"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,21,* Exception thrown during parsing signalling an unrecognized
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,22,* option was seen.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,24,* @author bob mcwhiter (bob @ werken.com)
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,25,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,27,public class UnrecognizedOptionException extends ParseException
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,29,/** The  unrecognized option */
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,30,private String option;
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,33,* Construct a new <code>UnrecognizedArgumentException</code>
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,34,* with the specified detail message.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,36,* @param message the detail message
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,38,public UnrecognizedOptionException(String message)
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,40,super(message);
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,44,* Construct a new <code>UnrecognizedArgumentException</code>
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,45,* with the specified option and detail message.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,47,* @param message the detail message
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,48,* @param option  the unrecognized option
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,49,* @since 1.2
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,51,"public UnrecognizedOptionException(String message, String option)"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,53,this(message);
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,54,this.option = option;
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,58,* Returns the unrecognized option.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,60,* @return the related option
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,61,* @since 1.2
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,63,public String getOption()
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,65,return option;
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,21,* Contains useful helper methods for classes within this package.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,23,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,24,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,26,class Util
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,29,* Remove the hyphens from the begining of <code>str</code> and
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,30,* return the new String.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,32,* @param str The string from which the hyphens should be removed.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,34,* @return the new String.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,36,static String stripLeadingHyphens(String str)
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,38,if (str == null)
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,40,return null;
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,42,"if (str.startsWith(""--""))"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,44,"return str.substring(2, str.length());"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,46,"else if (str.startsWith(""-""))"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,48,"return str.substring(1, str.length());"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,51,return str;
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,55,* Remove the leading and trailing quotes from <code>str</code>.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,56,"* E.g. if str is '""one two""', then 'one two' is returned."
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,58,* @param str The string from which the leading and trailing quotes
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,59,* should be removed.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,61,* @return The string without the leading and trailing quotes.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,63,static String stripLeadingAndTrailingQuotes(String str)
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,65,"if (str.startsWith(""\""""))"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,67,"str = str.substring(1, str.length());"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,69,"if (str.endsWith(""\""""))"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,71,"str = str.substring(0, str.length() - 1);"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,73,return str;
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,19,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,22, An Option that can process values passed on the command line in the form
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,23," ""--file README""."
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,25,ublic interface Argument extends Option {
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,28, Returns the initial separator character or
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,29, '\0' if no character has been set.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,31, @return char the initial separator character
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,33,har getInitialSeparator();
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,36," Processes the ""README"" style element of the argument."
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,38, Values identified should be added to the CommandLine object in
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,39, association with this Argument.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,41," @see WriteableCommandLine#addValue(Option,Object)"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,43, @param commandLine The CommandLine object to store results in.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,44, @param args The arguments to process.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,45, @param option The option to register value against.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,46, @throws OptionException if any problems occur.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,48,oid processValues(
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,49,"inal WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,50,"inal ListIterator args,"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,51,inal Option option)
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,52,hrows OptionException;
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,55, Adds defaults to a CommandLine.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,57, @param commandLine
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,58,            The CommandLine object to store defaults in.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,59, @param option
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,60,            The Option to store the defaults against.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,62,"oid defaultValues(final WriteableCommandLine commandLine, final Option option);"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,65, Performs any necessary validation on the values added to the
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,66, CommandLine.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,68, Validation will typically involve using the
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,69, CommandLine.getValues(option) method to retrieve the values
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,70, and then either checking each value.  Optionally the String
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,71, value can be replaced by another Object such as a Number
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,72, instance or a File instance.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,74, @see CommandLine#getValues(Option)
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,76, @param commandLine The CommandLine object to query.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,77, @param option The option to lookup values with.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,78, @throws OptionException if any problems occur.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,80,"oid validate(final WriteableCommandLine commandLine, final Option option)"
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,81,hrows OptionException;
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,84, Indicates whether argument values must be present for the CommandLine to
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,85, be valid.
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,87, @see #getMinimum()
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,88, @see #getMaximum()
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,89, @return true iff the CommandLine will be invalid without at least one
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,90,         value
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,92,oolean isRequired();
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,95, Retrieves the minimum number of values required for a valid Argument
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,97, @return the minimum number of values
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,99,nt getMinimum();
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,102, Retrieves the maximum number of values acceptable for a valid Argument
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,104, @return the maximum number of values
False,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,106,nt getMaximum();
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,19,mport java.util.List;
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,20,mport java.util.Set;
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,23, Instances of CommandLine represent a command line that has been processed
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,24, according to the definition supplied to the parser.
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,26,ublic interface CommandLine {
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,29, Detects the presence of an option with the specified trigger in this
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,30, CommandLine.
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,32, @param trigger the trigger to search for
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,33, @return true iff an option with this trigger is present
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,35,oolean hasOption(final String trigger);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,38, Detects the presence of an option in this CommandLine.
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,40, @param option the Option to search for
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,41, @return true iff the option is present
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,43,oolean hasOption(final Option option);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,46, Finds the Option with the specified trigger
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,48, @param trigger the name of the option to retrieve
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,49, @return the Option matching the trigger or null if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,51,ption getOption(final String trigger);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,54, Retrieves the Argument values associated with the specified Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,56, @param trigger a trigger used to lookup the Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,57, @return a list of values or an empty List if none are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,59,ist getValues(final String trigger);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,62, Retrieves the Argument values associated with the specified Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,64, @param trigger a trigger used to lookup the Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,65, @param defaultValues the result to return if no values are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,66, @return a list of values or defaultValues if none are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,68,"ist getValues(final String trigger, final List defaultValues);"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,71, Retrieves the Argument values associated with the specified Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,73, @param option the Option associated with the values
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,74, @return a list of values or an empty List if none are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,76,ist getValues(final Option option);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,79, Retrieves the Argument values associated with the specified Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,81, @param option the Option associated with the values
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,82, @param defaultValues the result to return if no values are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,83, @return a list of values or defaultValues if none are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,85,"ist getValues(final Option option, final List defaultValues);"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,88, Retrieves the single Argument value associated with the specified Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,90, @param trigger a trigger used to lookup the Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,91, @return the matching value or null if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,92, @throws IllegalStateException if more than one values are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,94,bject getValue(final String trigger) throws IllegalStateException;
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,97, Retrieves the single Argument value associated with the specified Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,99, @param trigger a trigger used to lookup the Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,100, @param defaultValue the result to use if no values are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,101, @return the matching value or defaultValue if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,102, @throws IllegalStateException if more than one values are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,104,"bject getValue(final String trigger, final Object defaultValue) throws IllegalStateException;"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,107, Retrieves the single Argument value associated with the specified Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,109, @param option the Option associated with the value
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,110, @return the matching value or null if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,111, @throws IllegalStateException if more than one values are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,113,bject getValue(final Option option) throws IllegalStateException;
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,116, Retrieves the single Argument value associated with the specified Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,118, @param option the Option associated with the value
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,119, @param defaultValue the result to use if no values are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,120, @return the matching value or defaultValue if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,121, @throws IllegalStateException if more than one values are found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,123,"bject getValue(final Option option, final Object defaultValue) throws IllegalStateException;"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,126, Retrieves the Boolean value associated with the specified Switch
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,128, @param trigger a trigger used to lookup the Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,129, @return the Boolean associated with trigger or null if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,131,oolean getSwitch(final String trigger);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,134, Retrieves the Boolean value associated with the specified Switch
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,136, @param trigger a trigger used to lookup the Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,137, @param defaultValue the Boolean to use if none match
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,138, @return the Boolean associated with trigger or defaultValue if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,140,"oolean getSwitch(final String trigger, final Boolean defaultValue);"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,143, Retrieves the Boolean value associated with the specified Switch
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,145, @param option the Option associated with the value
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,146, @return the Boolean associated with option or null if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,148,oolean getSwitch(final Option option);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,151, Retrieves the Boolean value associated with the specified Switch
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,153, @param option the Option associated with the value
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,154, @param defaultValue the Boolean to use if none match
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,155, @return the Boolean associated with option or defaultValue if none exists
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,157,"oolean getSwitch(final Option option, final Boolean defaultValue);"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,161, Retrieves the value associated with the specified property for the default property set
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,163, @param property the property name to lookup
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,164, @return the value of the property or null
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,166,tring getProperty(final String property);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,169, Retrieves the value associated with the specified property
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,171," @param option the option i.e., -D"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,172, @param property the property name to lookup
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,173, @return the value of the property or null
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,175,"tring getProperty(final Option option, final String property);"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,178, Retrieves the value associated with the specified property
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,180," @param option the option i.e., -D"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,181, @param property the property name to lookup
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,182, @param defaultValue the value to use if no other is found
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,183, @return the value of the property or defaultValue
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,185,"tring getProperty(final Option option, final String property, final String defaultValue);"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,188, Retrieves the set of all property names associated with this option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,190," @param option the option i.e., -D"
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,191, @return a none null set of property names
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,193,et getProperties(final Option option);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,196, Retrieves the set of all property names associated with the default property option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,198, @return a none null set of property names
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,200,et getProperties();
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,203, Retrieves the number of times the specified Option appeared in this
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,204, CommandLine
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,206, @param trigger a trigger used to lookup the Option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,207, @return the number of occurrences of the option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,209,nt getOptionCount(final String trigger);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,212, Retrieves the number of times the specified Option appeared in this
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,213, CommandLine
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,215, @param option the Option associated to check
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,216, @return the number of occurrences of the option
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,218,nt getOptionCount(final Option option);
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,221, Retrieves a list of all Options found in this CommandLine
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,223, @return a none null list of Options
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,225,ist getOptions();
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,228, Retrieves a list of all Option triggers found in this CommandLine
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,230, @return a none null list of Option triggers
False,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,232,et getOptionTriggers();
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,19,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,20,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,21,mport java.util.Set;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,24, An enum of possible display settings. These settings are used to control the
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,25," presence of various features in the String representations of options,"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,26, CommandLines and usage strings.  Usually a Set of DisplaySetting instances
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,27, will be passed to a method that will lookup the presence of the values.
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,29,ublic class DisplaySetting {
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,31,rivate static final Set all = new HashSet();
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,34, A Set guaranteed to contain all possible DisplaySetting values
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,36,ublic static final Set ALL = Collections.unmodifiableSet(all);
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,39, A Set guaranteed to contain no DisplaySetting values
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,41,ublic static final Set NONE = Collections.EMPTY_SET;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,44, Indicates that aliases should be included
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,46,ublic static final DisplaySetting DISPLAY_ALIASES =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,47,"ew DisplaySetting(""DISPLAY_ALIASES"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,50, Indicates that optionality should be included
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,52,ublic static final DisplaySetting DISPLAY_OPTIONAL =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,53,"ew DisplaySetting(""DISPLAY_OPTIONAL"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,56, Indicates that optional child groups should be displayed in square
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,57, brackets.
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,59,ublic static final DisplaySetting DISPLAY_OPTIONAL_CHILD_GROUP =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,60,"ew DisplaySetting(""DISPLAY_OPTIONAL_CHILD_GROUP"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,63, Indicates that property options should be included
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,65,ublic static final DisplaySetting DISPLAY_PROPERTY_OPTION =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,66,"ew DisplaySetting(""DISPLAY_PROPERTY_OPTION"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,69, Indicates that switches should be included enabled
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,71,ublic static final DisplaySetting DISPLAY_SWITCH_ENABLED =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,72,"ew DisplaySetting(""DISPLAY_SWITCH_ENABLED"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,75, Indicates that switches should be included disabled
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,77,ublic static final DisplaySetting DISPLAY_SWITCH_DISABLED =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,78,"ew DisplaySetting(""DISPLAY_SWITCH_DISABLED"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,81, Indicates that group names should be included
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,83,ublic static final DisplaySetting DISPLAY_GROUP_NAME =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,84,"ew DisplaySetting(""DISPLAY_GROUP_NAME"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,87, Indicates that groups should be included expanded
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,89,ublic static final DisplaySetting DISPLAY_GROUP_EXPANDED =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,90,"ew DisplaySetting(""DISPLAY_GROUP_EXPANDED"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,93, Indicates that group arguments should be included
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,95,ublic static final DisplaySetting DISPLAY_GROUP_ARGUMENT =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,96,"ew DisplaySetting(""DISPLAY_GROUP_ARGUMENT"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,99, Indicates that group outer brackets should be included
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,101,ublic static final DisplaySetting DISPLAY_GROUP_OUTER =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,102,"ew DisplaySetting(""DISPLAY_GROUP_OUTER"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,105, Indicates that arguments should be included numbered
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,107,ublic static final DisplaySetting DISPLAY_ARGUMENT_NUMBERED =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,108,"ew DisplaySetting(""DISPLAY_ARGUMENT_NUMBERED"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,111, Indicates that arguments should be included bracketed
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,113,ublic static final DisplaySetting DISPLAY_ARGUMENT_BRACKETED =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,114,"ew DisplaySetting(""DISPLAY_ARGUMENT_BRACKETED"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,117, Indicates that arguments of Parents should be included
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,119,ublic static final DisplaySetting DISPLAY_PARENT_ARGUMENT =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,120,"ew DisplaySetting(""DISPLAY_PARENT_ARGUMENT"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,123, Indicates that children of Parents should be included
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,125,ublic static final DisplaySetting DISPLAY_PARENT_CHILDREN =
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,126,"ew DisplaySetting(""DISPLAY_PARENT_CHILDREN"");"
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,129, The name of the setting
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,131,rivate final String name;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,134, The hashCode of the setting
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,136,rivate final int hashCode;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,139, Creates a new DisplaySetting with the specified name
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,140, @param name the name of the setting
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,142,rivate DisplaySetting(final String name) {
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,143,his.name = name;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,144,his.hashCode = name.hashCode();
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,145,ll.add(this);
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,148,ublic int hashCode() {
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,149,eturn hashCode;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,152,ublic boolean equals(final Object that) {
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,153,f (that instanceof DisplaySetting) {
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,154,eturn name.compareTo(that.toString()) == 0;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,156,eturn false;
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,159,ublic String toString() {
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,160,eturn name;
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,19,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,20,mport java.util.Set;
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,23," An Option representing a choice or group of Options in the form ""-a|-b|-c""."
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,25,ublic interface Group extends Option {
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,28, Appends usage information to the specified StringBuffer
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,30, @param buffer the buffer to append to
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,31, @param helpSettings a set of display settings @see DisplaySetting
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,32, @param comp a comparator used to sort the Options
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,33, @param separator the String used to separate member Options
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,35,oid appendUsage(
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,36,"inal StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,37,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,38,"inal Comparator comp,"
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,39,inal String separator);
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,42, Indicates whether group members must be present for the CommandLine to be
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,43, valid.
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,45, @see #getMinimum()
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,46, @see #getMaximum()
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,47, @return true iff the CommandLine will be invalid without at least one
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,48,         member option
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,50,oolean isRequired();
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,53, Retrieves the minimum number of members required for a valid Group
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,55, @return the minimum number of members
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,57,nt getMinimum();
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,60, Retrieves the maximum number of members acceptable for a valid Group
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,62, @return the maximum number of members
False,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,64,nt getMaximum();
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,19,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,20,mport java.util.Set;
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,23, Represents a line of help for a particular Option.
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,25,ublic interface HelpLine {
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,28, @return The description of the option
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,30,tring getDescription();
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,33, @return The level of indentation for this line
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,35,nt getIndent();
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,38, @return The Option that the help line relates to
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,40,ption getOption();
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,43, Builds a usage string for the option using the specified settings and
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,44, comparator.
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,46, @param helpSettings
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,47,            the settings to apply
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,48, @param comparator
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,49,            a comparator to sort options when applicable
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,50, @return the usage string
False,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,52,"tring usage(final Set helpSettings, final Comparator comparator);"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,19,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,20,mport java.util.List;
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,21,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,22,mport java.util.Set;
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,25, The super type of all options representing a particular element of the
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,26, command line interface.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,28,ublic interface Option {
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,31, Processes String arguments into a CommandLine.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,33, The iterator will initially point at the first argument to be processed
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,34, and at the end of the method should point to the first argument not
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,35, processed. This method MUST process at least one argument from the
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,36, ListIterator.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,38, @param commandLine
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,39,            The CommandLine object to store results in
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,40, @param args
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,41,            The arguments to process
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,42, @throws OptionException
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,43,             if any problems occur
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,45,oid process(
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,46,"inal WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,47,inal ListIterator args)
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,48,hrows OptionException;
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,51, Adds defaults to a CommandLine.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,53, Any defaults for this option are applied as well as the defaults for
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,54, any contained options
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,56, @param commandLine
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,57,            The CommandLine object to store defaults in
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,59,oid defaults(final WriteableCommandLine commandLine);
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,62, Indicates whether this Option will be able to process the particular
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,63, argument.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,65, @param commandLine
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,66,            The CommandLine to check
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,67, @param argument
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,68,            The argument to be tested
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,69, @return true if the argument can be processed by this Option
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,71,"oolean canProcess(final WriteableCommandLine commandLine, final String argument);"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,74, Indicates whether this Option will be able to process the particular
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,75, argument. The ListIterator must be restored to the initial state before
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,76, returning the boolean.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,78," @see #canProcess(WriteableCommandLine,String)"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,79, @param commandLine
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,80,            the CommandLine to check
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,81, @param arguments
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,82,            the ListIterator over String arguments
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,83, @return true if the argument can be processed by this Option
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,85,"oolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments);"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,88, Identifies the argument prefixes that should trigger this option. This
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,89, is used to decide which of many Options should be tried when processing
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,90, a given argument string.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,92, The returned Set must not be null.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,94, @return The set of triggers for this Option
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,96,et getTriggers();
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,99, Identifies the argument prefixes that should be considered options. This
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,100, is used to identify whether a given string looks like an option or an
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,101," argument value. Typically an option would return the set [--,-] while"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,102," switches might offer [-,+]."
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,104, The returned Set must not be null.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,106, @return The set of prefixes for this Option
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,108,et getPrefixes();
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,111, Checks that the supplied CommandLine is valid with respect to this
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,112, option.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,114, @param commandLine
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,115,            The CommandLine to check.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,116, @throws OptionException
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,117,             if the CommandLine is not valid.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,119,oid validate(final WriteableCommandLine commandLine)
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,120,hrows OptionException;
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,123, Builds up a list of HelpLineImpl instances to be presented by HelpFormatter.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,125, @see HelpLine
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,126, @see org.apache.commons.cli2.util.HelpFormatter
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,127, @param depth
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,128,            the initial indent depth
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,129, @param helpSettings
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,130,            the HelpSettings that should be applied
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,131, @param comp
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,132,            a comparator used to sort options when applicable.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,133, @return a List of HelpLineImpl objects
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,135,ist helpLines(
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,136,"inal int depth,"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,137,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,138,inal Comparator comp);
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,141, Appends usage information to the specified StringBuffer
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,143, @param buffer the buffer to append to
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,144, @param helpSettings a set of display settings @see DisplaySetting
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,145, @param comp a comparator used to sort the Options
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,147,oid appendUsage(
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,148,"inal StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,149,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,150,inal Comparator comp);
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,153, The preferred name of an option is used for generating help and usage
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,154, information.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,156, @return The preferred name of the option
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,158,tring getPreferredName();
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,161, Returns a description of the option. This string is used to build help
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,162, messages as in the HelpFormatter.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,164, @see org.apache.commons.cli2.util.HelpFormatter
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,165, @return a description of the option.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,167,tring getDescription();
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,170, Returns the id of the option.  This can be used in a loop and switch
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,171, construct:
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,173, <code>
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,174, for(Option o : cmd.getOptions()){
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,175,     switch(o.getId()){
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,176,         case POTENTIAL_OPTION:
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,180, </code>
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,182, The returned value is not guarenteed to be unique.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,184, @return the id of the option.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,186,nt getId();
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,189, Recursively searches for an option with the supplied trigger.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,191, @param trigger the trigger to search for.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,192, @return the matching option or null.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,194,ption findOption(final String trigger);
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,197, Indicates whether this option is required to be present.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,198, @return true iff the CommandLine will be invalid without this Option
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,200,oolean isRequired();
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,203, Returns the parent of this option. Options can be organized in a
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,204, hierarchical manner if they are added to groups. This method can be used
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,205, for obtaining the parent option of this option. The result may be
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,206, <b>null</b> if this option does not have a parent.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,208, @return the parent of this option
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,210,ption getParent();
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,213, Sets the parent of this option. This method is called when the option is
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,214, added to a group. Storing the parent of an option makes it possible to
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,215," keep track of hierarchical relations between options. For instance, if an"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,216," option is identified while parsing a command line, the group this option"
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,217, belongs to can also be added to the command line.
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,219, @param parent the parent option
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,221,oid setParent(Option parent);
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,19,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,20,mport java.util.Set;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,22,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,25, A problem found while dealing with command line options.
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,27,ublic class OptionException
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,28,xtends Exception {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,30, The settings used when displaying the related Option.
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,32, @see DisplaySetting
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,34,ublic static final Set HELP_SETTINGS =
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,35,ollections.unmodifiableSet(Collections.singleton(DisplaySetting.DISPLAY_PROPERTY_OPTION));
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,37,** resource helper instance */
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,38,rivate static final ResourceHelper helper = ResourceHelper.getResourceHelper();
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,40,** The Option the exception relates to */
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,41,rivate final Option option;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,43,** The message explaining the Exception */
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,44,rivate final String message;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,47, Creates a new OptionException.
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,49, @param option
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,50,            The Option the exception relates to
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,52,ublic OptionException(final Option option) {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,53,"his(option, null, null);"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,57, Creates a new OptionException.
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,58, @param option the Option the exception relates to
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,59, @param messageKey the id of the message to display
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,61,"ublic OptionException(final Option option,"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,62,inal String messageKey) {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,63,"his(option, messageKey, null);"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,67, Creates a new OptionException.
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,68, @param option the Option the exception relates to
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,69, @param messageKey the id of the message to display
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,70, @param value a value to display with the message
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,72,"ublic OptionException(final Option option,"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,73,"inal String messageKey,"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,74,inal String value) {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,75,his.option = option;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,77,f (messageKey != null) {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,78,inal StringBuffer buffer = new StringBuffer();
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,80,f (value != null) {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,81,"uffer.append(helper.getMessage(messageKey, value));"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,82, else {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,83,uffer.append(helper.getMessage(messageKey));
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,86,"uffer.append("" "");"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,88,"ption.appendUsage(buffer, HELP_SETTINGS, null);"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,89,essage = buffer.toString();
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,90, else {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,91,"essage = """";"
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,96, Gets the Option the exception relates to
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,98, @return The related Option
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,100,ublic Option getOption() {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,101,eturn option;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,104,ublic String getMessage() {
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,105,eturn message;
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,19,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,22, An Option that can have an argument and/or group of child Options in the form
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,23," ""-f &lt;arg&gt; [-a|-b|-c]""."
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,25,ublic interface Parent extends Option {
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,28," Processes the parent part of the Option.  The combination of parent,"
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,29, argument and children is handled by the process method.
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,30," @see Option#process(WriteableCommandLine, ListIterator)"
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,32, @param commandLine the CommandLine to write results to
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,33, @param args a ListIterator over argument strings positioned at the next
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,34,             argument to process
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,35, @throws OptionException if an error occurs while processing
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,37,oid processParent(
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,38,"inal WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,39,inal ListIterator args)
False,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,40,hrows OptionException;
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,17,ackage org.apache.commons.cli2;
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,19,mport java.util.List;
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,22, A CommandLine that detected values and options can be written to.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,24,ublic interface WriteableCommandLine extends CommandLine {
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,27, Adds an Option to the CommandLine
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,28, @param option the Option to add
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,30,oid addOption(final Option option);
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,33, Adds a value to an Option in the CommandLine.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,34, @param option the Option to add to
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,35, @param value the value to add
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,37,"oid addValue(final Option option, final Object value);"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,40, Retrieves the Argument values specified on the command line for the
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,41," specified Option, this doesn't return any values supplied"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,42, programmatically as defaults.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,44, @param option the Option associated with the values
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,45, @return a list of values or an empty List if none are found
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,47,ist getUndefaultedValues(final Option option);
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,50, Sets the default values for an Option in the CommandLine
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,51, @param option the Option to add to
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,52, @param defaultValues the defaults for the option
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,54,"oid setDefaultValues(final Option option, final List defaultValues);"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,57, Adds a switch value to an Option in the CommandLine.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,58, @param option the Option to add to
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,59, @param value the switch value to add
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,60, @throws IllegalStateException if the switch has already been added
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,62,"oid addSwitch(final Option option, final boolean value) throws IllegalStateException;"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,65, Sets the default state for a Switch in the CommandLine.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,66, @param option the Option to add to
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,67, @param defaultSwitch the defaults state for ths switch
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,69,"oid setDefaultSwitch(final Option option, final Boolean defaultSwitch);"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,72, Adds a property value to a name in the CommandLine.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,73, Replaces any existing value for the property.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,75, @param option the Option to add to
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,76, @param property the name of the property
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,77, @param value the value of the property
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,79,"oid addProperty(final Option option, final String property, final String value);"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,82, Adds a property value to the default property set.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,83, Replaces any existing value for the property.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,85, @param property the name of the property
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,86, @param value the value of the property
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,88,"oid addProperty(final String property, final String value);"
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,91, Detects whether the argument looks like an Option trigger
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,92, @param argument the argument to test
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,93, @return true if the argument looks like an Option trigger
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,95,oolean looksLikeOption(final String argument);
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,98, Returns the option that is currently processed.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,100, @return the current option
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,102,ption getCurrentOption();
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,105, Sets the current option. This method is called by concrete option
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,106, implementations during command line processing. It enables the command
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,107, line to keep track about the option that is currently processed.
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,109, @param currentOption the new current option
False,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,111,oid setCurrentOption(Option currentOption);
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,17,ackage org.apache.commons.cli2.builder;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,20,mport java.util.List;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,22,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,23,mport org.apache.commons.cli2.option.ArgumentImpl;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,24,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,25,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,26,mport org.apache.commons.cli2.validation.Validator;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,29, Builds Argument instances.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,31,ublic class ArgumentBuilder {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,33,** i18n */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,34,rivate final static ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,36,** name of the argument. Used for display and lookups in CommandLine */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,37,rivate String name;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,39,** description of the argument. Used in the automated online help */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,40,rivate String description;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,42,** minimum number of values required */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,43,rivate int minimum;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,45,** maximum number of values permitted */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,46,rivate int maximum;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,48,** character used to separate the values from the option */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,49,rivate char initialSeparator;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,51,** character used to separate the values from each other */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,52,rivate char subsequentSeparator;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,54,** object that should be used to ensure the values are valid */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,55,rivate Validator validator;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,57,"** used to identify the consume remaining option, typically ""--"" */"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,58,rivate String consumeRemaining;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,60,** default values for argument */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,61,rivate List defaultValues;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,63,** id of the argument */
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,64,rivate int id;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,67, Creates a new ArgumentBuilder instance
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,69,ublic ArgumentBuilder() {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,70,eset();
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,74, Creates a new Argument instance using the options specified in this
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,75, ArgumentBuilder.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,77, @return A new Argument instance using the options specified in this
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,78, ArgumentBuilder.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,80,ublic final Argument create() {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,81,inal Argument argument =
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,82,ew ArgumentImpl(
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,83,"ame,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,84,"escription,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,85,"inimum,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,86,"aximum,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,87,"nitialSeparator,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,88,"ubsequentSeparator,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,89,"alidator,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,90,"onsumeRemaining,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,91,"efaultValues,"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,92,d);
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,94,eset();
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,96,eturn argument;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,100, Resets the ArgumentBuilder to the defaults for a new Argument. The
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,101, method is called automatically at the end of a create() call.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,102, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,104,ublic final ArgumentBuilder reset() {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,105,"ame = ""arg"";"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,106,escription = null;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,107,inimum = 0;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,108,aximum = Integer.MAX_VALUE;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,109,nitialSeparator = ArgumentImpl.DEFAULT_INITIAL_SEPARATOR;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,110,ubsequentSeparator = ArgumentImpl.DEFAULT_SUBSEQUENT_SEPARATOR;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,111,alidator = null;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,112,"onsumeRemaining = ""--"";"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,113,efaultValues = null;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,114,d = 0;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,115,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,119, Sets the name of the argument. The name is used when displaying usage
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,120, information and to allow lookups in the CommandLine object.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,122, @see org.apache.commons.cli2.CommandLine#getValue(String)
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,124, @param newName the name of the argument
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,125, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,127,ublic final ArgumentBuilder withName(final String newName) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,128,f (newName == null) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,129,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_NAME));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,131,"f ("""".equals(newName)) {"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,132,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_EMPTY_NAME));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,134,his.name = newName;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,135,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,139, Sets the description of the argument.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,141, The description is used when displaying online help.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,143, @param newDescription a description of the argument
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,144, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,146,ublic final ArgumentBuilder withDescription(final String newDescription) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,147,his.description = newDescription;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,148,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,152, Sets the minimum number of values needed for the argument to be valid.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,154, @param newMinimum the number of values needed
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,155, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,157,ublic final ArgumentBuilder withMinimum(final int newMinimum) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,158,f (newMinimum < 0) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,159,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NEGATIVE_MINIMUM));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,161,his.minimum = newMinimum;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,162,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,166, Sets the maximum number of values allowed for the argument to be valid.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,168, @param newMaximum the number of values allowed
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,169, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,171,ublic final ArgumentBuilder withMaximum(final int newMaximum) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,172,f (newMaximum < 0) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,173,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NEGATIVE_MAXIMUM));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,175,his.maximum = newMaximum;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,176,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,180, Sets the character used to separate the values from the option. When an
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,181," argument is of the form -libs:dir1,dir2,dir3 the initialSeparator would"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,182, be ':'.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,184, @param newInitialSeparator the character used to separate the values
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,185, from the option
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,186, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,188,ublic final ArgumentBuilder withInitialSeparator(
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,189,inal char newInitialSeparator) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,191,his.initialSeparator = newInitialSeparator;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,192,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,196, Sets the character used to separate the values from each other. When an
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,197," argument is of the form -libs:dir1,dir2,dir3 the subsequentSeparator"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,198," would be ','."
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,200, @param newSubsequentSeparator the character used to separate the values
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,201, from each other
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,202, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,204,ublic final ArgumentBuilder withSubsequentSeparator(
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,205,inal char newSubsequentSeparator) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,207,his.subsequentSeparator = newSubsequentSeparator;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,208,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,212, Sets the validator instance used to perform validation on the Argument
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,213, values.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,215, @param newValidator a Validator instance
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,216, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,218,ublic final ArgumentBuilder withValidator(final Validator newValidator) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,219,f (newValidator == null) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,220,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_VALIDATOR));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,222,his.validator = newValidator;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,223,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,227," Sets the ""consume remaining"" option, defaults to ""--"". Use this if you"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,228, want to allow values that might be confused with option strings.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,230, @param newConsumeRemaining the string to use for the consume
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,231, remaining option
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,232, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,234,ublic final ArgumentBuilder withConsumeRemaining(final String newConsumeRemaining) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,235,f (newConsumeRemaining == null) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,236,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_CONSUME_REMAINING));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,238,"f ( """".equals(newConsumeRemaining)) {"
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,239,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_EMPTY_CONSUME_REMAINING));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,241,his.consumeRemaining = newConsumeRemaining;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,242,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,246, Sets the default value.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,248, @param defaultValue the default value for the Argument
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,249, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,251,ublic final ArgumentBuilder withDefault(final Object defaultValue) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,252,f (defaultValue == null) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,253,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_DEFAULT));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,256,f (this.defaultValues == null) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,257,his.defaultValues = new ArrayList(1);
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,259,his.defaultValues.add(defaultValue);
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,260,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,264, Sets the default values.
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,266, @param newDefaultValues the default values for the Argument
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,267, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,269,ublic final ArgumentBuilder withDefaults(final List newDefaultValues) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,270,f (newDefaultValues == null) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,271,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_DEFAULTS));
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,273,his.defaultValues = newDefaultValues;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,274,eturn this;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,278, Sets the id
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,280, @param newId the id of the Argument
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,281, @return this ArgumentBuilder
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,283,ublic final ArgumentBuilder withId(final int newId) {
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,284,his.id = newId;
False,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,285,eturn this;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,17,ackage org.apache.commons.cli2.builder;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,19,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,20,mport java.util.Set;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,22,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,23,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,24,mport org.apache.commons.cli2.option.Command;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,25,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,26,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,29, Builds Command instances
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,31,ublic class CommandBuilder {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,32,** the preferred name of the command */
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,33,rivate String preferredName;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,35,** the description of the command */
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,36,rivate String description;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,38,** the aliases of the command */
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,39,rivate Set aliases;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,41,** whether the command is required or not */
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,42,rivate boolean required;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,44,** the argument of the command */
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,45,rivate Argument argument;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,47,** the children of the command */
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,48,rivate Group children;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,50,** the id of the command */
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,51,rivate int id;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,54, Creates a new <code>CommandBuilder</code> instance.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,56,ublic CommandBuilder() {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,57,eset();
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,61, Creates a new <code>Command</code> instance using the properties of the
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,62, <code>CommandBuilder</code>.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,64, @return the new Command instance
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,66,ublic Command create() {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,67,/ check we have a valid name
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,68,f (preferredName == null) {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,69,hrow new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.OPTION_NO_NAME));
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,72,/ build the command
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,73,inal Command option =
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,74,"ew Command(preferredName, description, aliases, required, argument, children, id);"
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,76,/ reset the builder
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,77,eset();
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,79,eturn option;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,83, Resets the CommandBuilder to the defaults for a new Command.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,85, This method is called automatically at the end of the
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,86, {@link #create() create} method.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,87, @return this <code>CommandBuilder</code>
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,89,ublic CommandBuilder reset() {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,90,referredName = null;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,91,escription = null;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,92,liases = new HashSet();
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,93,equired = false;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,94,rgument = null;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,95,hildren = null;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,96,d = 0;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,98,eturn this;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,102, Specifies the name for the next <code>Command</code>
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,103, that is created.  The first name is used as the preferred
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,104, display name for the <code>Command</code> and then
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,105, later names are used as aliases.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,107, @param name the name for the next <code>Command</code>
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,108, that is created.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,109, @return this <code>CommandBuilder</code>.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,111,ublic CommandBuilder withName(final String name) {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,112,f (preferredName == null) {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,113,referredName = name;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,114, else {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,115,liases.add(name);
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,118,eturn this;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,122, Specifies the description for the next <code>Command</code>
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,123, that is created.  This description is used to produce
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,124, help documentation for the <code>Command</code>.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,126, @param newDescription the description for the next
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,127, <code>Command</code> that is created.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,128, @return this <code>CommandBuilder</code>.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,130,ublic CommandBuilder withDescription(final String newDescription) {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,131,his.description = newDescription;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,133,eturn this;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,137, Specifies whether the next <code>Command</code> created is
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,138, required or not.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,139, @param newRequired whether the next <code>Command</code> created is
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,140, required or not.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,141, @return this <code>CommandBuilder</code>.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,143,ublic CommandBuilder withRequired(final boolean newRequired) {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,144,his.required = newRequired;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,146,eturn this;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,150, Specifies the children for the next <code>Command</code>
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,151, that is created.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,153, @param newChildren the child options for the next <code>Command</code>
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,154, that is created.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,155, @return this <code>CommandBuilder</code>.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,157,ublic CommandBuilder withChildren(final Group newChildren) {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,158,his.children = newChildren;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,160,eturn this;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,164, Specifies the argument for the next <code>Command</code>
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,165, that is created.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,167, @param newArgument the argument for the next <code>Command</code>
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,168, that is created.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,169, @return this <code>CommandBuilder</code>.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,171,ublic CommandBuilder withArgument(final Argument newArgument) {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,172,his.argument = newArgument;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,174,eturn this;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,178, Specifies the id for the next <code>Command</code> that is created.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,180, @param newId the id for the next <code>Command</code> that is created.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,181, @return this <code>CommandBuilder</code>.
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,183,ublic final CommandBuilder withId(final int newId) {
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,184,his.id = newId;
False,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,186,eturn this;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,17,ackage org.apache.commons.cli2.builder;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,19,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,20,mport java.util.Set;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,22,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,23,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,24,mport org.apache.commons.cli2.option.DefaultOption;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,25,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,26,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,29, Builds DefaultOption instances.
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,31,ublic class DefaultOptionBuilder {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,32,rivate final String shortPrefix;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,33,rivate final String longPrefix;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,34,rivate final boolean burstEnabled;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,35,rivate String preferredName;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,36,rivate Set aliases;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,37,rivate Set burstAliases;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,38,rivate boolean required;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,39,rivate String description;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,40,rivate Argument argument;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,41,rivate Group children;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,42,rivate int id;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,45, Creates a new DefaultOptionBuilder using defaults
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,46, @see DefaultOption#DEFAULT_SHORT_PREFIX
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,47, @see DefaultOption#DEFAULT_LONG_PREFIX
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,48, @see DefaultOption#DEFAULT_BURST_ENABLED
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,50,ublic DefaultOptionBuilder() {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,51,"his(DefaultOption.DEFAULT_SHORT_PREFIX, DefaultOption.DEFAULT_LONG_PREFIX,"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,52,efaultOption.DEFAULT_BURST_ENABLED);
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,56, Creates a new DefaultOptionBuilder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,57, @param shortPrefix the prefix to use for short options
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,58, @param longPrefix the prefix to use for long options
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,59, @param burstEnabled whether to allow gnu style bursting
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,60, @throws IllegalArgumentException if either prefix is less than on
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,61,                                  character long
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,63,"ublic DefaultOptionBuilder(final String shortPrefix,"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,64,"inal String longPrefix,"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,65,inal boolean burstEnabled)
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,66,hrows IllegalArgumentException {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,67,f ((shortPrefix == null) || (shortPrefix.length() == 0)) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,68,hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.OPTION_ILLEGAL_SHORT_PREFIX));
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,71,f ((longPrefix == null) || (longPrefix.length() == 0)) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,72,hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.OPTION_ILLEGAL_LONG_PREFIX));
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,75,his.shortPrefix = shortPrefix;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,76,his.longPrefix = longPrefix;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,77,his.burstEnabled = burstEnabled;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,78,eset();
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,82, Creates a DefaultOption instance
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,83, @return the new instance
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,84, @throws IllegalStateException if no names have been supplied
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,86,ublic DefaultOption create()
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,87,hrows IllegalStateException {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,88,f (preferredName == null) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,89,hrow new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.OPTION_NO_NAME));
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,92,inal DefaultOption option =
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,93,"ew DefaultOption(shortPrefix, longPrefix, burstEnabled, preferredName, description,"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,94,"liases, burstAliases, required, argument, children, id);"
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,96,eset();
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,98,eturn option;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,102, Resets the builder.
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,103, @return this builder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,105,ublic DefaultOptionBuilder reset() {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,106,referredName = null;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,107,escription = null;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,108,liases = new HashSet();
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,109,urstAliases = new HashSet();
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,110,equired = false;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,111,rgument = null;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,112,hildren = null;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,113,d = 0;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,115,eturn this;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,119, Use this short option name. The first name is used as the preferred
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,120, display name for the Command and then later names are used as aliases.
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,122, @param shortName the name to use
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,123, @return this builder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,125,ublic DefaultOptionBuilder withShortName(final String shortName) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,126,inal String name = shortPrefix + shortName;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,128,f (preferredName == null) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,129,referredName = name;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,130, else {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,131,liases.add(name);
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,134,f (burstEnabled && (name.length() == (shortPrefix.length() + 1))) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,135,urstAliases.add(name);
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,138,eturn this;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,142, Use this long option name.  The first name is used as the preferred
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,143, display name for the Command and then later names are used as aliases.
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,145, @param longName the name to use
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,146, @return this builder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,148,ublic DefaultOptionBuilder withLongName(final String longName) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,149,inal String name = longPrefix + longName;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,151,f (preferredName == null) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,152,referredName = name;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,153, else {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,154,liases.add(name);
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,157,eturn this;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,161, Use this option description
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,162, @param newDescription the description to use
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,163, @return this builder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,165,ublic DefaultOptionBuilder withDescription(final String newDescription) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,166,his.description = newDescription;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,168,eturn this;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,172, Use this optionality
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,173, @param newRequired true iff the Option is required
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,174, @return this builder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,176,ublic DefaultOptionBuilder withRequired(final boolean newRequired) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,177,his.required = newRequired;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,179,eturn this;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,183, Use this child Group
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,184, @param newChildren the child Group to use
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,185, @return this builder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,187,ublic DefaultOptionBuilder withChildren(final Group newChildren) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,188,his.children = newChildren;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,190,eturn this;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,194, Use this Argument
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,195, @param newArgument the argument to use
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,196, @return this builder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,198,ublic DefaultOptionBuilder withArgument(final Argument newArgument) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,199,his.argument = newArgument;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,201,eturn this;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,205, Sets the id
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,207, @param newId
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,208,            the id of the DefaultOption
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,209, @return this DefaultOptionBuilder
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,211,ublic final DefaultOptionBuilder withId(final int newId) {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,212,his.id = newId;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,214,eturn this;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,17,ackage org.apache.commons.cli2.builder;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,20,mport java.util.List;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,22,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,23,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,24,mport org.apache.commons.cli2.option.GroupImpl;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,27, Builds Group instances
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,29,ublic class GroupBuilder {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,31,rivate String name;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,32,rivate String description;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,33,rivate List options;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,34,rivate int minimum;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,35,rivate int maximum;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,36,rivate boolean required;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,39, Creates a new GroupBuilder
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,41,ublic GroupBuilder() {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,42,eset();
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,46, Creates a new Group instance
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,47, @return the new Group instance
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,49,ublic Group create() {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,50,inal GroupImpl group =
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,51,"ew GroupImpl(options, name, description, minimum, maximum, required);"
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,53,eset();
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,55,eturn group;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,59, Resets the builder.
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,60, @return this builder
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,62,ublic GroupBuilder reset() {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,63,ame = null;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,64,escription = null;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,65,ptions = new ArrayList();
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,66,inimum = 0;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,67,aximum = Integer.MAX_VALUE;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,68,equired = true;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,69,eturn this;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,73, Use this option description.
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,74, @param newDescription the description to use
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,75, @return this builder
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,77,ublic GroupBuilder withDescription(final String newDescription) {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,78,his.description = newDescription;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,79,eturn this;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,83, Use this option name
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,84, @param newName the name to use
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,85, @return this builder
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,87,ublic GroupBuilder withName(final String newName) {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,88,his.name = newName;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,89,eturn this;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,93, A valid group requires at least this many options present
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,94, @param newMinimum the minimum Options required
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,95, @return this builder
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,97,ublic GroupBuilder withMinimum(final int newMinimum) {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,98,his.minimum = newMinimum;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,99,eturn this;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,103, A valid group requires at most this many options present
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,104, @param newMaximum the maximum Options allowed
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,105, @return this builder
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,107,ublic GroupBuilder withMaximum(final int newMaximum) {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,108,his.maximum = newMaximum;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,109,eturn this;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,113, Add this option to the group
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,114, @param option the Option to add
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,115, @return this builder
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,117,ublic GroupBuilder withOption(final Option option) {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,118,his.options.add(option);
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,119,eturn this;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,123, Sets the required flag. This flag is evaluated for groups that are
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,124, added to other groups as child groups. If set to <b>true</b> the
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,125, minimum and maximum constraints of the child group are always evaluated.
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,126, @param newRequired the required flag
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,127, @return this builder
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,129,ublic GroupBuilder withRequired(final boolean newRequired) {
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,130,his.required = newRequired;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,131,eturn this;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,17,ackage org.apache.commons.cli2.builder;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,19,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,20,mport java.util.LinkedHashSet;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,21,mport java.util.Set;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,23,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,24,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,25,mport org.apache.commons.cli2.validation.ClassValidator;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,26,mport org.apache.commons.cli2.validation.DateValidator;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,27,mport org.apache.commons.cli2.validation.FileValidator;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,28,mport org.apache.commons.cli2.validation.NumberValidator;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,29,mport org.apache.commons.cli2.validation.UrlValidator;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,30,mport org.apache.commons.cli2.validation.Validator;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,33, Builds Options using a String pattern
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,35,/TODO Document and link to the acceptable patterns
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,36,ublic class PatternBuilder {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,38,rivate final GroupBuilder gbuilder;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,39,rivate final DefaultOptionBuilder obuilder;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,40,rivate final ArgumentBuilder abuilder;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,43, Creates a new PatternBuilder
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,45,ublic PatternBuilder() {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,46,his(
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,47,"ew GroupBuilder(),"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,48,"ew DefaultOptionBuilder(),"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,49,ew ArgumentBuilder());
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,53, Creates a new PatternBuilder
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,54, @param gbuilder the GroupBuilder to use
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,55, @param obuilder the DefaultOptionBuilder to use
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,56, @param abuilder the ArgumentBuilder to use
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,58,ublic PatternBuilder(
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,59,"inal GroupBuilder gbuilder,"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,60,"inal DefaultOptionBuilder obuilder,"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,61,inal ArgumentBuilder abuilder) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,62,his.gbuilder = gbuilder;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,63,his.obuilder = obuilder;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,64,his.abuilder = abuilder;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,67,rivate final Set options = new LinkedHashSet();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,70, Creates a new Option instance.
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,71, @return a new Option instance
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,73,ublic Option create() {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,74,inal Option option;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,76,f (options.size() == 1) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,77,ption = (Option)options.iterator().next();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,79,lse {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,80,builder.reset();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,81,or (final Iterator i = options.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,82,builder.withOption((Option)i.next());
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,84,ption = gbuilder.create();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,87,eset();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,89,eturn option;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,93, Resets this builder.
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,94, @return this builder
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,96,ublic PatternBuilder reset() {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,97,ptions.clear();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,98,eturn this;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,101,rivate void createOption(
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,102,"inal char type,"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,103,"inal boolean required,"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,104,inal char opt) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,105,inal Argument argument;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,106,f (type != ' ') {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,107,builder.reset();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,108,builder.withValidator(validator(type));
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,109,f (required) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,110,builder.withMinimum(1);
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,112,f (type != '*') {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,113,builder.withMaximum(1);
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,115,rgument = abuilder.create();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,117,lse {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,118,rgument = null;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,121,builder.reset();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,122,builder.withArgument(argument);
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,123,builder.withShortName(String.valueOf(opt));
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,124,builder.withRequired(required);
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,126,ptions.add(obuilder.create());
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,130, Builds an Option using a pattern string.
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,131, @param pattern the pattern to build from
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,133,ublic void withPattern(final String pattern) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,134,nt sz = pattern.length();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,136,har opt = ' ';
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,137,har ch = ' ';
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,138,har type = ' ';
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,139,oolean required = false;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,141,or (int i = 0; i < sz; i++) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,142,h = pattern.charAt(i);
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,144,witch (ch) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,145,ase '!' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,146,equired = true;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,147,reak;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,148,ase '@' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,149,ase ':' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,150,ase '%' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,151,ase '+' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,152,ase '#' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,153,ase '<' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,154,ase '>' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,155,ase '*' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,156,ase '/' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,157,ype = ch;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,158,reak;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,159,efault :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,160,f (opt != ' ') {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,161,"reateOption(type, required, opt);"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,162,equired = false;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,163,ype = ' ';
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,166,pt = ch;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,170,f (opt != ' ') {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,171,"reateOption(type, required, opt);"
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,175,rivate static Validator validator(final char c) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,176,witch (c) {
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,177,ase '@' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,178,inal ClassValidator classv = new ClassValidator();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,179,lassv.setInstance(true);
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,180,eturn classv;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,181,ase '+' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,182,inal ClassValidator instancev = new ClassValidator();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,183,eturn instancev;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,184,/case ':':// no validator needed for a string
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,185,ase '%' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,186,eturn NumberValidator.getNumberInstance();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,187,ase '#' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,188,eturn DateValidator.getDateInstance();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,189,ase '<' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,190,inal FileValidator existingv = new FileValidator();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,191,xistingv.setExisting(true);
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,192,xistingv.setFile(true);
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,193,eturn existingv;
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,194,ase '>' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,195,ase '*' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,196,eturn new FileValidator();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,197,ase '/' :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,198,eturn new UrlValidator();
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,199,efault :
False,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,200,eturn null;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,17,ackage org.apache.commons.cli2.builder;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,19,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,20,mport java.util.Set;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,22,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,23,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,24,mport org.apache.commons.cli2.option.Switch;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,25,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,26,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,29, Builds Switch instance.
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,31,ublic class SwitchBuilder {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,32,rivate final String enabledPrefix;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,33,rivate final String disabledPrefix;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,34,rivate String description;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,35,rivate String preferredName;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,36,rivate Set aliases;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,37,rivate boolean required;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,38,rivate Argument argument;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,39,rivate Group children;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,40,rivate int id;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,41,rivate Boolean switchDefault;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,44, Creates a new SwitchBuilder using defaults.
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,45, @see Switch#DEFAULT_ENABLED_PREFIX
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,46, @see Switch#DEFAULT_DISABLED_PREFIX
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,48,ublic SwitchBuilder() {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,49,"his(Switch.DEFAULT_ENABLED_PREFIX, Switch.DEFAULT_DISABLED_PREFIX);"
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,53, Creates a new SwitchBuilder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,54, @param enabledPrefix the prefix to use for enabling the option
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,55, @param disabledPrefix the prefix to use for disabling the option
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,56, @throws IllegalArgumentException if either prefix is less than 1
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,57,                                  character long or the prefixes match
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,59,"ublic SwitchBuilder(final String enabledPrefix,"
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,60,inal String disabledPrefix)
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,61,hrows IllegalArgumentException {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,62,f ((enabledPrefix == null) || (enabledPrefix.length() < 1)) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,63,hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ILLEGAL_ENABLED_PREFIX));
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,66,f ((disabledPrefix == null) || (disabledPrefix.length() < 1)) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,67,hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ILLEGAL_DISABLED_PREFIX));
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,70,f (enabledPrefix.equals(disabledPrefix)) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,71,hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_IDENTICAL_PREFIXES));
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,74,his.enabledPrefix = enabledPrefix;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,75,his.disabledPrefix = disabledPrefix;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,76,eset();
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,80, Creates a new Switch instance
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,81, @return a new Switch instance
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,83,ublic Switch create() {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,84,inal Switch option =
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,85,"ew Switch(enabledPrefix, disabledPrefix, preferredName, aliases, description,"
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,86,"equired, argument, children, id, switchDefault);"
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,88,eset();
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,90,eturn option;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,94, Resets the builder.
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,95, @return this builder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,97,ublic SwitchBuilder reset() {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,98,escription = null;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,99,referredName = null;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,100,equired = false;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,101,liases = new HashSet();
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,102,rgument = null;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,103,hildren = null;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,104,d = 0;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,105,witchDefault = null;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,107,eturn this;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,111, Use this option description
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,112, @param newDescription the description to use
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,113, @return this builder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,115,ublic SwitchBuilder withDescription(final String newDescription) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,116,his.description = newDescription;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,118,eturn this;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,122, Use this option name. The first name is used as the preferred
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,123, display name for the Command and then later names are used as aliases.
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,125, @param name the name to use
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,126, @return this builder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,128,ublic SwitchBuilder withName(final String name) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,129,f (preferredName == null) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,130,referredName = name;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,131, else {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,132,liases.add(name);
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,135,eturn this;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,139, Use this optionality
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,140, @param newRequired true iff the Option is required
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,141, @return this builder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,143,ublic SwitchBuilder withRequired(final boolean newRequired) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,144,his.required = newRequired;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,146,eturn this;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,150, Use this Argument
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,151, @param newArgument the argument to use
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,152, @return this builder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,154,ublic SwitchBuilder withArgument(final Argument newArgument) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,155,his.argument = newArgument;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,157,eturn this;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,161, Use this child Group
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,162, @param newChildren the child Group to use
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,163, @return this builder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,165,ublic SwitchBuilder withChildren(final Group newChildren) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,166,his.children = newChildren;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,168,eturn this;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,172, Sets the id
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,174, @param newId
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,175,            the id of the Switch
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,176, @return this SwitchBuilder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,178,ublic final SwitchBuilder withId(final int newId) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,179,his.id = newId;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,181,eturn this;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,185, Sets the default state for this switch
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,187, @param newSwitchDefault the default state
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,188, @return this SwitchBuilder
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,190,ublic final SwitchBuilder withSwitchDefault(final Boolean newSwitchDefault) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,191,his.switchDefault = newSwitchDefault;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,193,eturn this;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,17,ackage org.apache.commons.cli2.commandline;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,19,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,20,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,21,mport java.util.List;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,23,mport org.apache.commons.cli2.CommandLine;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,24,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,25,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,26,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,29, Instances of CommandLine represent a command line that has been processed
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,30, according to the definition supplied to the parser.
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,32,ublic abstract class CommandLineImpl implements CommandLine {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,33,ublic final boolean hasOption(final String trigger) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,34,eturn hasOption(getOption(trigger));
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,37,ublic final List getValues(final String trigger) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,38,"eturn getValues(getOption(trigger), Collections.EMPTY_LIST);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,41,"ublic final List getValues(final String trigger,"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,42,inal List defaultValues) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,43,"eturn getValues(getOption(trigger), defaultValues);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,46,ublic final List getValues(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,47,"eturn getValues(option, Collections.EMPTY_LIST);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,50,ublic final Object getValue(final String trigger) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,51,"eturn getValue(getOption(trigger), null);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,54,"ublic final Object getValue(final String trigger,"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,55,inal Object defaultValue) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,56,"eturn getValue(getOption(trigger), defaultValue);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,59,ublic final Object getValue(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,60,"eturn getValue(option, null);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,63,"ublic final Object getValue(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,64,inal Object defaultValue) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,65,inal List values;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,67,f (defaultValue == null) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,68,alues = getValues(option);
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,69, else {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,70,"alues = getValues(option, Collections.singletonList(defaultValue));"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,73,f (values.size() > 1) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,74,hrow new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.ARGUMENT_TOO_MANY_VALUES));
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,77,f (values.isEmpty()) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,78,eturn defaultValue;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,81,eturn values.get(0);
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,84,ublic final Boolean getSwitch(final String trigger) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,85,"eturn getSwitch(getOption(trigger), null);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,88,"ublic final Boolean getSwitch(final String trigger,"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,89,inal Boolean defaultValue) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,90,"eturn getSwitch(getOption(trigger), defaultValue);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,93,ublic final Boolean getSwitch(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,94,"eturn getSwitch(option, null);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,97,"ublic final String getProperty(final Option option, final String property) {"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,98,"eturn getProperty(option, property, null);"
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,101,ublic final int getOptionCount(final String trigger) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,102,eturn getOptionCount(getOption(trigger));
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,105,ublic final int getOptionCount(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,106,f (option == null) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,107,eturn 0;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,110,nt count = 0;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,112,or (Iterator i = getOptions().iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,113,f (option.equals(i.next())) {
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,114,+count;
False,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,118,eturn count;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,17,ackage org.apache.commons.cli2.commandline;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,20,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,21,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,22,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,23,mport java.util.List;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,24,mport java.util.Set;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,26,mport org.apache.commons.cli2.CommandLine;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,27,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,28,mport org.apache.commons.cli2.option.PropertyOption;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,31, Manages a queue of default CommandLines. This CommandLine implementation is
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,32, backed by a queue of CommandLine instances which are queried in turn until a
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,33, suitable result is found.
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,35, CommandLine instances can either be added to the back of the queue or can be
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,36, pushed in at a specific position.
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,38, @see #appendCommandLine(CommandLine)
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,39," @see #insertCommandLine(int, CommandLine)"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,41,ublic class DefaultingCommandLine extends CommandLineImpl {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,44, The list of default CommandLine instances
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,46,rivate final List commandLines = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,49, Adds a CommandLine instance to the back of the queue. The supplied
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,50, CommandLine will be used as defaults when all other CommandLines produce
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,51, no result
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,53, @param commandLine
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,54,            the default values to use if all CommandLines
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,56,ublic void appendCommandLine(final CommandLine commandLine) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,57,ommandLines.add(commandLine);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,61, Adds a CommandLine instance to a specified position in the queue.
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,63, @param index ths position at which to insert
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,64, @param commandLine the CommandLine to insert
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,66,ublic void insertCommandLine(
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,67,"inal int index,"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,68,inal CommandLine commandLine) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,69,"ommandLines.add(index, commandLine);"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,73, Builds an iterator over the build in CommandLines.
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,75, @return an unmodifiable iterator
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,77,ublic Iterator commandLines(){
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,78,eturn Collections.unmodifiableList(commandLines).iterator();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,81,ublic Option getOption(String trigger) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,82,or (final Iterator i = commandLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,83,inal CommandLine commandLine = (CommandLine)i.next();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,84,inal Option actual = commandLine.getOption(trigger);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,85,f (actual != null) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,86,eturn actual;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,89,eturn null;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,92,ublic List getOptions() {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,93,inal List options = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,95,inal List temp = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,96,or (final Iterator i = commandLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,97,inal CommandLine commandLine = (CommandLine)i.next();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,98,emp.clear();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,99,emp.addAll(commandLine.getOptions());
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,100,emp.removeAll(options);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,101,ptions.addAll(temp);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,104,eturn Collections.unmodifiableList(options);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,107,ublic Set getOptionTriggers() {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,108,inal Set all = new HashSet();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,109,or (final Iterator i = commandLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,110,inal CommandLine commandLine = (CommandLine)i.next();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,111,ll.addAll(commandLine.getOptionTriggers());
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,114,eturn Collections.unmodifiableSet(all);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,117,ublic boolean hasOption(Option option) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,118,or (final Iterator i = commandLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,119,inal CommandLine commandLine = (CommandLine)i.next();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,120,f (commandLine.hasOption(option)) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,121,eturn true;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,124,eturn false;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,127,"ublic List getValues(Option option, List defaultValues) {"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,128,or (final Iterator i = commandLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,129,inal CommandLine commandLine = (CommandLine)i.next();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,130,inal List actual = commandLine.getValues(option);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,131,f (actual != null && !actual.isEmpty()) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,132,eturn actual;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,135,f(defaultValues==null){
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,136,eturn Collections.EMPTY_LIST;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,138,lse{
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,139,eturn defaultValues;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,143,"ublic Boolean getSwitch(Option option, Boolean defaultValue) {"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,144,or (final Iterator i = commandLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,145,inal CommandLine commandLine = (CommandLine)i.next();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,146,inal Boolean actual = commandLine.getSwitch(option);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,147,f (actual != null) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,148,eturn actual;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,151,eturn defaultValue;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,154,ublic String getProperty(final String property) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,155,"eturn getProperty(new PropertyOption(), property);"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,158,"ublic String getProperty(final Option option, String property, String defaultValue) {"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,159,or (final Iterator i = commandLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,160,inal CommandLine commandLine = (CommandLine)i.next();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,161,"inal String actual = commandLine.getProperty(option, property);"
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,162,f (actual != null) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,163,eturn actual;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,166,eturn defaultValue;
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,169,ublic Set getProperties(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,170,inal Set all = new HashSet();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,171,or (final Iterator i = commandLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,172,inal CommandLine commandLine = (CommandLine)i.next();
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,173,ll.addAll(commandLine.getProperties(option));
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,175,eturn Collections.unmodifiableSet(all);
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,178,ublic Set getProperties() {
False,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,179,eturn getProperties(new PropertyOption());
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,17,ackage org.apache.commons.cli2.commandline;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,19,mport java.util.LinkedList;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,20,mport java.util.List;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,21,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,23,mport org.apache.commons.cli2.CommandLine;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,24,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,25,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,26,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,27,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,28,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,29,mport org.apache.commons.cli2.util.HelpFormatter;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,32, A class that implements the <code>Parser</code> interface can parse a
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,33, String array according to the {@link Group}specified and return a
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,34, {@link CommandLine}.
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,36, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,38,ublic class Parser {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,39,rivate HelpFormatter helpFormatter = new HelpFormatter();
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,40,rivate Option helpOption = null;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,41,rivate String helpTrigger = null;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,42,rivate Group group = null;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,45, Parse the arguments according to the specified options and properties.
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,47, @param arguments
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,48,            the command line arguments
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,50, @return the list of atomic option and value tokens
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,51, @throws OptionException
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,52,             if there are any problems encountered while parsing the
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,53,             command line tokens.
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,55,ublic CommandLine parse(final String[] arguments)
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,56,hrows OptionException {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,57,/ build a mutable list for the arguments
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,58,inal List argumentList = new LinkedList();
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,60,/ copy the arguments into the new list
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,61,or (int i = 0; i < arguments.length; i++) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,62,inal String argument = arguments[i];
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,64,/ ensure non intern'd strings are used
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,65,/ so that == comparisons work as expected
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,66,rgumentList.add(new String(argument));
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,69,/ wet up a command line for this group
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,70,"inal WriteableCommandLine commandLine = new WriteableCommandLineImpl(group, argumentList);"
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,72,/ pick up any defaults from the model
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,73,roup.defaults(commandLine);
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,75,/ process the options as far as possible
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,76,inal ListIterator iterator = argumentList.listIterator();
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,77,bject previous = null;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,79,"hile (group.canProcess(commandLine, iterator)) {"
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,80,/ peek at the next item and backtrack
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,81,inal Object next = iterator.next();
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,82,terator.previous();
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,84,/ if we have just tried to process this instance
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,85,f (next == previous) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,86,/ abort
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,87,reak;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,90,/ remember previous
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,91,revious = next;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,93,"roup.process(commandLine, iterator);"
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,96,/ if there are more arguments we have a problem
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,97,f (iterator.hasNext()) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,98,inal String arg = (String) iterator.next();
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,99,"hrow new OptionException(group, ResourceConstants.UNEXPECTED_TOKEN, arg);"
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,102,/ no need to validate if the help option is present
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,103,f (!commandLine.hasOption(helpOption) && !commandLine.hasOption(helpTrigger)) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,104,roup.validate(commandLine);
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,107,eturn commandLine;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,111, Parse the arguments according to the specified options and properties and
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,112, displays the usage screen if the CommandLine is not valid or the help
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,113, option was specified.
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,115, @param arguments the command line arguments
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,116, @return a valid CommandLine or null if the parse was unsuccessful
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,118,ublic CommandLine parseAndHelp(final String[] arguments) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,119,elpFormatter.setGroup(group);
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,121,ry {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,122,/ attempt to parse the command line
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,123,inal CommandLine commandLine = parse(arguments);
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,125,f (!commandLine.hasOption(helpOption) && !commandLine.hasOption(helpTrigger)) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,126,eturn commandLine;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,128, catch (final OptionException oe) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,129,/ display help regarding the exception
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,130,elpFormatter.setException(oe);
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,133,/ print help
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,134,elpFormatter.print();
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,136,eturn null;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,140, Sets the Group of options to parse against
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,141, @param group the group of options to parse against
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,143,ublic void setGroup(final Group group) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,144,his.group = group;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,148, Sets the HelpFormatter to use with the simplified parsing.
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,149, @see #parseAndHelp(String[])
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,150, @param helpFormatter the HelpFormatter to use with the simplified parsing
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,152,ublic void setHelpFormatter(final HelpFormatter helpFormatter) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,153,his.helpFormatter = helpFormatter;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,157, Sets the help option to use with the simplified parsing.  For example
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,158," <code>--help</code>, <code>-h</code> and <code>-?</code> are often used."
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,159, @see #parseAndHelp(String[])
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,160, @param helpOption the help Option
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,162,ublic void setHelpOption(final Option helpOption) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,163,his.helpOption = helpOption;
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,167, Sets the help option to use with the simplified parsing.  For example
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,168," <code>--help</code>, <code>-h</code> and <code>-?</code> are often used."
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,169, @see #parseAndHelp(String[])
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,170, @param helpTrigger the trigger of the help Option
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,172,ublic void setHelpTrigger(final String helpTrigger) {
False,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,173,his.helpTrigger = helpTrigger;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,17,ackage org.apache.commons.cli2.commandline;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,20,mport java.util.Arrays;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,21,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,22,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,23,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,24,mport java.util.List;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,25,mport java.util.Set;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,26,mport java.util.StringTokenizer;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,27,mport java.util.prefs.BackingStoreException;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,28,mport java.util.prefs.Preferences;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,30,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,31,mport org.apache.commons.cli2.option.PropertyOption;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,34," A CommandLine implementation using the Preferences API, useful when"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,35, constructing a complex DefaultingCommandLine
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,37, This implementation uses the children of a single preference node to populate
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,38, the CommandLine.  Options are keyed from their preferred name and presence in
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,39, the Preferences object is taken as presence in the CommandLine.  Argument
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,40, values are taken from the Preference value and are optionally separated using
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,41," the separator char defined, at construction time.  Switch values can be"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,42, specified using a simple value of <code>true</code> or <code>false</code>;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,43, obviously this means that Switches with Arguments are not supported by this
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,44, implementation.
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,46, @see java.util.prefs.Preferences
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,47, @see org.apache.commons.cli2.commandline.DefaultingCommandLine
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,48, @see org.apache.commons.cli2.Option#getPreferredName()
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,50,ublic class PreferencesCommandLine extends CommandLineImpl {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,52,rivate static final char NUL = '\0';
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,53,rivate final Preferences preferences;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,54,rivate final Option root;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,55,rivate final char separator;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,58, Creates a new PreferencesCommandLine using the specified root Option and
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,59, Preferences node.  Argument values will be separated using the char 0.
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,61, @param root the CommandLine's root Option
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,62, @param preferences the Preferences node to get values from
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,64,"ublic PreferencesCommandLine(final Option root, final Preferences preferences){"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,65,"his(root,preferences,NUL);"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,69," Creates a new PreferencesCommandLine using the specified root Option,"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,70, Preferences node and value separator.
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,72, @param root the CommandLine's root Option
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,73, @param preferences the Preferences node to get values from
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,74, @param separator the character to split argument values
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,76,"ublic PreferencesCommandLine(final Option root, final Preferences preferences, final char separator){"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,77,his.root = root;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,78,his.preferences = preferences;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,79,his.separator = separator;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,82,ublic boolean hasOption(Option option) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,83,f(option==null){
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,84,eturn false;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,86,lse{
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,87,ry {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,88,eturn Arrays.asList(preferences.keys()).contains(option.getPreferredName());
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,89, catch (BackingStoreException e) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,90,eturn false;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,95,ublic Option getOption(String trigger) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,96,eturn root.findOption(trigger);
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,99,"ublic List getValues(final Option option, final List defaultValues) {"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,100,"inal String value = preferences.get(option.getPreferredName(),null);"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,102,f(value==null){
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,103,eturn defaultValues;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,105,lse if(separator>NUL){
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,106,inal List values = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,107,"inal StringTokenizer tokens = new StringTokenizer(value,String.valueOf(separator));"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,109,hile(tokens.hasMoreTokens()){
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,110,alues.add(tokens.nextToken());
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,113,eturn values;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,115,lse{
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,116,eturn Collections.singletonList(value);
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,120,"ublic Boolean getSwitch(final Option option, final Boolean defaultValue) {"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,121,"inal String value = preferences.get(option.getPreferredName(),null);"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,122,"f(""true"".equals(value)){"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,123,eturn Boolean.TRUE;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,125,"lse if(""false"".equals(value)){"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,126,eturn Boolean.FALSE;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,128,lse{
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,129,eturn defaultValue;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,133,ublic String getProperty(final String property) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,134,"eturn getProperty(new PropertyOption(), property);"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,137,"ublic String getProperty(final Option option, final String property, final String defaultValue) {"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,138,"eturn preferences.get(property, defaultValue);"
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,141,ublic Set getProperties(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,142,ry {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,143,eturn new HashSet(Arrays.asList(preferences.keys()));
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,144, catch (BackingStoreException e) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,145,eturn Collections.EMPTY_SET;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,149,ublic Set getProperties() {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,150,eturn getProperties(new PropertyOption());
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,153,ublic List getOptions() {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,154,ry {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,155,inal List options = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,156,inal Iterator keys = Arrays.asList(preferences.keys()).iterator();
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,157,hile (keys.hasNext()) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,158,inal String trigger = (String) keys.next();
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,159,inal Option option = root.findOption(trigger);
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,160,f (option != null) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,161,ptions.add(option);
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,164,eturn Collections.unmodifiableList(options);
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,165, catch (BackingStoreException e) {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,166,eturn Collections.EMPTY_LIST;
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,170,ublic Set getOptionTriggers() {
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,171,inal Set triggers = new HashSet();
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,172,inal Iterator options = getOptions().iterator();
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,173,hile(options.hasNext()){
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,174,inal Option option = (Option)options.next();
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,175,riggers.addAll(option.getTriggers());
False,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,177,eturn Collections.unmodifiableSet(triggers);
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,17,ackage org.apache.commons.cli2.commandline;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,20,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,21,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,22,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,23,mport java.util.List;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,24,mport java.util.Properties;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,25,mport java.util.Set;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,26,mport java.util.StringTokenizer;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,28,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,29,mport org.apache.commons.cli2.option.PropertyOption;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,32," A CommandLine implementation using a java Properties instance, useful for"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,33, constructing a complex DefaultingCommandLine
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,35, Options are keyed from their property name and presence in the Properties
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,36, instance is taken as presence in the CommandLine.  Argument values are taken
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,37, from the property value and are optionally separated using the separator
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,38," char, defined at construction time.  Switch values can be specified using a"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,39, simple value of <code>true</code> or <code>false</code>; obviously this means
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,40, that Switches with Arguments are not supported by this implementation.
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,42, @see java.util.Properties
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,43, @see org.apache.commons.cli2.commandline.DefaultingCommandLine
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,44, @see org.apache.commons.cli2.Option#getPreferredName()
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,46,ublic class PropertiesCommandLine extends CommandLineImpl {
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,48,rivate static final char NUL = '\0';
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,49,rivate final Properties properties;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,50,rivate final Option root;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,51,rivate final char separator;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,54," Creates a new PropertiesCommandLine using the specified root Option,"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,55, Properties instance.  The character 0 is used as the value separator.
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,57, @param root the CommandLine's root Option
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,58, @param properties the Properties instance to get values from
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,60,"ublic PropertiesCommandLine(final Option root, final Properties properties){"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,61,"his(root,properties,NUL);"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,65," Creates a new PropertiesCommandLine using the specified root Option,"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,66, Properties instance and value separator.
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,68, @param root the CommandLine's root Option
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,69, @param properties the Properties instance to get values from
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,70, @param separator the character to split argument values
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,72,"ublic PropertiesCommandLine(final Option root, final Properties properties, final char separator){"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,73,his.root = root;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,74,his.properties = properties;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,75,his.separator = separator;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,79,ublic boolean hasOption(Option option) {
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,80,f(option==null){
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,81,eturn false;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,83,lse{
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,84,eturn properties.containsKey(option.getPreferredName());
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,88,ublic Option getOption(String trigger) {
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,89,eturn root.findOption(trigger);
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,92,"ublic List getValues(final Option option, final List defaultValues) {"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,93,inal String value = properties.getProperty(option.getPreferredName());
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,95,f(value==null){
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,96,eturn defaultValues;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,98,lse if(separator>NUL){
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,99,inal List values = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,100,"inal StringTokenizer tokens = new StringTokenizer(value,String.valueOf(separator));"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,102,hile(tokens.hasMoreTokens()){
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,103,alues.add(tokens.nextToken());
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,106,eturn values;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,108,lse{
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,109,eturn Collections.singletonList(value);
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,113,"ublic Boolean getSwitch(final Option option, final Boolean defaultValue) {"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,114,inal String value = properties.getProperty(option.getPreferredName());
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,115,"f(""true"".equals(value)){"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,116,eturn Boolean.TRUE;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,118,"lse if(""false"".equals(value)){"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,119,eturn Boolean.FALSE;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,121,lse{
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,122,eturn defaultValue;
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,126,ublic String getProperty(final String property) {
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,127,"eturn getProperty(new PropertyOption(), property);"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,130,"ublic String getProperty(final Option option, final String property, final String defaultValue) {"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,131,"eturn properties.getProperty(property,defaultValue);"
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,134,ublic Set getProperties(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,135,eturn properties.keySet();
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,138,ublic Set getProperties() {
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,139,eturn getProperties(new PropertyOption());
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,142,ublic List getOptions() {
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,143,inal List options = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,144,inal Iterator keys = properties.keySet().iterator();
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,145,hile(keys.hasNext()){
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,146,inal String trigger = (String)keys.next();
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,147,inal Option option = root.findOption(trigger);
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,148,f(option!=null){
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,149,ptions.add(option);
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,152,eturn Collections.unmodifiableList(options);
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,155,ublic Set getOptionTriggers() {
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,156,inal Set triggers = new HashSet();
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,157,inal Iterator options = getOptions().iterator();
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,158,hile(options.hasNext()){
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,159,inal Option option = (Option)options.next();
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,160,riggers.addAll(option.getTriggers());
False,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,162,eturn Collections.unmodifiableSet(triggers);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,17,ackage org.apache.commons.cli2.commandline;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,20,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,21,mport java.util.HashMap;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,22,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,23,mport java.util.List;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,24,mport java.util.Map;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,25,mport java.util.Properties;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,26,mport java.util.Set;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,28,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,29,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,30,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,31,mport org.apache.commons.cli2.option.PropertyOption;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,32,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,33,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,36, A WriteableCommandLine implementation allowing Options to write their
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,37, processed information to a CommandLine.
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,39,ublic class WriteableCommandLineImpl
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,40,xtends CommandLineImpl implements WriteableCommandLine {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,41,rivate final Map optionToProperties = new HashMap();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,42,/    private final Properties properties = new Properties();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,43,rivate final List options = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,44,rivate final Map nameToOption = new HashMap();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,45,rivate final Map values = new HashMap();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,46,rivate final Map switches = new HashMap();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,47,rivate final Map defaultValues = new HashMap();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,48,rivate final Map defaultSwitches = new HashMap();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,49,rivate final List normalised;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,50,rivate final Set prefixes;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,51,rivate Option currentOption;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,52,rivate String checkForOption;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,55," Creates a new WriteableCommandLineImpl rooted on the specified Option, to"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,56, hold the parsed arguments.
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,58, @param rootOption the CommandLine's root Option
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,59, @param arguments the arguments this CommandLine represents
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,61,"ublic WriteableCommandLineImpl(final Option rootOption,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,62,inal List arguments) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,63,his.prefixes = rootOption.getPrefixes();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,64,his.normalised = arguments;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,65,etCurrentOption(rootOption);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,68,ublic Option getCurrentOption() {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,69,eturn currentOption;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,72,ublic void setCurrentOption(Option currentOption) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,73,his.currentOption = currentOption;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,76,ublic void addOption(Option option) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,77,ptions.add(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,78,"ameToOption.put(option.getPreferredName(), option);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,80,or (Iterator i = option.getTriggers().iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,81,"ameToOption.put(i.next(), option);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,84,/ ensure that all parent options are also added
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,85,ption parent = option.getParent();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,86,hile (parent != null && !options.contains(parent)) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,87,ptions.add(parent);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,88,arent = parent.getParent();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,92,"ublic void addValue(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,93,inal Object value) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,94,f (option instanceof Argument) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,95,ddOption(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,98,ist valueList = (List) values.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,100,f (valueList == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,101,alueList = new ArrayList();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,102,"alues.put(option, valueList);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,105,alueList.add(value);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,108,"ublic void addSwitch(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,109,inal boolean value) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,110,ddOption(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,112,f (switches.containsKey(option)) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,113,hrow new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ALREADY_SET));
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,114, else {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,115,"witches.put(option, value ? Boolean.TRUE : Boolean.FALSE);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,119,ublic boolean hasOption(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,120,inal boolean present = options.contains(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,122,eturn present;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,125,ublic Option getOption(final String trigger) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,126,eturn (Option) nameToOption.get(trigger);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,129,"ublic List getValues(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,130,ist defaultValues) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,131,/ initialize the return list
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,132,ist valueList = (List) values.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,134,/ grab the correct default values
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,135,f (defaultValues == null || defaultValues.isEmpty()) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,136,efaultValues = (List) this.defaultValues.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,139,/ augment the list with the default values
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,140,f (defaultValues != null && !defaultValues.isEmpty()) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,141,f (valueList == null || valueList.isEmpty()) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,142,alueList = defaultValues;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,143, else {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,144,"/ if there are more default values as specified, add them to"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,145,/ the list.
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,146,f (defaultValues.size() > valueList.size()) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,147,/ copy the list first
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,148,alueList = new ArrayList(valueList);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,149,or (int i=valueList.size(); i<defaultValues.size(); i++) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,150,alueList.add(defaultValues.get(i));
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,156,eturn valueList == null ? Collections.EMPTY_LIST : valueList;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,159,ublic List getUndefaultedValues(Option option) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,160,/ First grab the command line values
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,161,ist valueList = (List) values.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,163,/ Finally use an empty list
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,164,f (valueList == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,165,alueList = Collections.EMPTY_LIST;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,168,eturn valueList;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,171,"ublic Boolean getSwitch(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,172,inal Boolean defaultValue) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,173,/ First grab the command line values
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,174,oolean bool = (Boolean) switches.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,176,/ Secondly try the defaults supplied to the method
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,177,f (bool == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,178,ool = defaultValue;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,181,/ Thirdly try the option's default values
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,182,f (bool == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,183,ool = (Boolean) this.defaultSwitches.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,186,eturn bool;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,189,ublic String getProperty(final String property) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,190,"eturn getProperty(new PropertyOption(), property);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,193,"ublic void addProperty(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,194,"inal String property,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,195,inal String value) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,196,roperties properties = (Properties) optionToProperties.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,197,f (properties == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,198,roperties = new Properties();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,199,"ptionToProperties.put(option, properties);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,201,"roperties.setProperty(property, value);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,204,"ublic void addProperty(final String property, final String value) {"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,205,"ddProperty(new PropertyOption(), property, value);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,208,"ublic String getProperty(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,209,"inal String property,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,210,inal String defaultValue) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,211,roperties properties = (Properties) optionToProperties.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,212,f (properties == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,213,eturn defaultValue;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,215,"eturn properties.getProperty(property, defaultValue);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,218,ublic Set getProperties(final Option option) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,219,roperties properties = (Properties) optionToProperties.get(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,220,f (properties == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,221,eturn Collections.EMPTY_SET;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,223,eturn Collections.unmodifiableSet(properties.keySet());
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,226,ublic Set getProperties() {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,227,eturn getProperties(new PropertyOption());
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,231, Tests whether the passed in trigger looks like an option. This
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,232, implementation first checks whether the passed in string starts with a
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,233," prefix that indicates an option. If this is the case, it is also checked"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,234, whether an option of this name is known for the current option. (This can
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,235," lead to reentrant invocations of this method, so care has to be taken"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,236, about this.)
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,238, @param trigger the command line element to test
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,239, @return a flag whether this element seems to be an option
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,241,ublic boolean looksLikeOption(final String trigger)
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,243,f (checkForOption != null)
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,245,/ this is a reentrant call
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,246,eturn !checkForOption.equals(trigger);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,249,heckForOption = trigger;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,250,ry
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,252,or (final Iterator i = prefixes.iterator(); i.hasNext();)
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,254,inal String prefix = (String) i.next();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,256,f (trigger.startsWith(prefix))
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,258,"f (getCurrentOption().canProcess(this, trigger)"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,259,| getCurrentOption().findOption(trigger) != null)
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,261,eturn true;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,266,eturn false;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,268,inally
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,270,heckForOption = null;
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,274,ublic String toString() {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,275,inal StringBuffer buffer = new StringBuffer();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,277,/ need to add group header
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,278,or (final Iterator i = normalised.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,279,inal String arg = (String) i.next();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,281,f (arg.indexOf(' ') >= 0) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,282,"uffer.append(""\"""").append(arg).append(""\"""");"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,283, else {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,284,uffer.append(arg);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,287,f (i.hasNext()) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,288,uffer.append(' ');
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,292,eturn buffer.toString();
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,295,ublic List getOptions() {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,296,eturn Collections.unmodifiableList(options);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,299,ublic Set getOptionTriggers() {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,300,eturn Collections.unmodifiableSet(nameToOption.keySet());
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,303,"ublic void setDefaultValues(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,304,inal List defaults) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,305,f (defaults == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,306,efaultValues.remove(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,307, else {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,308,"efaultValues.put(option, defaults);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,312,"ublic void setDefaultSwitch(final Option option,"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,313,inal Boolean defaultSwitch) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,314,f (defaultSwitch == null) {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,315,efaultSwitches.remove(option);
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,316, else {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,317,"efaultSwitches.put(option, defaultSwitch);"
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,321,ublic List getNormalised() {
False,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,322,eturn Collections.unmodifiableList(normalised);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,19,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,20,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,21,mport java.util.List;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,22,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,23,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,24,mport java.util.StringTokenizer;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,26,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,27,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,28,mport org.apache.commons.cli2.HelpLine;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,29,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,30,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,31,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,32,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,33,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,34,mport org.apache.commons.cli2.validation.InvalidArgumentException;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,35,mport org.apache.commons.cli2.validation.Validator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,38, An implementation of an Argument.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,40,ublic class ArgumentImpl
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,41,xtends OptionImpl implements Argument {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,42,rivate static final char NUL = '\0';
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,45, The default value for the initial separator char.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,47,ublic static final char DEFAULT_INITIAL_SEPARATOR = NUL;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,50, The default value for the subsequent separator char.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,52,ublic static final char DEFAULT_SUBSEQUENT_SEPARATOR = NUL;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,55, The default token to indicate that remaining arguments should be consumed
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,56, as values.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,58,"ublic static final String DEFAULT_CONSUME_REMAINING = ""--"";"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,59,rivate final String name;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,60,rivate final String description;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,61,rivate final int minimum;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,62,rivate final int maximum;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,63,rivate final char initialSeparator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,64,rivate final char subsequentSeparator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,65,rivate final boolean subsequentSplit;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,66,rivate final Validator validator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,67,rivate final String consumeRemaining;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,68,rivate final List defaultValues;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,69,rivate final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,72, Creates a new Argument instance.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,74, @param name
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,75,            The name of the argument
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,76, @param description
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,77,            A description of the argument
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,78, @param minimum
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,79,            The minimum number of values needed to be valid
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,80, @param maximum
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,81,            The maximum number of values allowed to be valid
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,82, @param initialSeparator
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,83,            The char separating option from value
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,84, @param subsequentSeparator
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,85,            The char separating values from each other
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,86, @param validator
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,87,            The object responsible for validating the values
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,88, @param consumeRemaining
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,89,"            The String used for the ""consuming option"" group"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,90, @param valueDefaults
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,91,            The values to be used if none are specified.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,92, @param id
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,93,"            The id of the option, 0 implies automatic assignment."
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,95," @see OptionImpl#OptionImpl(int,boolean)"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,97,"ublic ArgumentImpl(final String name,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,98,"inal String description,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,99,"inal int minimum,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,100,"inal int maximum,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,101,"inal char initialSeparator,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,102,"inal char subsequentSeparator,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,103,"inal Validator validator,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,104,"inal String consumeRemaining,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,105,"inal List valueDefaults,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,106,inal int id) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,107,"uper(id, false);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,109,"his.name = (name == null) ? ""arg"" : name;"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,110,his.description = description;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,111,his.minimum = minimum;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,112,his.maximum = maximum;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,113,his.initialSeparator = initialSeparator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,114,his.subsequentSeparator = subsequentSeparator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,115,his.subsequentSplit = subsequentSeparator != NUL;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,116,his.validator = validator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,117,his.consumeRemaining = consumeRemaining;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,118,his.defaultValues = valueDefaults;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,120,f (minimum > maximum) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,121,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_MIN_EXCEEDS_MAX));
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,124,f ((valueDefaults != null) && (valueDefaults.size() > 0)) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,125,f (valueDefaults.size() < minimum) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,126,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_TOO_FEW_DEFAULTS));
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,129,f (valueDefaults.size() > maximum) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,130,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.ARGUMENT_TOO_MANY_DEFAULTS));
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,135,ublic String getPreferredName() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,136,eturn name;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,139,"ublic void processValues(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,140,"inal ListIterator arguments,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,141,inal Option option)
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,142,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,143,/ count of arguments processed for this option.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,144,nt argumentCount = commandLine.getUndefaultedValues(option).size();
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,146,hile (arguments.hasNext() && (argumentCount < maximum)) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,147,inal String allValuesQuoted = (String) arguments.next();
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,148,inal String allValues = stripBoundaryQuotes(allValuesQuoted);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,150,/ should we ignore things that look like options?
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,151,f (allValuesQuoted.equals(consumeRemaining)) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,152,hile (arguments.hasNext() && (argumentCount < maximum)) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,153,+argumentCount;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,154,"ommandLine.addValue(option, arguments.next());"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,157,/ does it look like an option?
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,158,lse if (commandLine.looksLikeOption(allValuesQuoted)) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,159,rguments.previous();
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,161,reak;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,163,/ should we split the string up?
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,164,lse if (subsequentSplit) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,165,inal StringTokenizer values =
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,166,"ew StringTokenizer(allValues, String.valueOf(subsequentSeparator));"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,168,rguments.remove();
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,170,hile (values.hasMoreTokens() && (argumentCount < maximum)) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,171,+argumentCount;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,173,inal String token = values.nextToken();
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,174,"ommandLine.addValue(option, token);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,175,rguments.add(token);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,178,f (values.hasMoreTokens()) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,179,"hrow new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,180,alues.nextToken());
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,183,/ it must be a value as it is
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,184,lse {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,185,+argumentCount;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,186,"ommandLine.addValue(option, allValues);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,191,"ublic boolean canProcess(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,192,inal String arg) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,193,eturn true;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,196,ublic Set getPrefixes() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,197,eturn Collections.EMPTY_SET;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,200,"ublic void process(WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,201,istIterator args)
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,202,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,203,"rocessValues(commandLine, args, this);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,206,ublic char getInitialSeparator() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,207,eturn this.initialSeparator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,210,ublic char getSubsequentSeparator() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,211,eturn this.subsequentSeparator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,214,ublic Set getTriggers() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,215,eturn Collections.EMPTY_SET;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,218,ublic String getConsumeRemaining() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,219,eturn this.consumeRemaining;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,222,ublic List getDefaultValues() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,223,eturn this.defaultValues;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,226,ublic Validator getValidator() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,227,eturn this.validator;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,230,ublic void validate(final WriteableCommandLine commandLine)
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,231,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,232,"alidate(commandLine, this);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,235,"ublic void validate(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,236,inal Option option)
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,237,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,238,inal List values = commandLine.getValues(option);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,240,f (values.size() < minimum) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,241,"hrow new OptionException(option, ResourceConstants.ARGUMENT_MISSING_VALUES);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,244,f (values.size() > maximum) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,245,"hrow new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,246,String) values.get(maximum));
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,249,f (validator != null) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,250,ry {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,251,alidator.validate(values);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,252, catch (InvalidArgumentException ive) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,253,"hrow new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,254,ve.getMessage());
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,259,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,260,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,261,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,262,/ do we display the outer optionality
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,263,inal boolean optional = helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,265,/ allow numbering if multiple args
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,266,inal boolean numbered =
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,267,maximum > 1) && helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT_NUMBERED);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,269,inal boolean bracketed = helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT_BRACKETED);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,271,/ if infinite args are allowed then crop the list
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,272,inal int max = (maximum == Integer.MAX_VALUE) ? 2 : maximum;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,274,nt i = 0;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,276,/ for each argument
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,277,hile (i < max) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,278,/ if we're past the first add a space
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,279,f (i > 0) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,280,uffer.append(' ');
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,283,/ if the next arg is optional
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,284,f ((i >= minimum) && (optional || (i > 0))) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,285,uffer.append('[');
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,288,f (bracketed) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,289,uffer.append('<');
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,292,/ add name
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,293,uffer.append(name);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,294,+i;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,296,/ if numbering
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,297,f (numbered) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,298,uffer.append(i);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,301,f (bracketed) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,302,uffer.append('>');
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,306,/ if infinite args are allowed
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,307,f (maximum == Integer.MAX_VALUE) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,308,/ append elipsis
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,309,"uffer.append("" ..."");"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,312,/ for each argument
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,313,hile (i > 0) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,314,-i;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,316,/ if the next arg is optional
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,317,f ((i >= minimum) && (optional || (i > 0))) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,318,uffer.append(']');
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,323,ublic String getDescription() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,324,eturn description;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,327,"ublic List helpLines(final int depth,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,328,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,329,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,330,"inal HelpLine helpLine = new HelpLineImpl(this, depth);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,332,eturn Collections.singletonList(helpLine);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,335,ublic int getMaximum() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,336,eturn maximum;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,339,ublic int getMinimum() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,340,eturn minimum;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,344, If there are any leading or trailing quotes remove them from the
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,345, specified token.
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,347, @param token
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,348,            the token to strip leading and trailing quotes
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,350, @return String the possibly modified token
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,352,ublic String stripBoundaryQuotes(String token) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,353,"f (!token.startsWith(""\"""") || !token.endsWith(""\"""")) {"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,354,eturn token;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,357,"oken = token.substring(1, token.length() - 1);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,359,eturn token;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,362,ublic boolean isRequired() {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,363,eturn getMinimum() > 0;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,366,ublic void defaults(final WriteableCommandLine commandLine) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,367,uper.defaults(commandLine);
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,368,"efaultValues(commandLine, this);"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,371,"ublic void defaultValues(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,372,inal Option option) {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,373,"ommandLine.setDefaultValues(option, defaultValues);"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,20,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,21,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,22,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,23,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,24,mport java.util.List;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,25,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,26,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,28,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,29,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,30,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,31,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,32,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,33,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,34,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,37," Represents a cvs ""update"" style command line option."
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,39," Like all Parents, Commands can have child options and can be part of"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,40, Arguments
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,42,ublic class Command
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,43,xtends ParentImpl {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,44,** The display name for the command */
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,45,rivate final String preferredName;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,47,** The aliases for this command */
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,48,rivate final Set aliases;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,50,** All the names for this command */
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,51,rivate final Set triggers;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,54, Creates a new Command instance.
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,56, @param preferredName
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,57,            The name normally used to refer to the Command
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,58, @param description
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,59,            A description of the Command
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,60, @param aliases
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,61,            Alternative names for the Command
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,62, @param required
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,63,            Whether the Command is required
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,64, @param argument
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,65,            An Argument that the command takes
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,66, @param children
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,67,            The Group of child options for this Command
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,68, @param id
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,69,            A unique id for the Command
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,71," @see ParentImpl#ParentImpl(Argument, Group, String, int, boolean)"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,73,"ublic Command(final String preferredName,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,74,"inal String description,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,75,"inal Set aliases,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,76,"inal boolean required,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,77,"inal Argument argument,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,78,"inal Group children,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,79,inal int id) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,80,"uper(argument, children, description, id, required);"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,82,/ check the preferred name is valid
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,83,f ((preferredName == null) || (preferredName.length() < 1)) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,84,hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.COMMAND_PREFERRED_NAME_TOO_SHORT));
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,87,his.preferredName = preferredName;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,89,/ gracefully and defensively handle aliases
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,90,his.aliases =
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,91,aliases == null) ? Collections.EMPTY_SET
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,92, Collections.unmodifiableSet(new HashSet(aliases));
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,94,/ populate the triggers Set
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,95,inal Set newTriggers = new HashSet();
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,96,ewTriggers.add(preferredName);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,97,ewTriggers.addAll(this.aliases);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,98,his.triggers = Collections.unmodifiableSet(newTriggers);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,101,"ublic void processParent(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,102,inal ListIterator arguments)
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,103,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,104,/ grab the argument to process
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,105,inal String arg = (String) arguments.next();
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,107,/ if we can process it
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,108,"f (canProcess(commandLine, arg)) {"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,109,/ then note the option
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,110,ommandLine.addOption(this);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,112,/ normalise the argument list
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,113,rguments.set(preferredName);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,114, else {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,115,"hrow new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, arg);"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,119,ublic Set getTriggers() {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,120,eturn triggers;
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,123,ublic void validate(WriteableCommandLine commandLine)
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,124,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,125,f (isRequired() && !commandLine.hasOption(this)) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,126,"hrow new OptionException(this, ResourceConstants.OPTION_MISSING_REQUIRED,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,127,etPreferredName());
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,130,uper.validate(commandLine);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,133,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,134,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,135,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,136,/ do we display optionality
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,137,inal boolean optional =
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,138,isRequired() && helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,139,inal boolean displayAliases = helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,141,f (optional) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,142,uffer.append('[');
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,145,uffer.append(preferredName);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,147,f (displayAliases && !aliases.isEmpty()) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,148,"uffer.append("" ("");"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,150,inal List list = new ArrayList(aliases);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,151,ollections.sort(list);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,153,or (final Iterator i = list.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,154,inal String alias = (String) i.next();
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,155,uffer.append(alias);
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,157,f (i.hasNext()) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,158,"uffer.append(',');"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,162,uffer.append(')');
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,165,"uper.appendUsage(buffer, helpSettings, comp);"
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,167,f (optional) {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,168,uffer.append(']');
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,172,ublic String getPreferredName() {
False,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,173,eturn preferredName;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,20,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,21,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,22,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,23,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,24,mport java.util.List;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,25,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,26,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,28,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,29,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,30,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,31,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,32,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,33,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,36, A Parent implementation representing normal options.
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,38,ublic class DefaultOption
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,39,xtends ParentImpl {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,41, The default token used to prefix a short option
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,43,"ublic static final String DEFAULT_SHORT_PREFIX = ""-"";"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,46, The default token used to prefix a long option
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,48,"ublic static final String DEFAULT_LONG_PREFIX = ""--"";"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,51, The default value for the burstEnabled constructor parameter
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,53,ublic static final boolean DEFAULT_BURST_ENABLED = true;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,54,rivate final String preferredName;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,55,rivate final Set aliases;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,56,rivate final Set burstAliases;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,57,rivate final Set triggers;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,58,rivate final Set prefixes;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,59,rivate final String shortPrefix;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,60,rivate final boolean burstEnabled;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,61,rivate final int burstLength;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,64, Creates a new DefaultOption
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,66, @param shortPrefix the prefix used for short options
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,67, @param longPrefix the prefix used for long options
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,68, @param burstEnabled should option bursting be enabled
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,69," @param preferredName the preferred name for this Option, this should begin with either shortPrefix or longPrefix"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,70, @param description a description of this Option
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,71, @param aliases the alternative names for this Option
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,72, @param burstAliases the aliases that can be burst
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,73, @param required whether the Option is strictly required
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,74," @param argument the Argument belonging to this Parent, or null"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,75," @param children the Group children belonging to this Parent, ot null"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,76, @param id the unique identifier for this Option
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,77, @throws IllegalArgumentException if the preferredName or an alias isn't
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,78,     prefixed with shortPrefix or longPrefix
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,80,"ublic DefaultOption(final String shortPrefix,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,81,"inal String longPrefix,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,82,"inal boolean burstEnabled,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,83,"inal String preferredName,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,84,"inal String description,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,85,"inal Set aliases,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,86,"inal Set burstAliases,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,87,"inal boolean required,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,88,"inal Argument argument,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,89,"inal Group children,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,90,inal int id) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,91,"uper(argument, children, description, id, required);"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,93,his.shortPrefix = shortPrefix;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,94,his.burstEnabled = burstEnabled;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,96,his.burstLength = shortPrefix.length() + 1;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,98,his.preferredName = preferredName;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,99,his.aliases =
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,100,aliases == null) ? Collections.EMPTY_SET
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,101, Collections.unmodifiableSet(new HashSet(aliases));
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,103,his.burstAliases =
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,104,burstAliases == null) ? Collections.EMPTY_SET
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,105, Collections.unmodifiableSet(new HashSet(burstAliases));
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,107,inal Set newTriggers = new HashSet();
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,108,ewTriggers.add(preferredName);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,109,ewTriggers.addAll(this.aliases);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,110,ewTriggers.addAll(this.burstAliases);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,111,his.triggers = Collections.unmodifiableSet(newTriggers);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,113,inal Set newPrefixes = new HashSet(super.getPrefixes());
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,114,ewPrefixes.add(shortPrefix);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,115,ewPrefixes.add(longPrefix);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,116,his.prefixes = Collections.unmodifiableSet(newPrefixes);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,118,heckPrefixes(newPrefixes);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,121,"ublic boolean canProcess(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,122,inal String argument) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,123,eturn (argument != null) &&
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,124,"super.canProcess(commandLine, argument) ||"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,125,(argument.length() >= burstLength) &&
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,126,"urstAliases.contains(argument.substring(0, burstLength))));"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,129,"ublic void processParent(WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,130,istIterator arguments)
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,131,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,132,inal String argument = (String) arguments.next();
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,134,f (triggers.contains(argument)) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,135,ommandLine.addOption(this);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,136,rguments.set(preferredName);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,137, else if (burstEnabled && (argument.length() >= burstLength)) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,138,"inal String burst = argument.substring(0, burstLength);"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,140,f (burstAliases.contains(burst)) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,141,ommandLine.addOption(this);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,143,/HMM test bursting all vs bursting one by one.
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,144,rguments.set(preferredName);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,146,f (getArgument() == null) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,147,rguments.add(shortPrefix + argument.substring(burstLength));
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,148, else {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,149,rguments.add(argument.substring(burstLength));
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,152,rguments.previous();
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,153, else {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,154,"hrow new OptionException(this, ResourceConstants.CANNOT_BURST, argument);"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,156, else {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,157,"hrow new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, argument);"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,161,ublic Set getTriggers() {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,162,eturn triggers;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,165,ublic Set getPrefixes() {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,166,eturn prefixes;
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,169,ublic void validate(WriteableCommandLine commandLine)
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,170,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,171,f (isRequired() && !commandLine.hasOption(this)) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,172,"hrow new OptionException(this, ResourceConstants.OPTION_MISSING_REQUIRED,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,173,etPreferredName());
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,176,uper.validate(commandLine);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,179,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,180,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,181,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,182,/ do we display optionality
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,183,inal boolean optional =
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,184,isRequired() && helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,185,inal boolean displayAliases = helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,187,f (optional) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,188,uffer.append('[');
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,191,uffer.append(preferredName);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,193,f (displayAliases && !aliases.isEmpty()) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,194,"uffer.append("" ("");"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,196,inal List list = new ArrayList(aliases);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,197,ollections.sort(list);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,199,or (final Iterator i = list.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,200,inal String alias = (String) i.next();
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,201,uffer.append(alias);
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,203,f (i.hasNext()) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,204,"uffer.append(',');"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,208,uffer.append(')');
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,211,"uper.appendUsage(buffer, helpSettings, comp);"
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,213,f (optional) {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,214,uffer.append(']');
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,218,ublic String getPreferredName() {
False,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,219,eturn preferredName;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,20,mport java.util.Collection;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,21,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,22,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,23,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,24,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,25,mport java.util.List;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,26,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,27,mport java.util.Map;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,28,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,29,mport java.util.SortedMap;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,30,mport java.util.TreeMap;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,32,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,33,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,34,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,35,mport org.apache.commons.cli2.HelpLine;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,36,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,37,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,38,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,39,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,42, An implementation of Group
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,44,ublic class GroupImpl
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,45,xtends OptionImpl implements Group {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,46,rivate final String name;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,47,rivate final String description;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,48,rivate final List options;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,49,rivate final int minimum;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,50,rivate final int maximum;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,51,rivate final List anonymous;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,52,rivate final SortedMap optionMap;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,53,rivate final Set prefixes;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,56, Creates a new GroupImpl using the specified parameters.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,58, @param options the Options and Arguments that make up the Group
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,59," @param name the name of this Group, or null"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,60, @param description a description of this Group
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,61, @param minimum the minimum number of Options for a valid CommandLine
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,62, @param maximum the maximum number of Options for a valid CommandLine
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,63, @param required a flag whether this group is required
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,65,"ublic GroupImpl(final List options,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,66,"inal String name,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,67,"inal String description,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,68,"inal int minimum,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,69,"inal int maximum,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,70,inal boolean required) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,71,"uper(0, required);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,73,his.name = name;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,74,his.description = description;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,75,his.minimum = minimum;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,76,his.maximum = maximum;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,78,/ store a copy of the options to be used by the
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,79,/ help methods
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,80,his.options = Collections.unmodifiableList(options);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,82,/ anonymous Argument temporary storage
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,83,inal List newAnonymous = new ArrayList();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,85,/ map (key=trigger & value=Option) temporary storage
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,86,inal SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,88,/ prefixes temporary storage
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,89,inal Set newPrefixes = new HashSet();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,91,/ process the options
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,92,or (final Iterator i = options.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,93,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,94,ption.setParent(this);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,96,f (option instanceof Argument) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,97,.remove();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,98,ewAnonymous.add(option);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,99, else {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,100,inal Set triggers = option.getTriggers();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,102,or (Iterator j = triggers.iterator(); j.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,103,"ewOptionMap.put(j.next(), option);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,106,/ store the prefixes
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,107,ewPrefixes.addAll(option.getPrefixes());
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,111,his.anonymous = Collections.unmodifiableList(newAnonymous);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,112,his.optionMap = Collections.unmodifiableSortedMap(newOptionMap);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,113,his.prefixes = Collections.unmodifiableSet(newPrefixes);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,116,"ublic boolean canProcess(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,117,inal String arg) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,118,f (arg == null) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,119,eturn false;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,122,/ if arg does not require bursting
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,123,f (optionMap.containsKey(arg)) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,124,eturn true;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,127,/ filter
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,128,inal Map tailMap = optionMap.tailMap(arg);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,130,/ check if bursting is required
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,131,or (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,132,inal Option option = (Option) iter.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,134,"f (option.canProcess(commandLine, arg)) {"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,135,eturn true;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,139,"f (looksLikeOption(commandLine, arg)) {"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,140,eturn false;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,143,/ anonymous argument(s) means we can process it
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,144,f (anonymous.size() > 0) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,145,eturn true;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,148,eturn false;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,151,ublic Set getPrefixes() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,152,eturn prefixes;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,155,ublic Set getTriggers() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,156,eturn optionMap.keySet();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,159,"ublic void process(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,160,inal ListIterator arguments)
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,161,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,162,tring previous = null;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,164,/ [START process each command line token
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,165,hile (arguments.hasNext()) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,166,/ grab the next argument
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,167,inal String arg = (String) arguments.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,169,/ if we have just tried to process this instance
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,170,f (arg == previous) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,171,/ rollback and abort
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,172,rguments.previous();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,174,reak;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,177,/ remember last processed instance
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,178,revious = arg;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,180,inal Option opt = (Option) optionMap.get(arg);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,182,/ option found
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,183,f (opt != null) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,184,rguments.previous();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,185,"pt.process(commandLine, arguments);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,187,/ [START option NOT found
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,188,lse {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,189,/ it might be an anonymous argument continue search
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,190,/ [START argument may be anonymous
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,191,"f (looksLikeOption(commandLine, arg)) {"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,192,/ narrow the search
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,193,inal Collection values = optionMap.tailMap(arg).values();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,195,oolean foundMemberOption = false;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,197,or (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,198,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,200,"f (option.canProcess(commandLine, arg)) {"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,201,oundMemberOption = true;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,202,rguments.previous();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,203,"ption.process(commandLine, arguments);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,207,/ back track and abort this group if necessary
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,208,f (!foundMemberOption) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,209,rguments.previous();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,211,eturn;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,213, // [END argument may be anonymous
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,215,/ [START argument is NOT anonymous
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,216,lse {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,217,"/ move iterator back, current value not used"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,218,rguments.previous();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,220,/ if there are no anonymous arguments then this group can't
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,221,/ process the argument
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,222,f (anonymous.isEmpty()) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,223,reak;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,226,/ TODO: why do we iterate over all anonymous arguments?
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,227,/ canProcess will always return true?
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,228,or (final Iterator i = anonymous.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,229,inal Argument argument = (Argument) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,231,"f (argument.canProcess(commandLine, arguments)) {"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,232,"rgument.process(commandLine, arguments);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,235, // [END argument is NOT anonymous
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,236, // [END option NOT found
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,237, // [END process each command line token
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,240,ublic void validate(final WriteableCommandLine commandLine)
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,241,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,242,/ number of options found
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,243,nt present = 0;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,245,/ reference to first unexpected option
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,246,ption unexpected = null;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,248,or (final Iterator i = options.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,249,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,251,/ needs validation?
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,252,oolean validate = option.isRequired();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,254,/ if the child option is present then validate it
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,255,f (commandLine.hasOption(option)) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,256,f (++present > maximum) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,257,nexpected = option;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,259,reak;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,261,alidate = true;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,264,f (validate) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,265,ption.validate(commandLine);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,269,/ too many options
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,270,f (unexpected != null) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,271,"hrow new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,272,nexpected.getPreferredName());
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,275,/ too few option
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,276,f (present < minimum) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,277,"hrow new OptionException(this, ResourceConstants.MISSING_OPTION);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,280,/ validate each anonymous argument
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,281,or (final Iterator i = anonymous.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,282,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,283,ption.validate(commandLine);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,287,ublic String getPreferredName() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,288,eturn name;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,291,ublic String getDescription() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,292,eturn description;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,295,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,296,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,297,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,298,"ppendUsage(buffer, helpSettings, comp, ""|"");"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,301,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,302,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,303,"inal Comparator comp,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,304,inal String separator) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,305,inal Set helpSettingsCopy = new HashSet(helpSettings);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,307,inal boolean optional = !isRequired()
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,308,& (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) ||
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,309,elpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP));
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,311,inal boolean expanded =
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,312,name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,314,inal boolean named =
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,315,expanded ||
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,316,(name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,318,inal boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,320,inal boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,322,elpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,324,inal boolean both = named && expanded;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,326,f (optional) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,327,uffer.append('[');
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,330,f (named) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,331,uffer.append(name);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,334,f (both) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,335,"uffer.append("" ("");"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,338,f (expanded) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,339,inal Set childSettings;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,341,f (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,342,hildSettings = DisplaySetting.NONE;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,343, else {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,344,hildSettings = new HashSet(helpSettingsCopy);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,345,hildSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,348,/ grab a list of the group's options.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,349,inal List list;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,351,f (comp == null) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,352,/ default to using the initial order
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,353,ist = options;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,354, else {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,355,/ sort options if comparator is supplied
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,356,ist = new ArrayList(options);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,357,"ollections.sort(list, comp);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,360,/ for each option.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,361,or (final Iterator i = list.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,362,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,364,/ append usage information
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,365,"ption.appendUsage(buffer, childSettings, comp);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,367,/ add separators as needed
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,368,f (i.hasNext()) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,369,uffer.append(separator);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,374,f (both) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,375,uffer.append(')');
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,378,f (optional && outer) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,379,uffer.append(']');
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,382,f (arguments) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,383,or (final Iterator i = anonymous.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,384,uffer.append(' ');
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,386,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,387,"ption.appendUsage(buffer, helpSettingsCopy, comp);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,391,f (optional && !outer) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,392,uffer.append(']');
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,396,"ublic List helpLines(final int depth,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,397,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,398,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,399,inal List helpLines = new ArrayList();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,401,f (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME)) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,402,"inal HelpLine helpLine = new HelpLineImpl(this, depth);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,403,elpLines.add(helpLine);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,406,f (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,407,/ grab a list of the group's options.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,408,inal List list;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,410,f (comp == null) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,411,/ default to using the initial order
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,412,ist = options;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,413, else {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,414,/ sort options if comparator is supplied
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,415,ist = new ArrayList(options);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,416,"ollections.sort(list, comp);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,419,/ for each option
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,420,or (final Iterator i = list.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,421,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,422,"elpLines.addAll(option.helpLines(depth + 1, helpSettings, comp));"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,426,f (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT)) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,427,or (final Iterator i = anonymous.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,428,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,429,"elpLines.addAll(option.helpLines(depth + 1, helpSettings, comp));"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,433,eturn helpLines;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,437, Gets the member Options of thie Group.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,438, Note this does not include any Arguments
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,439, @return only the non Argument Options of the Group
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,441,ublic List getOptions() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,442,eturn options;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,446, Gets the anonymous Arguments of this Group.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,447, @return the Argument options of this Group
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,449,ublic List getAnonymous() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,450,eturn anonymous;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,453,ublic Option findOption(final String trigger) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,454,inal Iterator i = getOptions().iterator();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,456,hile (i.hasNext()) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,457,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,458,inal Option found = option.findOption(trigger);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,460,f (found != null) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,461,eturn found;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,465,eturn null;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,468,ublic int getMinimum() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,469,eturn minimum;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,472,ublic int getMaximum() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,473,eturn maximum;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,477, Tests whether this option is required. For groups we evaluate the
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,478," <code>required</code> flag common to all options, but also take the"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,479, minimum constraints into account.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,481, @return a flag whether this option is required
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,483,ublic boolean isRequired()
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,485,eturn (getParent() == null || super.isRequired()) && getMinimum() > 0;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,488,ublic void defaults(final WriteableCommandLine commandLine) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,489,uper.defaults(commandLine);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,491,or (final Iterator i = options.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,492,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,493,ption.defaults(commandLine);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,496,or (final Iterator i = anonymous.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,497,inal Option option = (Option) i.next();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,498,ption.defaults(commandLine);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,503, Helper method for testing whether an element of the command line looks
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,504," like an option. This method queries the command line, but sets the"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,505, current option first.
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,507, @param commandLine the command line
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,508, @param trigger the trigger to be checked
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,509, @return a flag whether this element looks like an option
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,511,"rivate boolean looksLikeOption(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,512,inal String trigger) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,513,ption oldOption = commandLine.getCurrentOption();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,514,ry {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,515,ommandLine.setCurrentOption(this);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,516,eturn commandLine.looksLikeOption(trigger);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,517, finally {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,518,ommandLine.setCurrentOption(oldOption);
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,524,lass ReverseStringComparator implements Comparator {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,525,rivate static final Comparator instance = new ReverseStringComparator();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,527,rivate ReverseStringComparator() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,528,/ just making sure nobody else creates one
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,532, Gets a singleton instance of a ReverseStringComparator
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,533, @return the singleton instance
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,535,ublic static final Comparator getInstance() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,536,eturn instance;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,539,"ublic int compare(final Object o1,"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,540,inal Object o2) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,541,inal String s1 = (String) o1;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,542,inal String s2 = (String) o2;
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,544,eturn -s1.compareTo(s2);
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,19,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,20,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,22,mport org.apache.commons.cli2.HelpLine;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,23,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,26, Represents a line in the help screen.
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,28,ublic class HelpLineImpl implements HelpLine {
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,30,** The option that this HelpLineImpl describes */
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,31,rivate final Option option;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,33,** The level of indenting for this item */
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,34,rivate final int indent;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,36,** The help settings used to obtain the previous usage */
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,37,rivate transient Set cachedHelpSettings;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,39,** The comparator used to obtain the previous usage */
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,40,rivate transient Comparator cachedComparator;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,42,** The previously obtained usage */
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,43,rivate transient String cachedUsage;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,46, Creates a new HelpLineImpl to represent a particular Option in the online
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,47, help.
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,49, @param option
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,50,            Option that the HelpLineImpl describes
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,51, @param indent
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,52,            Level of indentation for this line
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,54,"ublic HelpLineImpl(final Option option, final int indent) {"
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,55,his.option = option;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,56,his.indent = indent;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,60, @return The description of the option
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,62,ublic String getDescription() {
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,63,eturn option.getDescription();
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,67, @return The level of indentation for this line
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,69,ublic int getIndent() {
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,70,eturn indent;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,74, @return The Option that the help line relates to
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,76,ublic Option getOption() {
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,77,eturn option;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,81, Builds a usage string for the option using the specified settings and
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,82, comparator.
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,85, @param helpSettings the settings to apply
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,86, @param comparator a comparator to sort options when applicable
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,87, @return the usage string
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,89,"ublic String usage(final Set helpSettings, final Comparator comparator) {"
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,90,f (cachedUsage == null
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,91,| cachedHelpSettings != helpSettings
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,92,| cachedComparator != comparator) {
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,94,/ cache the arguments to avoid redoing work
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,95,achedHelpSettings = helpSettings;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,96,achedComparator = comparator;
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,98,/ build the new buffer
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,99,inal StringBuffer buffer = new StringBuffer();
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,100,or (int i = 0; i < indent; ++i) {
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,101,"uffer.append(""  "");"
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,103,"ption.appendUsage(buffer, helpSettings, comparator);"
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,105,/ cache the usage string
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,106,achedUsage = buffer.toString();
False,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,108,eturn cachedUsage;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,19,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,20,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,21,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,23,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,24,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,25,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,26,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,27,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,30, A base implementation of Option providing limited ground work for further
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,31, Option implementations.
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,33,ublic abstract class OptionImpl implements Option {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,34,rivate final int id;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,35,rivate final boolean required;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,36,rivate Option parent;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,39, Creates an OptionImpl with the specified id
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,40, @param id the unique id of this Option
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,41, @param required true iff this Option must be present
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,43,"ublic OptionImpl(final int id,"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,44,inal boolean required) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,45,his.id = id;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,46,his.required = required;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,49,"ublic boolean canProcess(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,50,inal ListIterator arguments) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,51,f (arguments.hasNext()) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,52,inal String argument = (String) arguments.next();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,53,rguments.previous();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,55,"eturn canProcess(commandLine, argument);"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,56, else {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,57,eturn false;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,61,ublic String toString() {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,62,inal StringBuffer buffer = new StringBuffer();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,63,"ppendUsage(buffer, DisplaySetting.ALL, null);"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,65,eturn buffer.toString();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,68,ublic int getId() {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,69,eturn id;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,72,ublic boolean equals(final Object thatObj) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,73,f (thatObj instanceof OptionImpl) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,74,inal OptionImpl that = (OptionImpl) thatObj;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,76,eturn (getId() == that.getId()) &&
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,77,"quals(getPreferredName(), that.getPreferredName()) &&"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,78,"quals(getDescription(), that.getDescription()) &&"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,79,"quals(getPrefixes(), that.getPrefixes()) &&"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,80,"quals(getTriggers(), that.getTriggers());"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,81, else {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,82,eturn false;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,86,"rivate boolean equals(Object left,"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,87,bject right) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,88,f ((left == null) && (right == null)) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,89,eturn true;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,90, else if ((left == null) || (right == null)) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,91,eturn false;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,92, else {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,93,eturn left.equals(right);
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,97,ublic int hashCode() {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,98,nt hashCode = getId();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,99,f (getPreferredName() != null) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,100,ashCode = (hashCode * 37) + getPreferredName().hashCode();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,103,f (getDescription() != null) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,104,ashCode = (hashCode * 37) + getDescription().hashCode();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,107,ashCode = (hashCode * 37) + getPrefixes().hashCode();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,108,ashCode = (hashCode * 37) + getTriggers().hashCode();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,110,eturn hashCode;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,113,ublic Option findOption(String trigger) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,114,f (getTriggers().contains(trigger)) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,115,eturn this;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,116, else {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,117,eturn null;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,121,ublic boolean isRequired() {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,122,eturn required;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,125,ublic void defaults(final WriteableCommandLine commandLine) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,126,/ nothing to do normally
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,129,ublic Option getParent() {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,130,eturn parent;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,133,ublic void setParent(Option parent) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,134,his.parent = parent;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,137,rotected void checkPrefixes(final Set prefixes) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,138,/ nothing to do if empty prefix list
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,139,f (prefixes.isEmpty()) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,140,eturn;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,143,/ check preferred name
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,144,"heckPrefix(prefixes, getPreferredName());"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,146,/ check triggers
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,147,his.getTriggers();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,149,or (final Iterator i = getTriggers().iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,150,"heckPrefix(prefixes, (String) i.next());"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,154,"rivate void checkPrefix(final Set prefixes,"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,155,inal String trigger) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,156,or (final Iterator i = prefixes.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,157,tring prefix = (String) i.next();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,159,f (trigger.startsWith(prefix)) {
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,160,eturn;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,164,inal ResourceHelper helper = ResourceHelper.getResourceHelper();
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,165,inal String message =
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,166,"elper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger,"
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,167,refixes.toString());
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,168,hrow new IllegalArgumentException(message);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,20,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,21,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,22,mport java.util.List;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,23,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,24,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,26,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,27,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,28,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,29,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,30,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,31,mport org.apache.commons.cli2.Parent;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,32,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,35, A base implementation of Parent providing limited ground work for further
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,36, Parent implementations.
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,38,ublic abstract class ParentImpl
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,39,xtends OptionImpl implements Parent {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,40,rivate static final char NUL = '\0';
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,41,rivate final Group children;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,42,rivate final Argument argument;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,43,rivate final String description;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,45,"rotected ParentImpl(final Argument argument,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,46,"inal Group children,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,47,"inal String description,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,48,"inal int id,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,49,inal boolean required) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,50,"uper(id, required);"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,51,his.children = children;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,52,his.argument = argument;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,53,his.description = description;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,57, (non-Javadoc)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,59," @see org.apache.commons.cli2.Option#process(org.apache.commons.cli2.CommandLine,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,60,      java.util.ListIterator)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,62,"ublic void process(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,63,inal ListIterator arguments)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,64,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,65,f (argument != null) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,66,"andleInitialSeparator(arguments, argument.getInitialSeparator());"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,69,"rocessParent(commandLine, arguments);"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,71,f (argument != null) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,72,"rgument.processValues(commandLine, arguments, this);"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,75,"f ((children != null) && children.canProcess(commandLine, arguments)) {"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,76,"hildren.process(commandLine, arguments);"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,81, (non-Javadoc)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,83, @see org.apache.commons.cli2.Option#canProcess(java.lang.String)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,85,"ublic boolean canProcess(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,86,inal String arg) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,87,inal Set triggers = getTriggers();
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,89,f (argument != null) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,90,inal char separator = argument.getInitialSeparator();
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,92,/ if there is a valid separator character
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,93,f (separator != NUL) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,94,inal int initialIndex = arg.indexOf(separator);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,96,/ if there is a separator present
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,97,f (initialIndex > 0) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,98,"eturn triggers.contains(arg.substring(0, initialIndex));"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,103,eturn triggers.contains(arg);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,107, (non-Javadoc)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,109, @see org.apache.commons.cli2.Option#prefixes()
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,111,ublic Set getPrefixes() {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,112,eturn (children == null) ? Collections.EMPTY_SET : children.getPrefixes();
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,116, (non-Javadoc)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,118, @see org.apache.commons.cli2.Option#validate(org.apache.commons.cli2.CommandLine)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,120,ublic void validate(WriteableCommandLine commandLine)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,121,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,122,f (commandLine.hasOption(this)) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,123,f (argument != null) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,124,"rgument.validate(commandLine, this);"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,127,f (children != null) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,128,hildren.validate(commandLine);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,134, (non-Javadoc)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,136," @see org.apache.commons.cli2.Option#appendUsage(java.lang.StringBuffer,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,137,"      java.util.Set, java.util.Comparator)"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,139,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,140,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,141,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,142,inal boolean displayArgument =
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,143,this.argument != null) &&
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,144,elpSettings.contains(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,145,inal boolean displayChildren =
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,146,this.children != null) &&
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,147,elpSettings.contains(DisplaySetting.DISPLAY_PARENT_CHILDREN);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,149,f (displayArgument) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,150,uffer.append(' ');
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,151,"rgument.appendUsage(buffer, helpSettings, comp);"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,154,f (displayChildren) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,155,uffer.append(' ');
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,156,"hildren.appendUsage(buffer, helpSettings, comp);"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,161, @return a description of this parent option
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,163,ublic String getDescription() {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,164,eturn description;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,168, (non-Javadoc)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,170," @see org.apache.commons.cli2.Option#helpLines(int, java.util.Set,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,171,      java.util.Comparator)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,173,"ublic List helpLines(final int depth,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,174,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,175,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,176,inal List helpLines = new ArrayList();
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,177,"elpLines.add(new HelpLineImpl(this, depth));"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,179,f (helpSettings.contains(DisplaySetting.DISPLAY_PARENT_ARGUMENT) && (argument != null)) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,180,"elpLines.addAll(argument.helpLines(depth + 1, helpSettings, comp));"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,183,f (helpSettings.contains(DisplaySetting.DISPLAY_PARENT_CHILDREN) && (children != null)) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,184,"elpLines.addAll(children.helpLines(depth + 1, helpSettings, comp));"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,187,eturn helpLines;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,191, @return Returns the argument.
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,193,ublic Argument getArgument() {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,194,eturn argument;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,198, @return Returns the children.
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,200,ublic Group getChildren() {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,201,eturn children;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,205, Split the token using the specified separator character.
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,206, @param arguments the current position in the arguments iterator
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,207, @param separator the separator char to split on
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,209,"rivate void handleInitialSeparator(final ListIterator arguments,"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,210,inal char separator) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,211,/ next token
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,212,inal String newArgument = (String) arguments.next();
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,214,/ split the token
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,215,inal int initialIndex = newArgument.indexOf(separator);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,217,f (initialIndex > 0) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,218,rguments.remove();
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,219,"rguments.add(newArgument.substring(0, initialIndex));"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,220,tring value = newArgument.substring(initialIndex + 1);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,221,"/ The value obviously isn't an option, so we need to quote it if looks like an option."
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,222,/ The quotes will be removed later
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,223,"f (value.startsWith(""-"")) {"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,224,"alue = '""' + value + '""';"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,226,rguments.add(value);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,227,rguments.previous();
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,230,rguments.previous();
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,234, @see org.apache.commons.cli2.Option#findOption(java.lang.String)
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,236,ublic Option findOption(final String trigger) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,237,inal Option found = super.findOption(trigger);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,239,f ((found == null) && (children != null)) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,240,eturn children.findOption(trigger);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,241, else {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,242,eturn found;
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,246,ublic void defaults(final WriteableCommandLine commandLine) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,247,uper.defaults(commandLine);
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,249,f (argument != null) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,250,"rgument.defaultValues(commandLine, this);"
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,253,f (children != null) {
False,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,254,hildren.defaults(commandLine);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,19,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,20,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,21,mport java.util.List;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,22,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,23,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,25,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,26,mport org.apache.commons.cli2.HelpLine;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,27,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,28,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,29,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,32," Handles the java style ""-Dprop=value"" opions"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,34,ublic class PropertyOption
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,35,xtends OptionImpl {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,36,"ublic static final String DEFAULT_OPTION_STRING = ""-D"";"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,37,ublic static final String DEFAULT_DESCRIPTION =
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,38,"Passes properties and values to the application"";"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,41, A default PropertyOption instance
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,43,ublic static final PropertyOption INSTANCE = new PropertyOption();
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,44,rivate final String optionString;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,45,rivate final String description;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,46,rivate final Set prefixes;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,49," Creates a new PropertyOption using the default settings of a ""-D"" trigger"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,50, and an id of 'D'
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,52,ublic PropertyOption() {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,53,"his(DEFAULT_OPTION_STRING, DEFAULT_DESCRIPTION, 'D');"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,57, Creates a new PropertyOption using the specified parameters
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,58, @param optionString the trigger for the Option
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,59, @param description the description of the Option
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,60, @param id the id of the Option
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,62,"ublic PropertyOption(final String optionString,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,63,"inal String description,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,64,inal int id) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,65,"uper(id, false);"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,66,his.optionString = optionString;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,67,his.description = description;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,68,his.prefixes = Collections.singleton(optionString);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,71,"ublic boolean canProcess(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,72,inal String argument) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,73,eturn (argument != null) && argument.startsWith(optionString) &&
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,74,argument.length() > optionString.length());
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,77,ublic Set getPrefixes() {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,78,eturn prefixes;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,81,"ublic void process(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,82,inal ListIterator arguments)
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,83,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,84,inal String arg = (String) arguments.next();
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,86,"f (!canProcess(commandLine, arg)) {"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,87,"hrow new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, arg);"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,90,inal int propertyStart = optionString.length();
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,91,"inal int equalsIndex = arg.indexOf('=', propertyStart);"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,92,inal String property;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,93,inal String value;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,95,f (equalsIndex < 0) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,96,roperty = arg.substring(propertyStart);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,97,"alue = ""true"";"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,98, else {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,99,"roperty = arg.substring(propertyStart, equalsIndex);"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,100,alue = arg.substring(equalsIndex + 1);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,103,"ommandLine.addProperty(this, property, value);"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,106,ublic Set getTriggers() {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,107,eturn Collections.singleton(optionString);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,110,ublic void validate(WriteableCommandLine commandLine) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,111,/ PropertyOption needs no validation
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,114,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,115,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,116,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,117,inal boolean display = helpSettings.contains(DisplaySetting.DISPLAY_PROPERTY_OPTION);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,119,inal boolean bracketed = helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT_BRACKETED);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,121,f (display) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,122,uffer.append(optionString);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,124,f (bracketed) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,125,uffer.append('<');
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,128,"uffer.append(""property"");"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,130,f (bracketed) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,131,uffer.append('>');
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,134,"uffer.append(""="");"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,136,f (bracketed) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,137,uffer.append('<');
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,140,"uffer.append(""value"");"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,142,f (bracketed) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,143,uffer.append('>');
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,148,ublic String getPreferredName() {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,149,eturn optionString;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,152,ublic String getDescription() {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,153,eturn description;
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,156,"ublic List helpLines(final int depth,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,157,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,158,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,159,f (helpSettings.contains(DisplaySetting.DISPLAY_PROPERTY_OPTION)) {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,160,"inal HelpLine helpLine = new HelpLineImpl(this, depth);"
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,162,eturn Collections.singletonList(helpLine);
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,163, else {
False,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,164,eturn Collections.EMPTY_LIST;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,20,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,21,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,22,mport java.util.List;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,23,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,25,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,26,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,27,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,28,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,29,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,30,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,33, An Argument implementation that allows a variable size Argument to precede a
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,34, fixed size argument.  The canonical example of it's use is in the unix
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,35, <code>cp</code> command where a number of source can be specified with
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,36, exactly one destination specfied at the end.
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,38,ublic class SourceDestArgument
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,39,xtends ArgumentImpl {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,40,rivate final Argument source;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,41,rivate final Argument dest;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,44, Creates a SourceDestArgument using defaults where possible.
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,46, @param source the variable size Argument
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,47, @param dest the fixed size Argument
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,49,"ublic SourceDestArgument(final Argument source,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,50,inal Argument dest) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,51,"his(source, dest, DEFAULT_INITIAL_SEPARATOR, DEFAULT_SUBSEQUENT_SEPARATOR,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,52,"EFAULT_CONSUME_REMAINING, null);"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,56, Creates a SourceDestArgument using the specified parameters.
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,58, @param source the variable size Argument
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,59, @param dest the fixed size Argument
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,60, @param initialSeparator the inistial separator to use
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,61, @param subsequentSeparator the subsequent separator to use
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,62, @param consumeRemaining the token triggering consume remaining behaviour
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,63, @param defaultValues the default values for the SourceDestArgument
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,65,"ublic SourceDestArgument(final Argument source,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,66,"inal Argument dest,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,67,"inal char initialSeparator,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,68,"inal char subsequentSeparator,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,69,"inal String consumeRemaining,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,70,inal List defaultValues) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,71,"uper(""SourceDestArgument"", null, sum(source.getMinimum(), dest.getMinimum()),"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,72,"um(source.getMaximum(), dest.getMaximum()), initialSeparator, subsequentSeparator,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,73,"ull, consumeRemaining, defaultValues, 0);"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,75,his.source = source;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,76,his.dest = dest;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,78,f (dest.getMinimum() != dest.getMaximum()) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,79,hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SOURCE_DEST_MUST_ENFORCE_VALUES));
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,83,"rivate static int sum(final int a,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,84,inal int b) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,85,"eturn Math.max(a, Math.max(b, a + b));"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,88,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,89,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,90,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,91,inal int length = buffer.length();
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,93,"ource.appendUsage(buffer, helpSettings, comp);"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,95,f (buffer.length() != length) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,96,uffer.append(' ');
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,99,"est.appendUsage(buffer, helpSettings, comp);"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,102,"ublic List helpLines(int depth,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,103,"et helpSettings,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,104,omparator comp) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,105,inal List helpLines = new ArrayList();
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,106,"elpLines.addAll(source.helpLines(depth, helpSettings, comp));"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,107,"elpLines.addAll(dest.helpLines(depth, helpSettings, comp));"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,109,eturn helpLines;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,112,"ublic void validate(WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,113,ption option)
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,114,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,115,inal List values = commandLine.getValues(option);
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,117,inal int limit = values.size() - dest.getMinimum();
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,118,nt count = 0;
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,120,inal Iterator i = values.iterator();
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,122,hile (count++ < limit) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,123,"ommandLine.addValue(source, i.next());"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,126,hile (i.hasNext()) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,127,"ommandLine.addValue(dest, i.next());"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,130,"ource.validate(commandLine, source);"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,131,"est.validate(commandLine, dest);"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,134,"ublic boolean canProcess(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,135,inal String arg) {
False,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,136,"eturn source.canProcess(commandLine, arg) || dest.canProcess(commandLine, arg);"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,17,ackage org.apache.commons.cli2.option;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,19,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,20,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,21,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,22,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,23,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,24,mport java.util.List;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,25,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,26,mport java.util.Set;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,28,mport org.apache.commons.cli2.Argument;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,29,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,30,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,31,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,32,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,33,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,34,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,37, A Parent implementation representing normal switch options.
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,38, For example: <code>+d|-d</code> or <code>--enable-x|--disable-x</code>.
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,40,ublic class Switch
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,41,xtends ParentImpl {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,42,** i18n */
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,43,ublic static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,46, The default prefix for enabled switches
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,48,"ublic static final String DEFAULT_ENABLED_PREFIX = ""+"";"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,51, The default prefix for disabled switches
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,53,"ublic static final String DEFAULT_DISABLED_PREFIX = ""-"";"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,54,rivate final String enabledPrefix;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,55,rivate final String disabledPrefix;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,56,rivate final Set triggers;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,57,rivate final String preferredName;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,58,rivate final Set aliases;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,59,rivate final Set prefixes;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,60,rivate final Boolean defaultSwitch;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,63, Creates a new Switch with the specified parameters
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,64, @param enabledPrefix the prefix used for enabled switches
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,65, @param disabledPrefix the prefix used for disabled switches
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,66, @param preferredName the preferred name of the switch
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,67, @param aliases the aliases by which the Switch is known
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,68, @param description a description of the Switch
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,69, @param required whether the Option is strictly required
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,70," @param argument the Argument belonging to this Parent, or null"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,71," @param children the Group children belonging to this Parent, ot null"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,72, @param id the unique identifier for this Option
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,73, @throws IllegalArgumentException if the preferredName or an alias isn't
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,74,     prefixed with enabledPrefix or disabledPrefix
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,76,"ublic Switch(final String enabledPrefix,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,77,"inal String disabledPrefix,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,78,"inal String preferredName,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,79,"inal Set aliases,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,80,"inal String description,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,81,"inal boolean required,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,82,"inal Argument argument,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,83,"inal Group children,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,84,"inal int id,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,85,inal Boolean switchDefault) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,86,"uper(argument, children, description, id, required);"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,88,f (enabledPrefix == null) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,89,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.SWITCH_NO_ENABLED_PREFIX));
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,92,f (disabledPrefix == null) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,93,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.SWITCH_NO_DISABLED_PREFIX));
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,96,f (enabledPrefix.startsWith(disabledPrefix)) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,97,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.SWITCH_ENABLED_STARTS_WITH_DISABLED));
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,100,f (disabledPrefix.startsWith(enabledPrefix)) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,101,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.SWITCH_DISABLED_STARTWS_WITH_ENABLED));
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,104,his.enabledPrefix = enabledPrefix;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,105,his.disabledPrefix = disabledPrefix;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,106,his.preferredName = preferredName;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,108,f ((preferredName == null) || (preferredName.length() < 1)) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,109,hrow new IllegalArgumentException(resources.getMessage(ResourceConstants.SWITCH_PREFERRED_NAME_TOO_SHORT));
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,112,inal Set newTriggers = new HashSet();
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,113,ewTriggers.add(enabledPrefix + preferredName);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,114,ewTriggers.add(disabledPrefix + preferredName);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,115,his.triggers = Collections.unmodifiableSet(newTriggers);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,117,f (aliases == null) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,118,his.aliases = Collections.EMPTY_SET;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,119, else {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,120,his.aliases = Collections.unmodifiableSet(new HashSet(aliases));
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,122,or (final Iterator i = aliases.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,123,inal String alias = (String) i.next();
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,124,ewTriggers.add(enabledPrefix + alias);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,125,ewTriggers.add(disabledPrefix + alias);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,129,inal Set newPrefixes = new HashSet(super.getPrefixes());
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,130,ewPrefixes.add(enabledPrefix);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,131,ewPrefixes.add(disabledPrefix);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,132,his.prefixes = Collections.unmodifiableSet(newPrefixes);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,134,his.defaultSwitch = switchDefault;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,136,heckPrefixes(newPrefixes);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,139,"ublic void processParent(final WriteableCommandLine commandLine,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,140,inal ListIterator arguments)
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,141,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,142,inal String arg = (String) arguments.next();
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,144,"f (canProcess(commandLine, arg)) {"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,145,f (arg.startsWith(enabledPrefix)) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,146,"ommandLine.addSwitch(this, true);"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,147,rguments.set(enabledPrefix + preferredName);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,150,f (arg.startsWith(disabledPrefix)) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,151,"ommandLine.addSwitch(this, false);"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,152,rguments.set(disabledPrefix + preferredName);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,154, else {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,155,"hrow new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, arg);"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,159,ublic Set getTriggers() {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,160,eturn triggers;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,163,ublic Set getPrefixes() {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,164,eturn prefixes;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,167,ublic void validate(WriteableCommandLine commandLine)
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,168,hrows OptionException {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,169,f (isRequired() && !commandLine.hasOption(this)) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,170,"hrow new OptionException(this, ResourceConstants.OPTION_MISSING_REQUIRED,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,171,etPreferredName());
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,174,uper.validate(commandLine);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,177,"ublic void appendUsage(final StringBuffer buffer,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,178,"inal Set helpSettings,"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,179,inal Comparator comp) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,180,/ do we display optionality
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,181,inal boolean optional =
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,182,isRequired() && helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,183,inal boolean displayAliases = helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,184,inal boolean disabled = helpSettings.contains(DisplaySetting.DISPLAY_SWITCH_DISABLED);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,185,inal boolean enabled =
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,186,disabled || helpSettings.contains(DisplaySetting.DISPLAY_SWITCH_ENABLED);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,187,inal boolean both = disabled && enabled;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,189,f (optional) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,190,uffer.append('[');
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,193,f (enabled) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,194,uffer.append(enabledPrefix).append(preferredName);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,197,f (both) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,198,uffer.append('|');
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,201,f (disabled) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,202,uffer.append(disabledPrefix).append(preferredName);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,205,f (displayAliases && !aliases.isEmpty()) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,206,"uffer.append("" ("");"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,208,inal List list = new ArrayList(aliases);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,209,ollections.sort(list);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,211,or (final Iterator i = list.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,212,inal String alias = (String) i.next();
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,214,f (enabled) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,215,uffer.append(enabledPrefix).append(alias);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,218,f (both) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,219,uffer.append('|');
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,222,f (disabled) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,223,uffer.append(disabledPrefix).append(alias);
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,226,f (i.hasNext()) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,227,"uffer.append(',');"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,231,uffer.append(')');
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,234,"uper.appendUsage(buffer, helpSettings, comp);"
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,236,f (optional) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,237,uffer.append(']');
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,241,ublic String getPreferredName() {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,242,eturn enabledPrefix + preferredName;
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,245,ublic void defaults(final WriteableCommandLine commandLine) {
False,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,246,"ommandLine.setDefaultSwitch(this, defaultSwitch);"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,17, under the License.
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,19,ackage org.apache.commons.cli2.resource;
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,21,ublic abstract class ResourceConstants {
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,22,"ublic static final String CLASSVALIDATOR_BAD_CLASSNAME = ""ClassValidator.bad.classname"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,23,"ublic static final String CLASSVALIDATOR_CLASS_NOTFOUND = ""ClassValidator.class.notfound"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,24,"ublic static final String CLASSVALIDATOR_CLASS_ACCESS = ""ClassValidator.class.access"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,25,"ublic static final String CLASSVALIDATOR_CLASS_CREATE = ""ClassValidator.class.create"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,26,"ublic static final String DATEVALIDATOR_DATE_OUTOFRANGE = ""DateValidator.date.OutOfRange"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,27,"ublic static final String URLVALIDATOR_MALFORMED_URL = ""URLValidator.malformed.URL"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,28,ublic static final String NUMBERVALIDATOR_NUMBER_OUTOFRANGE =
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,29,"NumberValidator.number.OutOfRange"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,30,"ublic static final String ARGUMENT_UNEXPECTED_VALUE = ""Argument.unexpected.value"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,31,"ublic static final String ARGUMENT_MIN_EXCEEDS_MAX = ""Argument.minimum.exceeds.maximum"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,32,"ublic static final String ARGUMENT_TOO_FEW_DEFAULTS = ""Argument.too.few.defaults"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,33,"ublic static final String ARGUMENT_TOO_MANY_DEFAULTS = ""Argument.too.many.defaults"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,34,"ublic static final String ARGUMENT_MISSING_VALUES = ""Argument.missing.values"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,35,"ublic static final String ARGUMENT_TOO_MANY_VALUES = ""Argument.too.many.values"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,36,"ublic static final String OPTION_TRIGGER_NEEDS_PREFIX = ""Option.trigger.needs.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,37,"ublic static final String OPTION_MISSING_REQUIRED = ""Option.missing.required"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,38,"ublic static final String OPTION_NO_NAME = ""Option.no.name"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,39,"ublic static final String OPTION_ILLEGAL_LONG_PREFIX = ""Option.illegal.long.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,40,"ublic static final String OPTION_ILLEGAL_SHORT_PREFIX = ""Option.illegal.short.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,41,"ublic static final String UNEXPECTED_TOKEN = ""Unexpected.token"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,42,"ublic static final String MISSING_OPTION = ""Missing.option"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,43,"ublic static final String CANNOT_BURST = ""Cannot.burst"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,44,"ublic static final String COMMAND_PREFERRED_NAME_TOO_SHORT = ""Command.preferredName.too.short"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,45,"ublic static final String SWITCH_ILLEGAL_ENABLED_PREFIX = ""Option.illegal.enabled.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,46,"ublic static final String SWITCH_ILLEGAL_DISABLED_PREFIX = ""Option.illegal.disabled.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,47,"ublic static final String SWITCH_IDENTICAL_PREFIXES = ""Option.identical.prefixes"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,48,"ublic static final String SWITCH_ALREADY_SET = ""Switch.already.set"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,49,"ublic static final String SWITCH_NO_ENABLED_PREFIX = ""Switch.no.enabledPrefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,50,"ublic static final String SWITCH_NO_DISABLED_PREFIX = ""Switch.no.disabledPrefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,51,ublic static final String SWITCH_ENABLED_STARTS_WITH_DISABLED =
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,52,"Switch.enabled.startsWith.disabled"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,53,ublic static final String SWITCH_DISABLED_STARTWS_WITH_ENABLED =
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,54,"Switch.disabled.startsWith.enabled"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,55,"ublic static final String SWITCH_PREFERRED_NAME_TOO_SHORT = ""Switch.preferredName.too.short"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,56,"ublic static final String SOURCE_DEST_MUST_ENFORCE_VALUES = ""SourceDest.must.enforce.values"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,57,"ublic static final String HELPFORMATTER_GUTTER_TOO_LONG = ""HelpFormatter.gutter.too.long"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,58,"ublic static final String HELPFORMATTER_WIDTH_TOO_NARROW = ""HelpFormatter.width.too.narrow"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,59,"ublic static final String ENUM_ILLEGAL_VALUE = ""Enum.illegal.value"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,60,"ublic static final String ARGUMENT_BUILDER_NULL_CONSUME_REMAINING = ""ArgumentBuilder.null.consume.remaining"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,61,"ublic static final String ARGUMENT_BUILDER_EMPTY_CONSUME_REMAINING = ""ArgumentBuilder.empty.consume.remaining"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,62,"ublic static final String ARGUMENT_BUILDER_NULL_DEFAULT = ""ArgumentBuilder.null.default"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,63,"ublic static final String ARGUMENT_BUILDER_NULL_DEFAULTS = ""ArgumentBuilder.null.defaults"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,64,"ublic static final String ARGUMENT_BUILDER_NEGATIVE_MAXIMUM = ""ArgumentBuilder.negative.maximum"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,65,"ublic static final String ARGUMENT_BUILDER_NEGATIVE_MINIMUM = ""ArgumentBuilder.negative.minimum"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,66,"ublic static final String ARGUMENT_BUILDER_NULL_NAME = ""ArgumentBuilder.null.name"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,67,"ublic static final String ARGUMENT_BUILDER_EMPTY_NAME = ""ArgumentBuilder.empty.name"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,68,"ublic static final String ARGUMENT_BUILDER_NULL_VALIDATOR = ""ArgumentBuilder.null.validator"";"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,17,ackage org.apache.commons.cli2.resource;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,19,mport java.text.MessageFormat;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,21,mport java.util.Locale;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,22,mport java.util.MissingResourceException;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,23,mport java.util.ResourceBundle;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,26, A utility class used to provide internationalisation support.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,28, @author John Keyes
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,30,ublic class ResourceHelper {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,31,** system property */
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,32,"rivate static final String PROP_LOCALE = ""org.apache.commons.cli2.resource.bundle"";"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,34,** default package name */
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,35,rivate static final String DEFAULT_BUNDLE =
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,36,"org.apache.commons.cli2.resource.CLIMessageBundle_en_US"";"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,37,rivate static ResourceHelper helper;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,39,** resource bundle */
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,40,rivate ResourceBundle bundle;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,42,rivate String prop;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,45, Create a new ResourceHelper for the current locale.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,47,rivate ResourceHelper() {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,48,tring bundleName = System.getProperty(PROP_LOCALE);
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,50,f (bundleName == null) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,51,undleName = DEFAULT_BUNDLE;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,54,his.prop = bundleName;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,56,nt firstUnderscore = bundleName.indexOf('_');
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,57,"nt secondUnderscore = bundleName.indexOf('_', firstUnderscore + 1);"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,59,ocale locale;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,60,f (firstUnderscore != -1) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,61,"tring language = bundleName.substring(firstUnderscore + 1, secondUnderscore);"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,62,tring country = bundleName.substring(secondUnderscore + 1);
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,63,"ocale = new Locale(language, country);"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,65,lse {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,66,ocale = Locale.getDefault();
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,68,/ initialize the bundle
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,69,ry {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,70,"undle = ResourceBundle.getBundle(bundleName, locale);"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,71, catch (MissingResourceException exp) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,72,"undle = ResourceBundle.getBundle(DEFAULT_BUNDLE, locale);"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,76,ublic String getBundleName() {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,77,eturn this.prop;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,81, Gets the ResourceHelper appropriate to the current locale.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,82, @return a ResourceHelper
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,84,ublic static ResourceHelper getResourceHelper() {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,85,tring bundleName = System.getProperty(PROP_LOCALE);
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,86,f (helper == null || !helper.getBundleName().equals(bundleName)) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,87,elper = new ResourceHelper();
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,90,eturn helper;
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,94, Returns the message for the specified key.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,96, @param key the unique identifier of the message
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,97, @return String the formatted String
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,99,ublic String getMessage(final String key) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,100,"eturn getMessage(key, new Object[] {  });"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,104, Returns the message for the specified key and argument.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,106, @param key the unique identifier of the message
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,107, @param value the argument value
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,108, @return String the formatted String
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,110,"ublic String getMessage(final String key,"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,111,inal Object value) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,112,"eturn getMessage(key, new Object[] { value });"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,116, Returns the message for the specified key and arguments.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,118, @param key the unique identifier of the message
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,119, @param value1 an argument value
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,120, @param value2 an argument value
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,121, @return String the formatted String
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,123,"ublic String getMessage(final String key,"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,124,"inal Object value1,"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,125,inal Object value2) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,126,"eturn getMessage(key, new Object[] { value1, value2 });"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,130, Returns the message for the specified key and arguments.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,132, @param key the unique identifier of the message
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,133, @param value1 an argument value
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,134, @param value2 an argument value
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,135, @param value3 an argument value
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,137, @return String the formatted String
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,139,"ublic String getMessage(final String key,"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,140,"inal Object value1,"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,141,"inal Object value2,"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,142,inal Object value3) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,143,"eturn getMessage(key, new Object[] { value1, value2, value3 });"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,147, Returns the message for the specified key and arguments.
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,149, @param key the unique identifier of the message
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,150, @param values argument values
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,151, @return String the formatted String
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,153,"ublic String getMessage(final String key,"
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,154,inal Object[] values) {
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,155,inal String msgFormatStr = bundle.getString(key);
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,156,inal MessageFormat msgFormat = new MessageFormat(msgFormatStr);
False,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,158,eturn msgFormat.format(values);
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,17,ackage org.apache.commons.cli2.util;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,19,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,20,mport java.util.List;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,22,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,23,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,24,mport org.apache.commons.cli2.option.Command;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,25,mport org.apache.commons.cli2.option.DefaultOption;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,26,mport org.apache.commons.cli2.option.Switch;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,29, A collection of Comparators suitable for use with Option instances.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,31,ublic class Comparators {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,33,rivate Comparators(){
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,34,/ constructor hiden from potential users
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,39, Chains comparators together.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,41, @see #chain(Comparator[])
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,42, @param c0
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,43,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,44, @param c1
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,45,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,46, @return a chained comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,48,"ublic static Comparator chain(final Comparator c0, final Comparator c1) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,49,"eturn chain(new Comparator[] { c0, c1 });"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,53, Chains comparators together.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,55, @see #chain(Comparator[])
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,56, @param c0
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,57,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,58, @param c1
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,59,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,60, @param c2
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,61,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,62, @return a chained comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,64,ublic static Comparator chain(
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,65,"inal Comparator c0,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,66,"inal Comparator c1,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,67,inal Comparator c2) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,68,"eturn chain(new Comparator[] { c0, c1, c2 });"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,72, Chains comparators together.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,74, @see #chain(Comparator[])
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,75, @param c0
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,76,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,77, @param c1
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,78,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,79, @param c2
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,80,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,81, @param c3
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,82,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,83, @return a chained comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,85,ublic static Comparator chain(
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,86,"inal Comparator c0,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,87,"inal Comparator c1,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,88,"inal Comparator c2,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,89,inal Comparator c3) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,90,"eturn chain(new Comparator[] { c0, c1, c2, c3 });"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,94, Chains comparators together.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,96, @see #chain(Comparator[])
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,97, @param c0
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,98,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,99, @param c1
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,100,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,101, @param c2
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,102,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,103, @param c3
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,104,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,105, @param c4
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,106,            a comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,107, @return a chained comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,109,ublic static Comparator chain(
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,110,"inal Comparator c0,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,111,"inal Comparator c1,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,112,"inal Comparator c2,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,113,"inal Comparator c3,"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,114,inal Comparator c4) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,115,"eturn chain(new Comparator[] { c0, c1, c2, c3, c4 });"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,119, Chains comparators together.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,121, @see #chain(Comparator[])
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,122, @param comparators
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,123,            a List of comparators to chain together
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,124, @return a chained comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,126,ublic static Comparator chain(final List comparators) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,127,eturn new Chain(
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,128,Comparator[])comparators.toArray(
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,129,ew Comparator[comparators.size()]));
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,133, Chains an array of comparators together. Each Comparator will be called
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,134," in turn until one of them return a non-zero value, this value will be"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,135, returned.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,137, @param comparators
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,138,            the array of comparators
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,139, @return a chained comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,141,ublic static Comparator chain(final Comparator[] comparators) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,142,eturn new Chain(comparators);
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,146, Chains a series of Comparators together.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,148,rivate static class Chain implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,150,inal Comparator[] chain;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,153, Creates a Comparator chain using the specified array of Comparators
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,154, @param chain the Comparators in the chain
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,156,ublic Chain(final Comparator[] chain) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,157,his.chain = new Comparator[chain.length];
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,158,"ystem.arraycopy(chain, 0, this.chain, 0, chain.length);"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,161,"ublic int compare(final Object left, final Object right) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,162,nt result = 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,163,or (int i = 0; result == 0 && i < chain.length; ++i) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,164,"esult = chain[i].compare(left, right);"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,166,eturn result;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,171, Reverses a comparator's logic.
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,173, @param wrapped
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,174,            the Comparator to reverse the logic of
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,175, @return a comparator with reverse logic
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,177,rivate static Comparator reverse(final Comparator wrapped) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,178,eturn new Reverse(wrapped);
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,181,rivate static class Reverse implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,182,rivate final Comparator wrapped;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,185, Creates a Comparator with reverse logic
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,186, @param wrapped the original logic
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,188,ublic Reverse(final Comparator wrapped) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,189,his.wrapped = wrapped;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,192,"ublic int compare(final Object left, final Object right) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,193,"eturn -wrapped.compare(left, right);"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,198, Forces Group instances to appear at the beginning of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,200, @see Group
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,201, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,203,ublic static Comparator groupFirst() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,204,eturn new GroupFirst();
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,208, Forces Group instances to appear at the end of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,210, @see Group
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,211, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,213,ublic static Comparator groupLast() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,214,eturn reverse(groupFirst());
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,217,rivate static class GroupFirst implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,218,"ublic int compare(final Object left, final Object right) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,219,inal boolean l = left instanceof Group;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,220,inal boolean r = right instanceof Group;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,222,f (l ^ r) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,223,f (l) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,224,eturn -1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,226,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,228,eturn 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,233, Forces Switch instances to appear at the beginning of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,235, @see Switch
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,236, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,238,ublic static Comparator switchFirst() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,239,eturn new SwitchFirst();
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,243, Forces Switch instances to appear at the end of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,245, @see Switch
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,246, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,248,ublic static Comparator switchLast() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,249,eturn reverse(switchFirst());
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,252,rivate static class SwitchFirst implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,253,"ublic int compare(final Object left, final Object right) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,254,inal boolean l = left instanceof Switch;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,255,inal boolean r = right instanceof Switch;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,257,f (l ^ r) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,258,f (l) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,259,eturn -1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,261,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,263,eturn 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,268, Forces Command instances to appear at the beginning of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,270, @see Command
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,271, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,273,ublic static Comparator commandFirst() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,274,eturn new CommandFirst();
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,278, Forces Command instances to appear at the end of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,280, @see Command
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,281, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,283,ublic static Comparator commandLast() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,284,eturn reverse(commandFirst());
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,287,rivate static class CommandFirst implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,288,"ublic int compare(final Object left, final Object right) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,289,inal boolean l = left instanceof Command;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,290,inal boolean r = right instanceof Command;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,292,f (l ^ r) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,293,f (l) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,294,eturn -1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,296,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,298,eturn 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,303, Forces DefaultOption instances to appear at the beginning of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,305, @see DefaultOption
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,306, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,308,ublic static Comparator defaultOptionFirst() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,309,eturn new DefaultOptionFirst();
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,313, Forces DefaultOption instances to appear at the end of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,315, @see DefaultOption
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,316, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,318,ublic static Comparator defaultOptionLast() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,319,eturn reverse(defaultOptionFirst());
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,322,rivate static class DefaultOptionFirst implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,323,"ublic int compare(final Object left, final Object right) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,324,inal boolean l = left instanceof DefaultOption;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,325,inal boolean r = right instanceof DefaultOption;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,327,f (l ^ r) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,328,f (l) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,329,eturn -1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,331,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,333,eturn 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,338, Forces Comparators with a particular trigger to appear at the beginning
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,339, of lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,341, @param name
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,342,            the trigger name to select
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,343, @see Option#getTriggers()
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,344, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,346,ublic static Comparator namedFirst(final String name) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,347,eturn new Named(name);
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,351, Forces Comparators with a particular trigger to appear at the end of
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,352, lists
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,354, @param name
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,355,            the trigger name to select
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,356, @see Option#getTriggers()
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,357, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,359,ublic static Comparator namedLast(final String name) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,360,eturn reverse(new Named(name));
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,363,rivate static class Named implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,364,rivate final String name;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,367, Creates a Comparator that sorts a particular name high in order
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,368, @param name the trigger name to select
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,370,ublic Named(final String name) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,371,his.name = name;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,373,"ublic int compare(final Object oleft, final Object oright) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,374,inal Option left = (Option)oleft;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,375,inal Option right = (Option)oright;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,377,inal boolean l = left.getTriggers().contains(name);
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,378,inal boolean r = right.getTriggers().contains(name);
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,380,f (l ^ r) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,381,f (l) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,382,eturn -1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,384,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,386,eturn 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,391, Orders Options by preferredName
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,393, @see Option#getPreferredName()
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,394, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,396,ublic static Comparator preferredNameFirst() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,397,eturn new PreferredName();
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,401," Orders Options by preferredName, reversed"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,403, @see Option#getPreferredName()
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,404, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,406,ublic static Comparator preferredNameLast() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,407,eturn reverse(preferredNameFirst());
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,410,rivate static class PreferredName implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,411,"ublic int compare(final Object oleft, final Object oright) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,412,inal Option left = (Option)oleft;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,413,inal Option right = (Option)oright;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,415,eturn left.getPreferredName().compareTo(right.getPreferredName());
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,420, Orders Options grouping required Options first
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,422, @see Option#isRequired()
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,423, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,425,ublic static Comparator requiredFirst() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,426,eturn new Required();
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,430, Orders Options grouping required Options last
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,432, @see Option#isRequired()
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,433, @return a new comparator
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,435,ublic static Comparator requiredLast() {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,436,eturn reverse(requiredFirst());
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,439,rivate static class Required implements Comparator {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,440,"ublic int compare(final Object oleft, final Object oright) {"
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,441,inal Option left = (Option)oleft;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,442,inal Option right = (Option)oright;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,444,inal boolean l = left.isRequired();
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,445,inal boolean r = right.isRequired();
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,447,f (l ^ r) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,448,f (l) {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,449,eturn -1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,451,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,453,eturn 0;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,17,ackage org.apache.commons.cli2.util;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,19,mport java.io.PrintWriter;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,20,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,21,mport java.util.Collections;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,22,mport java.util.Comparator;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,23,mport java.util.HashSet;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,24,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,25,mport java.util.List;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,26,mport java.util.Set;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,28,mport org.apache.commons.cli2.DisplaySetting;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,29,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,30,mport org.apache.commons.cli2.HelpLine;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,31,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,32,mport org.apache.commons.cli2.OptionException;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,33,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,34,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,37, Presents on screen help based on the application's Options
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,39,ublic class HelpFormatter {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,41, The default screen width
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,43,ublic static final int DEFAULT_FULL_WIDTH = 80;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,46, The default screen furniture left of screen
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,48,"ublic static final String DEFAULT_GUTTER_LEFT = """";"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,51, The default screen furniture right of screen
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,53,"ublic static final String DEFAULT_GUTTER_CENTER = ""    "";"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,56, The default screen furniture between columns
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,58,"ublic static final String DEFAULT_GUTTER_RIGHT = """";"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,61, The default DisplaySettings used to select the elements to display in the
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,62, displayed line of full usage information.
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,64, @see DisplaySetting
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,66,ublic static final Set DEFAULT_FULL_USAGE_SETTINGS;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,69, The default DisplaySettings used to select the elements of usage per help
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,70, line in the main body of help
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,72, @see DisplaySetting
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,74,ublic static final Set DEFAULT_LINE_USAGE_SETTINGS;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,77, The default DisplaySettings used to select the help lines in the main
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,78, body of help
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,80,ublic static final Set DEFAULT_DISPLAY_USAGE_SETTINGS;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,82,tatic {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,83,inal Set fullUsage = new HashSet(DisplaySetting.ALL);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,84,ullUsage.remove(DisplaySetting.DISPLAY_ALIASES);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,85,ullUsage.remove(DisplaySetting.DISPLAY_GROUP_NAME);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,86,ullUsage.remove(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,87,EFAULT_FULL_USAGE_SETTINGS = Collections.unmodifiableSet(fullUsage);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,89,inal Set lineUsage = new HashSet();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,90,ineUsage.add(DisplaySetting.DISPLAY_ALIASES);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,91,ineUsage.add(DisplaySetting.DISPLAY_GROUP_NAME);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,92,ineUsage.add(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,93,EFAULT_LINE_USAGE_SETTINGS = Collections.unmodifiableSet(lineUsage);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,95,inal Set displayUsage = new HashSet(DisplaySetting.ALL);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,96,isplayUsage.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,97,EFAULT_DISPLAY_USAGE_SETTINGS = Collections.unmodifiableSet(displayUsage);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,100,rivate Set fullUsageSettings = new HashSet(DEFAULT_FULL_USAGE_SETTINGS);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,101,rivate Set lineUsageSettings = new HashSet(DEFAULT_LINE_USAGE_SETTINGS);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,102,rivate Set displaySettings = new HashSet(DEFAULT_DISPLAY_USAGE_SETTINGS);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,103,rivate OptionException exception = null;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,104,rivate Group group;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,105,rivate Comparator comparator = null;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,106,rivate String divider = null;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,107,rivate String header = null;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,108,rivate String footer = null;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,109,"rivate String shellCommand = """";"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,110,rivate PrintWriter out = new PrintWriter(System.out);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,112,/or should this default to .err?
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,113,rivate final String gutterLeft;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,114,rivate final String gutterCenter;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,115,rivate final String gutterRight;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,116,rivate final int pageWidth;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,119, Creates a new HelpFormatter using the defaults
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,121,ublic HelpFormatter() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,122,"his(DEFAULT_GUTTER_LEFT, DEFAULT_GUTTER_CENTER, DEFAULT_GUTTER_RIGHT, DEFAULT_FULL_WIDTH);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,126, Creates a new HelpFormatter using the specified parameters
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,127, @param gutterLeft the string marking left of screen
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,128, @param gutterCenter the string marking center of screen
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,129, @param gutterRight the string marking right of screen
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,130, @param fullWidth the width of the screen
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,132,"ublic HelpFormatter(final String gutterLeft,"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,133,"inal String gutterCenter,"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,134,"inal String gutterRight,"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,135,inal int fullWidth) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,136,/ default the left gutter to empty string
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,137,his.gutterLeft = (gutterLeft == null) ? DEFAULT_GUTTER_LEFT : gutterLeft;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,139,/ default the center gutter to a single space
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,140,his.gutterCenter = (gutterCenter == null) ? DEFAULT_GUTTER_CENTER : gutterCenter;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,142,/ default the right gutter to empty string
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,143,his.gutterRight = (gutterRight == null) ? DEFAULT_GUTTER_RIGHT : gutterRight;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,145,/ calculate the available page width
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,146,his.pageWidth = fullWidth - this.gutterLeft.length() - this.gutterRight.length();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,148,/ check available page width is valid
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,149,nt availableWidth = fullWidth - pageWidth + this.gutterCenter.length();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,151,f (availableWidth < 2) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,152,hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.HELPFORMATTER_GUTTER_TOO_LONG));
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,157, Prints the Option help.
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,159,ublic void print() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,160,rintHeader();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,161,rintException();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,162,rintUsage();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,163,rintHelp();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,164,rintFooter();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,165,ut.flush();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,169, Prints any error message.
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,171,ublic void printException() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,172,f (exception != null) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,173,rintDivider();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,174,rintWrapped(exception.getMessage());
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,179, Prints detailed help per option.
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,181,ublic void printHelp() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,182,rintDivider();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,184,inal Option option;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,186,f ((exception != null) && (exception.getOption() != null)) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,187,ption = exception.getOption();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,188, else {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,189,ption = group;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,192,/ grab the HelpLines to display
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,193,"inal List helpLines = option.helpLines(0, displaySettings, comparator);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,195,/ calculate the maximum width of the usage strings
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,196,nt usageWidth = 0;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,198,or (final Iterator i = helpLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,199,inal HelpLine helpLine = (HelpLine) i.next();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,200,"inal String usage = helpLine.usage(lineUsageSettings, comparator);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,201,"sageWidth = Math.max(usageWidth, usage.length());"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,204,/ build a blank string to pad wrapped descriptions
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,205,inal StringBuffer blankBuffer = new StringBuffer();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,207,or (int i = 0; i < usageWidth; i++) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,208,lankBuffer.append(' ');
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,211,/ determine the width available for descriptions
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,212,"inal int descriptionWidth = Math.max(1, pageWidth - gutterCenter.length() - usageWidth);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,214,/ display each HelpLine
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,215,or (final Iterator i = helpLines.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,216,/ grab the HelpLine
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,217,inal HelpLine helpLine = (HelpLine) i.next();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,219,/ wrap the description
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,220,"inal List descList = wrap(helpLine.getDescription(), descriptionWidth);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,221,inal Iterator descriptionIterator = descList.iterator();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,223,/ display usage + first line of description
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,224,rintGutterLeft();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,225,"ad(helpLine.usage(lineUsageSettings, comparator), usageWidth, out);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,226,ut.print(gutterCenter);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,227,"ad((String) descriptionIterator.next(), descriptionWidth, out);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,228,rintGutterRight();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,229,ut.println();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,231,/ display padding + remaining lines of description
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,232,hile (descriptionIterator.hasNext()) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,233,rintGutterLeft();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,235,"/pad(helpLine.getUsage(),usageWidth,out);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,236,ut.print(blankBuffer);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,237,ut.print(gutterCenter);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,238,"ad((String) descriptionIterator.next(), descriptionWidth, out);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,239,rintGutterRight();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,240,ut.println();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,244,rintDivider();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,248, Prints a single line of usage information (wrapping if necessary)
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,250,ublic void printUsage() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,251,rintDivider();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,253,"inal StringBuffer buffer = new StringBuffer(""Usage:\n"");"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,254,uffer.append(shellCommand).append(' ');
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,255,"roup.appendUsage(buffer, fullUsageSettings, comparator, "" "");"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,256,rintWrapped(buffer.toString());
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,260, Prints a header string if necessary
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,262,ublic void printHeader() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,263,f (header != null) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,264,rintDivider();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,265,rintWrapped(header);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,270, Prints a footer string if necessary
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,272,ublic void printFooter() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,273,f (footer != null) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,274,rintWrapped(footer);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,275,rintDivider();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,280, Prints a string wrapped if necessary
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,281, @param text the string to wrap
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,283,ublic void printWrapped(final String text) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,284,"or (final Iterator i = wrap(text, pageWidth).iterator(); i.hasNext();) {"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,285,rintGutterLeft();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,286,"ad((String) i.next(), pageWidth, out);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,287,rintGutterRight();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,288,ut.println();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,291,ut.flush();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,295, Prints the left gutter string
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,297,ublic void printGutterLeft() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,298,f (gutterLeft != null) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,299,ut.print(gutterLeft);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,304, Prints the right gutter string
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,306,ublic void printGutterRight() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,307,f (gutterRight != null) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,308,ut.print(gutterRight);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,313, Prints the divider text
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,315,ublic void printDivider() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,316,f (divider != null) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,317,ut.println(divider);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,321,"rotected static void pad(final String text,"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,322,"inal int width,"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,323,inal PrintWriter writer) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,324,inal int left;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,326,/ write the text and record how many characters written
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,327,f (text == null) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,328,eft = 0;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,329, else {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,330,riter.write(text);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,331,eft = text.length();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,334,/ pad remainder with spaces
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,335,or (int i = left; i < width; ++i) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,336,riter.write(' ');
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,340,"rotected static List wrap(final String text,"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,341,inal int width) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,342,/ check for valid width
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,343,f (width < 1) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,344,"hrow new IllegalArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.HELPFORMATTER_WIDTH_TOO_NARROW,"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,345,ew Object[] {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,346,ew Integer(width)
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,350,/ handle degenerate case
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,351,f (text == null) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,352,"eturn Collections.singletonList("""");"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,355,inal List lines = new ArrayList();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,356,inal char[] chars = text.toCharArray();
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,357,nt left = 0;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,359,/ for each character in the string
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,360,hile (left < chars.length) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,361,/ sync left and right indeces
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,362,nt right = left;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,364,"/ move right until we run out of characters, width or find a newline"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,365,hile ((right < chars.length) && (chars[right] != '\n') &&
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,366,right < (left + width + 1))) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,367,ight++;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,370,/ if a newline was found
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,371,f ((right < chars.length) && (chars[right] == '\n')) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,372,/ record the substring
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,373,"inal String line = new String(chars, left, right - left);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,374,ines.add(line);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,376,/ move to the end of the substring
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,377,eft = right + 1;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,379,f (left == chars.length) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,380,"ines.add("""");"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,383,/ restart the loop
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,384,ontinue;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,387,/ move to the next ideal wrap point
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,388,ight = (left + width) - 1;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,390,/ if we have run out of characters
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,391,f (chars.length <= right) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,392,/ record the substring
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,393,"inal String line = new String(chars, left, chars.length - left);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,394,ines.add(line);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,396,/ abort the loop
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,397,reak;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,400,/ back track the substring end until a space is found
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,401,hile ((right >= left) && (chars[right] != ' ')) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,402,ight--;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,405,/ if a space was found
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,406,f (right >= left) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,407,/ record the substring to space
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,408,"inal String line = new String(chars, left, right - left);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,409,ines.add(line);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,411,/ absorb all the spaces before next substring
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,412,hile ((right < chars.length) && (chars[right] == ' ')) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,413,ight++;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,416,eft = right;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,418,/ restart the loop
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,419,ontinue;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,422,/ move to the wrap position irrespective of spaces
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,423,"ight = Math.min(left + width, chars.length);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,425,/ record the substring
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,426,"inal String line = new String(chars, left, right - left);"
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,427,ines.add(line);
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,429,/ absorb any the spaces before next substring
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,430,hile ((right < chars.length) && (chars[right] == ' ')) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,431,ight++;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,434,eft = right;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,437,eturn lines;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,441, The Comparator to use when sorting Options
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,442, @param comparator Comparator to use when sorting Options
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,444,ublic void setComparator(Comparator comparator) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,445,his.comparator = comparator;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,449, The DisplaySettings used to select the help lines in the main body of
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,450, help
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,452, @param displaySettings the settings to use
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,453, @see DisplaySetting
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,455,ublic void setDisplaySettings(Set displaySettings) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,456,his.displaySettings = displaySettings;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,460, Sets the string to use as a divider between sections of help
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,461, @param divider the dividing string
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,463,ublic void setDivider(String divider) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,464,his.divider = divider;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,468, Sets the exception to document
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,469, @param exception the exception that occured
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,471,ublic void setException(OptionException exception) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,472,his.exception = exception;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,476, Sets the footer text of the help screen
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,477, @param footer the footer text
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,479,ublic void setFooter(String footer) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,480,his.footer = footer;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,484, The DisplaySettings used to select the elements to display in the
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,485, displayed line of full usage information.
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,486, @see DisplaySetting
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,487, @param fullUsageSettings
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,489,ublic void setFullUsageSettings(Set fullUsageSettings) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,490,his.fullUsageSettings = fullUsageSettings;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,494, Sets the Group of Options to document
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,495, @param group the options to document
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,497,ublic void setGroup(Group group) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,498,his.group = group;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,502, Sets the footer text of the help screen
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,503, @param header the footer text
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,505,ublic void setHeader(String header) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,506,his.header = header;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,510, Sets the DisplaySettings used to select elements in the per helpline
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,511, usage strings.
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,512, @see DisplaySetting
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,513, @param lineUsageSettings the DisplaySettings to use
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,515,ublic void setLineUsageSettings(Set lineUsageSettings) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,516,his.lineUsageSettings = lineUsageSettings;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,520, Sets the command string used to invoke the application
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,521, @param shellCommand the invokation command
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,523,ublic void setShellCommand(String shellCommand) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,524,his.shellCommand = shellCommand;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,528, @return the Comparator used to sort the Group
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,530,ublic Comparator getComparator() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,531,eturn comparator;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,535, @return the DisplaySettings used to select HelpLines
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,537,ublic Set getDisplaySettings() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,538,eturn displaySettings;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,542, @return the String used as a horizontal section divider
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,544,ublic String getDivider() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,545,eturn divider;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,549, @return the Exception being documented by this HelpFormatter
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,551,ublic OptionException getException() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,552,eturn exception;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,556, @return the help screen footer text
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,558,ublic String getFooter() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,559,eturn footer;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,563, @return the DisplaySettings used in the full usage string
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,565,ublic Set getFullUsageSettings() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,566,eturn fullUsageSettings;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,570, @return the group documented by this HelpFormatter
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,572,ublic Group getGroup() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,573,eturn group;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,577, @return the String used as the central gutter
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,579,ublic String getGutterCenter() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,580,eturn gutterCenter;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,584, @return the String used as the left gutter
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,586,ublic String getGutterLeft() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,587,eturn gutterLeft;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,591, @return the String used as the right gutter
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,593,ublic String getGutterRight() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,594,eturn gutterRight;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,598, @return the help screen header text
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,600,ublic String getHeader() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,601,eturn header;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,605, @return the DisplaySettings used in the per help line usage strings
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,607,ublic Set getLineUsageSettings() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,608,eturn lineUsageSettings;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,612, @return the width of the screen in characters
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,614,ublic int getPageWidth() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,615,eturn pageWidth;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,619, @return the command used to execute the application
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,621,ublic String getShellCommand() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,622,eturn shellCommand;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,626, @param out the PrintWriter to write to
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,628,ublic void setPrintWriter(PrintWriter out) {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,629,his.out = out;
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,633, @return the PrintWriter that will be written to
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,635,ublic PrintWriter getPrintWriter() {
False,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,636,eturn out;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,17,ackage org.apache.commons.cli2.validation;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,19,mport java.util.List;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,20,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,22,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,23,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,26, The <code>ClassValidator</code> validates the string argument
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,27, values are class names.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,29, The following example shows how to validate the 'logger'
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,30," argument value is a class name, that can be instantiated."
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,32, <pre>
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,34, ClassValidator validator = new ClassValidator();
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,35, validator.setInstance(true);
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,37, ArgumentBuilder builder = new ArgumentBuilder();
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,38, Argument logger =
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,39,"     builder.withName(""logger"");"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,40,            .withValidator(validator);
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,41, </pre>
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,43, @author John Keyes
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,45,ublic class ClassValidator implements Validator {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,46,** i18n */
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,47,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,49,** whether the class argument is loadable */
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,50,rivate boolean loadable;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,52,** whether to create an instance of the class */
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,53,rivate boolean instance;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,55,** the classloader to load classes from */
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,56,rivate ClassLoader loader;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,59, Validate each argument value in the specified List against this instances
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,60, permitted attributes.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,62, If a value is valid then it's <code>String</code> value in the list is
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,63, replaced with it's <code>Class</code> value or instance.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,65, @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,67,ublic void validate(final List values)
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,68,hrows InvalidArgumentException {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,69,or (final ListIterator i = values.listIterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,70,inal String name = (String) i.next();
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,72,f (!isPotentialClassName(name)) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,73,"hrow new InvalidArgumentException(resources.getMessage(ResourceConstants.CLASSVALIDATOR_BAD_CLASSNAME,"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,74,ame));
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,77,f (loadable || instance) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,78,inal ClassLoader theLoader = getClassLoader();
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,80,ry {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,81,inal Class clazz = theLoader.loadClass(name);
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,83,f (instance) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,84,.set(clazz.newInstance());
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,85, else {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,86,.set(clazz);
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,88, catch (final ClassNotFoundException exp) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,89,"hrow new InvalidArgumentException(resources.getMessage(ResourceConstants.CLASSVALIDATOR_CLASS_NOTFOUND,"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,90,ame));
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,91, catch (final IllegalAccessException exp) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,92,"hrow new InvalidArgumentException(resources.getMessage(ResourceConstants.CLASSVALIDATOR_CLASS_ACCESS,"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,93,"ame, exp.getMessage()));"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,94, catch (final InstantiationException exp) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,95,"hrow new InvalidArgumentException(resources.getMessage(ResourceConstants.CLASSVALIDATOR_CLASS_CREATE,"
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,96,ame));
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,103, Returns whether the argument value must represent a
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,104, class that is loadable.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,106, @return whether the argument value must represent a
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,107, class that is loadable.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,109,ublic boolean isLoadable() {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,110,eturn loadable;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,114, Specifies whether the argument value must represent a
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,115, class that is loadable.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,117, @param loadable whether the argument value must
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,118, represent a class that is loadable.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,120,ublic void setLoadable(boolean loadable) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,121,his.loadable = loadable;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,125, Returns the {@link ClassLoader} used to resolve and load
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,126, the classes specified by the argument values.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,128, @return the {@link ClassLoader} used to resolve and load
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,129, the classes specified by the argument values.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,131,ublic ClassLoader getClassLoader() {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,132,f (loader == null) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,133,oader = getClass().getClassLoader();
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,136,eturn loader;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,140, Specifies the {@link ClassLoader} used to resolve and load
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,141, the classes specified by the argument values.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,143, @param loader the {@link ClassLoader} used to resolve and load
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,144, the classes specified by the argument values.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,146,ublic void setClassLoader(ClassLoader loader) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,147,his.loader = loader;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,151, Returns whether the argument value must represent a
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,152, class that can be instantiated.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,154, @return whether the argument value must represent a
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,155, class that can be instantiated.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,157,ublic boolean isInstance() {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,158,eturn instance;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,162, Specifies whether the argument value must represent a
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,163, class that can be instantiated.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,165, @param instance whether the argument value must
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,166, represent a class that can be instantiated.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,168,ublic void setInstance(boolean instance) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,169,his.instance = instance;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,173, Returns whether the specified name is allowed as
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,174, a Java class name.
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,175, @param name the name to be checked
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,176, @return true if allowed as Java class name
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,178,rotected boolean isPotentialClassName(final String name) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,179,inal char[] chars = name.toCharArray();
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,181,oolean expectingStart = true;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,183,or (int i = 0; i < chars.length; ++i) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,184,inal char c = chars[i];
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,186,f (expectingStart) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,187,f (!Character.isJavaIdentifierStart(c)) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,188,eturn false;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,191,xpectingStart = false;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,192, else {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,193,f (c == '.') {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,194,xpectingStart = true;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,195, else if (!Character.isJavaIdentifierPart(c)) {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,196,eturn false;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,201,eturn !expectingStart;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,17,ackage org.apache.commons.cli2.validation;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,19,mport java.text.DateFormat;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,20,mport java.text.ParsePosition;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,22,mport java.util.Date;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,23,mport java.util.List;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,24,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,26,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,27,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,30, The <code>DateValidator</code> validates the argument values
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,31, are date or time value(s).
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,33, The following example shows how to validate that
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,34, an argument value(s) is a Date of the following
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,35, type: d/M/yy (see {@link java.text.DateFormat}).
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,37, <pre>
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,38," DateFormat date = new SimpleDateFormat(""d/M/yy"");"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,40, ArgumentBuilder builder = new ArgumentBuilder();
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,41, Argument dateFormat =
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,42,"     builder.withName(""date"");"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,43,            .withValidator(new DateValidator(dateFormat));
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,44, </pre>
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,46, The following example shows how to validate that
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,47, an argument value(s) is a time of the following
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,48, type: HH:mm:ss (see {@link java.text.DateFormat}).
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,50, <pre>
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,51," DateFormat timeFormat = new SimpleDateFormat(""HH:mm:ss"");"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,53, ArgumentBuilder builder = new ArgumentBuilder();
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,54, Argument time =
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,55,"     builder.withName(""time"");"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,56,            .withValidator(new DateValidator(timeFormat));
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,57, </pre>
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,59, @author John Keyes
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,61, @see java.text.DateFormat
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,63,ublic class DateValidator implements Validator {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,64,** i18n */
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,65,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,67,** an array of permitted DateFormats */
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,68,rivate DateFormat[] formats;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,70,** minimum Date allowed i.e: a valid date occurs later than this date */
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,71,rivate Date minimum;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,73,** maximum Date allowed i.e: a valid date occurs earlier than this date */
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,74,rivate Date maximum;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,76,** leniant parsing */
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,77,rivate boolean isLenient;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,80, Creates a Validator for the default date/time format
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,82,ublic DateValidator() {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,83,his(DateFormat.getInstance());
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,87, Creates a Validator for the specified DateFormat.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,89, @param format
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,90,            a DateFormat which dates must conform to
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,92,ublic DateValidator(final DateFormat format) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,93,etFormat(format);
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,97, Creates a Validator for the List of specified DateFormats.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,99, @param formats
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,100,            a List of DateFormats which dates must conform to
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,102,ublic DateValidator(final List formats) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,103,etFormats(formats);
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,107, Creates a Validator for dates.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,109, @return DateValidator a Validator for dates
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,111,ublic static DateValidator getDateInstance() {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,112,eturn new DateValidator(DateFormat.getDateInstance());
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,116, Creates a Validator for times.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,118, @return DateValidator a Validator for times
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,120,ublic static DateValidator getTimeInstance() {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,121,eturn new DateValidator(DateFormat.getTimeInstance());
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,125, Creates a Validator for date/times
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,127, @return DateValidator a Validator for date/times
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,129,ublic static DateValidator getDateTimeInstance() {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,130,eturn new DateValidator(DateFormat.getDateTimeInstance());
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,134, Validate each String value in the specified List against this instances
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,135, permitted DateFormats.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,137, If a value is valid then it's <code>String</code> value in the list is
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,138, replaced with it's <code>Date</code> value.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,140, @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,142,ublic void validate(final List values)
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,143,hrows InvalidArgumentException {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,144,/ for each value
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,145,or (final ListIterator i = values.listIterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,146,inal String value = (String) i.next();
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,148,ate date = null;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,150,/ create a resuable ParsePosition instance
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,151,inal ParsePosition pp = new ParsePosition(0);
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,153,/ for each permitted DateFormat
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,154,or (int f = 0; (f < this.formats.length) && (date == null); ++f) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,155,/ reset the parse position
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,156,p.setIndex(0);
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,157,"ate = this.formats[f].parse(value, pp);"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,159,/ if the wrong number of characters have been parsed
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,160,f (pp.getIndex() < value.length()) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,161,ate = null;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,165,/ if date has not been set throw an InvalidArgumentException
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,166,f (date == null) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,167,hrow new InvalidArgumentException(value);
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,170,/ if the date is outside the bounds
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,171,f (isDateEarlier(date) || isDateLater(date)) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,172,"hrow new InvalidArgumentException(resources.getMessage(ResourceConstants.DATEVALIDATOR_DATE_OUTOFRANGE,"
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,173,alue));
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,176,/ replace the value in the list with the actual Date
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,177,.set(date);
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,182, Sets whether this validator uses lenient parsing.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,184, @param lenient whether this validator uses lenient parsing
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,186,ublic void setLenient(final boolean lenient) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,187,or (int i = 0; i < this.formats.length; i++) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,188,his.formats[i].setLenient(lenient);
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,191,his.isLenient = lenient;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,195, Returns whether this validator uses lenient parsing.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,197, @return whether this validator uses lenient parsing
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,199,ublic boolean isLenient() {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,200,eturn this.isLenient;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,204, Returns the maximum date permitted.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,206, @return Date the maximum date permitted. If no maximum date has been
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,207,         specified then return <code>null</code>.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,209,ublic Date getMaximum() {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,210,eturn maximum;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,214, Sets the maximum Date to the specified value.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,216, @param maximum
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,217,            the maximum Date permitted
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,219,ublic void setMaximum(final Date maximum) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,220,his.maximum = maximum;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,224, Returns the minimum date permitted.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,226, @return Date the minimum date permitted. If no minimum date has been
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,227,         specified then return <code>null</code>.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,229,ublic Date getMinimum() {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,230,eturn minimum;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,234, Sets the minimum Date to the specified value.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,236, @param minimum
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,237,            the minimum Date permitted
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,239,ublic void setMinimum(Date minimum) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,240,his.minimum = minimum;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,244, Returns whether the specified Date is later than the maximum date.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,246, @param date
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,247,            the Date to evaluate
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,249, @return boolean whether <code>date</code> is earlier than the maximum
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,250,         date
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,252,rivate boolean isDateLater(Date date) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,253,eturn (maximum != null) && (date.getTime() > maximum.getTime());
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,257, Returns whether the specified Date is earlier than the minimum date.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,259, @param date
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,260,            the Date to evaluate
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,262, @return boolean whether <code>date</code> is earlier than the minimum
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,263,         date
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,265,rivate boolean isDateEarlier(Date date) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,266,eturn (minimum != null) && (date.getTime() < minimum.getTime());
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,270, Sets the date format permitted.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,272, @param format
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,273,              the format to use
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,275,ublic void setFormat(final DateFormat format) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,276,etFormats(new DateFormat[] { format });
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,280, Sets the date formats permitted.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,282, @param formats
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,283,               the List of DateFormats to use
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,285,ublic void setFormats(final List formats) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,286,etFormats((DateFormat[]) formats.toArray(new DateFormat[formats.size()]));
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,290, Sets the date formats permitted.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,292, @param formats
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,293,               the array of DateFormats to use
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,295,ublic void setFormats(final DateFormat[] formats) {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,296,his.formats = formats;
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,297,etLenient(this.isLenient);
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,301, Gets the date formats permitted.
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,303, @return the permitted formats
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,305,ublic DateFormat[] getFormats() {
False,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,306,eturn this.formats;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,17,ackage org.apache.commons.cli2.validation;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,19,mport java.util.Iterator;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,20,mport java.util.List;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,21,mport java.util.Set;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,23,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,24,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,27, The <code>EnumValidator</code> validates the string argument
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,28, values are valid.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,30, The following example shows how to limit the valid values
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,31," for the color argument to 'red', 'green', or 'blue'."
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,33, <pre>
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,34, Set values = new HashSet();
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,35," values.add(""red"");"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,36," values.add(""green"");"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,37," values.add(""blue"");"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,39, ArgumentBuilder builder = new ArgumentBuilder();
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,40, Argument color =
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,41,"     builder.withName(""color"");"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,42,            .withValidator(new EnumValidator(values));
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,43, </pre>
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,45, @author John Keyes
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,47,ublic class EnumValidator implements Validator {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,48,** List of permitted values */
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,49,rivate Set validValues;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,52, Creates a new EnumValidator for the specified values.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,54, @param values The list of permitted values
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,56,ublic EnumValidator(final Set values) {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,57,etValidValues(values);
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,61, Validate the list of values against the list of permitted values.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,63, @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,65,ublic void validate(final List values)
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,66,hrows InvalidArgumentException {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,67,or (final Iterator iter = values.iterator(); iter.hasNext();) {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,68,inal String value = (String) iter.next();
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,70,f (!this.validValues.contains(value)) {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,71,"hrow new InvalidArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.ENUM_ILLEGAL_VALUE,"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,72,ew Object[] {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,73,"alue,"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,74,etValuesAsString()
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,81, Returns the permitted values in a comma separated String
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,83, @return String formatted list of values
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,85,tring getValuesAsString() {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,86,inal StringBuffer buff = new StringBuffer();
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,88,"uff.append(""["");"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,90,or (final Iterator iter = this.validValues.iterator(); iter.hasNext();) {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,91,"uff.append(""'"").append(iter.next()).append(""'"");"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,93,f (iter.hasNext()) {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,94,"uff.append("", "");"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,98,"uff.append(""]"");"
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,100,eturn buff.toString();
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,104, Returns the Set of valid argument values.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,106, @return Returns the Set of valid argument values.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,108,ublic Set getValidValues() {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,109,eturn validValues;
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,113, Specifies the Set of valid argument values.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,115, @param validValues The Set of valid argument values.
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,117,rotected void setValidValues(Set validValues) {
False,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,118,his.validValues = validValues;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,17,ackage org.apache.commons.cli2.validation;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,19,mport java.io.File;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,20,mport java.util.List;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,21,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,24, The <code>FileValidator</code> validates the string argument
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,25," values are files.  If the value is a file, the string value in"
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,26, the {@link java.util.List} of values is replaced with the
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,27, {@link java.io.File} instance.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,29, The following attributes can also be specified using the
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,30, appropriate settors:
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,31, <ul>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,32,  <li>writable</li>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,33,  <li>readable</li>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,34,  <li>hidden</li>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,35,  <li>existing</li>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,36,  <li>is a file</li>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,37,  <li>is a directory</li>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,38, </ul>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,40, The following example shows how to limit the valid values
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,41," for the config attribute to files that are readable, writeable,"
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,42, and that already existing.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,44, <pre>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,46, ArgumentBuilder builder = new ArgumentBuilder();
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,47, FileValidator validator = FileValidator.getExistingFileInstance();
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,48, validator.setReadable(true);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,49, validator.setWritable(true);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,51, Argument age =
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,52,"     builder.withName(""config"");"
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,53,            .withValidator(validator);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,54, </pre>
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,56, @author Rob Oxspring
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,57, @author John Keyes
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,59,ublic class FileValidator implements Validator {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,62, Returns a <code>FileValidator</code> for existing files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,64, @return a <code>FileValidator</code> for existing files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,66,ublic static FileValidator getExistingInstance() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,67,inal FileValidator validator = new FileValidator();
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,68,alidator.setExisting(true);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,69,eturn validator;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,73, Returns a <code>FileValidator</code> for existing files.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,75, @return a <code>FileValidator</code> for existing files.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,77,ublic static FileValidator getExistingFileInstance() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,78,inal FileValidator validator = new FileValidator();
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,79,alidator.setExisting(true);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,80,alidator.setFile(true);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,81,eturn validator;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,85, Returns a <code>FileValidator</code> for existing directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,87, @return a <code>FileValidator</code> for existing directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,89,ublic static FileValidator getExistingDirectoryInstance() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,90,inal FileValidator validator = new FileValidator();
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,91,alidator.setExisting(true);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,92,alidator.setDirectory(true);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,93,eturn validator;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,96,** whether the argument value is readable */
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,97,rivate boolean readable = false;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,99,** whether the argument value is writable */
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,100,rivate boolean writable = false;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,102,** whether the argument value exists */
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,103,rivate boolean existing = false;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,105,** whether the argument value is a directory */
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,106,rivate boolean directory = false;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,108,** whether the argument value is a file */
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,109,rivate boolean file = false;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,111,** whether the argument value is a hidden file or directory */
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,112,rivate boolean hidden = false;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,115, Validate the list of values against the list of permitted values.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,116," If a value is valid, replace the string in the <code>values</code>"
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,117, {@link java.util.List} with the {@link java.io.File} instance.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,119, @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,121,ublic void validate(final List values) throws InvalidArgumentException {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,122,or (final ListIterator i = values.listIterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,123,inal String name = (String)i.next();
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,124,inal File f = new File(name);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,126,f ((existing && !f.exists())
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,127,| (file && !f.isFile())
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,128,| (directory && !f.isDirectory())
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,129,| (hidden && !f.isHidden())
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,130,| (readable && !f.canRead())
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,131,| (writable && !f.canWrite())) {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,133,hrow new InvalidArgumentException(name);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,136,.set(f);
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,141, Returns whether the argument values must represent directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,143, @return whether the argument values must represent directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,145,ublic boolean isDirectory() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,146,eturn directory;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,150, Specifies whether the argument values must represent directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,152, @param directory specifies whether the argument values must
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,153, represent directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,155,ublic void setDirectory(boolean directory) {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,156,his.directory = directory;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,160, Returns whether the argument values must represent existing
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,161, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,163, @return whether the argument values must represent existing
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,164, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,166,ublic boolean isExisting() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,167,eturn existing;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,171, Specifies whether the argument values must represent existing
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,172, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,174, @param existing specifies whether the argument values must
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,175, represent existing files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,177,ublic void setExisting(boolean existing) {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,178,his.existing = existing;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,182, Returns whether the argument values must represent directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,184, @return whether the argument values must represent directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,186,ublic boolean isFile() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,187,eturn file;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,191, Specifies whether the argument values must represent files.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,193, @param file specifies whether the argument values must
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,194, represent files.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,196,ublic void setFile(boolean file) {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,197,his.file = file;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,201, Returns whether the argument values must represent hidden
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,202, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,204, @return whether the argument values must represent hidden
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,205, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,207,ublic boolean isHidden() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,208,eturn hidden;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,212, Specifies whether the argument values must represent hidden
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,213, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,215, @param hidden specifies whether the argument values must
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,216, represent hidden files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,218,ublic void setHidden(boolean hidden) {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,219,his.hidden = hidden;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,223, Returns whether the argument values must represent readable
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,224, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,226, @return whether the argument values must represent readable
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,227, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,229,ublic boolean isReadable() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,230,eturn readable;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,234, Specifies whether the argument values must represent readable
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,235, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,237, @param readable specifies whether the argument values must
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,238, represent readable files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,240,ublic void setReadable(boolean readable) {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,241,his.readable = readable;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,245, Returns whether the argument values must represent writable
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,246, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,248, @return whether the argument values must represent writable
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,249, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,251,ublic boolean isWritable() {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,252,eturn writable;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,256, Specifies whether the argument values must represent writable
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,257, files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,259, @param writable specifies whether the argument values must
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,260, represent writable files/directories.
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,262,ublic void setWritable(boolean writable) {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,263,his.writable = writable;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,17,ackage org.apache.commons.cli2.validation;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,19,mport java.text.NumberFormat;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,20,mport java.text.ParsePosition;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,22,mport java.util.List;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,23,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,25,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,26,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,29, The <code>NumberValidator</code> validates the string argument
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,30," values are numbers.  If the value is a number, the string value in"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,31, the {@link java.util.List} of values is replaced with the
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,32, {@link java.lang.Number} instance.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,34, A maximum and minimum value can also be specified using
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,35," the {@link #setMaximum setMaximum}, and the"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,36, {@link #setMinimum setMinimum} methods.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,38, The following example shows how to limit the valid values
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,39, for the age attribute to integers less than 100.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,41, <pre>
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,43, ArgumentBuilder builder = new ArgumentBuilder();
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,44, NumberValidator validator = NumberValidator.getIntegerInstance();
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,45, validator.setMaximum(new Integer(100));
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,47, Argument age =
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,48,"     builder.withName(""age"");"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,49,            .withValidator(validator);
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,50, </pre>
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,52, @author Rob Oxspring
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,53, @author John Keyes
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,55,ublic class NumberValidator implements Validator {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,56,** the <code>NumberFormat</code> being used. */
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,57,rivate NumberFormat format;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,59,** the lower bound for argument values. */
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,60,rivate Number minimum = null;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,62,** the upper bound for argument values */
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,63,rivate Number maximum = null;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,66, Creates a new NumberValidator based on the specified NumberFormat
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,67, @param format the format of numbers to accept
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,69,ublic NumberValidator(final NumberFormat format) {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,70,etFormat(format);
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,74, Returns a <code>NumberValidator</code> for a currency format
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,75, for the current default locale.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,76, @return a <code>NumberValidator</code> for a currency format
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,77, for the current default locale.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,79,ublic static NumberValidator getCurrencyInstance() {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,80,eturn new NumberValidator(NumberFormat.getCurrencyInstance());
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,84, Returns a <code>NumberValidator</code> for an integer number format
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,85, for the current default locale.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,86, @return a <code>NumberValidator</code> for an integer number format
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,87, for the current default locale.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,89,ublic static NumberValidator getIntegerInstance() {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,90,inal NumberFormat format = NumberFormat.getNumberInstance();
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,91,ormat.setParseIntegerOnly(true);
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,93,eturn new NumberValidator(format);
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,97, Returns a <code>NumberValidator</code> for a percentage format
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,98, for the current default locale.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,99, @return a <code>NumberValidator</code> for a percentage format
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,100, for the current default locale.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,102,ublic static NumberValidator getPercentInstance() {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,103,eturn new NumberValidator(NumberFormat.getPercentInstance());
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,107, Returns a <code>NumberValidator</code> for a general-purpose
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,108, number format for the current default locale.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,109, @return a <code>NumberValidator</code> for a general-purpose
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,110, number format for the current default locale.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,112,ublic static NumberValidator getNumberInstance() {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,113,eturn new NumberValidator(NumberFormat.getNumberInstance());
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,117, Validate the list of values against the list of permitted values.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,118," If a value is valid, replace the string in the <code>values</code>"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,119, {@link java.util.List} with the {@link java.lang.Number} instance.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,121, @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,123,ublic void validate(final List values)
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,124,hrows InvalidArgumentException {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,125,or (final ListIterator i = values.listIterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,126,inal String value = (String) i.next();
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,128,inal ParsePosition pp = new ParsePosition(0);
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,129,"inal Number number = format.parse(value, pp);"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,131,f (pp.getIndex() < value.length()) {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,132,hrow new InvalidArgumentException(value);
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,135,f (((minimum != null) && (number.doubleValue() < minimum.doubleValue())) ||
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,136,(maximum != null) && (number.doubleValue() > maximum.doubleValue()))) {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,137,"hrow new InvalidArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.NUMBERVALIDATOR_NUMBER_OUTOFRANGE,"
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,138,ew Object[] {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,139,alue
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,143,.set(number);
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,148, Return the format being used to validate argument values against.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,150, @return the format being used to validate argument values against.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,152,ublic NumberFormat getFormat() {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,153,eturn format;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,157, Specify the format being used to validate argument values against.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,159, @param format the format being used to validate argument values against.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,161,rotected void setFormat(NumberFormat format) {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,162,his.format = format;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,166, Return the maximum value allowed for an argument value.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,168, @return the maximum value allowed for an argument value.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,170,ublic Number getMaximum() {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,171,eturn maximum;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,175, Specify the maximum value allowed for an argument value.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,177, @param maximum the maximum value allowed for an argument value.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,179,ublic void setMaximum(Number maximum) {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,180,his.maximum = maximum;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,184, Return the minimum value allowed for an argument value.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,186, @return the minimum value allowed for an argument value.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,188,ublic Number getMinimum() {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,189,eturn minimum;
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,193, Specify the minimum value allowed for an argument value.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,195, @param minimum the minimum value allowed for an argument value.
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,197,ublic void setMinimum(Number minimum) {
False,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,198,his.minimum = minimum;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,17,ackage org.apache.commons.cli2.validation;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,19,mport java.net.MalformedURLException;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,20,mport java.net.URL;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,22,mport java.util.List;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,23,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,25,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,26,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,29, The <code>UrlValidator</code> validates the string argument
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,30," values are URLs.  If the value is a URL, the string value in"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,31, the {@link java.util.List} of values is replaced with the
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,32, {@link java.net.URL} instance.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,34, URLs can also be validated based on their scheme by using
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,35," the {@link #setProtocol setProtocol} method, or by using the specified"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,36, {@link #UrlValidator(java.lang.String) constructor}.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,38, The following example shows how to limit the valid values
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,39, for the site argument to 'https' URLs.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,41, <pre>
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,43, ArgumentBuilder builder = new ArgumentBuilder();
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,44, Argument site =
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,45,"     builder.withName(""site"");"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,46,"            .withValidator(new URLValidator(""https""));"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,47, </pre>
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,49, @author Rob Oxspring
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,50, @author John Keyes
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,52,ublic class UrlValidator implements Validator {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,53,** allowed protocol */
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,54,rivate String protocol = null;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,57, Creates a UrlValidator.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,59,ublic UrlValidator() {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,63, Creates a UrlValidator for the specified protocol.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,64, @param protocol the protocol to be used
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,66,ublic UrlValidator(final String protocol) {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,67,etProtocol(protocol);
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,71, Validate the list of values against the list of permitted values.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,72," If a value is valid, replace the string in the <code>values</code>"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,73, {@link java.util.List} with the { java.net.URL} instance.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,75, @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,77,ublic void validate(final List values)
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,78,hrows InvalidArgumentException {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,79,or (final ListIterator i = values.listIterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,80,inal String name = (String) i.next();
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,82,ry {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,83,inal URL url = new URL(name);
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,85,f ((protocol != null) && !protocol.equals(url.getProtocol())) {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,86,hrow new InvalidArgumentException(name);
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,89,.set(url);
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,90, catch (final MalformedURLException mue) {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,91,"hrow new InvalidArgumentException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.URLVALIDATOR_MALFORMED_URL,"
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,92,ew Object[] {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,93,ame
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,100, Returns the protocol that must be used by a valid URL.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,102, @return the protocol that must be used by a valid URL.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,104,ublic String getProtocol() {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,105,eturn protocol;
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,109, Specifies the protocol that a URL must have to be valid.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,111, @param protocol the protocol that a URL must have to be valid.
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,113,ublic void setProtocol(String protocol) {
False,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,114,his.protocol = protocol;
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,15, limitations under the License.
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,17,ackage org.apache.commons.cli2.validation;
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,19,mport java.util.List;
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,22, The validation interface for validating argument values(s).
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,24, A validator can replace the argument string value with a
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,25, specific class instance e.g. the {@link UrlValidator} replaces
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,26, the string value with a {@link java.net.URL} instance.
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,28, @author Rob Oxspring
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,29, @author John Keyes
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,31,ublic interface Validator {
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,34, Validate the specified values (List of Strings).
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,36, @param values The values to validate.
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,38, @throws InvalidArgumentException If any of the
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,39, specified values are not valid.
False,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,41,oid validate(final List values) throws InvalidArgumentException;
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,23,* This is a collection of tests that test real world applications command lines.
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,25,* <p>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,26,* The following applications are tested:
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,27,* <ul>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,28,*   <li>ls</li>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,29,*   <li>Ant</li>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,30,*   <li>Groovy</li>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,31,*   <li>man</li>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,32,* </ul>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,33,* </p>
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,35,* @author John Keyes (john at integralsource.com)
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,37,public class ApplicationTest extends TestCase {
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,39,public void testLs() throws Exception {
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,40,// create the command line parser
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,41,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,42,Options options = new Options();
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,43,"options.addOption( ""a"", ""all"", false, ""do not hide entries starting with ."" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,44,"options.addOption( ""A"", ""almost-all"", false, ""do not list implied . and .."" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,45,"options.addOption( ""b"", ""escape"", false, ""print octal escapes for nongraphic characters"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,46,"options.addOption( OptionBuilder.withLongOpt( ""block-size"" )"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,47,".withDescription( ""use SIZE-byte blocks"" )"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,48,.hasArg()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,49,".withArgName(""SIZE"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,50,.create() );
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,51,"options.addOption( ""B"", ""ignore-backups"", false, ""do not list implied entried ending with ~"");"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,52,"options.addOption( ""c"", false, ""with -lt: sort by, and show, ctime (time of last modification of file status information) with -l:show ctime and sort by name otherwise: sort by ctime"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,53,"options.addOption( ""C"", false, ""list entries by columns"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,55,"String[] args = new String[]{ ""--block-size=10"" };"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,57,"CommandLine line = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,58,"assertTrue( line.hasOption( ""block-size"" ) );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,59,"assertEquals( line.getOptionValue( ""block-size"" ), ""10"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,63,* Ant test
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,65,public void testAnt() throws Exception {
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,66,// use the GNU parser
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,67,CommandLineParser parser = new GnuParser( );
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,68,Options options = new Options();
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,69,"options.addOption( ""help"", false, ""print this message"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,70,"options.addOption( ""projecthelp"", false, ""print project help information"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,71,"options.addOption( ""version"", false, ""print the version information and exit"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,72,"options.addOption( ""quiet"", false, ""be extra quiet"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,73,"options.addOption( ""verbose"", false, ""be extra verbose"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,74,"options.addOption( ""debug"", false, ""print debug information"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,75,"options.addOption( ""logfile"", true, ""use given file for log"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,76,"options.addOption( ""logger"", true, ""the class which is to perform the logging"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,77,"options.addOption( ""listener"", true, ""add an instance of a class as a project listener"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,78,"options.addOption( ""buildfile"", true, ""use given buildfile"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,79,"options.addOption( OptionBuilder.withDescription( ""use value for given property"" )"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,80,.hasArgs()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,81,.withValueSeparator()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,82,.create( 'D' ) );
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,83,"//, null, true, , false, true );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,84,"options.addOption( ""find"", true, ""search for buildfile towards the root of the filesystem and use it"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,86,"String[] args = new String[]{ ""-buildfile"", ""mybuild.xml"","
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,87,"""-Dproperty=value"", ""-Dproperty1=value1"","
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,88,"""-projecthelp"" };"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,90,"CommandLine line = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,92,// check multiple values
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,93,"String[] opts = line.getOptionValues( ""D"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,94,"assertEquals( ""property"", opts[0] );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,95,"assertEquals( ""value"", opts[1] );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,96,"assertEquals( ""property1"", opts[2] );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,97,"assertEquals( ""value1"", opts[3] );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,99,// check single value
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,100,"assertEquals( line.getOptionValue( ""buildfile""), ""mybuild.xml"" );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,102,// check option
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,103,"assertTrue( line.hasOption( ""projecthelp"") );"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,106,public void testGroovy() throws Exception {
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,107,Options options = new Options();
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,109,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,110,"OptionBuilder.withLongOpt(""define"")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,111,"withDescription(""define a system property"")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,112,hasArg(true).
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,113,"withArgName(""name=value"")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,114,create('D'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,115,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,116,OptionBuilder.hasArg(false)
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,117,".withDescription(""usage information"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,118,".withLongOpt(""help"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,119,.create('h'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,120,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,121,OptionBuilder.hasArg(false)
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,122,".withDescription(""debug mode will print out full stack traces"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,123,".withLongOpt(""debug"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,124,.create('d'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,125,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,126,OptionBuilder.hasArg(false)
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,127,".withDescription(""display the Groovy and JVM versions"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,128,".withLongOpt(""version"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,129,.create('v'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,130,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,131,"OptionBuilder.withArgName(""charset"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,132,.hasArg()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,133,".withDescription(""specify the encoding of the files"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,134,".withLongOpt(""encoding"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,135,.create('c'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,136,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,137,"OptionBuilder.withArgName(""script"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,138,.hasArg()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,139,".withDescription(""specify a command line script"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,140,.create('e'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,141,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,142,"OptionBuilder.withArgName(""extension"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,143,.hasOptionalArg()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,144,".withDescription(""modify files in place; create backup if extension is given (e.g. \'.bak\')"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,145,.create('i'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,146,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,147,OptionBuilder.hasArg(false)
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,148,".withDescription(""process files line by line using implicit 'line' variable"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,149,.create('n'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,150,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,151,OptionBuilder.hasArg(false)
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,152,".withDescription(""process files line by line and print result (see also -n)"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,153,.create('p'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,154,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,155,"OptionBuilder.withArgName(""port"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,156,.hasOptionalArg()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,157,".withDescription(""listen on a port and process inbound lines"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,158,.create('l'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,159,options.addOption(
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,160,"OptionBuilder.withArgName(""splitPattern"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,161,.hasOptionalArg()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,162,".withDescription(""split lines using splitPattern (default '\\s') using implicit 'split' variable"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,163,".withLongOpt(""autosplit"")"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,164,.create('a'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,166,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,167,"CommandLine line = parser.parse(options, new String[] { ""-e"", ""println 'hello'"" }, true);"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,169,assertTrue(line.hasOption('e'));
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,170,"assertEquals(""println 'hello'"", line.getOptionValue('e'));"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,174,* author Slawek Zachcial
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,176,public void testMan()
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,178,String cmdLine =
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,179,"""man [-c|-f|-k|-w|-tZT device] [-adlhu7V] [-Mpath] [-Ppager] [-Slist] "" +"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,180,"""[-msystem] [-pstring] [-Llocale] [-eextension] [section] page ..."";"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,181,Options options = new Options().
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,182,"addOption(""a"", ""all"", false, ""find all matching manual pages."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,183,"addOption(""d"", ""debug"", false, ""emit debugging messages."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,184,"addOption(""e"", ""extension"", false, ""limit search to extension type 'extension'."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,185,"addOption(""f"", ""whatis"", false, ""equivalent to whatis."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,186,"addOption(""k"", ""apropos"", false, ""equivalent to apropos."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,187,"addOption(""w"", ""location"", false, ""print physical location of man page(s)."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,188,"addOption(""l"", ""local-file"", false, ""interpret 'page' argument(s) as local filename(s)"")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,189,"addOption(""u"", ""update"", false, ""force a cache consistency check."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,190,"//FIXME - should generate -r,--prompt string"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,191,"addOption(""r"", ""prompt"", true, ""provide 'less' pager with prompt."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,192,"addOption(""c"", ""catman"", false, ""used by catman to reformat out of date cat pages."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,193,"addOption(""7"", ""ascii"", false, ""display ASCII translation or certain latin1 chars."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,194,"addOption(""t"", ""troff"", false, ""use troff format pages."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,195,"//FIXME - should generate -T,--troff-device device"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,196,"addOption(""T"", ""troff-device"", true, ""use groff with selected device."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,197,"addOption(""Z"", ""ditroff"", false, ""use groff with selected device."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,198,"addOption(""D"", ""default"", false, ""reset all options to their default values."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,199,"//FIXME - should generate -M,--manpath path"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,200,"addOption(""M"", ""manpath"", true, ""set search path for manual pages to 'path'."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,201,"//FIXME - should generate -P,--pager pager"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,202,"addOption(""P"", ""pager"", true, ""use program 'pager' to display output."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,203,"//FIXME - should generate -S,--sections list"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,204,"addOption(""S"", ""sections"", true, ""use colon separated section list."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,205,"//FIXME - should generate -m,--systems system"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,206,"addOption(""m"", ""systems"", true, ""search for man pages from other unix system(s)."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,207,"//FIXME - should generate -L,--locale locale"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,208,"addOption(""L"", ""locale"", true, ""define the locale for this particular man search."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,209,"//FIXME - should generate -p,--preprocessor string"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,210,"addOption(""p"", ""preprocessor"", true, ""string indicates which preprocessor to run.\n"" +"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,211,""" e - [n]eqn  p - pic     t - tbl\n"" +"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,212,""" g - grap    r - refer   v - vgrind"")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,213,"addOption(""V"", ""version"", false, ""show version."")."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,214,"addOption(""h"", ""help"", false, ""show this usage message."");"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,216,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,217,"//hf.printHelp(cmdLine, opts);"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,218,"hf.printHelp(60, cmdLine, null, options, null);"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,22,public class ArgumentIsOptionTest extends TestCase
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,24,private Options options = null;
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,25,private CommandLineParser parser = null;
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,27,public void setUp()
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,29,"options = new Options().addOption(""p"", false, ""Option p"").addOption(""attr"", true, ""Option accepts argument"");"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,31,parser = new PosixParser();
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,34,public void testOptionAndOptionWithArgument() throws Exception
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,36,String[] args = new String[]{
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,37,"""-p"","
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,38,"""-attr"","
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,39,"""p"""
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,42,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,43,"assertTrue(""Confirm -p is set"", cl.hasOption(""p""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,44,"assertTrue(""Confirm -attr is set"", cl.hasOption(""attr""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,45,"assertTrue(""Confirm arg of -attr"", cl.getOptionValue(""attr"").equals(""p""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,46,"assertTrue(""Confirm all arguments recognized"", cl.getArgs().length == 0);"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,49,public void testOptionWithArgument() throws Exception
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,51,String[] args = new String[]{
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,52,"""-attr"","
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,53,"""p"""
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,56,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,57,"assertFalse(""Confirm -p is set"", cl.hasOption(""p""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,58,"assertTrue(""Confirm -attr is set"", cl.hasOption(""attr""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,59,"assertTrue(""Confirm arg of -attr"","
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,60,"cl.getOptionValue(""attr"").equals(""p""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,61,"assertTrue(""Confirm all arguments recognized"", cl.getArgs().length == 0);"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,64,public void testOption() throws Exception
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,66,String[] args = new String[]{
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,67,"""-p"""
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,70,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,71,"assertTrue(""Confirm -p is set"", cl.hasOption(""p""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,72,"assertFalse(""Confirm -attr is not set"", cl.hasOption(""attr""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,73,"assertTrue(""Confirm all arguments recognized"", cl.getArgs().length == 0);"
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,17,ackage org.apache.commons.cli2.validation;
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,19,mport java.util.TimeZone;
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,18,package org.apache.commons.cli;
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,21,mport junit.extensions.TestDecorator;
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,21,* @author Emmanuel Bourg
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,22,"* @version $Revision$, $Date$"
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,24,public class BasicParserTest extends ParserTestCase
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,26,public void setUp()
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,28,super.setUp();
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,29,parser = new BasicParser();
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,23,mport junit.framework.Test;
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,24,mport junit.framework.TestResult;
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,32,public void testPropertiesOption() throws Exception
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,34,// not supported by the BasicParser
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,26,ublic class TimeZoneTestSuite
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,27,xtends TestDecorator {
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,28,rivate final TimeZone timeZone;
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,29,rivate final TimeZone originalTimeZone;
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,37,public void testShortWithEqual() throws Exception
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,39,// not supported by the BasicParser
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,42,public void testShortWithoutEqual() throws Exception
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,44,// not supported by the BasicParser
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,31,"ublic TimeZoneTestSuite(String timeZone,"
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,32,est test) {
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,33,uper(test);
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,34,his.timeZone = TimeZone.getTimeZone(timeZone);
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,35,his.originalTimeZone = TimeZone.getDefault();
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,47,public void testLongWithEqual() throws Exception
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,49,// not supported by the BasicParser
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,38,ublic void run(TestResult testResult) {
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,39,ry {
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,40,imeZone.setDefault(timeZone);
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,41,uper.run(testResult);
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,42, finally {
False,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,43,imeZone.setDefault(originalTimeZone); // cleanup
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,52,public void testLongWithEqualSingleDash() throws Exception
True,src/test/org/apache/commons/cli2/validation/TimeZoneTestSuite.java,src/test/org/apache/commons/cli/BasicParserTest.java,54,// not supported by the BasicParser
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,20,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,21,import java.io.PrintStream;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,22,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,23,import java.io.StringWriter;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,24,import java.util.Iterator;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,25,import java.util.Properties;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,27,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,29,public class BugsTest extends TestCase
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,31,public void test11457() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,33,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,34,"options.addOption(OptionBuilder.withLongOpt(""verbose"").create());"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,35,"String[] args = new String[]{""--verbose""};"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,37,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,39,"CommandLine cmd = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,40,"assertTrue(cmd.hasOption(""verbose""));"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,43,public void test11458() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,45,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,46,options.addOption( OptionBuilder.withValueSeparator( '=' ).hasArgs().create( 'D' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,47,options.addOption( OptionBuilder.withValueSeparator( ':' ).hasArgs().create( 'p' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,48,"String[] args = new String[] { ""-DJAVA_HOME=/opt/java"" , ""-pfile1:file2:file3"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,50,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,52,"CommandLine cmd = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,54,String[] values = cmd.getOptionValues('D');
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,56,"assertEquals(values[0], ""JAVA_HOME"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,57,"assertEquals(values[1], ""/opt/java"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,59,values = cmd.getOptionValues('p');
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,61,"assertEquals(values[0], ""file1"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,62,"assertEquals(values[1], ""file2"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,63,"assertEquals(values[2], ""file3"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,65,Iterator iter = cmd.iterator();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,66,while (iter.hasNext())
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,68,Option opt = (Option) iter.next();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,69,switch (opt.getId())
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,71,case 'D':
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,72,"assertEquals(opt.getValue(0), ""JAVA_HOME"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,73,"assertEquals(opt.getValue(1), ""/opt/java"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,74,break;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,75,case 'p':
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,76,"assertEquals(opt.getValue(0), ""file1"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,77,"assertEquals(opt.getValue(1), ""file2"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,78,"assertEquals(opt.getValue(2), ""file3"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,79,break;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,80,default:
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,81,"fail(""-D option not found"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,86,public void test11680() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,88,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,89,"options.addOption(""f"", true, ""foobar"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,90,"options.addOption(""m"", true, ""missing"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,91,"String[] args = new String[]{""-f"", ""foo""};"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,93,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,95,"CommandLine cmd = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,97,"cmd.getOptionValue(""f"", ""default f"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,98,"cmd.getOptionValue(""m"", ""default m"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,101,public void test11456() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,103,// Posix
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,104,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,105,options.addOption( OptionBuilder.hasOptionalArg().create( 'a' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,106,options.addOption( OptionBuilder.hasArg().create( 'b' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,107,"String[] args = new String[] { ""-a"", ""-bvalue"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,109,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,111,"CommandLine cmd = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,112,"assertEquals( cmd.getOptionValue( 'b' ), ""value"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,114,// GNU
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,115,options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,116,options.addOption( OptionBuilder.hasOptionalArg().create( 'a' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,117,options.addOption( OptionBuilder.hasArg().create( 'b' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,118,"args = new String[] { ""-a"", ""-b"", ""value"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,120,parser = new GnuParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,122,"cmd = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,123,"assertEquals( cmd.getOptionValue( 'b' ), ""value"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,126,public void test12210() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,128,// create the main options object which will handle the first parameter
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,129,Options mainOptions = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,130,// There can be 2 main exclusive options:  -exec|-rep
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,132,"// Therefore, place them in an option group"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,134,"String[] argv = new String[] { ""-exec"", ""-exec_opt1"", ""-exec_opt2"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,135,OptionGroup grp = new OptionGroup();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,137,"grp.addOption(new Option(""exec"",false,""description for this option""));"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,139,"grp.addOption(new Option(""rep"",false,""description for this option""));"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,141,mainOptions.addOptionGroup(grp);
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,143,"// for the exec option, there are 2 options..."
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,144,Options execOptions = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,145,"execOptions.addOption(""exec_opt1"", false, "" desc"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,146,"execOptions.addOption(""exec_opt2"", false, "" desc"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,148,"// similarly, for rep there are 2 options..."
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,149,Options repOptions = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,150,"repOptions.addOption(""repopto"", false, ""desc"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,151,"repOptions.addOption(""repoptt"", false, ""desc"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,153,// create the parser
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,154,GnuParser parser = new GnuParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,156,"// finally, parse the arguments:"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,158,// first parse the main options to see what the user has specified
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,159,// We set stopAtNonOption to true so it does not touch the remaining
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,160,// options
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,161,"CommandLine cmd = parser.parse(mainOptions,argv,true);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,162,// get the remaining options...
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,163,argv = cmd.getArgs();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,165,"if(cmd.hasOption(""exec""))"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,167,"cmd = parser.parse(execOptions,argv,false);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,168,// process the exec_op1 and exec_opt2...
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,169,"assertTrue( cmd.hasOption(""exec_opt1"") );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,170,"assertTrue( cmd.hasOption(""exec_opt2"") );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,172,"else if(cmd.hasOption(""rep""))"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,174,"cmd = parser.parse(repOptions,argv,false);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,175,// process the rep_op1 and rep_opt2...
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,177,else {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,178,"fail( ""exec option not found"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,182,public void test13425() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,184,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,185,"Option oldpass = OptionBuilder.withLongOpt( ""old-password"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,186,".withDescription( ""Use this option to specify the old password"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,187,.hasArg()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,188,.create( 'o' );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,189,"Option newpass = OptionBuilder.withLongOpt( ""new-password"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,190,".withDescription( ""Use this option to specify the new password"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,191,.hasArg()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,192,.create( 'n' );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,194,String[] args = {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,195,"""-o"","
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,196,"""-n"","
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,197,"""newpassword"""
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,200,options.addOption( oldpass );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,201,options.addOption( newpass );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,203,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,205,try
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,207,"parser.parse( options, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,209,// catch the exception and leave the method
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,210,catch( Exception exp )
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,212,assertTrue( exp != null );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,213,return;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,215,"fail( ""MissingArgumentException not caught."" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,218,public void test13666() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,220,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,221,"Option dir = OptionBuilder.withDescription( ""dir"" ).hasArg().create( 'd' );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,222,options.addOption( dir );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,224,final PrintStream oldSystemOut = System.out;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,225,try
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,227,final ByteArrayOutputStream bytes = new ByteArrayOutputStream();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,228,final PrintStream print = new PrintStream(bytes);
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,230,// capture this platform's eol symbol
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,231,print.println();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,232,final String eol = bytes.toString();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,233,bytes.reset();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,235,System.setOut(new PrintStream(bytes));
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,237,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,238,"formatter.printHelp( ""dir"", options );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,240,"assertEquals(""usage: dir""+eol+"" -d <arg>   dir""+eol,bytes.toString());"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,242,finally
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,244,System.setOut(oldSystemOut);
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,248,public void test13935() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,250,OptionGroup directions = new OptionGroup();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,252,"Option left = new Option( ""l"", ""left"", false, ""go left"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,253,"Option right = new Option( ""r"", ""right"", false, ""go right"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,254,"Option straight = new Option( ""s"", ""straight"", false, ""go straight"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,255,"Option forward = new Option( ""f"", ""forward"", false, ""go forward"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,256,forward.setRequired( true );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,258,directions.addOption( left );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,259,directions.addOption( right );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,260,directions.setRequired( true );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,262,Options opts = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,263,opts.addOptionGroup( directions );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,264,opts.addOption( straight );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,266,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,267,boolean exception = false;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,269,String[] args = new String[] {  };
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,270,try
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,272,"CommandLine line = parser.parse(opts, args);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,274,catch (ParseException exp)
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,276,exception = true;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,279,if (!exception)
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,281,"fail(""Expected exception not caught."");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,284,exception = false;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,286,"args = new String[] { ""-s"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,287,try
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,289,"CommandLine line = parser.parse(opts, args);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,291,catch (ParseException exp)
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,293,exception = true;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,296,if (!exception)
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,298,"fail(""Expected exception not caught."");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,301,exception = false;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,303,"args = new String[] { ""-s"", ""-l"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,304,try
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,306,"parser.parse(opts, args);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,308,catch (ParseException exp)
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,310,"fail(""Unexpected exception: "" + exp.getClass().getName() + "":"" + exp.getMessage());"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,313,opts.addOption( forward );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,314,"args = new String[] { ""-s"", ""-l"", ""-f"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,315,try
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,317,"parser.parse(opts, args);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,319,catch (ParseException exp)
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,321,"fail(""Unexpected exception: "" + exp.getClass().getName() + "":"" + exp.getMessage());"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,325,public void test14786() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,327,"Option o = OptionBuilder.isRequired().withDescription(""test"").create(""test"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,328,Options opts = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,329,opts.addOption(o);
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,330,opts.addOption(o);
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,332,CommandLineParser parser = new GnuParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,334,"String[] args = new String[] { ""-test"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,336,"CommandLine line = parser.parse( opts, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,337,"assertTrue( line.hasOption( ""test"" ) );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,340,public void test15046() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,342,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,343,"String[] CLI_ARGS = new String[] {""-z"", ""c""};"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,345,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,346,"options.addOption(new Option(""z"", ""timezone"", true, ""affected option""));"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,348,"parser.parse(options, CLI_ARGS);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,350,//now add conflicting option
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,351,"options.addOption(""c"", ""conflict"", true, ""conflict option"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,352,"CommandLine line = parser.parse(options, CLI_ARGS);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,353,"assertEquals( line.getOptionValue('z'), ""c"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,354,"assertTrue( !line.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,357,public void test15648() throws Exception
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,359,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,360,"final String[] args = new String[] { ""-m"", ""\""Two Words\"""" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,361,"Option m = OptionBuilder.hasArgs().create(""m"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,362,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,363,options.addOption( m );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,364,"CommandLine line = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,365,"assertEquals( ""Two Words"", line.getOptionValue( ""m"" ) );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,368,public void test31148() throws ParseException
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,370,"Option multiArgOption = new Option(""o"",""option with multiple args"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,371,multiArgOption.setArgs(1);
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,373,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,374,options.addOption(multiArgOption);
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,376,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,377,String[] args = new String[]{};
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,378,Properties props = new Properties();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,379,"props.setProperty(""o"",""ovalue"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,380,"CommandLine cl = parser.parse(options,args,props);"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,382,assertTrue(cl.hasOption('o'));
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,383,"assertEquals(""ovalue"",cl.getOptionValue('o'));"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,20,import java.util.Properties;
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,25,* @author Emmanuel Bourg
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,26,"* @version $Revision$, $Date$"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,28,public class CommandLineTest extends TestCase
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,30,public void testGetOptionProperties() throws Exception
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,32,"String[] args = new String[] { ""-Dparam1=value1"", ""-Dparam2=value2"", ""-Dparam3"", ""-Dparam4=value4"", ""-D"", ""--property"", ""foo=bar"" };"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,34,Options options = new Options();
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,35,options.addOption(OptionBuilder.withValueSeparator().hasOptionalArgs(2).create('D'));
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,36,"options.addOption(OptionBuilder.withValueSeparator().hasArgs(2).withLongOpt(""property"").create());"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,38,Parser parser = new GnuParser();
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,39,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,41,"Properties props = cl.getOptionProperties(""D"");"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,42,"assertNotNull(""null properties"", props);"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,43,"assertEquals(""number of properties in "" + props, 4, props.size());"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,44,"assertEquals(""property 1"", ""value1"", props.getProperty(""param1""));"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,45,"assertEquals(""property 2"", ""value2"", props.getProperty(""param2""));"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,46,"assertEquals(""property 3"", ""true"", props.getProperty(""param3""));"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,47,"assertEquals(""property 4"", ""value4"", props.getProperty(""param4""));"
True,src/test/org/apache/commons/cli/CommandLineTest.java,src/test/org/apache/commons/cli/CommandLineTest.java,49,"assertEquals(""property with long format"", ""bar"", cl.getOptionProperties(""property"").getProperty(""foo""));"
False,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,19,mport org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,18,package org.apache.commons.cli;
False,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,22, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,24,ublic abstract class ParentTestCase extends OptionTestCase {
False,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,25,ublic abstract void testProcessParent() throws OptionException;
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,20,public class GnuParserTest extends ParserTestCase
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,22,public void setUp()
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,24,super.setUp();
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli/GnuParserTest.java,25,parser = new GnuParser();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,20,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,21,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,22,import java.io.StringWriter;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,23,import java.util.Comparator;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,28,* Test case for the HelpFormatter class
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,30,* @author Slawek Zachcial
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,31,* @author John Keyes ( john at integralsource.com )
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,32,* @author brianegge
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,34,public class HelpFormatterTest extends TestCase
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,36,"private static final String EOL = System.getProperty(""line.separator"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,38,public void testFindWrapPos() throws Exception
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,40,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,42,"String text = ""This is a test."";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,43,//text width should be max 8; the wrap position is 7
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,44,"assertEquals(""wrap position"", 7, hf.findWrapPos(text, 8, 0));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,45,//starting from 8 must give -1 - the wrap pos is after end
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,46,"assertEquals(""wrap position 2"", -1, hf.findWrapPos(text, 8, 8));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,47,//if there is no a good position before width to make a wrapping look for the next one
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,48,"text = ""aaaa aa"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,49,"assertEquals(""wrap position 3"", 4, hf.findWrapPos(text, 3, 0));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,52,public void testPrintWrapped() throws Exception
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,54,StringBuffer sb = new StringBuffer();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,55,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,57,"String text = ""This is a test."";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,59,"String expected = ""This is a"" + hf.getNewLine() + ""test."";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,60,"hf.renderWrappedText(sb, 12, 0, text);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,61,"assertEquals(""single line text"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,63,sb.setLength(0);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,64,"expected = ""This is a"" + hf.getNewLine() + ""    test."";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,65,"hf.renderWrappedText(sb, 12, 4, text);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,66,"assertEquals(""single line padded text"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,68,"text = ""  -p,--period <PERIOD>  PERIOD is time duration of form "" +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,69,"""DATE[-DATE] where DATE has form YYYY[MM[DD]]"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,71,sb.setLength(0);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,72,"expected = ""  -p,--period <PERIOD>  PERIOD is time duration of"" +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,73,hf.getNewLine() +
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,74,"""                        form DATE[-DATE] where DATE"" +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,75,hf.getNewLine() +
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,76,"""                        has form YYYY[MM[DD]]"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,77,"hf.renderWrappedText(sb, 53, 24, text);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,78,"assertEquals(""single line padded text 2"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,80,"text = ""aaaa aaaa aaaa"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,81,"""aaaaaa"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,82,"""aaaaa"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,84,expected = text;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,85,sb.setLength(0);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,86,"hf.renderWrappedText(sb, 16, 0, text);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,87,"assertEquals(""multi line text"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,89,"expected = ""aaaa aaaa aaaa"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,90,"""    aaaaaa"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,91,"""    aaaaa"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,92,sb.setLength(0);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,93,"hf.renderWrappedText(sb, 16, 4, text);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,94,"assertEquals(""multi-line padded text"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,97,public void testPrintOptions() throws Exception
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,99,StringBuffer sb = new StringBuffer();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,100,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,101,final int leftPad = 1;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,102,final int descPad = 3;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,103,final String lpad = hf.createPadding(leftPad);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,104,final String dpad = hf.createPadding(descPad);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,105,Options options = null;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,106,String expected = null;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,108,"options = new Options().addOption(""a"", false, ""aaaa aaaa aaaa aaaa aaaa"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,109,"expected = lpad + ""-a"" + dpad + ""aaaa aaaa aaaa aaaa aaaa"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,110,"hf.renderOptions(sb, 60, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,111,"assertEquals(""simple non-wrapped option"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,113,"int nextLineTabStop = leftPad + descPad + ""-a"".length();"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,114,"expected = lpad + ""-a"" + dpad + ""aaaa aaaa aaaa"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,115,"hf.createPadding(nextLineTabStop) + ""aaaa aaaa"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,116,sb.setLength(0);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,117,"hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,118,"assertEquals(""simple wrapped option"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,121,"options = new Options().addOption(""a"", ""aaa"", false, ""dddd dddd dddd dddd"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,122,"expected = lpad + ""-a,--aaa"" + dpad + ""dddd dddd dddd dddd"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,123,sb.setLength(0);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,124,"hf.renderOptions(sb, 60, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,125,"assertEquals(""long non-wrapped option"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,127,"nextLineTabStop = leftPad + descPad + ""-a,--aaa"".length();"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,128,"expected = lpad + ""-a,--aaa"" + dpad + ""dddd dddd"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,129,"hf.createPadding(nextLineTabStop) + ""dddd dddd"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,130,sb.setLength(0);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,131,"hf.renderOptions(sb, 25, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,132,"assertEquals(""long wrapped option"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,134,options = new Options().
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,135,"addOption(""a"", ""aaa"", false, ""dddd dddd dddd dddd"")."
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,136,"addOption(""b"", false, ""feeee eeee eeee eeee"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,137,"expected = lpad + ""-a,--aaa"" + dpad + ""dddd dddd"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,138,"hf.createPadding(nextLineTabStop) + ""dddd dddd"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,139,"lpad + ""-b      "" + dpad + ""feeee eeee"" + hf.getNewLine() +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,140,"hf.createPadding(nextLineTabStop) + ""eeee eeee"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,141,sb.setLength(0);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,142,"hf.renderOptions(sb, 25, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,143,"assertEquals(""multiple wrapped options"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,146,public void testPrintHelpWithEmptySyntax()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,148,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,149,try
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,151,"formatter.printHelp(null, new Options());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,152,"fail(""null command line syntax should be rejected"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,154,catch (IllegalArgumentException e)
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,156,// expected
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,159,try
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,161,"formatter.printHelp("""", new Options());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,162,"fail(""empty command line syntax should be rejected"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,164,catch (IllegalArgumentException e)
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,166,// expected
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,170,public void testAutomaticUsage() throws Exception
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,172,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,173,Options options = null;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,174,"String expected = ""usage: app [-a]"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,175,ByteArrayOutputStream out = new ByteArrayOutputStream();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,176,PrintWriter pw = new PrintWriter(out);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,178,"options = new Options().addOption(""a"", false, ""aaaa aaaa aaaa aaaa aaaa"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,179,"hf.printUsage(pw, 60, ""app"", options);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,180,pw.flush();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,181,"assertEquals(""simple auto usage"", expected, out.toString().trim());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,182,out.reset();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,184,"expected = ""usage: app [-a] [-b]"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,185,"options = new Options().addOption(""a"", false, ""aaaa aaaa aaaa aaaa aaaa"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,186,".addOption(""b"", false, ""bbb"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,187,"hf.printUsage(pw, 60, ""app"", options);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,188,pw.flush();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,189,"assertEquals(""simple auto usage"", expected, out.toString().trim());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,190,out.reset();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,193,// This test ensures the options are properly sorted
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,194,// See https://issues.apache.org/jira/browse/CLI-131
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,195,public void testPrintUsage()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,197,"Option optionA = new Option(""a"", ""first"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,198,"Option optionB = new Option(""b"", ""second"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,199,"Option optionC = new Option(""c"", ""third"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,200,Options opts = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,201,opts.addOption(optionA);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,202,opts.addOption(optionB);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,203,opts.addOption(optionC);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,204,HelpFormatter helpFormatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,205,ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,206,PrintWriter printWriter = new PrintWriter(bytesOut);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,207,"helpFormatter.printUsage(printWriter, 80, ""app"", opts);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,208,printWriter.close();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,209,"assertEquals(""usage: app [-a] [-b] [-c]"" + EOL, bytesOut.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,212,// uses the test for CLI-131 to implement CLI-155
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,213,public void testPrintSortedUsage()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,215,Options opts = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,216,"opts.addOption(new Option(""a"", ""first""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,217,"opts.addOption(new Option(""b"", ""second""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,218,"opts.addOption(new Option(""c"", ""third""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,220,HelpFormatter helpFormatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,221,helpFormatter.setOptionComparator(new Comparator()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,223,"public int compare(Object o1, Object o2)"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,225,// reverses the fuctionality of the default comparator
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,226,Option opt1 = (Option) o1;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,227,Option opt2 = (Option) o2;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,228,return opt2.getKey().compareToIgnoreCase(opt1.getKey());
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,232,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,233,"helpFormatter.printUsage(new PrintWriter(out), 80, ""app"", opts);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,235,"assertEquals(""usage: app [-c] [-b] [-a]"" + EOL, out.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,238,public void testPrintSortedUsageWithNullComparator()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,240,Options opts = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,241,"opts.addOption(new Option(""a"", ""first""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,242,"opts.addOption(new Option(""b"", ""second""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,243,"opts.addOption(new Option(""c"", ""third""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,245,HelpFormatter helpFormatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,246,helpFormatter.setOptionComparator(null);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,248,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,249,"helpFormatter.printUsage(new PrintWriter(out), 80, ""app"", opts);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,251,"assertEquals(""usage: app [-a] [-b] [-c]"" + EOL, out.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,254,public void testPrintOptionGroupUsage()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,256,OptionGroup group = new OptionGroup();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,257,"group.addOption(OptionBuilder.create(""a""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,258,"group.addOption(OptionBuilder.create(""b""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,259,"group.addOption(OptionBuilder.create(""c""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,261,Options options = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,262,options.addOptionGroup(group);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,264,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,266,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,267,"formatter.printUsage(new PrintWriter(out), 80, ""app"", options);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,269,"assertEquals(""usage: app [-a | -b | -c]"" + EOL, out.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,272,public void testPrintRequiredOptionGroupUsage()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,274,OptionGroup group = new OptionGroup();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,275,"group.addOption(OptionBuilder.create(""a""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,276,"group.addOption(OptionBuilder.create(""b""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,277,"group.addOption(OptionBuilder.create(""c""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,278,group.setRequired(true);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,280,Options options = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,281,options.addOptionGroup(group);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,283,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,285,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,286,"formatter.printUsage(new PrintWriter(out), 80, ""app"", options);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,288,"assertEquals(""usage: app -a | -b | -c"" + EOL, out.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,291,public void testPrintOptionWithEmptyArgNameUsage()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,293,"Option option = new Option(""f"", true, null);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,294,"option.setArgName("""");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,295,option.setRequired(true);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,297,Options options = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,298,options.addOption(option);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,300,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,302,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,303,"formatter.printUsage(new PrintWriter(out), 80, ""app"", options);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,305,"assertEquals(""usage: app -f"" + EOL, out.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,308,public void testRtrim()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,310,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,312,"assertEquals(null, formatter.rtrim(null));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,313,"assertEquals("""", formatter.rtrim(""""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,314,"assertEquals(""  foo"", formatter.rtrim(""  foo  ""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,317,public void testAccessors()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,319,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,321,"formatter.setArgName(""argname"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,322,"assertEquals(""arg name"", ""argname"", formatter.getArgName());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,324,formatter.setDescPadding(3);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,325,"assertEquals(""desc padding"", 3, formatter.getDescPadding());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,327,formatter.setLeftPadding(7);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,328,"assertEquals(""left padding"", 7, formatter.getLeftPadding());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,330,"formatter.setLongOptPrefix(""~~"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,331,"assertEquals(""long opt prefix"", ""~~"", formatter.getLongOptPrefix());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,333,"formatter.setNewLine(""\n"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,334,"assertEquals(""new line"", ""\n"", formatter.getNewLine());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,336,"formatter.setOptPrefix(""~"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,337,"assertEquals(""opt prefix"", ""~"", formatter.getOptPrefix());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,339,"formatter.setSyntaxPrefix(""-> "");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,340,"assertEquals(""syntax prefix"", ""-> "", formatter.getSyntaxPrefix());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,342,formatter.setWidth(80);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,343,"assertEquals(""width"", 80, formatter.getWidth());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,346,public void testHeaderStartingWithLineSeparator()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,348,// related to Bugzilla #21215
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,349,Options options = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,350,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,351,"String header = EOL + ""Header"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,352,"String footer = ""Footer"";"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,353,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,354,"formatter.printHelp(new PrintWriter(out), 80, ""foobar"", header, options, 2, 2, footer, true);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,355,assertEquals(
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,356,"""usage: foobar"" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,357,""""" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,358,"""Header"" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,359,""""" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,360,"""Footer"" + EOL"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,361,", out.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,364,public void testOptionWithoutShortFormat()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,366,// related to Bugzilla #19383 (CLI-67)
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,367,Options options = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,368,"options.addOption(new Option(""a"", ""aaa"", false, ""aaaaaaa""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,369,"options.addOption(new Option(null, ""bbb"", false, ""bbbbbbb""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,370,"options.addOption(new Option(""c"", null, false, ""ccccccc""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,372,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,373,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,374,"formatter.printHelp(new PrintWriter(out), 80, ""foobar"", """", options, 2, 2, """", true);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,375,assertEquals(
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,376,"""usage: foobar [-a] [--bbb] [-c]"" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,377,"""  -a,--aaa  aaaaaaa"" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,378,"""     --bbb  bbbbbbb"" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,379,"""  -c        ccccccc"" + EOL"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,380,", out.toString());"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,384,public void testOptionWithoutShortFormat2()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,386,// related to Bugzilla #27635 (CLI-26)
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,387,"Option help = new Option(""h"", ""help"", false, ""print this message"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,388,"Option version = new Option(""v"", ""version"", false, ""print version information"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,389,"Option newRun = new Option(""n"", ""new"", false, ""Create NLT cache entries only for new items"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,390,"Option trackerRun = new Option(""t"", ""tracker"", false, ""Create NLT cache entries only for tracker items"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,392,"Option timeLimit = OptionBuilder.withLongOpt(""limit"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,393,.hasArg()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,394,.withValueSeparator()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,395,".withDescription(""Set time limit for execution, in mintues"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,396,".create(""l"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,398,"Option age = OptionBuilder.withLongOpt(""age"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,399,.hasArg()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,400,.withValueSeparator()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,401,".withDescription(""Age (in days) of cache item before being recomputed"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,402,".create(""a"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,404,"Option server = OptionBuilder.withLongOpt(""server"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,405,.hasArg()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,406,.withValueSeparator()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,407,".withDescription(""The NLT server address"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,408,".create(""s"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,410,"Option numResults = OptionBuilder.withLongOpt(""results"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,411,.hasArg()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,412,.withValueSeparator()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,413,".withDescription(""Number of results per item"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,414,".create(""r"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,416,"Option configFile = OptionBuilder.withLongOpt(""config"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,417,.hasArg()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,418,.withValueSeparator()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,419,".withDescription(""Use the specified configuration file"")"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,420,.create();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,422,Options mOptions = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,423,mOptions.addOption(help);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,424,mOptions.addOption(version);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,425,mOptions.addOption(newRun);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,426,mOptions.addOption(trackerRun);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,427,mOptions.addOption(timeLimit);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,428,mOptions.addOption(age);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,429,mOptions.addOption(server);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,430,mOptions.addOption(numResults);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,431,mOptions.addOption(configFile);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,433,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,434,"final String EOL = System.getProperty(""line.separator"");"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,435,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,436,"formatter.printHelp(new PrintWriter(out),80,""commandline"",""header"",mOptions,2,2,""footer"",true);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,437,assertEquals(
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,438,"""usage: commandline [-a <arg>] [--config <arg>] [-h] [-l <arg>] [-n] [-r <arg>]"" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,439,"""       [-s <arg>] [-t] [-v]"" + EOL +"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,440,"""header""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,441,"""  -a,--age <arg>      Age (in days) of cache item before being recomputed""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,442,"""     --config <arg>   Use the specified configuration file""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,443,"""  -h,--help           print this message""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,444,"""  -l,--limit <arg>    Set time limit for execution, in mintues""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,445,"""  -n,--new            Create NLT cache entries only for new items""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,446,"""  -r,--results <arg>  Number of results per item""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,447,"""  -s,--server <arg>   The NLT server address""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,448,"""  -t,--tracker        Create NLT cache entries only for tracker items""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,449,"""  -v,--version        print version information""+EOL+"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,450,"""footer""+EOL"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,451,",out.toString());"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,22,public class OptionBuilderTest extends TestCase {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,24,public void testCompleteOption( ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,25,"Option simple = OptionBuilder.withLongOpt( ""simple option"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,26,.hasArg( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,27,.isRequired( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,28,.hasArgs( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,29,.withType( new Float( 10 ) )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,30,".withDescription( ""this is a simple option"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,31,.create( 's' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,33,"assertEquals( ""s"", simple.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,34,"assertEquals( ""simple option"", simple.getLongOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,35,"assertEquals( ""this is a simple option"", simple.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,36,"assertEquals( simple.getType().getClass(), Float.class );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,37,assertTrue( simple.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,38,assertTrue( simple.isRequired() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,39,assertTrue( simple.hasArgs() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,42,public void testTwoCompleteOptions( ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,43,"Option simple = OptionBuilder.withLongOpt( ""simple option"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,44,.hasArg( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,45,.isRequired( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,46,.hasArgs( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,47,.withType( new Float( 10 ) )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,48,".withDescription( ""this is a simple option"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,49,.create( 's' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,51,"assertEquals( ""s"", simple.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,52,"assertEquals( ""simple option"", simple.getLongOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,53,"assertEquals( ""this is a simple option"", simple.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,54,"assertEquals( simple.getType().getClass(), Float.class );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,55,assertTrue( simple.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,56,assertTrue( simple.isRequired() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,57,assertTrue( simple.hasArgs() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,59,"simple = OptionBuilder.withLongOpt( ""dimple option"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,60,.hasArg( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,61,".withDescription( ""this is a dimple option"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,62,.create( 'd' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,64,"assertEquals( ""d"", simple.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,65,"assertEquals( ""dimple option"", simple.getLongOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,66,"assertEquals( ""this is a dimple option"", simple.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,67,assertNull( simple.getType() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,68,assertTrue( simple.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,69,assertTrue( !simple.isRequired() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,70,assertTrue( !simple.hasArgs() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,73,public void testBaseOptionCharOpt() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,74,"Option base = OptionBuilder.withDescription( ""option description"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,75,.create( 'o' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,77,"assertEquals( ""o"", base.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,78,"assertEquals( ""option description"", base.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,79,assertTrue( !base.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,82,public void testBaseOptionStringOpt() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,83,"Option base = OptionBuilder.withDescription( ""option description"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,84,".create( ""o"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,86,"assertEquals( ""o"", base.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,87,"assertEquals( ""option description"", base.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,88,assertTrue( !base.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,91,public void testSpecialOptChars() throws Exception
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,94,"Option opt1 = OptionBuilder.withDescription(""help options"").create('?');"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,95,"assertEquals(""?"", opt1.getOpt());"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,98,"Option opt2 = OptionBuilder.withDescription(""read from stdin"").create('@');"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,99,"assertEquals(""@"", opt2.getOpt());"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,102,public void testOptionArgNumbers()
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,104,"Option opt = OptionBuilder.withDescription( ""option description"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,105,.hasArgs( 2 )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,106,.create( 'o' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,107,"assertEquals( 2, opt.getArgs() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,110,public void testIllegalOptions() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,111,// bad single character option
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,112,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,113,"OptionBuilder.withDescription( ""option description"" ).create( '""' );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,114,"fail( ""IllegalArgumentException not caught"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,116,catch( IllegalArgumentException exp ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,117,// success
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,120,// bad character in option string
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,121,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,122,"Option opt = OptionBuilder.create( ""opt`"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,123,"fail( ""IllegalArgumentException not caught"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,125,catch( IllegalArgumentException exp ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,126,// success
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,129,// valid option
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,130,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,131,"Option opt = OptionBuilder.create( ""opt"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,132,// success
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,134,catch( IllegalArgumentException exp ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,135,"fail( ""IllegalArgumentException caught"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,139,public void testCreateIncompleteOption() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,140,try
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,142,OptionBuilder.hasArg().create();
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,143,"fail(""Incomplete option should be rejected"");"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,145,catch (IllegalArgumentException e)
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,147,// expected
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,149,// implicitly reset the builder
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,150,"OptionBuilder.create( ""opt"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,154,public void testBuilderIsResettedAlways() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,155,try
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,157,"OptionBuilder.withDescription(""JUnit"").create('""');"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,158,"fail(""IllegalArgumentException expected"");"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,160,catch (IllegalArgumentException e)
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,162,// expected
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,164,"assertNull(""we inherited a description"", OptionBuilder.create('x').getDescription());"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,166,try
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,168,"OptionBuilder.withDescription(""JUnit"").create();"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,169,"fail(""IllegalArgumentException expected"");"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,171,catch (IllegalArgumentException e)
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,173,// expected
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,175,"assertNull(""we inherited a description"", OptionBuilder.create('x').getDescription());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,23,* @author John Keyes (john at integralsource.com)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,24,* @version $Revision$
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,26,public class OptionGroupTest extends TestCase
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,28,private Options _options = null;
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,29,private CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,31,public void setUp()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,33,"Option file = new Option( ""f"", ""file"", false, ""file to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,34,"Option dir = new Option( ""d"", ""directory"", false, ""directory to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,35,OptionGroup group = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,36,group.addOption( file );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,37,group.addOption( dir );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,38,_options = new Options().addOptionGroup( group );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,40,"Option section = new Option( ""s"", ""section"", false, ""section to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,41,"Option chapter = new Option( ""c"", ""chapter"", false, ""chapter to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,42,OptionGroup group2 = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,43,group2.addOption( section );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,44,group2.addOption( chapter );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,46,_options.addOptionGroup( group2 );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,48,"Option importOpt = new Option( null, ""import"", false, ""section to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,49,"Option exportOpt = new Option( null, ""export"", false, ""chapter to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,50,OptionGroup group3 = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,51,group3.addOption( importOpt );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,52,group3.addOption( exportOpt );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,53,_options.addOptionGroup( group3 );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,55,"_options.addOption( ""r"", ""revision"", false, ""revision number"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,58,public void testSingleOptionFromGroup() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,60,"String[] args = new String[] { ""-f"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,62,"CommandLine cl = parser.parse( _options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,64,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,65,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,66,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,67,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,68,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,69,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,72,public void testSingleOption() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,74,"String[] args = new String[] { ""-r"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,76,"CommandLine cl = parser.parse( _options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,78,"assertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,79,"assertTrue( ""Confirm -f is NOT set"", !cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,80,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,81,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,82,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,83,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,86,public void testTwoValidOptions() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,88,"String[] args = new String[] { ""-r"", ""-f"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,90,"CommandLine cl = parser.parse( _options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,92,"assertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,93,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,94,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,95,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,96,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,97,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,100,public void testSingleLongOption() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,102,"String[] args = new String[] { ""--file"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,104,"CommandLine cl = parser.parse( _options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,106,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,107,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,108,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,109,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,110,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,111,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,114,public void testTwoValidLongOptions() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,116,"String[] args = new String[] { ""--revision"", ""--file"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,118,"CommandLine cl = parser.parse( _options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,120,"assertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,121,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,122,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,123,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,124,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,125,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,128,public void testNoOptionsExtraArgs() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,130,"String[] args = new String[] { ""arg1"", ""arg2"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,132,"CommandLine cl = parser.parse( _options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,134,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,135,"assertTrue( ""Confirm -f is NOT set"", !cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,136,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,137,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,138,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,139,"assertTrue( ""Confirm TWO extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,142,public void testTwoOptionsFromGroup() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,144,"String[] args = new String[] { ""-f"", ""-d"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,146,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,148,"parser.parse( _options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,149,"fail( ""two arguments from group not allowed"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,151,catch (AlreadySelectedException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,153,"assertNotNull(""null option group"", e.getOptionGroup());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,154,"assertEquals(""selected option"", ""f"", e.getOptionGroup().getSelected());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,155,"assertEquals(""option"", ""d"", e.getOption().getOpt());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,159,public void testTwoLongOptionsFromGroup() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,161,"String[] args = new String[] { ""--file"", ""--directory"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,163,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,165,"parser.parse(_options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,166,"fail( ""two arguments from group not allowed"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,168,catch (AlreadySelectedException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,170,"assertNotNull(""null option group"", e.getOptionGroup());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,171,"assertEquals(""selected option"", ""f"", e.getOptionGroup().getSelected());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,172,"assertEquals(""option"", ""d"", e.getOption().getOpt());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,176,public void testTwoOptionsFromDifferentGroup() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,178,"String[] args = new String[] { ""-f"", ""-s"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,180,"CommandLine cl = parser.parse( _options, args);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,181,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,182,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,183,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,184,"assertTrue( ""Confirm -s is set"", cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,185,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,186,"assertTrue( ""Confirm NO extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,189,public void testValidLongOnlyOptions() throws Exception
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,191,"CommandLine cl1 = parser.parse(_options, new String[]{""--export""});"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,192,"assertTrue(""Confirm --export is set"", cl1.hasOption(""export""));"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,194,"CommandLine cl2 = parser.parse(_options, new String[]{""--import""});"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,195,"assertTrue(""Confirm --import is set"", cl2.hasOption(""import""));"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,198,public void testToString()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,200,OptionGroup group1 = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,201,"group1.addOption(new Option(null, ""foo"", false, ""Foo""));"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,202,"group1.addOption(new Option(null, ""bar"", false, ""Bar""));"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,204,"if (!""[--bar Bar, --foo Foo]"".equals(group1.toString())) {"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,205,"assertEquals(""[--foo Foo, --bar Bar]"", group1.toString());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,208,OptionGroup group2 = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,209,"group2.addOption(new Option(""f"", ""foo"", false, ""Foo""));"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,210,"group2.addOption(new Option(""b"", ""bar"", false, ""Bar""));"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,212,"if (!""[-b Bar, -f Foo]"".equals(group2.toString())) {"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,213,"assertEquals(""[-f Foo, -b Bar]"", group2.toString());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,217,public void testGetNames()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,219,OptionGroup group = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,220,group.addOption(OptionBuilder.create('a'));
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,221,group.addOption(OptionBuilder.create('b'));
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,223,"assertNotNull(""null names"", group.getNames());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,224,"assertEquals(2, group.getNames().size());"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,225,"assertTrue(group.getNames().contains(""a""));"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,226,"assertTrue(group.getNames().contains(""b""));"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,23,* @author brianegge
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,25,public class OptionTest extends TestCase
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,27,private static class TestOption extends Option
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,29,"public TestOption(String opt, boolean hasArg, String description) throws IllegalArgumentException"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,31,"super(opt, hasArg, description);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,34,public boolean addValue(String value)
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,36,addValueForProcessing(value);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,37,return true;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,41,public void testClear()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,43,"TestOption option = new TestOption(""x"", true, """");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,44,"assertEquals(0, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,45,"option.addValue(""a"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,46,"assertEquals(1, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,47,option.clearValues();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,48,"assertEquals(0, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,51,// See http://issues.apache.org/jira/browse/CLI-21
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,52,public void testClone() throws CloneNotSupportedException
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,54,"TestOption a = new TestOption(""a"", true, """");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,55,TestOption b = (TestOption) a.clone();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,56,"assertEquals(a, b);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,57,"assertNotSame(a, b);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,58,"a.setDescription(""a"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,59,"assertEquals("""", b.getDescription());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,60,b.setArgs(2);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,61,"b.addValue(""b1"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,62,"b.addValue(""b2"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,63,"assertEquals(1, a.getArgs());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,64,"assertEquals(0, a.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,65,"assertEquals(2, b.getValues().length);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,68,private static class DefaultOption extends Option
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,70,private final String defaultValue;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,72,"public DefaultOption(String opt, String description, String defaultValue) throws IllegalArgumentException"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,74,"super(opt, true, description);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,75,this.defaultValue = defaultValue;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,78,public String getValue()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,80,return super.getValue() != null ? super.getValue() : defaultValue;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,84,public void testSubclass() throws CloneNotSupportedException
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,86,"Option option = new DefaultOption(""f"", ""file"", ""myfile.txt"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,87,Option clone = (Option) option.clone();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,88,"assertEquals(""myfile.txt"", clone.getValue());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,89,"assertEquals(DefaultOption.class, clone.getClass());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,92,public void testHasArgName()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,94,"Option option = new Option(""f"", null);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,96,option.setArgName(null);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,97,assertFalse(option.hasArgName());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,99,"option.setArgName("""");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,100,assertFalse(option.hasArgName());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,102,"option.setArgName(""file"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,103,assertTrue(option.hasArgName());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,106,public void testHasArgs()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,108,"Option option = new Option(""f"", null);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,110,option.setArgs(0);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,111,assertFalse(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,113,option.setArgs(1);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,114,assertFalse(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,116,option.setArgs(10);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,117,assertTrue(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,119,option.setArgs(Option.UNLIMITED_VALUES);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,120,assertTrue(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,122,option.setArgs(Option.UNINITIALIZED);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,123,assertFalse(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,126,public void testGetValue()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,128,"Option option = new Option(""f"", null);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,129,option.setArgs(Option.UNLIMITED_VALUES);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,131,"assertEquals(""default"", option.getValue(""default""));"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,132,"assertEquals(null, option.getValue(0));"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,134,"option.addValueForProcessing(""foo"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,136,"assertEquals(""foo"", option.getValue());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,137,"assertEquals(""foo"", option.getValue(0));"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,138,"assertEquals(""foo"", option.getValue(""default""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,20,import java.util.ArrayList;
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,21,import java.util.Collection;
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,23,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,26,* @author Rob Oxspring roxspring@apache.org
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,27,* @version $Revision$
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,29,public class OptionsTest extends TestCase
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,31,public void testSimple()
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,33,Options opts = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,35,"opts.addOption(""a"", false, ""toggle -a"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,36,"opts.addOption(""b"", true, ""toggle -b"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,38,"assertTrue(opts.hasOption(""a""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,39,"assertTrue(opts.hasOption(""b""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,42,public void testDuplicateSimple()
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,44,Options opts = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,45,"opts.addOption(""a"", false, ""toggle -a"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,46,"opts.addOption(""a"", true, ""toggle -a*"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,48,"assertEquals(""last one in wins"", ""toggle -a*"", opts.getOption(""a"").getDescription());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,51,public void testLong()
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,53,Options opts = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,55,"opts.addOption(""a"", ""--a"", false, ""toggle -a"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,56,"opts.addOption(""b"", ""--b"", true, ""set -b"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,58,"assertTrue(opts.hasOption(""a""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,59,"assertTrue(opts.hasOption(""b""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,62,public void testDuplicateLong()
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,64,Options opts = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,65,"opts.addOption(""a"", ""--a"", false, ""toggle -a"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,66,"opts.addOption(""a"", ""--a"", false, ""toggle -a*"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,67,"assertEquals(""last one in wins"", ""toggle -a*"", opts.getOption(""a"").getDescription());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,70,public void testHelpOptions()
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,72,"Option longOnly1 = OptionBuilder.withLongOpt(""long-only1"").create();"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,73,"Option longOnly2 = OptionBuilder.withLongOpt(""long-only2"").create();"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,74,"Option shortOnly1 = OptionBuilder.create(""1"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,75,"Option shortOnly2 = OptionBuilder.create(""2"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,76,"Option bothA = OptionBuilder.withLongOpt(""bothA"").create(""a"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,77,"Option bothB = OptionBuilder.withLongOpt(""bothB"").create(""b"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,79,Options options = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,80,options.addOption(longOnly1);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,81,options.addOption(longOnly2);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,82,options.addOption(shortOnly1);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,83,options.addOption(shortOnly2);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,84,options.addOption(bothA);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,85,options.addOption(bothB);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,87,Collection allOptions = new ArrayList();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,88,allOptions.add(longOnly1);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,89,allOptions.add(longOnly2);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,90,allOptions.add(shortOnly1);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,91,allOptions.add(shortOnly2);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,92,allOptions.add(bothA);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,93,allOptions.add(bothB);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,95,Collection helpOptions = options.helpOptions();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,97,"assertTrue(""Everything in all should be in help"", helpOptions.containsAll(allOptions));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,98,"assertTrue(""Everything in help should be in all"", allOptions.containsAll(helpOptions));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,101,public void testMissingOptionException() throws ParseException
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,103,Options options = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,104,"options.addOption(OptionBuilder.isRequired().create(""f""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,105,try
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,107,"new PosixParser().parse(options, new String[0]);"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,108,"fail(""Expected MissingOptionException to be thrown"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,110,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,112,"assertEquals(""Missing required option: f"", e.getMessage());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,116,public void testMissingOptionsException() throws ParseException
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,118,Options options = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,119,"options.addOption(OptionBuilder.isRequired().create(""f""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,120,"options.addOption(OptionBuilder.isRequired().create(""x""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,121,try
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,123,"new PosixParser().parse(options, new String[0]);"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,124,"fail(""Expected MissingOptionException to be thrown"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,126,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,128,"assertEquals(""Missing required options: f, x"", e.getMessage());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,132,public void testToString()
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,134,Options options = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,135,"options.addOption(""f"", ""foo"", true, ""Foo"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,136,"options.addOption(""b"", ""bar"", false, ""Bar"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,138,String s = options.toString();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,139,"assertNotNull(""null string returned"", s);"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,140,"assertTrue(""foo option missing"", s.toLowerCase().indexOf(""foo"") != -1);"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,141,"assertTrue(""bar option missing"", s.toLowerCase().indexOf(""bar"") != -1);"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,144,public void testGetOptionsGroups()
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,146,Options options = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,148,OptionGroup group1 = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,149,group1.addOption(OptionBuilder.create('a'));
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,150,group1.addOption(OptionBuilder.create('b'));
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,152,OptionGroup group2 = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,153,group2.addOption(OptionBuilder.create('x'));
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,154,group2.addOption(OptionBuilder.create('y'));
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,156,options.addOptionGroup(group1);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,157,options.addOptionGroup(group2);
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,159,assertNotNull(options.getOptionGroups());
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,160,"assertEquals(2, options.getOptionGroups().size());"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,23,* @author John Keyes (john at integralsource.com)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,24,* @version $Revision$
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,26,public class ParseRequiredTest extends TestCase
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,28,private Options _options = null;
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,29,private CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,31,public void setUp()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,33,_options = new Options()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,34,".addOption(""a"","
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,35,"""enable-a"","
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,36,"false,"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,37,"""turn [a] on or off"")"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,38,".addOption( OptionBuilder.withLongOpt( ""bfile"" )"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,39,.hasArg()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,40,.isRequired()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,41,".withDescription( ""set the value of [b]"" )"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,42,.create( 'b' ) );
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,45,public void testWithRequiredOption() throws Exception
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,47,"String[] args = new String[] {  ""-b"", ""file"" };"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,49,"CommandLine cl = parser.parse(_options,args);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,51,"assertTrue( ""Confirm -a is NOT set"", !cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,52,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,53,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,54,"assertTrue( ""Confirm NO of extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,57,public void testOptionAndRequiredOption() throws Exception
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,59,"String[] args = new String[] {  ""-a"", ""-b"", ""file"" };"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,61,"CommandLine cl = parser.parse(_options,args);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,63,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,64,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,65,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,66,"assertTrue( ""Confirm NO of extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,69,public void testMissingRequiredOption()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,71,"String[] args = new String[] { ""-a"" };"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,73,try
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,75,"CommandLine cl = parser.parse(_options,args);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,76,"fail( ""exception should have been thrown"" );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,78,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,80,"assertEquals( ""Incorrect exception message"", ""Missing required option: b"", e.getMessage() );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,81,"assertTrue(e.getMissingOptions().contains(""b""));"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,83,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,85,"fail( ""expected to catch MissingOptionException"" );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,89,public void testMissingRequiredOptions()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,91,"String[] args = new String[] { ""-a"" };"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,93,"_options.addOption( OptionBuilder.withLongOpt( ""cfile"" )"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,94,.hasArg()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,95,.isRequired()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,96,".withDescription( ""set the value of [c]"" )"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,97,.create( 'c' ) );
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,99,try
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,101,"CommandLine cl = parser.parse(_options,args);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,102,"fail( ""exception should have been thrown"" );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,104,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,106,"assertEquals( ""Incorrect exception message"", ""Missing required options: b, c"", e.getMessage() );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,107,"assertTrue(e.getMissingOptions().contains(""b""));"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,108,"assertTrue(e.getMissingOptions().contains(""c""));"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,110,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,112,"fail( ""expected to catch MissingOptionException"" );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,116,public void testReuseOptionsTwice() throws Exception
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,118,Options opts = new Options();
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,119,opts.addOption(OptionBuilder.isRequired().create('v'));
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,121,GnuParser parser = new GnuParser();
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,123,// first parsing
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,124,"parser.parse(opts, new String[] { ""-v"" });"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,126,try
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,128,"// second parsing, with the same Options instance and an invalid command line"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,129,"parser.parse(opts, new String[0]);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,130,"fail(""MissingOptionException not thrown"");"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,132,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,134,// expected
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,20,import java.util.Arrays;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,21,import java.util.List;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,23,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,26,* Abstract test case testing common parser features.
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,28,* @author Emmanuel Bourg
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,29,"* @version $Revision$, $Date$"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,31,public abstract class ParserTestCase extends TestCase
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,33,protected Parser parser;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,35,protected Options options;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,37,public void setUp()
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,39,options = new Options()
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,40,".addOption(""a"", ""enable-a"", false, ""turn [a] on or off"")"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,41,".addOption(""b"", ""bfile"", true, ""set the value of [b]"")"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,42,".addOption(""c"", ""copt"", false, ""turn [c] on or off"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,45,public void testSimpleShort() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,47,"String[] args = new String[] { ""-a"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,48,"""-b"", ""toast"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,49,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,51,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,53,"assertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,54,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,55,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,56,"assertTrue(""Confirm size of extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,59,public void testSimpleLong() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,61,"String[] args = new String[] { ""--enable-a"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,62,"""--bfile"", ""toast"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,63,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,65,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,67,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,68,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,69,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,70,"assertTrue( ""Confirm arg of --bfile"", cl.getOptionValue( ""bfile"" ).equals( ""toast"" ) );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,71,"assertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,74,public void testMultiple() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,76,"String[] args = new String[] { ""-c"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,77,"""foobar"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,78,"""-b"", ""toast"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,80,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,81,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,82,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,84,"cl = parser.parse(options, cl.getArgs());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,86,"assertTrue(""Confirm -c is not set"", !cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,87,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,88,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,89,"assertTrue(""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,90,"assertTrue(""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,93,public void testMultipleWithLong() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,95,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,96,"""foobar"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,97,"""--bfile"", ""toast"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,99,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,100,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,101,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,103,"cl = parser.parse(options, cl.getArgs());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,105,"assertTrue(""Confirm -c is not set"", !cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,106,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,107,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,108,"assertTrue(""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,109,"assertTrue(""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,112,public void testUnrecognizedOption() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,114,"String[] args = new String[] { ""-a"", ""-d"", ""-b"", ""toast"", ""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,116,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,118,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,119,"fail(""UnrecognizedOptionException wasn't thrown"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,121,catch (UnrecognizedOptionException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,123,"assertEquals(""-d"", e.getOption());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,127,public void testMissingArg() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,129,"String[] args = new String[] { ""-b"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,131,boolean caught = false;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,133,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,135,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,137,catch (MissingArgumentException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,139,caught = true;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,140,"assertEquals(""option missing an argument"", ""b"", e.getOption().getOpt());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,143,"assertTrue( ""Confirm MissingArgumentException caught"", caught );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,146,public void testDoubleDash() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,148,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,150,"""-b"", ""toast"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,152,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,154,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,155,"assertTrue(""Confirm -b is not set"", !cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,156,"assertTrue(""Confirm 2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,159,public void testSingleDash() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,161,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,162,"""-b"", ""-"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,163,"""-a"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,166,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,168,"assertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,169,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,170,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""-""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,171,"assertTrue(""Confirm 1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,172,"assertTrue(""Confirm value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""-""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,175,public void testStopAtUnexpectedArg() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,177,"String[] args = new String[] { ""-c"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,178,"""foober"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,179,"""-b"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,180,"""toast"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,182,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,183,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,184,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,187,public void testStopAtExpectedArg() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,189,"String[] args = new String[]{""-b"", ""foo""};"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,191,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,193,"assertTrue(""Confirm -b is set"", cl.hasOption('b'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,194,"assertEquals(""Confirm -b is set"", ""foo"", cl.getOptionValue('b'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,195,"assertTrue(""Confirm no extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,198,public void testStopAtNonOptionShort() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,200,"String[] args = new String[]{""-z"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,201,"""-a"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,202,"""-btoast""};"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,204,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,205,"assertFalse(""Confirm -a is not set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,206,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,209,public void testStopAtNonOptionLong() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,211,"String[] args = new String[]{""--zop==1"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,212,"""-abtoast"","
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,213,"""--b=bar""};"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,215,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,217,"assertFalse(""Confirm -a is not set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,218,"assertFalse(""Confirm -b is not set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,219,"assertTrue(""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,222,public void testNegativeArgument() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,224,"String[] args = new String[] { ""-b"", ""-1""} ;"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,226,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,227,"assertEquals(""-1"", cl.getOptionValue(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,230,public void testArgumentStartingWithHyphen() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,232,"String[] args = new String[]{""-b"", ""-foo""};"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,234,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,235,"assertEquals(""-foo"", cl.getOptionValue(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,238,public void testShortWithEqual() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,240,"String[] args = new String[] { ""-f=bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,242,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,243,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,245,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,247,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,250,public void testShortWithoutEqual() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,252,"String[] args = new String[] { ""-fbar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,254,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,255,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,257,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,259,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,262,public void testLongWithEqual() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,264,"String[] args = new String[] { ""--foo=bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,266,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,267,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,269,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,271,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,274,public void testLongWithEqualSingleDash() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,276,"String[] args = new String[] { ""-foo=bar"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,278,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,279,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,281,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,283,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,286,public void testPropertiesOption() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,288,"String[] args = new String[] { ""-Jsource=1.5"", ""-J"", ""target"", ""1.5"", ""foo"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,290,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,291,options.addOption(OptionBuilder.withValueSeparator().hasArgs(2).create('J'));
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,293,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,295,"List values = Arrays.asList(cl.getOptionValues(""J""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,296,"assertNotNull(""null values"", values);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,297,"assertEquals(""number of values"", 4, values.size());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,298,"assertEquals(""value 1"", ""source"", values.get(0));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,299,"assertEquals(""value 2"", ""1.5"", values.get(1));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,300,"assertEquals(""value 3"", ""target"", values.get(2));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,301,"assertEquals(""value 4"", ""1.5"", values.get(3));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,302,List argsleft = cl.getArgList();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,303,"assertEquals(""Should be 1 arg left"",1,argsleft.size());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,304,"assertEquals(""Expecting foo"",""foo"",argsleft.get(0));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,20,import java.io.File;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,21,import java.net.URL;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,22,import java.util.Calendar;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,23,import java.util.Date;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,24,import java.util.Vector;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,26,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,29,* Test case for the PatternOptionBuilder class
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,31,"* @version $Revision$, $Date$"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,33,public class PatternOptionBuilderTest extends TestCase
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,35,public void testSimplePattern() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,37,"Options options = PatternOptionBuilder.parsePattern(""a:b@cde>f+n%t/m*z#"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,38,"String[] args = new String[] {""-c"", ""-a"", ""foo"", ""-b"", ""java.util.Vector"", ""-e"", ""build.xml"", ""-f"", ""java.util.Calendar"", ""-n"", ""4.5"", ""-t"", ""http://commons.apache.org"", ""-z"", ""Thu Jun 06 17:48:57 EDT 2002"", ""-m"", ""test*""};"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,40,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,41,"CommandLine line = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,43,"assertEquals(""flag a"", ""foo"", line.getOptionValue(""a""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,44,"assertEquals(""string flag a"", ""foo"", line.getOptionObject(""a""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,45,"assertEquals(""object flag b"", new Vector(), line.getOptionObject(""b""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,46,"assertTrue(""boolean true flag c"", line.hasOption(""c""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,47,"assertFalse(""boolean false flag d"", line.hasOption(""d""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,48,"assertEquals(""file flag e"", new File(""build.xml""), line.getOptionObject(""e""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,49,"assertEquals(""class flag f"", Calendar.class, line.getOptionObject(""f""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,50,"assertEquals(""number flag n"", new Double(4.5), line.getOptionObject(""n""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,51,"assertEquals(""url flag t"", new URL(""http://commons.apache.org""), line.getOptionObject(""t""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,53,// tests the char methods of CommandLine that delegate to the String methods
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,54,"assertEquals(""flag a"", ""foo"", line.getOptionValue('a'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,55,"assertEquals(""string flag a"", ""foo"", line.getOptionObject('a'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,56,"assertEquals(""object flag b"", new Vector(), line.getOptionObject('b'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,57,"assertTrue(""boolean true flag c"", line.hasOption('c'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,58,"assertFalse(""boolean false flag d"", line.hasOption('d'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,59,"assertEquals(""file flag e"", new File(""build.xml""), line.getOptionObject('e'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,60,"assertEquals(""class flag f"", Calendar.class, line.getOptionObject('f'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,61,"assertEquals(""number flag n"", new Double(4.5), line.getOptionObject('n'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,62,"assertEquals(""url flag t"", new URL(""http://commons.apache.org""), line.getOptionObject('t'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,64,// FILES NOT SUPPORTED YET
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,65,try {
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,66,"assertEquals(""files flag m"", new File[0], line.getOptionObject('m'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,67,"fail(""Multiple files are not supported yet, should have failed"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,68,} catch(UnsupportedOperationException uoe) {
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,69,// expected
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,72,// DATES NOT SUPPORTED YET
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,73,try {
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,74,"assertEquals(""date flag z"", new Date(1023400137276L), line.getOptionObject('z'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,75,"fail(""Date is not supported yet, should have failed"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,76,} catch(UnsupportedOperationException uoe) {
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,77,// expected
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,81,public void testEmptyPattern() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,83,"Options options = PatternOptionBuilder.parsePattern("""");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,84,assertTrue(options.getOptions().isEmpty());
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,87,public void testUntypedPattern() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,89,"Options options = PatternOptionBuilder.parsePattern(""abc"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,90,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,91,"CommandLine line = parser.parse(options, new String[] { ""-abc"" });"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,93,assertTrue(line.hasOption('a'));
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,94,"assertNull(""value a"", line.getOptionObject('a'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,95,assertTrue(line.hasOption('b'));
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,96,"assertNull(""value b"", line.getOptionObject('b'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,97,assertTrue(line.hasOption('c'));
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,98,"assertNull(""value c"", line.getOptionObject('c'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,101,public void testNumberPattern() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,103,"Options options = PatternOptionBuilder.parsePattern(""n%d%x%"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,104,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,105,"CommandLine line = parser.parse(options, new String[] { ""-n"", ""1"", ""-d"", ""2.1"", ""-x"", ""3,5"" });"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,107,"assertEquals(""n object class"", Long.class, line.getOptionObject(""n"").getClass());"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,108,"assertEquals(""n value"", new Long(1), line.getOptionObject(""n""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,110,"assertEquals(""d object class"", Double.class, line.getOptionObject(""d"").getClass());"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,111,"assertEquals(""d value"", new Double(2.1), line.getOptionObject(""d""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,113,"assertNull(""x object"", line.getOptionObject(""x""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,116,public void testClassPattern() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,118,"Options options = PatternOptionBuilder.parsePattern(""c+d+"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,119,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,120,"CommandLine line = parser.parse(options, new String[] { ""-c"", ""java.util.Calendar"", ""-d"", ""System.DateTime"" });"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,122,"assertEquals(""c value"", Calendar.class, line.getOptionObject(""c""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,123,"assertNull(""d value"", line.getOptionObject(""d""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,126,public void testObjectPattern() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,128,"Options options = PatternOptionBuilder.parsePattern(""o@i@n@"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,129,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,130,"CommandLine line = parser.parse(options, new String[] { ""-o"", ""java.lang.String"", ""-i"", ""java.util.Calendar"", ""-n"", ""System.DateTime"" });"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,132,"assertEquals(""o value"", """", line.getOptionObject(""o""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,133,"assertNull(""i value"", line.getOptionObject(""i""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,134,"assertNull(""n value"", line.getOptionObject(""n""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,137,public void testURLPattern() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,139,"Options options = PatternOptionBuilder.parsePattern(""u/v/"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,140,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,141,"CommandLine line = parser.parse(options, new String[] { ""-u"", ""http://commons.apache.org"", ""-v"", ""foo://commons.apache.org"" });"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,143,"assertEquals(""u value"", new URL(""http://commons.apache.org""), line.getOptionObject(""u""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,144,"assertNull(""v value"", line.getOptionObject(""v""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,147,public void testExistingFilePattern() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,149,"Options options = PatternOptionBuilder.parsePattern(""f<"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,150,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,151,"CommandLine line = parser.parse(options, new String[] { ""-f"", ""test.properties"" });"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,153,"assertEquals(""f value"", new File(""test.properties""), line.getOptionObject(""f""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,155,// todo test if an error is returned if the file doesn't exists (when it's implemented)
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,158,public void testRequiredOption() throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,160,"Options options = PatternOptionBuilder.parsePattern(""!n%m%"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,161,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,163,try
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,165,"parser.parse(options, new String[]{""""});"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,166,"fail(""MissingOptionException wasn't thrown"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,168,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,170,"assertEquals(1, e.getMissingOptions().size());"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,171,"assertTrue(e.getMissingOptions().contains(""n""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,21,* Test case for the PosixParser.
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,23,"* @version $Revision$, $Date$"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,25,public class PosixParserTest extends ParserTestCase
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,27,public void setUp()
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,29,super.setUp();
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,30,parser = new PosixParser();
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,33,public void testBursting() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,35,"String[] args = new String[] { ""-acbtoast"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,36,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,38,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,40,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,41,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,42,"assertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,43,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,44,"assertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,47,public void testUnrecognizedOptionWithBursting() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,49,"String[] args = new String[] { ""-adbtoast"", ""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,51,try
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,53,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,54,"fail(""UnrecognizedOptionException wasn't thrown"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,56,catch (UnrecognizedOptionException e)
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,58,"assertEquals(""-adbtoast"", e.getOption());"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,62,public void testMissingArgWithBursting() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,64,"String[] args = new String[] { ""-acb"" };"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,66,boolean caught = false;
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,68,try
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,70,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,72,catch (MissingArgumentException e)
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,74,caught = true;
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,75,"assertEquals(""option missing an argument"", ""b"", e.getOption().getOpt());"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,78,"assertTrue( ""Confirm MissingArgumentException caught"", caught );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,81,public void testStopBursting() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,83,"String[] args = new String[] { ""-azc"" };"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,85,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,86,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,87,"assertFalse( ""Confirm -c is not set"", cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,89,"assertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,90,"assertTrue(cl.getArgList().contains(""zc""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,93,public void testStopBursting2() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,95,"String[] args = new String[] { ""-c"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,96,"""foobar"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,97,"""-btoast"" };"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,99,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,100,"assertTrue(""Confirm -c is set"", cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,101,"assertTrue(""Confirm  2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,103,"cl = parser.parse(options, cl.getArgs());"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,105,"assertTrue(""Confirm -c is not set"", !cl.hasOption(""c""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,106,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,107,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,108,"assertTrue(""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,109,"assertTrue(""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,113,* Real world test with long and short options.
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,115,public void testLongOptionWithShort() throws Exception {
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,116,"Option help = new Option(""h"", ""help"", false, ""print this message"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,117,"Option version = new Option(""v"", ""version"", false, ""print version information"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,118,"Option newRun = new Option(""n"", ""new"", false, ""Create NLT cache entries only for new items"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,119,"Option trackerRun = new Option(""t"", ""tracker"", false, ""Create NLT cache entries only for tracker items"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,121,"Option timeLimit = OptionBuilder.withLongOpt(""limit"").hasArg()"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,122,.withValueSeparator()
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,123,".withDescription(""Set time limit for execution, in minutes"")"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,124,".create(""l"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,126,"Option age = OptionBuilder.withLongOpt(""age"").hasArg()"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,127,.withValueSeparator()
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,128,".withDescription(""Age (in days) of cache item before being recomputed"")"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,129,".create(""a"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,131,"Option server = OptionBuilder.withLongOpt(""server"").hasArg()"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,132,.withValueSeparator()
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,133,".withDescription(""The NLT server address"")"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,134,".create(""s"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,136,"Option numResults = OptionBuilder.withLongOpt(""results"").hasArg()"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,137,.withValueSeparator()
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,138,".withDescription(""Number of results per item"")"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,139,".create(""r"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,141,"Option configFile = OptionBuilder.withLongOpt(""file"").hasArg()"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,142,.withValueSeparator()
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,143,".withDescription(""Use the specified configuration file"")"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,144,.create();
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,146,Options options = new Options();
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,147,options.addOption(help);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,148,options.addOption(version);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,149,options.addOption(newRun);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,150,options.addOption(trackerRun);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,151,options.addOption(timeLimit);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,152,options.addOption(age);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,153,options.addOption(server);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,154,options.addOption(numResults);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,155,options.addOption(configFile);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,157,// create the command line parser
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,158,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,160,String[] args = new String[] {
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,161,"""-v"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,162,"""-l"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,163,"""10"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,164,"""-age"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,165,"""5"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,166,"""-file"","
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,167,"""filename"""
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,170,"CommandLine line = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,171,"assertTrue(line.hasOption(""v""));"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,172,"assertEquals(line.getOptionValue(""l""), ""10"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,173,"assertEquals(line.getOptionValue(""limit""), ""10"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,174,"assertEquals(line.getOptionValue(""a""), ""5"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,175,"assertEquals(line.getOptionValue(""age""), ""5"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,176,"assertEquals(line.getOptionValue(""file""), ""filename"");"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,179,public void testLongWithEqualSingleDash() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,181,// not supported by the PosixParser
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,184,public void testShortWithEqual() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,186,// not supported by the PosixParser
False,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,19,mport org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,20,import junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,22, @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,23,* @author brianegge
False,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,24,ublic abstract class ArgumentTestCase extends OptionTestCase {
False,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,26,ublic abstract void testProcessValues() throws OptionException;
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,25,public class UtilTest extends TestCase
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,27,public void testStripLeadingHyphens()
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,29,"assertEquals(""f"", Util.stripLeadingHyphens(""-f""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,30,"assertEquals(""foo"", Util.stripLeadingHyphens(""--foo""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,31,"assertEquals(""-foo"", Util.stripLeadingHyphens(""---foo""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,32,assertNull(Util.stripLeadingHyphens(null));
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,35,public void testStripLeadingAndTrailingQuotes()
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli/UtilTest.java,37,"assertEquals(""foo"", Util.stripLeadingAndTrailingQuotes(""\""foo\""""));"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,20,import java.util.Arrays;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,21,import java.util.Properties;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,23,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,25,public class ValueTest extends TestCase
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,27,private CommandLine _cl = null;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,28,private Options opts = new Options();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,30,public void setUp() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,32,"opts.addOption(""a"", false, ""toggle -a"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,33,"opts.addOption(""b"", true, ""set -b"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,34,"opts.addOption(""c"", ""c"", false, ""toggle -c"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,35,"opts.addOption(""d"", ""d"", true, ""set -d"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,37,opts.addOption(OptionBuilder.hasOptionalArg().create('e'));
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,38,"opts.addOption(OptionBuilder.hasOptionalArg().withLongOpt(""fish"").create());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,39,"opts.addOption(OptionBuilder.hasOptionalArgs().withLongOpt(""gravy"").create());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,40,"opts.addOption(OptionBuilder.hasOptionalArgs(2).withLongOpt(""hide"").create());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,41,opts.addOption(OptionBuilder.hasOptionalArgs(2).create('i'));
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,42,opts.addOption(OptionBuilder.hasOptionalArgs().create('j'));
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,43,"opts.addOption(OptionBuilder.hasArgs().withValueSeparator(',').create('k'));"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,45,"String[] args = new String[] { ""-a"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,46,"""-b"", ""foo"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,47,"""--c"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,48,"""--d"", ""bar"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,51,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,52,"_cl = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,55,public void testShortNoArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,57,"assertTrue( _cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,58,"assertNull( _cl.getOptionValue(""a"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,61,public void testShortWithArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,63,"assertTrue( _cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,64,"assertNotNull( _cl.getOptionValue(""b"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,65,"assertEquals( _cl.getOptionValue(""b""), ""foo"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,68,public void testLongNoArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,70,"assertTrue( _cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,71,"assertNull( _cl.getOptionValue(""c"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,74,public void testLongWithArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,76,"assertTrue( _cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,77,"assertNotNull( _cl.getOptionValue(""d"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,78,"assertEquals( _cl.getOptionValue(""d""), ""bar"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,81,public void testShortOptionalArgNoValue() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,83,"String[] args = new String[] { ""-e"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,85,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,86,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,87,"assertTrue( cmd.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,88,"assertNull( cmd.getOptionValue(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,91,public void testShortOptionalArgValue() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,93,"String[] args = new String[] { ""-e"", ""everything"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,95,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,96,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,97,"assertTrue( cmd.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,98,"assertEquals( ""everything"", cmd.getOptionValue(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,101,public void testLongOptionalNoValue() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,103,"String[] args = new String[] { ""--fish"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,105,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,106,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,107,"assertTrue( cmd.hasOption(""fish"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,108,"assertNull( cmd.getOptionValue(""fish"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,111,public void testLongOptionalArgValue() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,113,"String[] args = new String[] { ""--fish"", ""face"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,115,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,116,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,117,"assertTrue( cmd.hasOption(""fish"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,118,"assertEquals( ""face"", cmd.getOptionValue(""fish"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,121,public void testShortOptionalArgValues() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,123,"String[] args = new String[] { ""-j"", ""ink"", ""idea"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,125,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,126,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,127,"assertTrue( cmd.hasOption(""j"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,128,"assertEquals( ""ink"", cmd.getOptionValue(""j"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,129,"assertEquals( ""ink"", cmd.getOptionValues(""j"")[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,130,"assertEquals( ""idea"", cmd.getOptionValues(""j"")[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,131,"assertEquals( cmd.getArgs().length, 0 );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,134,public void testLongOptionalArgValues() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,136,"String[] args = new String[] { ""--gravy"", ""gold"", ""garden"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,138,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,139,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,140,"assertTrue( cmd.hasOption(""gravy"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,141,"assertEquals( ""gold"", cmd.getOptionValue(""gravy"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,142,"assertEquals( ""gold"", cmd.getOptionValues(""gravy"")[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,143,"assertEquals( ""garden"", cmd.getOptionValues(""gravy"")[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,144,"assertEquals( cmd.getArgs().length, 0 );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,147,public void testShortOptionalNArgValues() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,149,"String[] args = new String[] { ""-i"", ""ink"", ""idea"", ""isotope"", ""ice"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,151,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,152,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,153,"assertTrue( cmd.hasOption(""i"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,154,"assertEquals( ""ink"", cmd.getOptionValue(""i"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,155,"assertEquals( ""ink"", cmd.getOptionValues(""i"")[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,156,"assertEquals( ""idea"", cmd.getOptionValues(""i"")[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,157,"assertEquals( cmd.getArgs().length, 2 );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,158,"assertEquals( ""isotope"", cmd.getArgs()[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,159,"assertEquals( ""ice"", cmd.getArgs()[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,162,public void testLongOptionalNArgValues() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,164,String[] args = new String[] {
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,165,"""--hide"", ""house"", ""hair"", ""head"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,168,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,170,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,171,"assertTrue( cmd.hasOption(""hide"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,172,"assertEquals( ""house"", cmd.getOptionValue(""hide"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,173,"assertEquals( ""house"", cmd.getOptionValues(""hide"")[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,174,"assertEquals( ""hair"", cmd.getOptionValues(""hide"")[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,175,"assertEquals( cmd.getArgs().length, 1 );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,176,"assertEquals( ""head"", cmd.getArgs()[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,179,public void testPropertyOptionSingularValue() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,181,Properties properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,182,"properties.setProperty( ""hide"", ""seek"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,184,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,186,"CommandLine cmd = parser.parse(opts, null, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,187,"assertTrue( cmd.hasOption(""hide"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,188,"assertEquals( ""seek"", cmd.getOptionValue(""hide"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,189,"assertTrue( !cmd.hasOption(""fake"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,192,public void testPropertyOptionFlags() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,194,Properties properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,195,"properties.setProperty( ""a"", ""true"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,196,"properties.setProperty( ""c"", ""yes"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,197,"properties.setProperty( ""e"", ""1"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,199,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,201,"CommandLine cmd = parser.parse(opts, null, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,202,"assertTrue( cmd.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,203,"assertTrue( cmd.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,204,"assertTrue( cmd.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,207,properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,208,"properties.setProperty( ""a"", ""false"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,209,"properties.setProperty( ""c"", ""no"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,210,"properties.setProperty( ""e"", ""0"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,212,"cmd = parser.parse(opts, null, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,213,"assertTrue( !cmd.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,214,"assertTrue( !cmd.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,215,"assertTrue( !cmd.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,218,properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,219,"properties.setProperty( ""a"", ""TRUE"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,220,"properties.setProperty( ""c"", ""nO"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,221,"properties.setProperty( ""e"", ""TrUe"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,223,"cmd = parser.parse(opts, null, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,224,"assertTrue( cmd.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,225,"assertTrue( !cmd.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,226,"assertTrue( cmd.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,229,properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,230,"properties.setProperty( ""a"", ""just a string"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,231,"properties.setProperty( ""e"", """" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,233,"cmd = parser.parse(opts, null, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,234,"assertTrue( !cmd.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,235,"assertTrue( !cmd.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,236,"assertTrue( !cmd.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,239,public void testPropertyOptionMultipleValues() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,241,Properties properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,242,"properties.setProperty( ""k"", ""one,two"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,244,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,246,String[] values = new String[] {
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,247,"""one"", ""two"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,250,"CommandLine cmd = parser.parse(opts, null, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,251,"assertTrue( cmd.hasOption(""k"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,252,"assertTrue( Arrays.equals( values, cmd.getOptionValues('k') ) );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,255,public void testPropertyOverrideValues() throws Exception
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,257,String[] args = new String[] {
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,258,"""-j"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,259,"""found"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,260,"""-i"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,261,"""ink"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,264,Properties properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,265,"properties.setProperty( ""j"", ""seek"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,267,Parser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,268,"CommandLine cmd = parser.parse(opts, args, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,269,"assertTrue( cmd.hasOption(""j"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,270,"assertEquals( ""found"", cmd.getOptionValue(""j"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,271,"assertTrue( cmd.hasOption(""i"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,272,"assertEquals( ""ink"", cmd.getOptionValue(""i"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,273,"assertTrue( !cmd.hasOption(""fake"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,20,import java.util.Arrays;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,24,public class ValuesTest extends TestCase
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,26,/** CommandLine instance */
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,27,private CommandLine _cmdline = null;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,29,public void setUp() throws Exception
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,31,Options options = new Options();
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,33,"options.addOption(""a"", false, ""toggle -a"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,34,"options.addOption(""b"", true, ""set -b"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,35,"options.addOption(""c"", ""c"", false, ""toggle -c"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,36,"options.addOption(""d"", ""d"", true, ""set -d"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,38,"options.addOption(OptionBuilder.withLongOpt(""e"").hasArgs().withDescription(""set -e "").create('e'));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,39,"options.addOption(""f"", ""f"", false, ""jk"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,40,"options.addOption(OptionBuilder.withLongOpt(""g"").hasArgs(2).withDescription(""set -g"").create('g'));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,41,"options.addOption(OptionBuilder.withLongOpt(""h"").hasArgs(2).withDescription(""set -h"").create('h'));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,42,"options.addOption(OptionBuilder.withLongOpt(""i"").withDescription(""set -i"").create('i'));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,43,"options.addOption(OptionBuilder.withLongOpt(""j"").hasArgs().withDescription(""set -j"").withValueSeparator('=').create('j'));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,44,"options.addOption(OptionBuilder.withLongOpt(""k"").hasArgs().withDescription(""set -k"").withValueSeparator('=').create('k'));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,45,"options.addOption(OptionBuilder.withLongOpt(""m"").hasArgs().withDescription(""set -m"").withValueSeparator().create('m'));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,47,"String[] args = new String[] { ""-a"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,48,"""-b"", ""foo"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,49,"""--c"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,50,"""--d"", ""bar"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,51,"""-e"", ""one"", ""two"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,52,"""-f"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,53,"""arg1"", ""arg2"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,54,"""-g"", ""val1"", ""val2"" , ""arg3"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,55,"""-h"", ""val1"", ""-i"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,56,"""-h"", ""val2"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,57,"""-jkey=value"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,58,"""-j"", ""key=value"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,59,"""-kkey1=value1"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,60,"""-kkey2=value2"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,61,"""-mkey=value""};"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,63,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,65,"_cmdline = parser.parse(options,args);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,68,public void testShortArgs()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,70,"assertTrue( _cmdline.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,71,"assertTrue( _cmdline.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,73,"assertNull( _cmdline.getOptionValues(""a"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,74,"assertNull( _cmdline.getOptionValues(""c"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,77,public void testShortArgsWithValue()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,79,"assertTrue( _cmdline.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,80,"assertTrue( _cmdline.getOptionValue(""b"").equals(""foo""));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,81,"assertEquals(1, _cmdline.getOptionValues(""b"").length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,83,"assertTrue( _cmdline.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,84,"assertTrue( _cmdline.getOptionValue(""d"").equals(""bar""));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,85,"assertEquals(1, _cmdline.getOptionValues(""d"").length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,88,public void testMultipleArgValues()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,90,"String[] result = _cmdline.getOptionValues(""e"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,91,"String[] values = new String[] { ""one"", ""two"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,92,"assertTrue( _cmdline.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,93,"assertEquals(2, _cmdline.getOptionValues(""e"").length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,94,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues(""e"") ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,97,public void testTwoArgValues()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,99,"String[] result = _cmdline.getOptionValues(""g"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,100,"String[] values = new String[] { ""val1"", ""val2"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,101,"assertTrue( _cmdline.hasOption(""g"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,102,"assertEquals(2, _cmdline.getOptionValues(""g"").length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,103,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues(""g"") ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,106,public void testComplexValues()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,108,"String[] result = _cmdline.getOptionValues(""h"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,109,"String[] values = new String[] { ""val1"", ""val2"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,110,"assertTrue( _cmdline.hasOption(""i"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,111,"assertTrue( _cmdline.hasOption(""h"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,112,"assertEquals(2, _cmdline.getOptionValues(""h"").length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,113,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues(""h"") ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,116,public void testExtraArgs()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,118,"String[] args = new String[] { ""arg1"", ""arg2"", ""arg3"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,119,"assertEquals(3, _cmdline.getArgs().length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,120,"assertTrue( Arrays.equals( args, _cmdline.getArgs() ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,123,public void testCharSeparator()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,125,// tests the char methods of CommandLine that delegate to
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,126,// the String methods
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,127,"String[] values = new String[] { ""key"", ""value"", ""key"", ""value"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,128,"assertTrue( _cmdline.hasOption( ""j"" ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,129,assertTrue( _cmdline.hasOption( 'j' ) );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,130,"assertEquals( 4, _cmdline.getOptionValues( ""j"" ).length );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,131,"assertEquals( 4, _cmdline.getOptionValues( 'j' ).length );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,132,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues( ""j"" ) ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,133,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues( 'j' ) ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,135,"values = new String[] { ""key1"", ""value1"", ""key2"", ""value2"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,136,"assertTrue( _cmdline.hasOption( ""k"" ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,137,assertTrue( _cmdline.hasOption( 'k' ) );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,138,"assertEquals(4, _cmdline.getOptionValues( ""k"" ).length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,139,"assertEquals(4, _cmdline.getOptionValues( 'k' ).length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,140,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues( ""k"" ) ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,141,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues( 'k' ) ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,143,"values = new String[] { ""key"", ""value"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,144,"assertTrue( _cmdline.hasOption( ""m"" ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,145,assertTrue( _cmdline.hasOption( 'm' ) );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,146,"assertEquals(2, _cmdline.getOptionValues( ""m"" ).length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,147,"assertEquals(2, _cmdline.getOptionValues( 'm' ).length);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,148,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues( ""m"" ) ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,149,"assertTrue( Arrays.equals( values, _cmdline.getOptionValues( 'm' ) ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,153,* jkeyes - commented out this test as the new architecture
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,154,* breaks this type of functionality.  I have left the test
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,155,* here in case I get a brainwave on how to resolve this.
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,158,public void testGetValue()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,160,// the 'm' option
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,161,assertTrue( _option.getValues().length == 2 );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,162,"assertEquals( _option.getValue(), ""key"" );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,163,"assertEquals( _option.getValue( 0 ), ""key"" );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,164,"assertEquals( _option.getValue( 1 ), ""value"" );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,166,try {
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,167,"assertEquals( _option.getValue( 2 ), ""key"" );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,168,"fail( ""IndexOutOfBounds not caught"" );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,170,catch( IndexOutOfBoundsException exp ) {
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,174,try {
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,175,"assertEquals( _option.getValue( -1 ), ""key"" );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,176,"fail( ""IndexOutOfBounds not caught"" );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,178,catch( IndexOutOfBoundsException exp ) {
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,19,mport java.util.Iterator;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,18,package org.apache.commons.cli.bug;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,21,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,23,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,24,mport org.apache.commons.cli2.builder.PatternBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,25,mport org.apache.commons.cli2.option.GroupImpl;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,27,ublic class Bug27575Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,20,import org.apache.commons.cli.CommandLine;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,21,import org.apache.commons.cli.Option;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,22,import org.apache.commons.cli.Options;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,23,import org.apache.commons.cli.ParseException;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,24,import org.apache.commons.cli.PosixParser;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,29,ublic void testRequiredOptions(){
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,30,atternBuilder builder = new PatternBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,31,"uilder.withPattern(""hc!<"");"
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,32,ption option = builder.create();
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,33,ssertTrue(option instanceof GroupImpl);
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,26,import junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,35,roupImpl group = (GroupImpl)option;
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,36,terator i = group.getOptions().iterator();
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,37,"ssertEquals(""[-h]"",i.next().toString());"
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,38,"ssertEquals(""-c <arg>"",i.next().toString());"
False,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,39,ssertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,30,* @author brianegge
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,32,public class BugCLI133Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,33,public void testOrder() throws ParseException {
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,34,"Option optionA = new Option(""a"", ""first"");"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,35,Options opts = new Options();
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,36,opts.addOption(optionA);
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,37,PosixParser posixParser = new PosixParser();
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,38,"CommandLine line = posixParser.parse(opts, null);"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli/bug/BugCLI133Test.java,39,assertFalse(line.hasOption(null));
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,18,package org.apache.commons.cli.bug;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,20,import org.apache.commons.cli.CommandLine;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,21,import org.apache.commons.cli.Option;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,22,import org.apache.commons.cli.OptionBuilder;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,23,import org.apache.commons.cli.Options;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,24,import org.apache.commons.cli.ParseException;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,25,import org.apache.commons.cli.PosixParser;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,27,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,30,* @author brianegge
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,32,public class BugCLI13Test extends TestCase
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,34,public void testCLI13() throws ParseException
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,36,"final String debugOpt = ""debug"";"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,37,Option debug = OptionBuilder
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,38,.withArgName( debugOpt )
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,39,".withDescription( ""turn on debugging"" )"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,40,.withLongOpt( debugOpt )
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,41,.hasArg()
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,42,.create( 'd' );
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,43,Options options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,44,options.addOption( debug );
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,45,"CommandLine commandLine = new PosixParser().parse( options, new String[]{""-d"", ""true""} );"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,47,"assertEquals(""true"", commandLine.getOptionValue( debugOpt ));"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,48,"assertEquals(""true"", commandLine.getOptionValue( 'd' ));"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,49,assertTrue(commandLine.hasOption( 'd'));
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,50,assertTrue(commandLine.hasOption( debugOpt));
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,18,package org.apache.commons.cli.bug;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,20,import org.apache.commons.cli.CommandLine;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,21,import org.apache.commons.cli.CommandLineParser;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,22,import org.apache.commons.cli.Option;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,23,import org.apache.commons.cli.OptionBuilder;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,24,import org.apache.commons.cli.Options;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,25,import org.apache.commons.cli.PosixParser;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,27,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,30,* http://issues.apache.org/jira/browse/CLI-148
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,32,* @author brianegge
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,34,public class BugCLI148Test  extends TestCase {
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,36,public void testWorkaround1() throws Exception
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,38,Options options = buildCommandLineOptions();
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,39,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,40,"String[] args = new String[] {""-t-something"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,41,CommandLine commandLine;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,42,"commandLine = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,43,"assertEquals(""-something"", commandLine.getOptionValue( 't'));"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,46,public void testWorkaround2() throws Exception
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,48,Options options = buildCommandLineOptions();
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,49,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,50,"String[] args = new String[] {""-t"", ""\""-something\"""" };"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,51,CommandLine commandLine;
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,52,"commandLine = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,53,"assertEquals(""-something"", commandLine.getOptionValue( 't'));"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,56,private Options buildCommandLineOptions()
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,58,"Option t = OptionBuilder.withArgName( ""t"").hasArg().create('t');"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,59,"Option s = OptionBuilder.withArgName( ""s"").hasArg().create('s');"
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,60,Options options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,61,options.addOption( t);
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,62,options.addOption( s);
True,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,src/test/org/apache/commons/cli/bug/BugCLI148Test.java,63,return options;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,19,package org.apache.commons.cli.bug;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,21,import java.io.IOException;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,22,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,23,import java.io.StringWriter;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,24,import java.sql.ParameterMetaData;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,25,import java.sql.Types;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,27,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,29,import org.apache.commons.cli.HelpFormatter;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,30,import org.apache.commons.cli.Option;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,31,import org.apache.commons.cli.OptionGroup;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,32,import org.apache.commons.cli.Options;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,33,import org.apache.commons.cli.ParseException;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,35,public class BugCLI162Test extends TestCase {
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,36,/** Constant for the line separator.*/
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,37,"private static final String CR = System.getProperty(""line.separator"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,39,public void testInfiniteLoop() {
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,40,Options options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,41,"options.addOption(""h"", ""help"", false, ""This is a looooong description"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,42,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,43,formatter.setWidth(20);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,44,"formatter.printHelp(""app"", options); // used to hang & crash"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,47,"public void testPrintHelpLongLines() throws ParseException, IOException {"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,48,// Constants used for options
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,49,"final String OPT = ""-"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,51,"final String OPT_COLUMN_NAMES = ""l"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,53,"final String OPT_CONNECTION = ""c"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,55,"final String OPT_DESCRIPTION = ""e"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,57,"final String OPT_DRIVER = ""d"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,59,"final String OPT_DRIVER_INFO = ""n"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,61,"final String OPT_FILE_BINDING = ""b"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,63,"final String OPT_FILE_JDBC = ""j"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,65,"final String OPT_FILE_SFMD = ""f"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,67,"final String OPT_HELP = ""h"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,69,"final String OPT_HELP_ = ""help"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,71,"final String OPT_INTERACTIVE = ""i"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,73,"final String OPT_JDBC_TO_SFMD = ""2"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,75,"final String OPT_JDBC_TO_SFMD_L = ""jdbc2sfmd"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,77,"final String OPT_METADATA = ""m"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,79,"final String OPT_PARAM_MODES_INT = ""o"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,81,"final String OPT_PARAM_MODES_NAME = ""O"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,83,"final String OPT_PARAM_NAMES = ""a"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,85,"final String OPT_PARAM_TYPES_INT = ""y"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,87,"final String OPT_PARAM_TYPES_NAME = ""Y"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,89,"final String OPT_PASSWORD = ""p"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,91,"final String OPT_PASSWORD_L = ""password"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,93,"final String OPT_SQL = ""s"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,95,"final String OPT_SQL_L = ""sql"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,97,"final String OPT_SQL_SPLIT_DEFAULT = ""###"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,99,"final String OPT_SQL_SPLIT_L = ""splitSql"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,101,"final String OPT_STACK_TRACE = ""t"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,103,"final String OPT_TIMING = ""g"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,105,"final String OPT_TRIM_L = ""trim"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,107,"final String OPT_USER = ""u"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,109,"final String OPT_WRITE_TO_FILE = ""w"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,111,"final String _PMODE_IN = ""IN"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,113,"final String _PMODE_INOUT = ""INOUT"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,115,"final String _PMODE_OUT = ""OUT"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,117,"final String _PMODE_UNK = ""Unknown"";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,119,"final String PMODES = _PMODE_IN + "", "" + _PMODE_INOUT + "", "" + _PMODE_OUT + "", "" + _PMODE_UNK;"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,121,// Options build
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,122,Options commandLineOptions;
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,123,commandLineOptions = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,124,"commandLineOptions.addOption(OPT_HELP, OPT_HELP_, false, ""Prints help and quits"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,125,"commandLineOptions.addOption(OPT_DRIVER, ""driver"", true, ""JDBC driver class name"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,126,"commandLineOptions.addOption(OPT_DRIVER_INFO, ""info"", false, ""Prints driver information and properties. If """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,127,+ OPT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,128,+ OPT_CONNECTION
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,129,"+ "" is not specified, all drivers on the classpath are displayed."");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,130,"commandLineOptions.addOption(OPT_CONNECTION, ""url"", true, ""Connection URL"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,131,"commandLineOptions.addOption(OPT_USER, ""user"", true, ""A database user name"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,132,commandLineOptions
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,133,.addOption(
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,134,"OPT_PASSWORD,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,135,"OPT_PASSWORD_L,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,136,"true,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,137,"""The database password for the user specified with the """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,138,+ OPT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,139,+ OPT_USER
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,140,"+ "" option. You can obfuscate the password with org.mortbay.jetty.security.Password, see http://docs.codehaus.org/display/JETTY/Securing+Passwords"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,141,"commandLineOptions.addOption(OPT_SQL, OPT_SQL_L, true, ""Runs SQL or {call stored_procedure(?, ?)} or {?=call function(?, ?)}"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,142,"commandLineOptions.addOption(OPT_FILE_SFMD, ""sfmd"", true, ""Writes a SFMD file for the given SQL"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,143,"commandLineOptions.addOption(OPT_FILE_BINDING, ""jdbc"", true, ""Writes a JDBC binding node file for the given SQL"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,144,"commandLineOptions.addOption(OPT_FILE_JDBC, ""node"", true, ""Writes a JDBC node file for the given SQL (internal debugging)"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,145,"commandLineOptions.addOption(OPT_WRITE_TO_FILE, ""outfile"", true, ""Writes the SQL output to the given file"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,146,"commandLineOptions.addOption(OPT_DESCRIPTION, ""description"", true,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,147,"""SFMD description. A default description is used if omited. Example: "" + OPT + OPT_DESCRIPTION + "" \""Runs such and such\"""");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,148,"commandLineOptions.addOption(OPT_INTERACTIVE, ""interactive"", false,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,149,"""Runs in interactive mode, reading and writing from the console, 'go' or '/' sends a statement"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,150,"commandLineOptions.addOption(OPT_TIMING, ""printTiming"", false, ""Prints timing information"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,151,"commandLineOptions.addOption(OPT_METADATA, ""printMetaData"", false, ""Prints metadata information"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,152,"commandLineOptions.addOption(OPT_STACK_TRACE, ""printStack"", false, ""Prints stack traces on errors"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,153,"Option option = new Option(OPT_COLUMN_NAMES, ""columnNames"", true, ""Column XML names; default names column labels. Example: """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,154,+ OPT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,155,+ OPT_COLUMN_NAMES
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,156,"+ "" \""cname1 cname2\"""");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,157,commandLineOptions.addOption(option);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,158,"option = new Option(OPT_PARAM_NAMES, ""paramNames"", true, ""Parameter XML names; default names are param1, param2, etc. Example: """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,159,+ OPT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,160,+ OPT_PARAM_NAMES
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,161,"+ "" \""pname1 pname2\"""");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,162,commandLineOptions.addOption(option);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,164,OptionGroup pOutTypesOptionGroup = new OptionGroup();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,165,"String pOutTypesOptionGroupDoc = OPT + OPT_PARAM_TYPES_INT + "" and "" + OPT + OPT_PARAM_TYPES_NAME + "" are mutually exclusive."";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,166,final String typesClassName = Types.class.getName();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,167,"option = new Option(OPT_PARAM_TYPES_INT, ""paramTypes"", true, ""Parameter types from """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,168,+ typesClassName
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,170,+ pOutTypesOptionGroupDoc
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,171,"+ "" Example: """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,172,+ OPT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,173,+ OPT_PARAM_TYPES_INT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,174,"+ "" \""-10 12\"""");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,175,commandLineOptions.addOption(option);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,176,"option = new Option(OPT_PARAM_TYPES_NAME, ""paramTypeNames"", true, ""Parameter """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,177,+ typesClassName
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,178,"+ "" names. """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,179,+ pOutTypesOptionGroupDoc
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,180,"+ "" Example: """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,181,+ OPT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,182,+ OPT_PARAM_TYPES_NAME
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,183,"+ "" \""CURSOR VARCHAR\"""");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,184,commandLineOptions.addOption(option);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,185,commandLineOptions.addOptionGroup(pOutTypesOptionGroup);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,187,OptionGroup modesOptionGroup = new OptionGroup();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,188,"String modesOptionGroupDoc = OPT + OPT_PARAM_MODES_INT + "" and "" + OPT + OPT_PARAM_MODES_NAME + "" are mutually exclusive."";"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,189,"option = new Option(OPT_PARAM_MODES_INT, ""paramModes"", true, ""Parameters modes ("""
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,190,+ ParameterMetaData.parameterModeIn
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,191,"+ ""=IN, """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,192,+ ParameterMetaData.parameterModeInOut
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,193,"+ ""=INOUT, """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,194,+ ParameterMetaData.parameterModeOut
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,195,"+ ""=OUT, """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,196,+ ParameterMetaData.parameterModeUnknown
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,197,"+ ""=Unknown"""
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,199,+ modesOptionGroupDoc
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,200,"+ "" Example for 2 parameters, OUT and IN: """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,201,+ OPT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,202,+ OPT_PARAM_MODES_INT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,204,+ ParameterMetaData.parameterModeOut
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,206,+ ParameterMetaData.parameterModeIn
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,208,modesOptionGroup.addOption(option);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,209,"option = new Option(OPT_PARAM_MODES_NAME, ""paramModeNames"", true, ""Parameters mode names ("""
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,210,+ PMODES
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,212,+ modesOptionGroupDoc
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,213,"+ "" Example for 2 parameters, OUT and IN: """
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,214,+ OPT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,215,+ OPT_PARAM_MODES_NAME
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,217,+ _PMODE_OUT
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,219,+ _PMODE_IN
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,221,modesOptionGroup.addOption(option);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,222,commandLineOptions.addOptionGroup(modesOptionGroup);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,223,"option = new Option(null, OPT_TRIM_L, true,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,224,"""Trims leading and trailing spaces from all column values. Column XML names can be optionally specified to set which columns to trim."");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,225,option.setOptionalArg(true);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,226,commandLineOptions.addOption(option);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,227,"option = new Option(OPT_JDBC_TO_SFMD, OPT_JDBC_TO_SFMD_L, true,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,228,"""Converts the JDBC file in the first argument to an SMFD file specified in the second argument."");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,229,option.setArgs(2);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,230,commandLineOptions.addOption(option);
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,231,"new HelpFormatter().printHelp(this.getClass().getName(), commandLineOptions);"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,234,"public void testLongLineChunking() throws ParseException, IOException {"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,235,Options options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,236,"options.addOption(""x"", ""extralongarg"", false,"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,237,"""This description has ReallyLongValuesThatAreLongerThanTheWidthOfTheColumns "" +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,238,"""and also other ReallyLongValuesThatAreHugerAndBiggerThanTheWidthOfTheColumnsBob, "" +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,239,"""yes. "");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,240,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,241,StringWriter sw = new StringWriter();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,242,"formatter.printHelp(new PrintWriter(sw), 35, this.getClass().getName(), ""Header"", options, 0, 5, ""Footer"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,243,"String expected = ""usage:"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,244,"""       org.apache.commons.cli.bug.B"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,245,"""       ugCLI162Test"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,246,"""Header"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,247,"""-x,--extralongarg     This"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,248,"""                      description"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,249,"""                      has"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,250,"""                      ReallyLongVal"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,251,"""                      uesThatAreLon"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,252,"""                      gerThanTheWid"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,253,"""                      thOfTheColumn"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,254,"""                      s and also"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,255,"""                      other"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,256,"""                      ReallyLongVal"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,257,"""                      uesThatAreHug"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,258,"""                      erAndBiggerTh"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,259,"""                      anTheWidthOfT"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,260,"""                      heColumnsBob,"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,261,"""                      yes."" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,262,"""Footer"" + CR;"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,263,"assertEquals( ""Long arguments did not split as expected"", expected, sw.toString() );"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,266,"public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,267,Options options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,268,"options.addOption(""x"", ""extralongarg"", false, ""This description is Long."" );"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,269,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,270,StringWriter sw = new StringWriter();
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,271,"formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), ""Header"", options, 0, 5, ""Footer"");"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,272,System.err.println(sw.toString());
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,273,"String expected = ""usage:"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,274,"""       org.apache.comm"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,275,"""       ons.cli.bug.Bug"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,276,"""       CLI162Test"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,277,"""Header"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,278,"""-x,--extralongarg"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,279,""" This description is"" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,280,""" Long."" + CR +"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,281,"""Footer"" + CR;"
True,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,src/test/org/apache/commons/cli/bug/BugCLI162Test.java,282,"assertEquals( ""Long arguments did not split as expected"", expected, sw.toString() );"
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,18,package org.apache.commons.cli.bug;
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,20,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,21,import java.io.StringWriter;
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,23,import org.apache.commons.cli.HelpFormatter;
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,24,import org.apache.commons.cli.Option;
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,25,import org.apache.commons.cli.Options;
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,27,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,30,* http://issues.apache.org/jira/browse/CLI-18
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,32,public class BugCLI18Test extends TestCase
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,34,public void testCLI18()
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,36,Options options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,37,"options.addOption(new Option(""a"", ""aaa"", false, ""aaaaaaa""));"
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,38,"options.addOption(new Option(null, ""bbb"", false, ""bbbbbbb dksh fkshd fkhs dkfhsdk fhskd hksdks dhfowehfsdhfkjshf skfhkshf sf jkshfk sfh skfh skf f""));"
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,39,"options.addOption(new Option(""c"", null, false, ""ccccccc""));"
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,41,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,42,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,44,"formatter.printHelp(new PrintWriter(out), 80, ""foobar"", ""dsfkfsh kdh hsd hsdh fkshdf ksdh fskdh fsdh fkshfk sfdkjhskjh fkjh fkjsh khsdkj hfskdhf skjdfh ksf khf s"", options, 2, 2, ""blort j jgj j jg jhghjghjgjhgjhg jgjhgj jhg jhg hjg jgjhghjg jhg hjg jhgjg jgjhghjg jg jgjhgjgjg jhg jhgjh"" + '\r' + '\n' + ""rarrr"", true);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,19,package org.apache.commons.cli.bug;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,21,import org.apache.commons.cli.CommandLine;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,22,import org.apache.commons.cli.CommandLineParser;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,23,import org.apache.commons.cli.MissingArgumentException;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,24,import org.apache.commons.cli.Option;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,25,import org.apache.commons.cli.Options;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,26,import org.apache.commons.cli.PosixParser;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,28,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,30,public class BugCLI71Test extends TestCase {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,32,private Options options;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,33,private CommandLineParser parser;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,35,public void setUp() {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,36,options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,38,"Option algorithm = new Option(""a"" , ""algo"", true, ""the algorithm which it to perform executing"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,39,"algorithm.setArgName(""algorithm name"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,40,options.addOption(algorithm);
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,42,"Option key = new Option(""k"" , ""key"", true, ""the key the setted algorithm uses to process"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,43,"algorithm.setArgName(""value"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,44,options.addOption(key);
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,46,parser = new PosixParser();
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,49,public void testBasic() throws Exception {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,50,"String[] args = new String[] { ""-a"", ""Caesar"", ""-k"", ""A"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,51,"CommandLine line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,52,"assertEquals( ""Caesar"", line.getOptionValue(""a"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,53,"assertEquals( ""A"", line.getOptionValue(""k"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,56,public void testMistakenArgument() throws Exception {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,57,"String[] args = new String[] { ""-a"", ""Caesar"", ""-k"", ""A"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,58,"CommandLine line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,59,"args = new String[] { ""-a"", ""Caesar"", ""-k"", ""a"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,60,"line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,61,"assertEquals( ""Caesar"", line.getOptionValue(""a"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,62,"assertEquals( ""a"", line.getOptionValue(""k"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,65,public void testLackOfError() throws Exception {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,66,"String[] args = new String[] { ""-k"", ""-a"",  ""Caesar"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,67,try {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,68,"CommandLine line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,69,"fail(""MissingArgumentException expected"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,70,} catch(MissingArgumentException e) {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,71,"assertEquals(""option missing an argument"", ""k"", e.getOption().getOpt());"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,75,public void testGetsDefaultIfOptional() throws Exception {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,76,"String[] args = new String[] { ""-k"", ""-a"", ""Caesar"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,77,"options.getOption(""k"").setOptionalArg(true);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,78,"CommandLine line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,80,"assertEquals( ""Caesar"", line.getOptionValue(""a"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,81,"assertEquals( ""a"", line.getOptionValue(""k"", ""a"") );"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,17,ackage org.apache.commons.cli2;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,19,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,20,mport java.util.Collection;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,21,mport java.util.Collections;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,22,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,23,mport java.util.LinkedList;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,24,mport java.util.List;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,26,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,28,ublic abstract class CLITestCase extends TestCase {
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,30,ublic static List list() {
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,31,eturn Collections.EMPTY_LIST;
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,34,ublic static List list(final Object args[]) {
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,35,eturn new LinkedList(Arrays.asList(args));
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,38,ublic static List list(final Object arg0) {
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,39,eturn list(new Object[] { arg0 });
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,42,"ublic static List list(final Object arg0, final Object arg1) {"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,43,"eturn list(new Object[] { arg0, arg1 });"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,46,"ublic static List list(final Object arg0, final Object arg1, final Object arg2) {"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,47,"eturn list(new Object[] { arg0, arg1, arg2 });"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,50,"ublic static List list(final Object arg0, final Object arg1, final Object arg2, final Object arg3) {"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,51,"eturn list(new Object[] { arg0, arg1, arg2, arg3 });"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,54,"ublic static List list(final Object arg0, final Object arg1, final Object arg2, final Object arg3, final Object arg4) {"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,55,"eturn list(new Object[] { arg0, arg1, arg2, arg3, arg4 });"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,58,"ublic static List list(final Object arg0, final Object arg1, final Object arg2, final Object arg3, final Object arg4, final Object arg5) {"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,59,"eturn list(new Object[] { arg0, arg1, arg2, arg3, arg4, arg5 });"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,62,"ublic static void assertListContentsEqual(final List expected, final List found) {"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,64,inal Iterator e = expected.iterator();
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,65,inal Iterator f = found.iterator();
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,67,hile (e.hasNext() && f.hasNext()) {
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,68,"ssertEquals(e.next(), f.next());"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,71,f (e.hasNext()) {
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,72,"ail(""Expected more elements"");"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,75,f (f.hasNext()) {
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,76,"ail(""Found more elements"");"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,80,"ublic static void assertContentsEqual(final Collection expected, final Collection found) {"
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,81,ssertTrue(expected.containsAll(found));
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,82,ssertTrue(found.containsAll(expected));
False,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,83,"ssertEquals(expected.size(), found.size());"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,17,ackage org.apache.commons.cli2;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,19,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,20,mport java.util.Collections;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,21,mport java.util.List;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,23,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,25,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,26,mport org.apache.commons.cli2.builder.SwitchBuilder;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,27,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,30, Tests the interaction of command line values and defaults supplied in different ways.
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,32, Tests marked _Parsed involve values parsed from a command line.
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,34, Tests marked _Method involve defaults supplied in the query method.
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,36, Tests marked _Option involce defaults specified in the model.
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,38, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,40,ublic class CommandLineDefaultsTest extends TestCase {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,43, utils to grab the default from the method
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,46,"rivate Object methodSwitch(WriteableCommandLine cl, Option o, Boolean bool) {"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,47,"eturn cl.getSwitch(o, bool);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,50,"rivate Object methodSwitchNull(WriteableCommandLine cl, Option o) {"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,51,"eturn methodSwitch(cl, o, null);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,54,"rivate Object methodSwitchOff(WriteableCommandLine cl, Option o) {"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,55,"eturn methodSwitch(cl, o, Boolean.FALSE);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,58,"rivate Object methodSwitchOn(WriteableCommandLine cl, Option o) {"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,59,"eturn methodSwitch(cl, o, Boolean.TRUE);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,62,"rivate Object methodValueMissing(WriteableCommandLine cl, Option o) {"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,63,eturn cl.getValue(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,66,"rivate Object methodValuePresent(WriteableCommandLine cl, Option o) {"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,67,"eturn cl.getValue(o, ""method"");"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,71, utils to grab the default from the option model
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,74,rivate Option optionSwitch(Boolean bool) {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,75,"eturn new SwitchBuilder().withName(""switch"").withSwitchDefault(bool)"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,76,create();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,79,rivate Option optionSwitchNull() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,80,eturn optionSwitch(null);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,83,rivate Option optionSwitchOff() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,84,eturn optionSwitch(Boolean.FALSE);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,87,rivate Option optionSwitchOn() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,88,eturn optionSwitch(Boolean.TRUE);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,91,rivate Option optionValueMissing() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,92,eturn new ArgumentBuilder().create();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,95,rivate Option optionValuePresent() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,96,eturn new ArgumentBuilder().withDefaults(
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,97,"rrays.asList(new String[] { ""option"" })).create();"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,101, utils to grab the input from the command line
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,104,"rivate WriteableCommandLine parsedSwitch(Option o, Boolean bool) {"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,105,inal List args;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,106,f (bool == null) {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,107,rgs = Collections.EMPTY_LIST;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,108, else {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,109,rgs = Collections
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,110,singletonList(String.valueOf(bool).toLowerCase());
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,112,"riteableCommandLine cl = new WriteableCommandLineImpl(o, args);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,113,.defaults(cl);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,114,f (bool != null) {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,115,"l.addSwitch(o, bool.booleanValue());"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,117,eturn cl;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,120,rivate WriteableCommandLine parsedSwitchNull(Option o) {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,121,"eturn parsedSwitch(o, null);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,124,rivate WriteableCommandLine parsedSwitchOn(Option o) {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,125,"eturn parsedSwitch(o, Boolean.TRUE);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,128,rivate WriteableCommandLine parsedValueMissing(Option o) {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,129,"riteableCommandLine cl = new WriteableCommandLineImpl(o,"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,130,ollections.EMPTY_LIST);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,131,.defaults(cl);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,132,eturn cl;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,135,rivate WriteableCommandLine parsedValuePresent(Option o) {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,136,"riteableCommandLine cl = new WriteableCommandLineImpl(o, Arrays"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,137,"asList(new String[] { ""parsed"" }));"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,138,.defaults(cl);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,139,"l.addValue(o, ""parsed"");"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,140,eturn cl;
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,144, tests
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,147,ublic void testSwitch_Method() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,148,inal Option o = optionSwitchNull();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,149,inal WriteableCommandLine cl = parsedSwitchNull(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,150,"inal Object v = methodSwitchOn(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,151,"ssertEquals(Boolean.TRUE, v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,154,ublic void testSwitch_Method_Option() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,155,inal Option o = optionSwitchOff();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,156,inal WriteableCommandLine cl = parsedSwitchNull(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,157,"inal Object v = methodSwitchOn(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,158,"ssertEquals(Boolean.TRUE, v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,161,ublic void testSwitch_Option() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,162,inal Option o = optionSwitchOn();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,163,inal WriteableCommandLine cl = parsedSwitchNull(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,164,"inal Object v = methodSwitchNull(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,165,"ssertEquals(Boolean.TRUE, v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,168,ublic void testSwitch_Parsed() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,169,inal Option o = optionSwitchNull();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,170,inal WriteableCommandLine cl = parsedSwitchOn(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,171,"inal Object v = methodSwitchNull(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,172,"ssertEquals(Boolean.TRUE, v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,175,ublic void testSwitch_Parsed_Method() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,176,inal Option o = optionSwitchOff();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,177,inal WriteableCommandLine cl = parsedSwitchOn(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,178,"inal Object v = methodSwitchNull(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,179,"ssertEquals(Boolean.TRUE, v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,182,ublic void testSwitch_Parsed_Method_Option() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,183,inal Option o = optionSwitchOff();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,184,inal WriteableCommandLine cl = parsedSwitchOn(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,185,"inal Object v = methodSwitchOff(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,186,"ssertEquals(Boolean.TRUE, v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,189,ublic void testSwitch_Parsed_Option() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,190,inal Option o = optionSwitchOff();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,191,inal WriteableCommandLine cl = parsedSwitchOn(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,192,"inal Object v = methodSwitchNull(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,193,"ssertEquals(Boolean.TRUE, v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,196,ublic void testValues() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,197,inal Option o = optionValueMissing();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,198,inal WriteableCommandLine cl = parsedValueMissing(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,199,"inal Object v = methodValueMissing(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,200,ssertNull(v);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,203,ublic void testValues_Method() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,204,inal Option o = optionValueMissing();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,205,inal WriteableCommandLine cl = parsedValueMissing(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,206,"inal Object v = methodValuePresent(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,207,"ssertEquals(""method"", v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,210,ublic void testValues_Method_Option() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,211,inal Option o = optionValuePresent();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,212,inal WriteableCommandLine cl = parsedValueMissing(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,213,"inal Object v = methodValuePresent(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,214,"ssertEquals(""method"", v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,217,ublic void testValues_Option() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,218,inal Option o = optionValuePresent();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,219,inal WriteableCommandLine cl = parsedValueMissing(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,220,"inal Object v = methodValueMissing(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,221,"ssertEquals(""option"", v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,224,ublic void testValues_Parsed() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,225,inal Option o = optionValueMissing();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,226,inal WriteableCommandLine cl = parsedValuePresent(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,227,"inal Object v = methodValueMissing(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,228,"ssertEquals(""parsed"", v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,231,ublic void testValues_Parsed_Method() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,232,inal Option o = optionValueMissing();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,233,inal WriteableCommandLine cl = parsedValuePresent(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,234,"inal Object v = methodValuePresent(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,235,"ssertEquals(""parsed"", v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,238,ublic void testValues_Parsed_Method_Option() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,239,inal Option o = optionValuePresent();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,240,inal WriteableCommandLine cl = parsedValuePresent(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,241,"inal Object v = methodValuePresent(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,242,"ssertEquals(""parsed"", v);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,245,ublic void testValues_Parsed_Option() {
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,246,inal Option o = optionValuePresent();
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,247,inal WriteableCommandLine cl = parsedValuePresent(o);
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,248,"inal Object v = methodValueMissing(cl, o);"
False,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,src/test/org/apache/commons/cli2/CommandLineDefaultsTest.java,249,"ssertEquals(""parsed"", v);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,17,ackage org.apache.commons.cli2;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,19,mport java.util.Collections;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,20,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,21,mport java.util.List;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,23,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,24,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,25,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,26,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,27,mport org.apache.commons.cli2.option.ArgumentTest;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,28,mport org.apache.commons.cli2.option.CommandTest;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,29,mport org.apache.commons.cli2.option.DefaultOptionTest;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,30,mport org.apache.commons.cli2.option.OptionTestCase;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,31,mport org.apache.commons.cli2.option.PropertyOption;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,32,mport org.apache.commons.cli2.option.SwitchTest;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,33,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,34,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,36,ublic abstract class CommandLineTestCase
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,37,xtends CLITestCase {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,38,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,39,ublic final Option present =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,40,"ew DefaultOptionBuilder().withLongName(""present"").withLongName(""alsopresent"").create();"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,41,"ublic final Option missing = new DefaultOptionBuilder().withLongName(""missing"").create();"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,42,"ublic final Option multiple = new DefaultOptionBuilder().withLongName(""multiple"").create();"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,43,"ublic final Option bool = new DefaultOptionBuilder().withLongName(""bool"").create();"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,44,ublic final Option root =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,45,ew GroupBuilder().withOption(present).withOption(missing).withOption(multiple)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,46,withOption(bool).create();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,47,rivate CommandLine commandLine;
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,49,rotected abstract CommandLine createCommandLine();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,52, @see TestCase#setUp()
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,54,ublic void setUp()
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,55,hrows Exception {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,56,uper.setUp();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,57,ommandLine = createCommandLine();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,61, Class to test for boolean hasOption(String)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,63,ublic final void testHasOptionString() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,64,"ssertTrue(commandLine.hasOption(""--present""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,65,"ssertTrue(commandLine.hasOption(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,66,"ssertFalse(commandLine.hasOption(""--missing""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,70, Class to test for boolean hasOption(Option)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,72,ublic final void testHasOptionOption() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,73,ssertTrue(commandLine.hasOption(present));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,74,ssertFalse(commandLine.hasOption(missing));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,77,ublic final void testGetOption() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,78,"ssertSame(present, commandLine.getOption(""--present""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,79,"ssertSame(present, commandLine.getOption(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,81,/TODO decide whether the following assertion is valid
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,82,"/assertSame(missing,commandLine.getOption(""--missing""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,86, Class to test for List getValues(String)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,88,ublic final void testGetValuesString() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,89,"ssertListContentsEqual(list(""present value""), commandLine.getValues(""--present""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,90,"ssertListContentsEqual(list(""value 1"", ""value 2"", ""value 3""),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,91,"ommandLine.getValues(""--multiple""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,92,"ssertTrue(commandLine.getValues(""--missing"").isEmpty());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,96," Class to test for List getValues(String, List)"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,98,ublic final void testGetValuesStringList() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,99,"ssertListContentsEqual(list(""present value""), commandLine.getValues(""--present"", null));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,100,"ssertListContentsEqual(list(""present value""), commandLine.getValues(""--alsopresent"", null));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,101,"ssertSame(commandLine.getValues(""--missing"", Collections.EMPTY_LIST),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,102,ollections.EMPTY_LIST);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,104,"inal List def = Collections.singletonList(""default value"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,105,"ssertSame(def, commandLine.getValues(""--missing"", def));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,109, Class to test for List getValues(Option)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,111,ublic final void testGetValuesOption() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,112,"ssertListContentsEqual(list(""present value""), commandLine.getValues(present));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,113,ssertTrue(commandLine.getValues(missing).isEmpty());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,117," Class to test for List getValues(Option, List)"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,119,ublic final void testGetValuesOptionList() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,120,"ssertListContentsEqual(list(""present value""), commandLine.getValues(present));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,121,"ssertSame(commandLine.getValues(missing, Collections.EMPTY_LIST), Collections.EMPTY_LIST);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,123,"inal List defs = Collections.singletonList(""custom default"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,124,"ssertSame(defs, commandLine.getValues(missing, defs));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,128, Class to test for Object getValue(String)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,130,ublic final void testGetValueString() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,131,"ssertEquals(""present value"", commandLine.getValue(""--present""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,132,"ssertEquals(""present value"", commandLine.getValue(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,133,"ssertNull(commandLine.getValue(""--missing""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,135,ry {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,136,"ommandLine.getValue(""--multiple"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,137,"ail(""expected IllegalStateException"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,138, catch (IllegalStateException e) {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,139,"ssertEquals(resources.getMessage(ResourceConstants.ARGUMENT_TOO_MANY_VALUES),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,140,.getMessage());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,145," Class to test for Object getValue(String, Object)"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,147,ublic final void testGetValueStringObject() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,148,"ssertEquals(""present value"", commandLine.getValue(""--present"", ""default value""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,149,"ssertEquals(""present value"", commandLine.getValue(""--alsopresent"", ""default value""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,150,"ssertEquals(""default value"", commandLine.getValue(""--missing"", ""default value""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,152,ry {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,153,"ommandLine.getValue(""--multiple"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,154,"ail(""expected IllegalStateException"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,155, catch (IllegalStateException e) {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,156,"ssertEquals(resources.getMessage(ResourceConstants.ARGUMENT_TOO_MANY_VALUES),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,157,.getMessage());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,162, Class to test for Object getValue(Option)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,164,ublic final void testGetValueOption() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,165,"ssertEquals(""present value"", commandLine.getValue(present));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,166,ssertNull(commandLine.getValue(missing));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,168,ry {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,169,ommandLine.getValue(multiple);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,170,"ail(""expected IllegalStateException"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,171, catch (IllegalStateException e) {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,172,"ssertEquals(resources.getMessage(ResourceConstants.ARGUMENT_TOO_MANY_VALUES),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,173,.getMessage());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,178," Class to test for Object getValue(Option, Object)"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,180,ublic final void testGetValueOptionObject() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,181,"ssertEquals(""present value"", commandLine.getValue(present, ""default value""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,182,"ssertEquals(""default value"", commandLine.getValue(missing, ""default value""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,184,ry {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,185,ommandLine.getValue(multiple);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,186,"ail(""expected IllegalStateException"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,187, catch (IllegalStateException e) {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,188,"ssertEquals(resources.getMessage(ResourceConstants.ARGUMENT_TOO_MANY_VALUES),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,189,.getMessage());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,194, Class to test for Boolean getSwitch(String)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,196,ublic final void testGetSwitchString() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,197,"ssertEquals(Boolean.TRUE, commandLine.getSwitch(""--bool""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,198,"ssertNull(commandLine.getSwitch(""--missing""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,202," Class to test for Boolean getSwitch(String, Boolean)"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,204,ublic final void testGetSwitchStringBoolean() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,205,"ssertEquals(Boolean.TRUE, commandLine.getSwitch(""--bool"", Boolean.FALSE));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,206,"ssertEquals(Boolean.FALSE, commandLine.getSwitch(""--missing"", Boolean.FALSE));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,210, Class to test for Boolean getSwitch(Option)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,212,ublic final void testGetSwitchOption() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,213,"ssertEquals(Boolean.TRUE, commandLine.getSwitch(bool));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,214,ssertNull(commandLine.getSwitch(missing));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,218," Class to test for Boolean getSwitch(Option, Boolean)"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,220,ublic final void testGetSwitchOptionBoolean() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,221,"ssertEquals(Boolean.TRUE, commandLine.getSwitch(bool, Boolean.FALSE));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,222,"ssertEquals(Boolean.FALSE, commandLine.getSwitch(missing, Boolean.FALSE));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,226, Class to test for String getProperty(String)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,228,ublic final void testGetPropertyString() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,229,"ssertEquals(""present property"", commandLine.getProperty(""present""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,230,"ssertNull(commandLine.getProperty(""missing""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,234," Class to test for String getProperty(String, String)"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,236,ublic final void testGetPropertyStringString() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,237,"ssertEquals(""present property"", commandLine.getProperty(new PropertyOption(), ""present"", ""default property""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,238,"ssertEquals(""default property"", commandLine.getProperty(new PropertyOption(), ""missing"", ""default property""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,241,ublic final void testGetProperties() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,242,"ssertTrue(commandLine.getProperties().containsAll(list(""present"")));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,246, Class to test for int getOptionCount(String)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,248,ublic final void testGetOptionCountString() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,249,"/ one option, one switch"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,250,"ssertTrue(1 <= commandLine.getOptionCount(""--present""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,251,"ssertTrue(1 <= commandLine.getOptionCount(""--bool""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,252,"ssertEquals(0, commandLine.getOptionCount(""--missing""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,256, Class to test for int getOptionCount(Option)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,258,ublic final void testGetOptionCountOption() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,259,"/ one option, one switch"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,260,ssertTrue(1 <= commandLine.getOptionCount(present));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,261,ssertTrue(1 <= commandLine.getOptionCount(bool));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,262,"ssertEquals(0, commandLine.getOptionCount(missing));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,265,ublic final void testGetOptions() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,266,/TODO Implement getOptions().
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,269,ublic final void testGetOptionTriggers() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,270,/TODO Implement getOptionTriggers().
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,273,/ OLD TESTS FOLLOW
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,274,ublic final void testProperties() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,275,inal PropertyOption option = new PropertyOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,276,inal List args = CLITestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,277,"inal WriteableCommandLine writeable = OptionTestCase.commandLine(option, args);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,279,ssertTrue(writeable.getProperties(option).isEmpty());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,281,"riteable.addProperty(option, ""myprop"", ""myval"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,282,"ssertEquals(1, writeable.getProperties(option).size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,283,"ssertEquals(""myval"", writeable.getProperty(option, ""myprop""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,285,"riteable.addProperty(option, ""myprop"", ""myval2"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,286,"ssertEquals(1, writeable.getProperties(option).size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,287,"ssertEquals(""myval2"", writeable.getProperty(option, ""myprop""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,289,"riteable.addProperty(option, ""myprop2"", ""myval3"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,290,"ssertEquals(2, writeable.getProperties(option).size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,291,"ssertEquals(""myval3"", writeable.getProperty(option, ""myprop2""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,294,ublic final void testOptions() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,295,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,296,inal List args = CLITestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,297,"inal WriteableCommandLine writeable = OptionTestCase.commandLine(option, args);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,299,inal Option start = CommandTest.buildStartCommand();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,301,ssertFalse(writeable.hasOption(start));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,302,"ssertFalse(writeable.hasOption(""start""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,303,"ssertFalse(writeable.hasOption(""go""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,305,riteable.addOption(start);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,307,ssertTrue(writeable.hasOption(start));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,308,"ssertTrue(writeable.hasOption(""start""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,309,"ssertTrue(writeable.hasOption(""go""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,312,ublic final void testValues() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,313,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,314,inal List args = CLITestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,315,"inal WriteableCommandLine writeable = OptionTestCase.commandLine(option, args);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,317,inal Option start = CommandTest.buildStartCommand();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,319,ssertNull(writeable.getValue(start));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,320,ssertTrue(writeable.getValues(start).isEmpty());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,322,riteable.addOption(start);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,324,ssertTrue(writeable.getValues(start).isEmpty());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,326,"riteable.addValue(start, ""file1"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,328,"ssertEquals(""file1"", writeable.getValue(start));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,329,"ssertEquals(""file1"", writeable.getValue(""start""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,330,"ssertEquals(""file1"", writeable.getValue(""go""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,331,"ssertEquals(1, writeable.getValues(start).size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,332,"ssertEquals(1, writeable.getValues(""start"").size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,333,"ssertEquals(1, writeable.getValues(""go"").size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,334,"ssertTrue(writeable.getValues(start).contains(""file1""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,335,"ssertTrue(writeable.getValues(""start"").contains(""file1""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,336,"ssertTrue(writeable.getValues(""go"").contains(""file1""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,338,"riteable.addValue(start, ""file2"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,340,ry {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,341,riteable.getValue(start);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,342,"ail(""Cannot get single value if multiple are present"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,343, catch (IllegalStateException ise) {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,344,"ssertEquals(resources.getMessage(ResourceConstants.ARGUMENT_TOO_MANY_VALUES),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,345,se.getMessage());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,348,ry {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,349,"riteable.getValue(""start"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,350,"ail(""Cannot get single value if multiple are present"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,351, catch (IllegalStateException ise) {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,352,"ssertEquals(resources.getMessage(ResourceConstants.ARGUMENT_TOO_MANY_VALUES),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,353,se.getMessage());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,356,"riteable.getValues(start).add(""file3"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,359,ublic final void testSwitches() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,360,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,361,inal List args = CLITestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,362,"inal WriteableCommandLine writeable = OptionTestCase.commandLine(option, args);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,364,inal Option start = CommandTest.buildStartCommand();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,366,ssertNull(writeable.getSwitch(start));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,367,"ssertNull(writeable.getSwitch(""start""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,368,"ssertNull(writeable.getSwitch(""go""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,370,"riteable.addSwitch(start, true);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,372,ry {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,373,"riteable.addSwitch(start, false);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,374,"ail(""Switch cannot be changed"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,375, catch (IllegalStateException ise) {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,376,"ssertEquals(resources.getMessage(ResourceConstants.SWITCH_ALREADY_SET),"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,377,se.getMessage());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,381,ublic final void testSwitches_True() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,382,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,383,inal List args = CLITestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,384,"inal WriteableCommandLine writeable = OptionTestCase.commandLine(option, args);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,386,inal Option start = CommandTest.buildStartCommand();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,388,"riteable.addSwitch(start, true);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,389,"ssertSame(Boolean.TRUE, writeable.getSwitch(start));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,392,ublic final void testSwitches_False() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,393,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,394,inal List args = CLITestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,395,"inal WriteableCommandLine writeable = OptionTestCase.commandLine(option, args);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,397,inal Option start = CommandTest.buildStartCommand();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,399,"riteable.addSwitch(start, false);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,400,"ssertSame(Boolean.FALSE, writeable.getSwitch(start));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,403,/    public final void testLooksLikeOption() {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,404,/        final Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,405,/        final List args = OptionTestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,406,/        final WriteableCommandLine commandLine =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,407,"/            OptionTestCase.commandLine(option, args);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,409,"/        assertTrue(commandLine.looksLikeOption(""-D""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,410,"/        assertFalse(commandLine.looksLikeOption(""--help""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,411,"/        assertFalse(commandLine.looksLikeOption(""+display""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,412,"/        assertFalse(commandLine.looksLikeOption(""myprefix""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,413,"/        assertFalse(commandLine.looksLikeOption(""myprefix2""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,414,"/        assertFalse(commandLine.looksLikeOption(""myprefference""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,415,"/        assertFalse(commandLine.looksLikeOption(""/SCANDISK""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,416,"/        assertFalse(commandLine.looksLikeOption(""update""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,418,ublic final void testGetOptions_Order()
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,419,hrows OptionException {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,420,inal Option help = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,421,inal Option login = CommandTest.buildLoginCommand();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,422,inal Option targets = ArgumentTest.buildTargetsArgument();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,424,inal Group group =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,425,ew GroupBuilder().withOption(help).withOption(login).withOption(targets).create();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,427,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,428,arser.setGroup(group);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,430,inal CommandLine cl =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,431,"arser.parse(new String[] { ""login"", ""rob"", ""--help"", ""target1"", ""target2"" });"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,433,inal Iterator i = cl.getOptions().iterator();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,435,"ssertSame(login, i.next());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,436,"ssertSame(group, i.next());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,437,"ssertSame(help, i.next());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,438,"ssertSame(targets, i.next());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,439,"ssertSame(targets, i.next());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,440,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,443,ublic final void testGetOptionCount()
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,444,hrows OptionException {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,445,inal Option help = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,446,inal Option login = CommandTest.buildLoginCommand();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,447,inal Option targets = ArgumentTest.buildTargetsArgument();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,448,inal Option display = SwitchTest.buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,450,inal Group group =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,451,ew GroupBuilder().withOption(help).withOption(login).withOption(targets)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,452,withOption(display).create();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,454,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,455,arser.setGroup(group);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,457,inal CommandLine cl =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,458,arser.parse(new String[] {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,459,"--help"", ""login"", ""rob"", ""+display"", ""--help"", ""--help"", ""target1"","
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,460,"target2"""
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,463,"ssertEquals(1, cl.getOptionCount(login));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,464,"ssertEquals(3, cl.getOptionCount(help));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,465,"ssertEquals(2, cl.getOptionCount(targets));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,466,"ssertEquals(1, cl.getOptionCount(display));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,469,ublic final void testGetOptionCount_Strings()
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,470,hrows OptionException {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,471,inal Option help = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,472,inal Option login = CommandTest.buildLoginCommand();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,473,inal Option targets = ArgumentTest.buildTargetsArgument();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,474,inal Option display = SwitchTest.buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,476,inal Group group =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,477,ew GroupBuilder().withOption(help).withOption(login).withOption(targets)
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,478,withOption(display).create();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,480,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,481,arser.setGroup(group);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,483,inal CommandLine cl =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,484,arser.parse(new String[] {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,485,"--help"", ""login"", ""rob"", ""+display"", ""--help"", ""--help"", ""target1"","
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,486,"target2"""
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,489,"ssertEquals(1, cl.getOptionCount(""login""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,490,"ssertEquals(3, cl.getOptionCount(""-?""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,491,"ssertEquals(1, cl.getOptionCount(""+display""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,494,ublic final void testOptionAsArgument()
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,495,hrows OptionException {
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,496,"inal Option p = new DefaultOptionBuilder().withShortName(""p"").create();"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,497,inal Argument argument = new ArgumentBuilder().create();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,498,inal Option withArgument =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,499,"ew DefaultOptionBuilder().withShortName(""attr"").withArgument(argument).create();"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,501,inal Group group = new GroupBuilder().withOption(p).withOption(withArgument).create();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,503,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,504,arser.setGroup(group);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,506,"inal CommandLine cl = parser.parse(new String[] { ""-p"", ""-attr"", ""p"" });"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,508,"ssertEquals(1, cl.getOptionCount(""-p""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,509,"ssertTrue(cl.hasOption(""-p""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,510,"ssertTrue(cl.hasOption(""-attr""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,511,"ssertTrue(cl.getValue(""-attr"").equals(""p""));"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,17,ackage org.apache.commons.cli2;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,19,mport java.io.IOException;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,20,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,21,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,22,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,23,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,24,mport java.util.List;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,26,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,28,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,29,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,30,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,31,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,32,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,33,mport org.apache.commons.cli2.option.DefaultOption;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,34,mport org.apache.commons.cli2.option.PropertyOption;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,35,mport org.apache.commons.cli2.util.HelpFormatter;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,38, @author Rob
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,40,ublic class DocumentationTest extends TestCase {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,42,"ublic void testBasicUsage() throws IOException, OptionException {"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,43,elpFormatter helpFormatter = new HelpFormatter();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,44,/ignore all printed
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,45,elpFormatter.setPrintWriter(new PrintWriter(new StringWriter()));
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,48, --version -? -h --help -log file -s|-q|-v|-d Bursting File/Num/Date
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,49, validation Switches Commands Auto help Auto exception help
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,52,efaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,53,ption version =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,54,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,55,"withLongName(""version"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,56,"withDescription(""Displays version information and then exits"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,57,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,59,ption help =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,60,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,61,"withShortName(""h"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,62,"withShortName(""?"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,63,"withLongName(""help"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,64,"withDescription(""Displays help on usage and then exits"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,65,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,67,rgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,68,rgument logFile =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,69,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,70,"withDescription(""The log file to write to"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,71,"withName(""file"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,72,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,73,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,74,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,75,ption log =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,76,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,77,withArgument(logFile)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,78,"withShortName(""log"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,79,"withDescription(""Log progress information to a file"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,80,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,82,roupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,83,roup outputQuality =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,84,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,85,"withName(""quality"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,86,"withDescription(""Controls the quality of console output"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,87,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,88,withOption(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,89,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,90,"withShortName(""s"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,91,"withDescription(""Silent"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,92,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,93,withOption(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,94,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,95,"withShortName(""q"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,96,"withDescription(""Quiet"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,97,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,98,withOption(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,99,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,100,"withShortName(""n"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,101,"withDescription(""Normal"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,102,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,103,withOption(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,104,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,105,"withShortName(""v"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,106,"withDescription(""Verbose"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,107,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,108,withOption(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,109,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,110,"withShortName(""d"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,111,"withDescription(""Debug"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,112,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,113,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,115,roup options =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,116,ew GroupBuilder()
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,117,"withName(""options"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,118,withOption(version)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,119,withOption(help)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,120,withOption(log)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,121,withOption(outputQuality)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,122,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,124,"inal String[] args = new String[] { ""--bad-option"" };"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,126,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,127,arser.setHelpFormatter(helpFormatter);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,128,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,129,arser.setHelpOption(help);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,130,ommandLine commandLine = parser.parseAndHelp(args);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,131,f (commandLine != null) {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,132,f (commandLine.hasOption(version)) {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,133,"ystem.out.println(""MyApp ver 1.0"");"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,134,eturn;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,136,"f (commandLine.hasOption(""-log"")) {"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,137,"tring filename = (String)commandLine.getValue(""-log"");"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,142,ry {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,143,ommandLine = parser.parse(args);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,144,"ail(""Unexpected Option!"");"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,146,atch (OptionException uoe) {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,147,ssertEquals(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,148,"Unexpected --bad-option while processing options"","
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,149,oe.getMessage());
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,153,ublic void testManualIntroduction() {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,155,efaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,156,rgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,157,roupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,159,efaultOption xmlOption =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,160,Builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,161,"withLongName(""xml"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,162,"withDescription(""Output using xml format"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,163,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,165,rgument pathArgument =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,166,Builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,167,"withName(""path"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,168,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,169,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,170,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,172,roup outputChildren =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,173,Builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,174,withOption(xmlOption)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,175,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,177,ption outputOption =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,178,Builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,179,"withLongName(""output"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,180,"withDescription(""Outputs to a file"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,181,withArgument(pathArgument)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,182,withChildren(outputChildren)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,183,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,187,roup options = outputChildren;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,188,elpFormatter hf = new HelpFormatter();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,190,arser p = new Parser();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,191,.setGroup(options);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,192,.setHelpFormatter(hf);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,193,".setHelpTrigger(""--help"");"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,194,ommandLine cl = p.parseAndHelp(new String[]{});
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,195,f(cl==null) {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,196,ystem.exit(-1);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,201,"l = new WriteableCommandLineImpl(outputChildren,new ArrayList());"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,203,/ if we have --output option
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,204,"f(cl.hasOption(""--output"")) {"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,205,/ grab the path
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,206,"tring path = (String)cl.getValue(""--output"");"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,207,/ grab the format
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,208,"oolean xml = cl.hasOption(""--xml"");"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,209,/ configure the application's output
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,210,"onfigureOutput(path,xml);"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,218,"rivate void configureOutput(String path, boolean xml) {"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,219,/ TODO Auto-generated method stub
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,223,"ublic void testExampleAnt() throws IOException, OptionException {"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,224,/ Apache Ant version 1.6.1 compiled on February 12 2004
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,226,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,227,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,228,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,230,ption help =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,231,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,232,"withShortName(""help"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,233,"withShortName(""h"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,234,"withDescription(""print this message"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,235,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,236,ption projecthelp =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,237,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,238,"withShortName(""projecthelp"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,239,"withShortName(""p"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,240,"withDescription(""print project help information"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,241,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,242,ption version =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,243,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,244,"withShortName(""version"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,245,"withDescription(""print the version information and exit"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,246,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,247,ption diagnostics =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,248,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,249,"withShortName(""diagnostics"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,250,"withDescription(""print information that might be helpful to diagnose or report problems."")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,251,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,252,ption quiet =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,253,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,254,"withShortName(""quiet"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,255,"withShortName(""q"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,256,"withDescription(""be extra quiet"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,257,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,258,ption verbose =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,259,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,260,"withShortName(""verbose"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,261,"withShortName(""v"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,262,"withDescription(""be extra verbose"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,263,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,264,ption debug =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,265,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,266,"withShortName(""debug"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,267,"withShortName(""d"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,268,"withDescription(""print debugging information"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,269,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,270,ption emacs =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,271,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,272,"withShortName(""emacs"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,273,"withShortName(""e"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,274,"withDescription(""produce logging information without adornments"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,275,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,276,ption lib =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,277,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,278,"withShortName(""lib"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,279,"withDescription(""specifies a path to search for jars and classes"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,280,withArgument(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,281,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,282,"withName(""path"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,283,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,284,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,285,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,286,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,287,ption logfile =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,288,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,289,"withShortName(""logfile"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,290,"withShortName(""l"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,291,"withDescription(""use given file for log"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,292,withArgument(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,293,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,294,"withName(""file"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,295,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,296,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,297,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,298,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,299,ption logger =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,300,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,301,"withShortName(""logger"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,302,"withDescription(""the class which is to perform logging"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,303,withArgument(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,304,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,305,"withName(""classname"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,306,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,307,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,308,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,309,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,310,ption listener =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,311,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,312,"withShortName(""listener"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,313,"withDescription(""add an instance of class as a project listener"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,314,withArgument(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,315,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,316,"withName(""classname"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,317,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,318,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,319,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,320,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,321,ption noinput =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,322,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,323,"withShortName(""noinput"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,324,"withDescription(""do not allow interactive input"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,325,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,326,ption buildfile =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,327,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,328,"withShortName(""buildfile"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,329,"withShortName(""file"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,330,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,331,"withDescription(""use given buildfile"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,332,withArgument(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,333,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,334,"withName(""file"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,335,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,336,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,337,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,338,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,339,ption property = new PropertyOption();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,340,ption propertyfile =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,341,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,342,"withShortName(""propertyfile"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,343,"withDescription(""load all properties from file with -D properties taking precedence"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,344,withArgument(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,345,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,346,"withName(""name"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,347,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,348,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,349,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,350,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,351,ption inputhandler =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,352,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,353,"withShortName(""inputhandler"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,354,"withDescription(""the class which will handle input requests"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,355,withArgument(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,356,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,357,"withName(""class"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,358,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,359,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,360,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,361,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,362,ption find =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,363,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,364,"withShortName(""find"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,365,"withShortName(""s"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,366,"withDescription(""search for buildfile towards the root of the filesystem and use it"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,367,withArgument(
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,368,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,369,"withName(""file"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,370,withMinimum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,371,withMaximum(1)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,372,create())
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,373,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,374,"ption targets = abuilder.withName(""target"").create();"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,376,roup options =
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,377,builder
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,378,"withName(""options"")"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,379,withOption(help)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,380,withOption(projecthelp)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,381,withOption(version)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,382,withOption(diagnostics)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,383,withOption(quiet)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,384,withOption(verbose)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,385,withOption(debug)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,386,withOption(emacs)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,387,withOption(lib)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,388,withOption(logfile)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,389,withOption(logger)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,390,withOption(listener)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,391,withOption(noinput)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,392,withOption(buildfile)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,393,withOption(property)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,394,withOption(propertyfile)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,395,withOption(inputhandler)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,396,withOption(find)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,397,withOption(targets)
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,398,create();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,401,tring[] args = new String[]{};
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,403,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,404,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,405,ommandLine cl = parser.parse(args);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,407,f(cl.hasOption(help)) {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,408,/displayHelp();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,409,eturn;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,411,"f(cl.hasOption(""-version"")) {"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,412,/displayVersion();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,413,eturn;
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,415,f(cl.hasOption(logfile)) {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,416,tring file = (String)cl.getValue(logfile);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,417,/setLogFile();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,419,ist targetList = cl.getValues(targets);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,420,or (Iterator i = targetList.iterator(); i.hasNext();) {
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,421,tring target = (String) i.next();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,422,/doTarget(target);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,427,elpFormatter hf = new HelpFormatter();
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,428,"f.setShellCommand(""ant"");"
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,429,f.getFullUsageSettings().add(DisplaySetting.DISPLAY_GROUP_NAME);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,430,f.getFullUsageSettings().add(DisplaySetting.DISPLAY_GROUP_ARGUMENT);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,431,f.getFullUsageSettings().remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,433,f.getLineUsageSettings().add(DisplaySetting.DISPLAY_PROPERTY_OPTION);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,434,f.getLineUsageSettings().add(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,435,f.getLineUsageSettings().add(DisplaySetting.DISPLAY_ARGUMENT_BRACKETED);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,437,f.getDisplaySettings().remove(DisplaySetting.DISPLAY_GROUP_ARGUMENT);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,439,f.setGroup(options);
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,440,/ redirect printed stuff to a string
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,441,f.setPrintWriter(new PrintWriter(new StringWriter()));
False,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,442,f.print();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,17,ackage org.apache.commons.cli2;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,19,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,20,mport java.util.List;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,21,mport java.util.Set;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,23,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,25,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,26,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,27,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,28,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,31, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,33,ublic class PrecedenceTest extends TestCase {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,34,"rivate final String[] args = new String[] { ""-file"" };"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,36,ublic void testSimple() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,37,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,39,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,40,ew GroupBuilder()
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,41,"withOption(oBuilder.withShortName(""file"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,42,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,44,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,45,"ssertEquals(new String[] { ""-file"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,48,ublic void testArgument() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,49,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,50,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,52,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,53,ew GroupBuilder()
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,54,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,55,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,56,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,57,withArgument(aBuilder.create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,58,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,59,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,61,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,62,"ssertEquals(new String[] { ""-f"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,65,ublic void testBurst() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,66,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,67,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,68,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,69,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,70,"withOption(oBuilder.withShortName(""f"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,71,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,72,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,73,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,74,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,76,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,77,"ssertEquals(new String[] { ""-f"", ""-i"", ""-l"", ""-e"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,80,ublic void testChildren() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,81,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,82,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,84,inal Group children =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,85,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,86,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,87,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,88,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,89,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,90,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,91,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,92,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,93,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,94,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,95,withChildren(children)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,96,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,97,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,99,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,100,"ssertEquals(new String[] { ""-f"", ""-i"", ""-l"", ""-e"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,103,ublic void XtestSimpleVsArgument() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,104,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,105,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,106,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,108,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,109,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,110,"withOption(oBuilder.withShortName(""file"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,111,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,112,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,113,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,114,withArgument(aBuilder.create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,115,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,116,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,118,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,119,"ssertEquals(new String[] { ""-f"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,122,ublic void XtestSimpleVsBurst() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,123,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,124,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,125,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,126,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,127,"withOption(oBuilder.withShortName(""file"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,128,"withOption(oBuilder.withShortName(""f"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,129,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,130,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,131,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,132,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,134,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,135,"ssertEquals(new String[] { ""-f"", ""-i"", ""-l"", ""-e"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,138,ublic void XtestSimpleVsChildren() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,139,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,140,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,142,inal Group children =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,143,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,144,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,145,"Builder.withShortName(""i"").withLongName(""ci"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,146,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,147,"Builder.withShortName(""l"").withLongName(""cl"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,148,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,149,"Builder.withShortName(""e"").withLongName(""ce"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,150,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,152,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,153,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,154,"withOption(oBuilder.withShortName(""file"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,155,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,156,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,157,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,158,withChildren(children)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,159,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,160,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,162,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,163,ssertEquals(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,164,"ew String[] { ""-f"", ""-i"", ""--ci"", ""-l"", ""--cl"", ""-e"", ""--ce"" },"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,165,l);
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,168,ublic void testArgumentVsBurst() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,169,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,170,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,171,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,173,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,174,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,175,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,176,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,177,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,178,withArgument(aBuilder.create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,179,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,180,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,181,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,182,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,183,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,185,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,186,"ssertEquals(new String[] { ""-f"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,189,ublic void testArgumentVsChildren() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,190,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,191,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,192,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,194,inal Group children =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,195,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,196,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,197,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,198,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,199,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,200,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,201,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,202,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,203,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,204,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,205,withChildren(children)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,206,withArgument(aBuilder.create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,207,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,208,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,210,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,211,"ssertEquals(new String[] { ""-f"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,214,ublic void testBurstVsChildren() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,215,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,216,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,218,inal Group children =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,219,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,220,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,221,"Builder.withShortName(""i"").withLongName(""ci"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,222,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,223,"Builder.withShortName(""l"").withLongName(""cl"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,224,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,225,"Builder.withShortName(""e"").withLongName(""ce"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,226,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,228,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,229,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,230,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,231,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,232,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,233,withChildren(children)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,234,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,235,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,236,"Builder.withShortName(""i"").withLongName(""bi"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,237,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,238,"Builder.withShortName(""l"").withLongName(""bl"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,239,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,240,"Builder.withShortName(""e"").withLongName(""be"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,241,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,243,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,244,ssertEquals(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,245,"ew String[] { ""-f"", ""-i"", ""--ci"", ""-l"", ""--cl"", ""-e"", ""--ce"" },"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,246,l);
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,249,ublic void XtestSimpleVsArgumentVsBurst() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,250,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,251,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,252,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,254,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,255,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,256,"withOption(oBuilder.withShortName(""file"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,257,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,258,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,259,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,260,withArgument(aBuilder.create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,261,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,262,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,263,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,264,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,265,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,267,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,268,"ssertEquals(new String[] { ""-f"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,271,ublic void XtestSimpleVsArgumentVsChildren() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,272,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,273,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,274,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,276,inal Group children =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,277,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,278,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,279,"Builder.withShortName(""i"").withLongName(""ci"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,280,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,281,"Builder.withShortName(""l"").withLongName(""cl"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,282,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,283,"Builder.withShortName(""e"").withLongName(""ce"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,284,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,286,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,287,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,288,"withOption(oBuilder.withShortName(""file"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,289,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,290,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,291,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,292,withChildren(children)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,293,withArgument(aBuilder.create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,294,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,295,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,297,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,298,"ssertEquals(new String[] { ""-f"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,301,ublic void XtestSimpleVsBurstVsChildren() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,302,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,303,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,305,inal Group children =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,306,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,307,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,308,"Builder.withShortName(""i"").withLongName(""ci"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,309,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,310,"Builder.withShortName(""l"").withLongName(""cl"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,311,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,312,"Builder.withShortName(""e"").withLongName(""ce"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,313,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,315,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,316,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,317,"withOption(oBuilder.withShortName(""file"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,318,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,319,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,320,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,321,withChildren(children)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,322,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,323,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,324,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,325,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,326,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,328,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,329,"ssertEquals(new String[] { ""-f"", ""-i"", ""-l"", ""-e"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,332,ublic void testArgumentVsBurstVsChildren() throws OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,333,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,334,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,335,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,337,inal Group children =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,338,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,339,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,340,"Builder.withShortName(""i"").withLongName(""ci"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,341,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,342,"Builder.withShortName(""l"").withLongName(""cl"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,343,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,344,"Builder.withShortName(""e"").withLongName(""ce"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,345,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,347,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,348,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,349,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,350,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,351,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,352,withChildren(children)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,353,withArgument(aBuilder.create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,354,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,355,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,356,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,357,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,358,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,360,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,361,"ssertEquals(new String[] { ""-f"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,364,ublic void XtestSimpleVsArgumentVsBurstVsChildren()
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,365,hrows OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,366,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,367,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,368,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,370,inal Group children =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,371,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,372,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,373,"Builder.withShortName(""i"").withLongName(""ci"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,374,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,375,"Builder.withShortName(""l"").withLongName(""cl"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,376,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,377,"Builder.withShortName(""e"").withLongName(""ce"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,378,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,380,inal Group options =
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,381,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,382,"withOption(oBuilder.withShortName(""file"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,383,withOption(
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,384,Builder
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,385,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,386,withChildren(children)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,387,withArgument(aBuilder.create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,388,create())
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,389,"withOption(oBuilder.withShortName(""i"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,390,"withOption(oBuilder.withShortName(""l"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,391,"withOption(oBuilder.withShortName(""e"").create())"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,392,create();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,394,"inal CommandLine cl = buildCommandLine(options, args);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,395,"ssertEquals(new String[] { ""-f"" }, cl);"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,398,"ublic CommandLine buildCommandLine(final Group group, final String[] arguments)"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,399,hrows OptionException {
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,400,arser p = new Parser();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,401,.setGroup(group);
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,402,eturn p.parse(arguments);
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,405,"ublic void assertEquals(final String options[], final CommandLine line) {"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,406,inal List expected = Arrays.asList(options);
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,407,inal Set actual = line.getOptionTriggers();
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,409,ssertTrue(expected.containsAll(actual));
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,410,ssertTrue(actual.containsAll(expected));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,17,ackage org.apache.commons.cli2;
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,19,mport org.apache.commons.cli2.option.ArgumentTest;
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,20,mport org.apache.commons.cli2.option.PropertyOption;
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,23, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,25,ublic abstract class WriteableCommandLineTestCase extends CommandLineTestCase {
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,27,rivate WriteableCommandLine writeable;
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,29,rotected abstract WriteableCommandLine createWriteableCommandLine();
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,31,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,32, @see org.apache.commons.cli2.CommandLineTest#createCommandLine()
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,34,rotected final CommandLine createCommandLine() {
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,35,inal WriteableCommandLine cl = createWriteableCommandLine();
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,36,l.addOption(present);
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,37,"l.addProperty(new PropertyOption(), ""present"",""present property"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,38,"l.addSwitch(bool,true);"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,39,"l.addValue(present,""present value"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,40,l.addOption(multiple);
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,41,"l.addValue(multiple,""value 1"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,42,"l.addValue(multiple,""value 2"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,43,"l.addValue(multiple,""value 3"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,44,eturn cl;
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,48, @see CommandLineTest#setUp()
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,50,ublic void setUp() throws Exception {
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,51,uper.setUp();
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,52,riteable = createWriteableCommandLine();
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,54,ublic final void testAddOption() {
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,55,ssertFalse(writeable.hasOption(present));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,56,riteable.addOption(present);
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,57,ssertTrue(writeable.hasOption(present));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,59,ublic final void testAddValue() {
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,60,ssertFalse(writeable.hasOption(present));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,61,ssertTrue(writeable.getValues(present).isEmpty());
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,62,"riteable.addValue(present,""value"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,63,"ssertContentsEqual(list(""value""),writeable.getValues(present));"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,65,/ most options shouldn't appear due to adding values
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,66,ssertFalse(writeable.hasOption(present));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,68,inal Argument arg = ArgumentTest.buildHostArgument();
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,70,ssertFalse(writeable.hasOption(arg));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,71,ssertTrue(writeable.getValues(arg).isEmpty());
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,72,"riteable.addValue(arg,""value"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,73,"ssertContentsEqual(list(""value""),writeable.getValues(arg));"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,75,/ Arguments should force the option present
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,76,ssertTrue(writeable.hasOption(arg));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,78,ublic final void testAddSwitch() {
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,79,ssertFalse(writeable.hasOption(present));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,80,ssertNull(writeable.getSwitch(present));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,81,"riteable.addSwitch(present,true);"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,82,"ssertEquals(Boolean.TRUE,writeable.getSwitch(present));"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,83,ssertTrue(writeable.hasOption(present));
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,85,ublic final void testAddProperty() {
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,86,"ssertNull(writeable.getProperty(new PropertyOption(), ""present""));"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,87,"riteable.addProperty(new PropertyOption(), ""present"",""present value"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,88,"ssertEquals(""present value"",writeable.getProperty(new PropertyOption(), ""present""));"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,90,ublic final void testLooksLikeOption() {
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,91,/TODO Implement looksLikeOption().
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,17,ackage org.apache.commons.cli2.application;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,19,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,20,mport java.util.List;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,24,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,25,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,26,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,27,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,28,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,29,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,30,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,31,mport org.apache.commons.cli2.option.PropertyOption;
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,33,/TODO Build up AntTest like CpTest
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,34,ublic class AntTest extends TestCase {
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,35,ublic void testAnt() throws OptionException {
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,36,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,37,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,38,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,40,inal Group options =
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,41,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,42,"withName(""ant"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,43,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,44,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,45,"withShortName(""help"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,46,"withDescription(""print this message"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,47,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,48,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,49,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,50,"withShortName(""projecthelp"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,51,"withDescription(""print project help information"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,52,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,53,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,54,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,55,"withShortName(""version"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,56,"withDescription(""print the version information and exit"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,57,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,58,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,59,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,60,"withShortName(""diagnostics"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,61,"withDescription(""print information that might be helpful to diagnose or report problems."")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,62,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,63,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,64,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,65,"withShortName(""quiet"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,66,"withShortName(""q"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,67,"withDescription(""be extra quiet"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,68,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,69,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,70,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,71,"withShortName(""verbose"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,72,"withShortName(""v"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,73,"withDescription(""be extra verbose"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,74,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,75,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,76,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,77,"withShortName(""debug"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,78,"withDescription(""print debugging information"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,79,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,80,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,81,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,82,"withShortName(""emacs"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,83,"withDescription(""produce logging information without adornments"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,84,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,85,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,86,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,87,"withShortName(""logfile"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,88,"withShortName(""l"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,89,"withDescription(""use given file for log"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,90,withArgument(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,91,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,92,"withName(""file"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,93,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,94,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,95,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,96,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,97,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,98,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,99,"withShortName(""logger"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,100,"withDescription(""the class which is to perform logging"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,101,withArgument(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,102,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,103,"withName(""classname"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,104,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,105,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,106,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,107,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,108,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,109,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,110,"withShortName(""listener"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,111,"withDescription(""add an instance of class as a project listener"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,112,withArgument(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,113,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,114,"withName(""classname"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,115,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,116,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,117,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,118,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,119,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,120,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,121,"withShortName(""buildfile"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,122,"withShortName(""file"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,123,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,124,"withDescription(""use given buildfile"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,125,withArgument(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,126,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,127,"withName(""file"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,128,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,129,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,130,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,131,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,132,withOption(PropertyOption.INSTANCE)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,133,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,134,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,135,"withShortName(""propertyfile"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,136,"withDescription(""load all properties from file with -D properties taking precedence"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,137,withArgument(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,138,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,139,"withName(""name"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,140,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,141,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,142,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,143,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,144,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,145,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,146,"withShortName(""inputhandler"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,147,"withDescription(""the class which will handle input requests"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,148,withArgument(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,149,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,150,"withName(""class"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,151,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,152,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,153,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,154,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,155,withOption(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,156,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,157,"withShortName(""find"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,158,"withDescription(""search for buildfile towards the root of the filesystem and use it"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,159,withArgument(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,160,builder
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,161,"withName(""file"")"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,162,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,163,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,164,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,165,create())
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,166,"withOption(abuilder.withName(""target"").create())"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,167,create();
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,169,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,170,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,171,ommandLine line =
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,172,arser.parse(
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,173,ew String[] {
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,174,"-buildfile"","
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,175,"mybuild.xml"","
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,176,"-Dproperty=value"","
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,177,"-Dproperty1=value1"","
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,178,"-projecthelp"","
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,179,"compile"","
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,180,"docs"" });"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,182,/ check properties
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,183,"ssertEquals(2, line.getProperties().size());"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,184,"ssertEquals(""value"", line.getProperty(""property""));"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,185,"ssertEquals(""value1"", line.getProperty(""property1""));"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,187,/ check single values
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,188,"ssertEquals(""mybuild.xml"", line.getValue(""-buildfile""));"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,189,"ssertTrue(line.hasOption(""-projecthelp""));"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,190,"ssertFalse(line.hasOption(""-help""));"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,192,"ssertTrue(line.hasOption(""target""));"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,193,inal List targets = new ArrayList();
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,194,"argets.add(""compile"");"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,195,"argets.add(""docs"");"
False,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,196,"ssertEquals(targets, line.getValues(""target""));"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,17,ackage org.apache.commons.cli2.application;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,19,mport java.io.BufferedReader;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,20,mport java.io.IOException;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,21,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,22,mport java.io.StringReader;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,23,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,25,mport junit.framework.Test;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,26,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,27,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,29,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,30,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,31,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,32,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,33,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,34,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,35,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,36,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,37,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,38,mport org.apache.commons.cli2.option.ArgumentImpl;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,39,mport org.apache.commons.cli2.option.SourceDestArgument;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,40,mport org.apache.commons.cli2.util.HelpFormatter;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,43, <p>Test the <code>cp</code> command. Duplicated Option types are not
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,44, tested e.g. -a and -d are the same Option type.</p>
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,46, <p>The following is the man output for 'cp'. See
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,47," <a href=""http://www.rt.com/man/cp.1.html"">http://www.rt.com/man/cp.1.html</a>.</p>"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,49, <pre>
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,50,  CP(1) FSF CP(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,52,  NAME cp - copy files and directories
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,54,  SYNOPSIS cp [OPTION]... SOURCE DEST cp [OPTION]... SOURCE... DIRECTORY
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,56,"  DESCRIPTION Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY."
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,58,"  -a, --archive same as -dpR"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,60,"  -b, --backup make backup before removal"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,62,"  -d, --no-dereference preserve links"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,64,"  -f, --force remove existing destinations, never prompt"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,66,"  -i, --interactive prompt before overwrite"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,68,"  -l, --link link files instead of copying"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,70,"  -p, --preserve preserve file attributes if possible"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,72,"  -P, --parents append source path to DIRECTORY"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,73," -r copy recursively, non-directories as files"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,75,  --sparse=WHEN control creation of sparse files
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,77,"  -R, --recursive copy directories recursively"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,79,"  -s, --symbolic-link make symbolic links instead of copying"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,81,"  -S, --suffix=SUFFIX override the usual backup suffix"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,83,"  -u, --update copy only when the SOURCE file is newer than the destination file or when the destination file is missing"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,85,"  -v, --verbose explain what is being done"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,87,"  -V, --version-control=WORD override the usual version control"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,89,"  -x, --one-file-system stay on this file system"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,91,  --help display this help and exit
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,93,  --version output version information and exit
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,95,"  By default, sparse SOURCE files are detected by a crude heuristic and the corresponding DEST file is made sparse as well. That is the behavior selected by --sparse=auto. Specify --sparse=always to create a sparse DEST file when- ever the SOURCE file contains a long enough sequence of zero bytes. Use --sparse=never to inhibit creation of sparse files."
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,97,"  The backup suffix is ~, unless set with SIMPLE_BACKUP_SUF- FIX. The version control may be set with VERSION_CONTROL, values are:"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,98," t, numbered make numbered backups"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,100,"  nil, existing numbered if numbered backups exist, simple other- wise"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,102,"  never, simple always make simple backups"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,104,"  As a special case, cp makes a backup of SOURCE when the force and backup options are given and SOURCE and DEST are the same name for an existing, regular file. * </pre>"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,105, </pre>
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,107, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,108, @author John Keyes
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,110,ublic class CpTest extends TestCase {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,112,** Option Builder */
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,113,rivate static final DefaultOptionBuilder oBuilder =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,114,ew DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,116,** Argument Builder */
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,117,rivate static final ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,119,** Group Builder */
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,120,rivate static final GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,122,rivate Group options;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,124,ublic static Test suite() {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,125,eturn new TestSuite(CpTest.class);
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,128,rivate ArgumentImpl source;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,129,rivate ArgumentImpl dest;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,130,rivate Argument targets;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,132,rivate Option archive;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,133,rivate Option backup;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,134,rivate Option noDereference;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,135,rivate Option force;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,136,rivate Option interactive;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,137,rivate Option link;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,138,rivate Option preserve;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,139,rivate Option parents;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,140,rivate Option recursive1;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,141,rivate Option sparse;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,142,rivate Option recursive2;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,143,rivate Option symbolicLink;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,144,rivate Option suffix;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,145,rivate Option update;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,146,rivate Option verbose;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,147,rivate Option versionControl;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,148,rivate Option oneFileSystem;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,149,rivate Option help;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,150,rivate Option version;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,152,ublic void setUp() {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,153,ource =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,154,"ArgumentImpl)aBuilder.withName(""SOURCE"").withMinimum(1).create();"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,155,est =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,156,ArgumentImpl)aBuilder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,157,"withName(""DEST"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,158,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,159,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,160,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,161,"argets = new SourceDestArgument(source, dest);"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,163,rchive =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,164,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,165,"withShortName(""a"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,166,"withLongName(""archive"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,167,"withDescription(""same as -dpR"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,168,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,170,ackup =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,171,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,172,"withShortName(""b"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,173,"withLongName(""backup"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,174,"withDescription(""make backup before removal"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,175,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,177,oDereference =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,178,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,179,"withShortName(""d"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,180,"withLongName(""no-dereference"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,181,"withDescription(""preserve links"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,182,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,184,orce =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,185,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,186,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,187,"withLongName(""force"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,188,"withDescription(""remove existing destinations, never prompt"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,189,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,191,nteractive =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,192,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,193,"withShortName(""i"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,194,"withLongName(""interactive"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,195,"withDescription(""prompt before overwrite"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,196,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,198,ink =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,199,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,200,"withShortName(""l"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,201,"withLongName(""link"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,202,"withDescription(""link files instead of copying"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,203,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,205,reserve =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,206,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,207,"withShortName(""p"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,208,"withLongName(""preserve"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,209,"withDescription(""preserve file attributes if possible"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,210,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,212,arents =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,213,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,214,"withShortName(""P"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,215,"withLongName(""parents"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,216,"withDescription(""append source path to DIRECTORY"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,217,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,219,ecursive1 =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,220,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,221,"withShortName(""r"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,222,"withDescription(""copy recursively, non-directories as files"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,223,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,225,parse =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,226,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,227,"withLongName(""sparse"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,228,"withDescription(""control creation of sparse files"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,229,withArgument(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,230,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,231,"withName(""WHEN"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,232,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,233,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,234,withInitialSeparator('=')
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,235,create())
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,236,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,238,ecursive2 =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,239,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,240,"withShortName(""R"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,241,"withLongName(""recursive"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,242,"withDescription(""copy directories recursively"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,243,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,245,ymbolicLink =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,246,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,247,"withShortName(""s"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,248,"withLongName(""symbolic-link"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,249,"withDescription(""make symbolic links instead of copying"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,250,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,252,uffix =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,253,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,254,"withShortName(""S"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,255,"withLongName(""suffix"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,256,"withDescription(""override the usual backup suffix"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,257,withArgument(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,258,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,259,"withName(""SUFFIX"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,260,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,261,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,262,create())
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,263,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,265,pdate =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,266,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,267,"withShortName(""u"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,268,"withLongName(""update"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,269,"withDescription(""copy only when the SOURCE file is newer than the destination file or when the destination file is missing"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,270,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,272,erbose =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,273,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,274,"withShortName(""v"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,275,"withLongName(""verbose"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,276,"withDescription(""explain what is being done"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,277,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,279,ersionControl =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,280,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,281,"withShortName(""V"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,282,"withLongName(""version-contol"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,283,"withDescription(""explain what is being done"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,284,withArgument(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,285,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,286,"withName(""WORD"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,287,withInitialSeparator('=')
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,288,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,289,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,290,create())
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,291,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,293,neFileSystem =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,294,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,295,"withShortName(""x"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,296,"withLongName(""one-file-system"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,297,"withDescription(""stay on this file system"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,298,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,300,elp =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,301,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,302,"withLongName(""help"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,303,"withDescription(""display this help and exit"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,304,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,306,ersion =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,307,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,308,"withLongName(""version"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,309,"withDescription(""output version information and exit"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,310,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,312,ptions =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,313,Builder
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,314,withOption(archive)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,315,withOption(backup)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,316,withOption(noDereference)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,317,withOption(force)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,318,withOption(interactive)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,319,withOption(link)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,320,withOption(preserve)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,321,withOption(parents)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,322,withOption(recursive1)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,323,withOption(sparse)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,324,withOption(recursive2)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,325,withOption(symbolicLink)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,326,withOption(suffix)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,327,withOption(update)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,328,withOption(verbose)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,329,withOption(versionControl)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,330,withOption(oneFileSystem)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,331,withOption(help)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,332,withOption(version)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,333,withOption(targets)
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,334,"withName(""OPTIONS"")"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,335,create();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,338,ublic void testNoSource() {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,339,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,340,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,341,ry {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,342,arser.parse(new String[0]);
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,344,atch (OptionException mve) {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,345,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,346,"Missing value(s) SOURCE [SOURCE ...]"","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,347,ve.getMessage());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,351,ublic void testOneSource() throws OptionException {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,352,"inal String[] args = new String[] { ""source1"", ""dest1"" };"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,353,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,354,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,355,inal CommandLine commandLine = parser.parse(args);
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,357,"ssertTrue(commandLine.getValues(source).contains(""source1""));"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,358,"ssertEquals(1, commandLine.getValues(source).size());"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,359,"ssertTrue(commandLine.getValues(dest).contains(""dest1""));"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,360,"ssertEquals(1, commandLine.getValues(dest).size());"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,363,ublic void testMultiSource() throws OptionException {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,364,inal String[] args =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,365,"ew String[] { ""source1"", ""source2"", ""source3"", ""dest1"" };"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,366,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,367,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,368,inal CommandLine commandLine = parser.parse(args);
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,370,"ssertTrue(commandLine.getValues(source).contains(""source1""));"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,371,"ssertTrue(commandLine.getValues(source).contains(""source2""));"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,372,"ssertTrue(commandLine.getValues(source).contains(""source3""));"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,373,"ssertEquals(3, commandLine.getValues(source).size());"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,375,"ssertTrue(commandLine.getValues(dest).contains(""dest1""));"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,376,"ssertEquals(1, commandLine.getValues(dest).size());"
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,379,ublic void testHelp() throws IOException {
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,380,inal StringWriter out = new StringWriter();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,381,inal HelpFormatter helpFormatter = new HelpFormatter();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,382,elpFormatter.setGroup(options);
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,383,elpFormatter.setPrintWriter(new PrintWriter(out));
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,384,elpFormatter.print();
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,386,inal BufferedReader in =
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,387,ew BufferedReader(new StringReader(out.toString()));
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,388,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,389,"Usage:                                                                          "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,390,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,391,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,392," [-a -b -d -f -i -l -p -P -r --sparse <WHEN> -R -s -S <SUFFIX> -u -v -V <WORD>  "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,393,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,394,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,395,"-x --help --version] <SOURCE1> [<SOURCE2> ...] <DEST>                           "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,396,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,397,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,398,"OPTIONS                                                                         "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,399,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,400,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,401,"  -a (--archive)                same as -dpR                                    "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,402,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,403,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,404,"  -b (--backup)                 make backup before removal                      "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,405,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,406,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,407,"  -d (--no-dereference)         preserve links                                  "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,408,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,409,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,410,"  -f (--force)                  remove existing destinations, never prompt      "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,411,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,412,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,413,"  -i (--interactive)            prompt before overwrite                         "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,414,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,415,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,416,"  -l (--link)                   link files instead of copying                   "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,417,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,418,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,419,"  -p (--preserve)               preserve file attributes if possible            "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,420,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,421,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,422,"  -P (--parents)                append source path to DIRECTORY                 "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,423,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,424,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,425,"  -r                            copy recursively, non-directories as files      "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,426,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,427,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,428,"  --sparse WHEN                 control creation of sparse files                "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,429,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,430,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,431,"  -R (--recursive)              copy directories recursively                    "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,432,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,433,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,434,"  -s (--symbolic-link)          make symbolic links instead of copying          "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,435,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,436,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,437,"  -S (--suffix) SUFFIX          override the usual backup suffix                "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,438,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,439,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,440,"  -u (--update)                 copy only when the SOURCE file is newer than    "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,441,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,442,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,443,"                                the destination file or when the destination    "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,444,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,445,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,446,"                                file is missing                                 "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,447,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,448,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,449,"  -v (--verbose)                explain what is being done                      "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,450,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,451,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,452,"  -V (--version-contol) WORD    explain what is being done                      "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,453,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,454,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,455,"  -x (--one-file-system)        stay on this file system                        "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,456,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,457,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,458,"  --help                        display this help and exit                      "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,459,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,460,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,461,"  --version                     output version information and exit             "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,462,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,463,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,464,"  SOURCE [SOURCE ...]                                                           "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,465,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,466,ssertEquals(
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,467,"  DEST                                                                          "","
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,468,n.readLine());
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,469,ssertNull(in.readLine());
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,17,ackage org.apache.commons.cli2.application;
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,21,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,22,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,23,mport org.apache.commons.cli2.builder.CommandBuilder;
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,24,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,25,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,26,mport org.apache.commons.cli2.option.ArgumentTest;
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,28,/TODO Build up CvsTest like CpTest
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,29,ublic class CvsTest extends TestCase {
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,30,ublic void testCVS() {
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,31,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,32,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,33,inal CommandBuilder cbuilder = new CommandBuilder();
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,34,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,36,inal Group commands =
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,37,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,38,"withName(""commands"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,39,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,40,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,41,"withName(""add"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,42,"withName(""ad"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,43,"withName(""new"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,44,"withDescription(""Add a new file/directory to the repository"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,45,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,46,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,47,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,48,"withName(""admin"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,49,"withName(""adm"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,50,"withName(""rcs"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,51,"withDescription(""Administration front end for rcs"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,52,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,53,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,54,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,55,"withName(""annotate"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,56,"withName(""ann"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,57,"withDescription(""Show last revision where each line was modified"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,58,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,59,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,60,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,61,"withName(""checkout"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,62,"withName(""co"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,63,"withName(""get"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,64,"withDescription(""Checkout sources for editing"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,65,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,66,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,67,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,68,"withName(""commit"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,69,"withName(""ci"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,70,"withName(""com"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,71,"withDescription(""Check files into the repository"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,72,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,73,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,74,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,75,"withName(""diff"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,76,"withName(""di"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,77,"withName(""dif"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,78,"withDescription(""Show differences between revisions"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,79,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,80,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,81,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,82,"withName(""edit"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,83,"withDescription(""Get ready to edit a watched file"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,84,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,85,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,86,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,87,"withName(""editors"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,88,"withDescription(""See who is editing a watched file"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,89,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,90,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,91,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,92,"withName(""export"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,93,"withName(""exp"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,94,"withName(""ex"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,95,"withDescription(""Export sources from CVS, similar to checkout"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,96,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,97,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,98,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,99,"withName(""history"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,100,"withName(""hi"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,101,"withName(""his"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,102,"withDescription(""Show repository access history"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,103,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,104,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,105,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,106,"withName(""import"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,107,"withName(""im"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,108,"withName(""imp"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,109,"withDescription(""Import sources into CVS, using vendor branches"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,110,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,111,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,112,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,113,"withName(""init"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,114,"withDescription(""Create a CVS repository if it doesn't exist"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,115,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,116,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,117,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,118,"withName(""log"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,119,"withName(""lo"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,120,"withName(""rlog"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,121,"withDescription(""Print out history information for files"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,122,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,123,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,124,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,125,"withName(""login"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,126,"withName(""logon"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,127,"withName(""lgn"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,128,"withDescription(""Prompt for password for authenticating server"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,129,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,130,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,131,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,132,"withName(""logout"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,133,"withDescription(""Removes entry in .cvspass for remote repository"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,134,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,135,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,136,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,137,"withName(""rdiff"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,138,"withName(""patch"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,139,"withName(""pa"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,140,"withDescription(""Create 'patch' format diffs between releases"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,141,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,142,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,143,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,144,"withName(""release"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,145,"withName(""re"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,146,"withName(""rel"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,147,"withDescription(""Indicate that a Module is no longer in use"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,148,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,149,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,150,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,151,"withName(""remove"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,152,"withName(""rm"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,153,"withName(""delete"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,154,"withDescription(""Remove an entry from the repository"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,155,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,156,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,157,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,158,"withName(""rtag"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,159,"withName(""rt"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,160,"withName(""rfreeze"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,161,"withDescription(""Add a symbolic tag to a module"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,162,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,163,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,164,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,165,"withName(""status"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,166,"withName(""st"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,167,"withName(""stat"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,168,"withDescription(""Display status information on checked out files"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,169,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,170,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,171,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,172,"withName(""tag"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,173,"withName(""ta"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,174,"withName(""freeze"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,175,"withDescription(""Add a symbolic tag to checked out version of files"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,176,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,177,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,178,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,179,"withName(""unedit"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,180,"withDescription(""Undo an edit command"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,181,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,182,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,183,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,184,"withName(""update"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,185,"withName(""up"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,186,"withName(""upd"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,187,"withDescription(""Bring work tree in sync with repository"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,188,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,189,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,190,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,191,"withName(""watch"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,192,"withDescription(""Set watches"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,193,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,194,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,195,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,196,"withName(""watchers"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,197,"withDescription(""See who is watching a file"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,198,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,199,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,200,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,201,"withName(""version"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,202,"withName(""ve"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,203,"withName(""ver"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,204,"withDescription(""????"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,205,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,206,withOption(ArgumentTest.buildTargetsArgument())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,207,create();
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,209,inal Group cvsOptions =
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,210,ew GroupBuilder()
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,211,"withName(""cvs-options"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,212,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,213,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,214,"withShortName(""H"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,215,"withDescription(""Displays usage information for command."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,216,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,217,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,218,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,219,"withShortName(""Q"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,220,"withDescription(""Cause CVS to be really quiet."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,221,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,222,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,223,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,224,"withShortName(""q"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,225,"withDescription(""Cause CVS to be somewhat quiet."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,226,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,227,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,228,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,229,"withShortName(""r"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,230,"withDescription(""Make checked-out files read-only."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,231,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,232,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,233,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,234,"withShortName(""w"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,235,"withDescription(""Make checked-out files read-write (default)."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,236,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,237,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,238,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,239,"withShortName(""l"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,240,"withDescription(""Turn history logging off."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,241,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,242,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,243,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,244,"withShortName(""n"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,245,"withDescription(""Do not execute anything that will change the disk."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,246,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,247,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,248,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,249,"withShortName(""t"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,250,"withDescription(""Show trace of program execution -- try with -n."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,251,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,252,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,253,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,254,"withShortName(""v"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,255,"withDescription(""CVS version and copyright."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,256,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,257,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,258,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,259,"withLongName(""crlf"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,260,"withDescription(""Use the Dos line feed for text files (default)."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,261,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,262,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,263,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,264,"withLongName(""lf"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,265,"withDescription(""Use the Unix line feed for text files."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,266,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,267,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,268,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,269,"withShortName(""T"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,270,"withDescription(""Use 'tmpdir' for temporary files."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,271,"withArgument(abuilder.withName(""tmpdir"").create())"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,272,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,273,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,274,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,275,"withShortName(""e"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,276,"withDescription(""Use 'editor' for editing log information."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,277,"withArgument(abuilder.withName(""editor"").create())"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,278,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,279,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,280,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,281,"withShortName(""d"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,282,"withDescription(""Overrides $CVSROOT as the root of the CVS tree."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,283,"withArgument(abuilder.withName(""CVS_root"").create())"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,284,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,285,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,286,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,287,"withShortName(""f"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,288,"withDescription(""Do not use the ~/.cvsrc file."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,289,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,290,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,291,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,292,"withShortName(""z"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,293,"withDescription(""Use compression level '#' for net traffic."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,294,"withArgument(abuilder.withName(""#"").create())"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,295,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,296,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,297,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,298,"withShortName(""a"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,299,"withDescription(""Authenticate all net traffic."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,300,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,301,withOption(
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,302,builder
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,303,"withShortName(""s"")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,304,"withDescription(""Set CVS user variable."")"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,305,"withArgument(abuilder.withName(""VAR=VAL"").create())"
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,306,create())
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,307,withOption(commands)
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,308,create();
False,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,310,ssertNotNull(cvsOptions);
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,17,ackage org.apache.commons.cli2.application;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,19,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,20,mport java.util.Set;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,22,mport junit.framework.Test;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,23,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,24,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,26,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,27,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,28,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,29,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,30,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,31,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,32,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,33,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,34,mport org.apache.commons.cli2.validation.EnumValidator;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,37, <p>Test the <code>ls</code> command. Duplicated Option types are not
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,38, tested e.g. -a and -d are the same Option type.</p>
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,40, <p>The following is the man output for 'ls'. See
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,41," <a href=""http://www.rt.com/man/ls.1.html"">http://www.rt.com/man/ls.1.html</a>.</p>"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,43, <pre>
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,44,  LS(1) FSF LS(1)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,46,  NAME ls - list directory contents
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,48,  SYNOPSIS ls [OPTION]... [FILE]...
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,50,  DESCRIPTION List information about the FILEs (the current directory by default). Sort entries alphabetically if none of -cftuSUX nor --sort.
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,52,"  -a, --all do not hide entries starting with ."
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,54,"  -A, --almost-all do not list implied . and .."
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,56,"  -b, --escape print octal escapes for nongraphic characters"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,58,  --block-size=SIZE use SIZE-byte blocks
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,60,"  -B, --ignore-backups do not list implied entries ending with ~ -c sort by change time; with -l: show ctime -C list entries by columns"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,62,"  --color[=WHEN] control whether color is used to distinguish file types. WHEN may be `never', `always', or `auto'"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,64,"  -d, --directory list directory entries instead of contents"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,66,"  -D, --dired generate output designed for Emacs' dired mode -f do not sort, enable -aU, disable -lst"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,68,"  -F, --classify append indicator (one of /=@|*) to entries"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,70,"  --format=WORD across -x, commas -m, horizontal -x, long -l, sin- gle-column -1, verbose -l, vertical -C"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,72,  --full-time list both full date and full time -g (ignored)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,74,"  -G, --no-group inhibit display of group information"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,76,"  -h, --human-readable print sizes in human readable format (e.g., 1K 234M 2G)"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,78,"  -H, --si likewise, but use powers of 1000 not 1024"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,80,"  --indicator-style=WORD append indicator with style WORD to entry names: none (default), classify (-F), file-type (-p)"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,82,"  -i, --inode print index number of each file"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,84,"  -I, --ignore=PATTERN do not list implied entries matching shell PATTERN"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,86,"  -k, --kilobytes like --block-size=1024 -l use a long listing format"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,88,"  -L, --dereference list entries pointed to by symbolic links -m fill width with a comma separated list of entries"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,90,"  -n, --numeric-uid-gid list numeric UIDs and GIDs instead of names"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,92,"  -N, --literal print raw entry names (don't treat e.g. control characters specially) -o use long listing format without group info"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,94,"  -p, --file-type append indicator (one of /=@|) to entries"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,96,"  -q, --hide-control-chars print ? instead of non graphic characters"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,98,  --show-control-chars show non graphic characters as-is (default)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,100,"  -Q, --quote-name enclose entry names in double quotes"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,102,"  --quoting-style=WORD use quoting style WORD for entry names: literal, shell, shell-always, c, escape"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,104,"  -r, --reverse reverse order while sorting"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,106,"  -R, --recursive list subdirectories recursively"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,108,"  -s, --size print size of each file, in blocks -S sort by file size"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,110,"  --sort=WORD extension -X, none -U, size -S, time -t, version -v status -c, time -t, atime -u, access -u, use -u"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,112,"  --time=WORD show time as WORD instead of modification time: atime, access, use, ctime or status; use specified time as sort key if --sort=time -t sort by modification time"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,114,"  -T, --tabsize=COLS assume tab stops at each COLS instead of 8 -u sort by last access time; with -l: show atime -U do not sort; list entries in directory order -v sort by version"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,116,"  -w, --width=COLS assume screen width instead of current value -x list entries by lines instead of by columns -X sort alphabetically by entry extension -1 list one file per line"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,118,  --help display this help and exit
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,120,  --version output version information and exit
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,122,"  By default, color is not used to distinguish types of files. That is equivalent to using --color=none. Using the --color option without the optional WHEN argument is equivalent to using --color=always. With --color=auto, color codes are output only if standard output is con- nected to a terminal (tty)."
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,123, </pre>
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,125, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,126, @author John Keyes
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,128,ublic class LsTest extends TestCase {
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,130,** Option Builder */
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,131,rivate static final DefaultOptionBuilder oBuilder =
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,132,ew DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,134,** Argument Builder */
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,135,rivate static final ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,137,** Group Builder */
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,138,rivate static final GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,140,rivate static Group options;
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,142,ublic static Test suite() {
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,143,eturn new TestSuite(LsTest.class);
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,147, Required ctor.
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,149, @param name
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,150,            the name of the TestCase
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,152,ublic LsTest(final String name) {
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,153,uper(name);
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,156,ublic void setUp() {
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,157,f (LsTest.options == null) {
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,158,inal Option a =
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,159,Builder
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,160,"withShortName(""a"")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,161,"withLongName(""all"")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,162,"withDescription(""do not hide entries starting with ."")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,163,create();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,165,inal Option blockSize =
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,166,Builder
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,167,"withLongName(""block-size"")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,168,withRequired(false)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,169,"withDescription(""use SIZE-byte blocks"")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,170,withArgument(
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,171,Builder
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,172,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,173,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,174,withInitialSeparator('=')
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,175,create())
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,176,create();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,178,inal Option c =
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,179,Builder
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,180,"withShortName(""c"")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,181,withRequired(false)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,182,"withDescription(""with -lt: sort by, and show, ctime (time of last modification of file status information) with -l:show ctime and sort by name otherwise: sort by ctime"")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,183,create();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,185,inal Set colors = new HashSet();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,186,"olors.add(""never"");"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,187,"olors.add(""always"");"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,188,"olors.add(""auto"");"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,189,inal Option color =
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,190,Builder
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,191,"withLongName(""color"")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,192,withRequired(false)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,193,"withDescription(""control  whether  color is used to distinguish file types.  WHEN may be `never', `always', or `auto'"")"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,194,withArgument(
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,195,Builder
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,196,withMaximum(1)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,197,withMinimum(1)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,198,withInitialSeparator('=')
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,199,withValidator(new EnumValidator(colors))
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,200,create())
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,201,create();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,203,sTest.options =
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,204,Builder
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,205,withOption(a)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,206,withOption(blockSize)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,207,withOption(c)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,208,withOption(color)
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,209,create();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,213,ublic void testLs() throws OptionException {
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,214,/ create the command line parser
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,215,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,216,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,217,ommandLine line =
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,218,"arser.parse(new String[] { ""--block-size=10"", ""--color=never"" });"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,220,"ssertTrue(line.hasOption(""--block-size""));"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,221,"ssertEquals(line.getValue(""--block-size""), ""10"");"
False,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,222,"ssertFalse(line.hasOption(""--ignore-backups""));"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,21,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,22,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,23,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,24,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,25,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,26,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,29, @author John Keyes
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,31,ublic class Bug13886Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,33,ublic Bug13886Test(final String name) {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,34,uper(name);
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,37,ublic void testMandatoryGroup() throws Exception {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,38,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,39,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,41,"inal Option a = obuilder.withShortName(""a"").create();"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,43,"inal Option b = obuilder.withShortName(""b"").create();"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,45,inal Group options =
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,46,builder
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,47,withOption(a)
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,48,withOption(b)
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,49,withMaximum(1)
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,50,withMinimum(1)
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,51,create();
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,53,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,54,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,56,ry {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,57,arser.parse(new String[] {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,59,"ail(""Expected MissingOptionException not caught"");"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,61,atch (final OptionException exp) {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,62,"ssertEquals(""Missing option -a|-b"", exp.getMessage());"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,65,ry {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,66,"arser.parse(new String[] { ""-a"" });"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,68,atch (final OptionException exp) {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,69,"ail(""Unexpected MissingOptionException caught"");"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,72,ry {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,73,"arser.parse(new String[] { ""-b"" });"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,75,atch (final OptionException exp) {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,76,"ail(""Unexpected MissingOptionException caught"");"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,79,ry {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,80,"arser.parse(new String[] { ""-a"", ""-b"" });"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,81,"ail(""Expected UnexpectedOptionException not caught"");"
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,83,atch (final OptionException exp) {
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,84,ssertEquals(
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,85,"Unexpected -b while processing -a|-b"","
False,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,86,xp.getMessage());
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,21,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,22,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,23,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,24,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,25,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,26,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,27,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,30, @author John Keyes
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,32,ublic class Bug13935Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,34,ublic Bug13935Test(final String name) {
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,35,uper(name);
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,38,ublic void testRequiredGroup() throws Exception {
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,39,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,40,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,41,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,43,inal Option testOption =
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,44,builder
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,45,"withShortName(""a"")"
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,46,"withArgument(abuilder.withName(""quoted string"").create())"
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,47,create();
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,49,inal Group options = gbuilder.withOption(testOption).create();
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,51,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,52,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,54,inal CommandLine cmdLine =
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,55,"arser.parse(new String[] { ""-a"", ""\""two tokens\"""" });"
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,57,"ssertTrue(cmdLine.hasOption(""-a""));"
False,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,58,"ssertEquals(""two tokens"", cmdLine.getValue(""-a""));"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,21,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,22,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,23,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,24,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,25,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,26,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,27,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,30, @author John Keyes
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,32,ublic class Bug15046Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,34,ublic Bug15046Test(String name) {
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,35,uper(name);
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,38,ublic void testParamNamedAsOption() throws Exception {
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,39,"inal String[] CLI_ARGS = new String[] { ""-z"", ""c"" };"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,41,efaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,42,rgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,44,ption option =
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,45,builder
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,46,"withShortName(""z"")"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,47,"withLongName(""timezone"")"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,48,"withDescription(""affected option"")"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,49,"withArgument(abuilder.withName(""timezone"").create())"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,50,create();
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,52,roupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,53,roup options =
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,54,"builder.withName(""bug15046"").withOption(option).create();"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,56,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,57,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,58,ommandLine line = parser.parse(CLI_ARGS);
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,60,"ssertEquals(""c"", line.getValue(""-z""));"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,62,ption c =
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,63,builder
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,64,"withShortName(""c"")"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,65,"withLongName(""conflict"")"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,66,"withDescription(""conflicting option"")"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,67,"withArgument(abuilder.withName(""conflict"").create())"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,68,create();
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,70,ptions =
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,71,builder
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,72,"withName(""bug15046"")"
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,73,withOption(option)
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,74,withOption(c)
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,75,create();
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,77,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,78,ine = parser.parse(CLI_ARGS);
False,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,80,"ssertEquals(""c"", line.getValue(""-z""));"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,21,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,22,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,23,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,24,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,25,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,26,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,27,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,30, @author John Keyes
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,32,ublic class Bug15648Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,34,ublic Bug15648Test(final String name) {
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,35,uper(name);
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,38,ublic void testQuotedArgumentValue() throws Exception {
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,39,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,40,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,41,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,43,inal Option testOption =
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,44,builder
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,45,"withShortName(""a"")"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,46,"withArgument(abuilder.withName(""quoted string"").create())"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,47,create();
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,49,inal Group options = gbuilder.withOption(testOption).create();
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,51,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,52,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,54,inal CommandLine cmdLine =
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,55,"arser.parse(new String[] { ""-a"", ""\""two tokens\"""" });"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,57,"ssertTrue(cmdLine.hasOption(""-a""));"
False,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,58,"ssertEquals(""two tokens"", cmdLine.getValue(""-a""));"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,19,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,20,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,21,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,22,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,23,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,24,mport org.apache.commons.cli2.builder.CommandBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,25,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,26,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,27,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,28,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,30,ublic class Bug28005Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,31,ublic void testInfiniteLoop() {
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,32,inal DefaultOptionBuilder optionBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,33,inal ArgumentBuilder argumentBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,34,inal GroupBuilder groupBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,35,inal CommandBuilder commandBuilder = new CommandBuilder();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,37,inal Option inputFormatOption =
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,38,ptionBuilder
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,39,"withLongName(""input-format"")"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,40,/.withArgument(argumentBuilder.create())
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,41,create();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,43,inal Argument argument =
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,44,rgumentBuilder
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,45,"withName(""file"")"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,46,create();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,48,inal Group children =
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,49,roupBuilder
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,50,"withName(""options"")"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,51,withOption(inputFormatOption)
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,52,create();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,54,inal Option command =
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,55,ommandBuilder
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,56,"withName(""convert"")"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,57,withChildren(children)
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,58,withArgument(argument)
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,59,create();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,61,inal Group root =
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,62,roupBuilder
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,63,"withName(""commands"")"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,64,withOption(command)
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,65,create();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,67,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,68,arser.setGroup(root);
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,69,"inal String[] args = new String[]{""convert"", ""test.txt"","
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,70,"--input-format"", ""a""};"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,72,ry {
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,73,arser.parse(args);
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,74,"ail(""a isn't valid!!"");"
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,75, catch (OptionException e) {
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,76,"ssertEquals(""Unexpected a while processing commands"",e.getMessage());"
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,19,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,20,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,21,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,22,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,23,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,24,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,26,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,29, @author roxspring
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,31,ublic class Bug32533Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,33,ublic void testBlah() throws OptionException {
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,35,"ption a1 = new DefaultOptionBuilder().withLongName(""a1"").create();"
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,36,"ption b1 = new DefaultOptionBuilder().withLongName(""b1"").create();"
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,37,"ption c1 = new DefaultOptionBuilder().withLongName(""c1"").create();"
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,39,roup b = new GroupBuilder().withOption(b1).create();
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,40,roup c = new GroupBuilder().withOption(c1).create();
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,41,roup a = new GroupBuilder().withOption(a1).withOption(b).withOption(c).create();
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,43,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,44,arser.setGroup(a);
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,45,"arser.parse(new String[]{""--a1"",""--b1""});"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,20,mport org.apache.commons.cli2.*;
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,21,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,22,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,23,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,24,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,25,mport org.apache.commons.cli2.validation.FileValidator;
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,28, @author brianegge
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,30,ublic class BugCLI122Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,31,ublic void testArgumentWhichStartsWithDash() throws OptionException {
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,32,rgument wdArg = new ArgumentBuilder()
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,33,"withName(""anything"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,34,withMaximum(1)
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,35,withMinimum(1)
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,36,withInitialSeparator('=')
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,37,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,39,ption wdOpt = new DefaultOptionBuilder().withArgument(wdArg)
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,40,"withDescription(""anything, foo or -foo"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,41,"withLongName(""argument"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,42,"withShortName(""a"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,43,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,45,roup group = new GroupBuilder().withOption(wdOpt).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,47,arser p = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,48,.setGroup(group);
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,49,"ommandLine normal = p.parse (new String[]{""-a"", ""foo""});"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,50,ssertNotNull(normal);
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,51,"ssertEquals(normal.getValue(wdOpt), ""foo"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,53,"ommandLine withDash = p.parse (new String[]{""--argument"", ""\""-foo\""""});"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,54,ssertNotNull(withDash);
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,55,"ssertEquals(""-foo"", withDash.getValue(wdOpt));"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,57,"ommandLine withDashAndEquals = p.parse (new String[]{""--argument=-foo""});"
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,58,ssertNotNull(withDashAndEquals);
False,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,src/test/org/apache/commons/cli2/bug/BugCLI122Test.java,59,"ssertEquals(""-foo"", withDashAndEquals.getValue(wdOpt));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,21,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,22,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,23,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,24,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,25,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,26,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,27,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,28,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,31, Group options are not added to the command line when child elements are
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,32, detected. This causes the validation of maximum and minimum to fail.
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,34, @author Oliver Heger
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,35, @version $Id$
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,37,ublic class BugCLI123Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,38,** An option of the parent group. */
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,39,rivate Option parentOption;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,41,** An option of the child group. */
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,42,rivate Option childOption1;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,44,** Another option of the child group. */
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,45,rivate Option childOption2;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,47,** The parent group. */
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,48,rivate Group parentGroup;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,50,** The child group. */
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,51,rivate Group childGroup;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,53,** The parser. */
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,54,rivate Parser parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,56,rotected void setUp() throws Exception {
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,57,uper.setUp();
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,58,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,59,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,60,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,61,"arentOption = obuilder.withLongName(""parent"").withShortName(""p"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,62,"withArgument(abuilder.withName(""name"").create()).create();"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,63,"hildOption1 = obuilder.withLongName(""child"").withShortName(""c"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,64,"withArgument(abuilder.withName(""c"").create()).create();"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,65,"hildOption2 = obuilder.withLongName(""sub"").withShortName(""s"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,66,"withArgument(abuilder.withName(""s"").create()).create();"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,67,"hildGroup = gbuilder.withName(""childOptions"").withMinimum(0)"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,68,withMaximum(2).withOption(childOption1).withOption(
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,69,hildOption2).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,70,"arentGroup = gbuilder.withName(""parentOptions"").withMinimum(1)"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,71,withMaximum(1).withOption(parentOption).withOption(childGroup)
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,72,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,73,arser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,74,arser.setGroup(parentGroup);
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,78, A single option of the child group is specified.
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,80,ublic void testSingleChildOption() throws OptionException {
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,81,"ommandLine cl = parser.parse(new String[] { ""--child"", ""test"" });"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,82,"ssertTrue(""Child option not found"", cl.hasOption(childOption1));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,83,"ssertEquals(""Wrong value for option"", ""test"", cl"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,84,getValue(childOption1));
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,85,"ssertTrue(""Child group not found"", cl.hasOption(childGroup));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,89, Two options of the child group are specified.
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,91,ublic void testMultipleChildOptions() throws OptionException {
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,92,"ommandLine cl = parser.parse(new String[] { ""--child"", ""test"","
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,93,"--sub"", ""anotherTest"" });"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,94,"ssertTrue(""Child option not found"", cl.hasOption(childOption1));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,95,"ssertEquals(""Wrong value for option"", ""test"", cl"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,96,getValue(childOption1));
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,97,"ssertTrue(""Sub option not found"", cl.hasOption(childOption2));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,98,"ssertEquals(""Wrong value for sub option"", ""anotherTest"", cl"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,99,getValue(childOption2));
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,100,"ssertTrue(""Child group not found"", cl.hasOption(childGroup));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,104, The option defined for the parent group is specified.
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,106,ublic void testSingleParentOption() throws OptionException {
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,107,"ommandLine cl = parser.parse(new String[] { ""--parent"", ""yes"" });"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,108,"ssertTrue(""Parent option not found"", cl.hasOption(parentOption));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,109,"ssertEquals(""Wrong value for option"", ""yes"", cl.getValue(parentOption));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,110,"ssertFalse(""Found child group"", cl.hasOption(childGroup));"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,114, The parent option and an option of the child group is specified. This
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,115, should cause an exception.
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,117,ublic void testParentOptionAndChildOption() throws OptionException {
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,118,ry {
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,119,"arser.parse(new String[] { ""--parent"", ""error"", ""--child"","
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,120,"exception"" });"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,121,"ail(""Maximum restriction for parent not verified!"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,122, catch (OptionException oex) {
False,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,123,/ ok
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,21,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,22,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,23,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,24,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,25,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,26,mport org.apache.commons.cli2.option.PropertyOption;
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,29, @author brianegge
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,31,ublic class BugCLI126Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,32,ublic void testMultiplePropertyArgs() throws OptionException {
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,33,"ropertyOption conf = new PropertyOption(""-P"", ""Properties for this process"", 1);"
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,34,"ropertyOption env = new PropertyOption(""-C"", ""Properties for child processes"", 2);"
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,35,roupBuilder builder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,36,roup options = builder.withOption(conf).withOption(env).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,38,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,39,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,40,ommandLine line =
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,41,arser.parseAndHelp(
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,42,ew String[] {
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,43,"-Phome=."","
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,44,"-Chome=/"""
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,46,"ssertEquals(""."", line.getProperty(conf, ""home""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,src/test/org/apache/commons/cli2/bug/BugCLI126Test.java,47,"ssertEquals(""/"", line.getProperty(env, ""home""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,21,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,22,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,23,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,24,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,25,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,26,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,27,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,28,mport org.apache.commons.cli2.option.PropertyOption;
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,31, http://issues.apache.org/jira/browse/CLI-12
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,33,ublic class BugCLI12Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,35,ublic void testBug() {
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,36,"rgument arg = new ArgumentBuilder().withName(""file"").create();"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,38,ropertyOption option = new PropertyOption();
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,40,roup group = new GroupBuilder().withOption(option).withOption(arg).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,42,arser p = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,43,.setGroup(group);
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,45,"ommandLine cl = p.parseAndHelp( new String[] { ""-Dmyprop1=myval1"", ""-Dmyprop2=myval2"", ""myfile"" } );"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,46,f(cl == null) {
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,47,"ssertTrue(""Couldn't parse valid commandLine"", false);"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,50,"ssertEquals( ""myval1"", cl.getProperty(option, ""myprop1""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,51,"ssertEquals( ""myval2"", cl.getProperty(option, ""myprop2""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,53,tring extraArgs = (String) cl.getValue(arg);
False,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,src/test/org/apache/commons/cli2/bug/BugCLI12Test.java,54,"ssertEquals( ""myfile"", extraArgs);"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,19,mport java.io.File;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,21,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,23,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,24,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,25,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,26,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,27,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,28,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,29,mport org.apache.commons.cli2.option.DefaultOption;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,30,mport org.apache.commons.cli2.validation.FileValidator;
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,33, Test case for http://issues.apache.org/jira/browse/CLI-144.
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,35, CLI 2 throws
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,37, <pre>
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,38, Exception in thread &quot;main&quot; java.lang.ClassCastException: java.io.File cannot be cast to java.lang.String
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,39, </pre>
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,41, when there should be no such exception
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,43, @author David Biesack
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,45,ublic class BugCLI144Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,46,ublic void testFileValidator() {
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,47,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,48,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,49,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,50,"efaultOption fileNameOption = obuilder.withShortName(""f"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,51,"withLongName(""file-name"").withRequired(true).withDescription("
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,52,"name of an existing file"").withArgument("
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,53,"builder.withName(""file-name"").withValidator("
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,54,ileValidator.getExistingFileInstance())
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,55,create()).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,56,"roup options = gbuilder.withName(""options"").withOption(fileNameOption)"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,57,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,58,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,59,"arser.setHelpTrigger(""--help"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,60,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,62,"inal String fileName = ""src/test/org/apache/commons/cli2/bug/BugCLI144Test.java"";"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,63,ommandLine cl = parser
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,64,"parseAndHelp(new String[] { ""--file-name"", fileName });"
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,65,ssertNotNull(cl);
False,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,src/test/org/apache/commons/cli2/bug/BugCLI144Test.java,66,"ssertEquals(""Wrong file"", new File(fileName), cl.getValue(fileNameOption));"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,20,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,21,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,22,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,23,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,24,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,25,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,26,mport org.apache.commons.cli2.option.DefaultOption;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,28,mport java.util.List;
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,31, ArgumentBuilder.withMaximum causes parse errors: Unexpeced <value> while processing options
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,33, @author David Biesack
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,34, @author brianegge
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,36,ublic class BugCLI145Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,37,ublic void testWithMaximum() {
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,38,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,39,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,40,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,41,efaultOption aOption = obuilder//
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,42,"withShortName(""a"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,43,"withLongName(""a"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,44,withArgument(abuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,45,"withName(""a"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,46,"withDefault(""10"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,47,create())
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,48,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,49,efaultOption bOption = obuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,50,"withShortName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,51,"withLongName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,52,withArgument(abuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,53,"withName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,54,withMinimum(2)
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,55,withMaximum(4)
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,56,"withDefault(""100"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,57,"withDefault(""1000"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,58,"withDefault(""10000"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,59,"withDefault(""1000000"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,60,create())
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,61,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,62,roup options = gbuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,63,"withName(""options"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,64,withOption(aOption)
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,65,withOption(bOption)
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,66,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,67,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,68,"arser.setHelpTrigger(""--help"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,69,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,70,"ommandLine cl = parser.parseAndHelp(""-a 0 -b 1 2 3 4"".split("" ""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,71,ssertNotNull(cl);
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,72,nt a = Integer.parseInt(cl.getValue(aOption).toString());
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,73,ist b = cl.getValues(bOption);
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,74,"ssertEquals(0, a);"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,75,"ssertEquals(4, b.size());"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,78,ublic void testWithMaximumUsingDefaultValues() {
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,79,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,80,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,81,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,82,efaultOption aOption = obuilder//
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,83,"withShortName(""a"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,84,"withLongName(""a"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,85,withArgument(abuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,86,"withName(""a"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,87,"withDefault(""10"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,88,create())
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,89,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,90,efaultOption bOption = obuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,91,"withShortName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,92,"withLongName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,93,withArgument(abuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,94,"withName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,95,withMinimum(2)
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,96,withMaximum(4)
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,97,"withDefault(""100"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,98,"withDefault(""1000"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,99,"withDefault(""10000"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,100,create())
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,101,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,102,roup options = gbuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,103,"withName(""options"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,104,withOption(aOption)
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,105,withOption(bOption)
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,106,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,107,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,108,"arser.setHelpTrigger(""--help"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,109,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,110,"ommandLine cl = parser.parseAndHelp(""-a -b"".split("" ""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,111,ssertNotNull(cl);
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,112,nt a = Integer.parseInt(cl.getValue(aOption).toString());
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,113,ist b = cl.getValues(bOption);
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,114,"ssertEquals(10, a);"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,115,"ssertEquals(3, b.size());"
False,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,src/test/org/apache/commons/cli2/bug/BugCLI145Test.java,116,"ssertEquals(""10000"", b.get(2));"
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,21,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,22,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,23,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,24,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,25,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,26,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,27,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,28,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,29,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,30,mport org.apache.commons.cli2.validation.NumberValidator;
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,33, An argument whose value is a negative number is mistaken as an option.
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,35, @author Oliver Heger
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,36, @version $Id$
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,38,ublic class BugCLI150Test extends TestCase
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,40,ublic void testNegativeNumber() throws OptionException
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,42,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,43,inal ArgumentBuilder aBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,44,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,46,inal Argument numArg = aBuilder.withValidator(
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,47,umberValidator.getNumberInstance()).withMinimum(1)
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,48,withMaximum(1).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,49,"inal Option numOpt = oBuilder.withLongName(""num"").withArgument(numArg)"
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,50,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,51,inal Group options = gBuilder.withOption(numOpt).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,53,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,54,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,56,ommandLine cl = parser.parse(new String[] {
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,57,"--num"", ""-42"""
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,59,umber num = (Number) cl.getValue(numOpt);
False,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,src/test/org/apache/commons/cli2/bug/BugCLI150Test.java,60,"ssertEquals(""Wrong option value"", -42, num.intValue());"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,19,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,20,mport java.util.List;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,24,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,25,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,26,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,27,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,28,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,29,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,30,mport org.apache.commons.cli2.option.DefaultOption;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,33, http://issues.apache.org/jira/browse/CLI-158
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,35,ublic class BugCLI158Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,37,rivate Parser createDefaultValueParser(String[] defaults) {
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,38,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,39,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,40,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,42,"efaultOption bOption = obuilder.withShortName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,43,"withLongName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,44,"withArgument(abuilder.withName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,45,withMinimum(0)
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,46,withMaximum(defaults.length)
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,47,withDefaults(Arrays.asList(defaults))
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,48,create())
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,49,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,51,roup options = gbuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,52,"withName(""options"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,53,withOption(bOption)
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,54,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,56,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,57,"arser.setHelpTrigger(""--help"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,58,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,59,eturn parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,62,ublic void testSingleOptionSingleArgument() throws Exception {
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,63,"arser parser = createDefaultValueParser(new String[]{""100"", ""1000""});"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,64,"tring enteredValue1 = ""1"";"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,65,"tring[] args = new String[]{""-b"", enteredValue1};"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,66,ommandLine cl = parser.parse(args);
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,67,ommandLine cmd = cl;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,68,ssertNotNull(cmd);
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,69,"ist b = cmd.getValues(""-b"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,70,"ssertEquals(""["" + enteredValue1 + "", 1000]"", b + """");"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,73,ublic void testSingleOptionNoArgument() throws Exception {
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,74,"arser parser = createDefaultValueParser(new String[]{""100"", ""1000""});"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,75,"tring[] args = new String[]{""-b""};"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,76,ommandLine cl = parser.parse(args);
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,77,ommandLine cmd = cl;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,78,ssertNotNull(cmd);
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,79,"ist b = cmd.getValues(""-b"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,80,"ssertEquals(""[100, 1000]"", b + """");"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,83,ublic void testSingleOptionMaximumNumberOfArgument() throws Exception {
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,84,"tring[] args = new String[]{""-b"", ""1"", ""2""};"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,85,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,86,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,87,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,89,"efaultOption bOption = obuilder.withShortName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,90,"withLongName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,91,"withArgument(abuilder.withName(""b"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,92,withMinimum(2)
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,93,withMaximum(4)
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,94,"withDefault(""100"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,95,"withDefault(""1000"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,96,"withDefault(""10000"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,97,create())
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,98,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,100,roup options = gbuilder
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,101,"withName(""options"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,102,withOption(bOption)
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,103,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,105,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,106,"arser.setHelpTrigger(""--help"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,107,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,108,ommandLine cl = parser.parse(args);
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,109,ommandLine cmd = cl;
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,110,ssertNotNull(cmd);
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,111,"ist b = cmd.getValues(""-b"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,src/test/org/apache/commons/cli2/bug/BugCLI158Test.java,112,"ssertEquals(""[1, 2, 10000]"", b + """");"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,21,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,22,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,23,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,24,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,25,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,26,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,27,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,30, Inconsistent handling of minimum and maximum constraints for groups and their
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,31, child groups.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,33, @author Oliver Heger
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,34, @version $Id$
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,36,ublic class BugCLI159Test extends TestCase
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,38,** The parent group. */
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,39,rivate Group parent;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,41,** The child group. */
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,42,rivate Group child;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,44,** The parser. */
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,45,rivate Parser parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,48," Creates some test options, including a group with a child group."
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,50, @param childGroupRequired a flag whether the child group is required
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,52,rivate void setUpOptions(boolean childGroupRequired)
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,54,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,55,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,56,"ption parentOpt = obuilder.withLongName(""parent"").withShortName(""p"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,57,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,58,"ption childOpt1 = obuilder.withLongName(""child"").withShortName(""c"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,59,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,60,"ption childOpt2 = obuilder.withLongName(""sub"").withShortName(""s"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,61,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,62,"ption childOpt3 = obuilder.withLongName(""test"").withShortName(""t"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,63,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,64,"hild = gbuilder.withName(""childOptions"").withOption(childOpt1)"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,65,withOption(childOpt2).withOption(childOpt3).withMinimum(2)
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,66,withRequired(childGroupRequired).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,67,"arent = gbuilder.withName(""options"").withOption(parentOpt).withOption("
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,68,hild).withMinimum(0).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,69,arser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,70,arser.setGroup(parent);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,74, Tests whether the child group can be omitted.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,76,ublic void testNoChildGroup() throws OptionException
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,78,etUpOptions(false);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,79,ommandLine cl = parser.parse(new String[] {
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,80,"--parent"""
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,82,"ssertNotNull(""No command line parsed"", cl);"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,83,"ssertFalse(""Child group found"", cl.hasOption(child));"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,87, Tests whether a required child groupd can be omitted.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,89,ublic void testNoChildGroupRequired()
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,91,etUpOptions(true);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,92,ry
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,94,arser.parse(new String[] {
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,95,"--parent"""
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,97,"ail(""Missing child group not detected!"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,99,atch (OptionException oex)
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,101,/ ok
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,106, Tests parsing an empty command line. Because the parent group is optional
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,107, this should be possible.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,109,ublic void testNoOptions() throws OptionException
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,111,etUpOptions(false);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,112,ommandLine cl = parser.parse(new String[0]);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,113,"ssertFalse(""Found parent option"", cl.hasOption(""--parent""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,114,"ssertFalse(""Found child option"", cl.hasOption(""--child""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,118, Tests parsing a command line with options of the child group.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,120,ublic void testWithChildOptions() throws OptionException
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,122,etUpOptions(false);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,123,ommandLine cl = parser.parse(new String[] {
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,124,"-ct"""
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,126,"ssertTrue(""child option not found"", cl.hasOption(""--child""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,127,"ssertTrue(""test option not found"", cl.hasOption(""--test""));"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,131," Tests a command line containing options of the child group, but the"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,132, minimum constraint is violated.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,134,ublic void testWithChildOptionsMissing()
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,136,etUpOptions(false);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,137,ry
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,139,arser.parse(new String[] {
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,140,"--parent"", ""--sub"""
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,142,"ail(""Missing options of child group not detected!"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,144,atch (OptionException oex)
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,146,/ ok
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,151, Tests whether the root group is always validated.
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,153,ublic void testRequiredRootGroup()
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,155,etUpOptions(false);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,156,arser.setGroup(child);
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,157,ry
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,159,arser.parse(new String[] {
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,160,"--test"""
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,162,"ail(""Missing options not detected!"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,164,atch (OptionException oex)
False,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,166,/ ok
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,19,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,20,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,22,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,23,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,24,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,25,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,26,mport org.apache.commons.cli2.util.HelpFormatter;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,28,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,31, http://issues.apache.org/jira/browse/CLI-18
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,33,ublic class BugCLI18Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,35,ublic BugCLI18Test() {
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,36,uper();
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,40,ublic void testBug() {
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,41,"ption a = new DefaultOptionBuilder().withLongName(""aaa"").withShortName(""a"").withDescription(""aaaaaaa"").create();"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,42,"ption b = new DefaultOptionBuilder().withLongName(""bbb"").withDescription(""bbbbbbbb dksh fkshd fkhs dkfhsdk fhskd hksdks dhfowehfsdhfkjshf skfhkshf sf jkshfk sfh skfh skf f"").create();"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,43,"ption c = new DefaultOptionBuilder().withLongName(""ccc"").withShortName(""c"").withDescription(""ccccccc"").create();"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,45,roup g = new GroupBuilder().withOption(a).withOption(b).withOption(c).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,47,elpFormatter formatter = new HelpFormatter();
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,48,tringWriter out = new StringWriter();
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,50,ormatter.setPrintWriter(new PrintWriter(out));
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,51,"ormatter.setHeader(""dsfkfsh kdh hsd hsdh fkshdf ksdh fskdh fsdh fkshfk sfdkjhskjh fkjh fkjsh khsdkj hfskdhf skjdfh ksf khf s"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,52,"ormatter.setFooter(""blort j jgj j jg jhghjghjgjhgjhg jgjhgj jhg jhg hjg jgjhghjg jhg hjg jhgjg jgjhghjg jg jgjhgjgjg jhg jhgjh"" + '\r' + '\n' + ""rarrr"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,53,ormatter.setGroup(g);
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,54,"ormatter.setShellCommand(""foobar"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,src/test/org/apache/commons/cli2/bug/BugCLI18Test.java,56,ormatter.print();
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,17,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,19,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,20,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,21,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,22,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,23,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,24,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,25,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,26,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,27,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,29,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,32, http://issues.apache.org/jira/browse/CLI-80
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,34,ublic class BugCLI80Test extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,36,ublic void testBug() {
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,37,"inal String optName = ""option"";"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,39,rgument arg = new ArgumentBuilder().withName(optName)
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,40,withMaximum(1)
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,41,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,43,ption option = new DefaultOptionBuilder().withArgument(arg)
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,44,"withDescription(""singular option"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,45,withLongName(optName)
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,46,"withShortName(""o"")"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,47,create();
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,49,roup group = new GroupBuilder().withOption(option).create();
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,51,arser p = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,52,.setGroup(group);
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,54,"ommandLine cl = p.parseAndHelp( new String[] { ""-o"", ""yes"" } );"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,55,"ssertNotNull(""Couldn't parse valid commandLine"", cl);"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,57,"ssertEquals(""Couldn't look up value by short name"", ""yes"", cl.getValue(""-o"") );"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,59,ry {
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,60,"l = p.parse( new String[] { ""-o"", ""yes"", ""-o"", ""jam"" } );"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,61,"ail(""Parsed invalid commandLine"");"
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,62, catch(OptionException e) {
False,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,src/test/org/apache/commons/cli2/bug/BugCLI80Test.java,63,/ ok
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,17, under the License.
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,19,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,21,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,23,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,24,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,25,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,26,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,27,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,28,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,29,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,30,mport org.apache.commons.cli2.option.SourceDestArgument;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,33, The first is a loop in Parser.parse() if I set a non-declared option. This
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,34, code goes into a loop in Parser.java method parse this 'while' loop runs
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,35, endless
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,37, @author Steve Alberty
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,39,ublic class BugLoopingOptionLookAlikeTest extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,41,ublic void testLoopingOptionLookAlike() {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,42,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,43,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,44,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,45,inal Group options = gbuilder
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,46,"withName(""ant"")"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,47,"withOption(obuilder.withShortName(""help"").withDescription(""print this message"").create())"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,48,"withOption(obuilder.withShortName(""projecthelp"").withDescription(""print project help information"").create())"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,49,"withOption(abuilder.withName(""target"").create())"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,50,create();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,52,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,53,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,54,ry {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,55,"arser.parse(new String[] { ""-abcdef"","
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,56,"testfile.txt "", });"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,57,"ail(""OptionException"");"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,58, catch (OptionException e) {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,59,"ssertEquals(""Unexpected -abcdef while processing ant"",e.getMessage());"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,63,ublic void testLoopingOptionLookAlike2() {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,64,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,65,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,66,"inal Argument inputfile_opt = abuilder.withName(""input"").withMinimum(1).withMaximum(1).create();"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,67,"inal Argument outputfile_opt = abuilder.withName(""output"").withMinimum(1).withMaximum(1).create();"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,68,"inal Argument targets = new SourceDestArgument(inputfile_opt, outputfile_opt);"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,69,inal Group options = gbuilder.withOption(targets).create();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,70,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,71,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,72,ry {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,73,"arser.parse(new String[] { ""testfile.txt"", ""testfile.txt"", ""testfile.txt"", ""testfile.txt"" });"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,74,"ail(""OptionException"");"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,75, catch (OptionException e) {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,76,"ssertEquals(""Unexpected testfile.txt while processing "", e.getMessage());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,17, under the License.
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,19,ackage org.apache.commons.cli2.builder;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,21,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,22,mport java.util.List;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,24,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,26,mport org.apache.commons.cli2.option.ArgumentImpl;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,27,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,28,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,29,mport org.apache.commons.cli2.validation.DateValidator;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,30,mport org.apache.commons.cli2.validation.Validator;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,32,ublic class ArgumentBuilderTest
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,33,xtends TestCase {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,34,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,35,rivate ArgumentBuilder argumentBuilder;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,38, @see TestCase#setUp()
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,40,rotected void setUp()
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,41,hrows Exception {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,42,his.argumentBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,45,ublic void testConsumeRemaining() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,46,"his.argumentBuilder.withConsumeRemaining(""--"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,47,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,49,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,51,"ssertEquals(""incorrect consume remaining token"", ""--"", arg.getConsumeRemaining());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,54,ublic void testNullConsumeRemaining() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,55,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,56,his.argumentBuilder.withConsumeRemaining(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,57,"ail(""cannot use null consume remaining token"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,58, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,59,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,60,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_CONSUME_REMAINING),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,61,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,65,ublic void testEmptyConsumeRemaining() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,66,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,67,"his.argumentBuilder.withConsumeRemaining("""");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,68,"ail(""cannot use empty string consume remaining token"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,69, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,70,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,71,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_EMPTY_CONSUME_REMAINING),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,72,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,76,ublic void testDefault() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,77,"his.argumentBuilder.withDefault(""defaultString"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,78,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,80,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,82,"ssertEquals(""incorrect number of default values"", 1, arg.getDefaultValues().size());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,83,"ssertEquals(""incorrect default value"", ""defaultString"", arg.getDefaultValues().get(0));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,86,ublic void testDefaultX2() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,87,"his.argumentBuilder.withDefault(""defaultString1"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,88,"his.argumentBuilder.withDefault(""defaultString2"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,89,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,91,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,93,"ssertEquals(""incorrect number of default values"", 2, arg.getDefaultValues().size());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,94,"ssertEquals(""incorrect default value-1"", ""defaultString1"", arg.getDefaultValues().get(0));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,95,"ssertEquals(""incorrect default value-2"", ""defaultString2"", arg.getDefaultValues().get(1));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,98,ublic void testNullDefault() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,99,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,100,his.argumentBuilder.withDefault(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,101,"ail(""cannot use null default"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,102, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,103,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,104,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_DEFAULT),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,105,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,109,ublic void testDefaults() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,110,inal List defaults = new ArrayList();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,111,"efaults.add(""one"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,112,"efaults.add(""two"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,114,his.argumentBuilder.withDefaults(defaults);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,115,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,117,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,119,"ssertEquals(""incorrect number of default values"", 2, arg.getDefaultValues().size());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,120,"ssertEquals(""incorrect default value-1"", ""one"", arg.getDefaultValues().get(0));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,121,"ssertEquals(""incorrect default value-2"", ""two"", arg.getDefaultValues().get(1));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,122,"ssertEquals(""incorrect default values list"", defaults, arg.getDefaultValues());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,126,ublic void testNullDefaults() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,127,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,128,his.argumentBuilder.withDefaults(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,129,"ail(""cannot use null defaults"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,130, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,131,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,132,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_DEFAULTS),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,133,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,137,ublic void testId() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,138,his.argumentBuilder.withId(1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,139,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,141,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,143,"ssertEquals(""incorrect id"", 1, arg.getId());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,146,ublic void testInitialSeparator() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,147,"his.argumentBuilder.withInitialSeparator(',');"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,148,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,150,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,152,"ssertEquals(""incorrect initial separator"", ',', arg.getInitialSeparator());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,155,ublic void testMaximum() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,156,his.argumentBuilder.withMaximum(1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,157,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,159,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,161,"ssertEquals(""incorrect maximum"", 1, arg.getMaximum());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,164,ublic void testNegativeMaximum() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,165,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,166,his.argumentBuilder.withMaximum(-1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,167,"ail(""cannot use negative maximum"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,168, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,169,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,170,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NEGATIVE_MAXIMUM),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,171,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,175,ublic void testMinimum() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,176,his.argumentBuilder.withMinimum(1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,177,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,179,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,181,"ssertEquals(""incorrect maximum"", 1, arg.getMinimum());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,184,ublic void testNegativeMinimum() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,185,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,186,his.argumentBuilder.withMinimum(-1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,187,"ail(""cannot use negative minimum"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,188, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,189,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,190,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NEGATIVE_MINIMUM),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,191,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,195,ublic void testName() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,196,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,198,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,200,"ssertEquals(""incorrect preferred name"", ""arg"", arg.getPreferredName());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,203,ublic void testNullName() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,204,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,205,his.argumentBuilder.withName(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,206,"ail(""cannot use null name"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,207, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,208,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,209,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_NAME),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,210,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,214,ublic void testEmptyName() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,215,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,216,"his.argumentBuilder.withName("""");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,217,"ail(""cannot use empty name"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,218, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,219,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,220,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_EMPTY_NAME),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,221,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,225,ublic void testSubsequentSeparator() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,226,his.argumentBuilder.withSubsequentSeparator(':');
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,227,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,229,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,231,"ssertEquals(""incorrect subsequent separator"", ':', arg.getSubsequentSeparator());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,234,ublic void testValidator() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,235,alidator validator = DateValidator.getDateInstance();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,236,his.argumentBuilder.withValidator(validator);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,237,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,239,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,241,"ssertEquals(""incorrect validator"", validator, arg.getValidator());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,244,ublic void testNullValidator() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,245,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,246,his.argumentBuilder.withValidator(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,247,"ail(""cannot use null validator"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,248, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,249,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,250,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_VALIDATOR),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,251,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,17,ackage org.apache.commons.cli2.builder;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,21,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,22,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,23,mport org.apache.commons.cli2.option.DefaultOption;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,24,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,25,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,27,ublic class DefaultOptionBuilderTest
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,28,xtends TestCase {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,29,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,30,rivate DefaultOptionBuilder defaultOptionBuilder;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,33, @see TestCase#setUp()
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,35,rotected void setUp()
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,36,hrows Exception {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,37,his.defaultOptionBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,41," Class to test for void DefaultOptionBuilder(String, String, boolean)"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,43,ublic void testNew_NullShortPrefix() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,44,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,45,"ew DefaultOptionBuilder(null, null, false);"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,46,"ail(""null short prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,47, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,48,"ssertEquals(resources.getMessage(ResourceConstants.OPTION_ILLEGAL_SHORT_PREFIX),"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,49,.getMessage());
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,54," Class to test for void DefaultOptionBuilder(String, String, boolean)"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,56,ublic void testNew_EmptyShortPrefix() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,57,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,58,"ew DefaultOptionBuilder("""", null, false);"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,59,"ail(""empty short prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,60, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,61,"ssertEquals(resources.getMessage(ResourceConstants.OPTION_ILLEGAL_SHORT_PREFIX),"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,62,.getMessage());
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,67," Class to test for void DefaultOptionBuilder(String, String, boolean)"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,69,ublic void testNew_NullLongPrefix() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,70,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,71,"ew DefaultOptionBuilder(""-"", null, false);"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,72,"ail(""null long prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,73, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,74,"ssertEquals(resources.getMessage(ResourceConstants.OPTION_ILLEGAL_LONG_PREFIX),"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,75,.getMessage());
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,80," Class to test for void DefaultOptionBuilder(String, String, boolean)"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,82,ublic void testNew_EmptyLongPrefix() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,83,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,84,"ew DefaultOptionBuilder(""-"", """", false);"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,85,"ail(""empty long prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,86, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,87,"ssertEquals(resources.getMessage(ResourceConstants.OPTION_ILLEGAL_LONG_PREFIX),"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,88,.getMessage());
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,92,ublic void testCreate() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,93,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,94,his.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,95,"ail(""options must have a name"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,96, catch (IllegalStateException e) {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,97,"ssertEquals(resources.getMessage(ResourceConstants.OPTION_NO_NAME), e.getMessage());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,100,"his.defaultOptionBuilder.withShortName(""j"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,101,his.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,102,"his.defaultOptionBuilder.withLongName(""jkeyes"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,103,his.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,106,"efaultOptionBuilder builder = new DefaultOptionBuilder(""-"", ""--"", true);"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,107,"uilder.withShortName(""mx"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,111,ublic void testName() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,112,/ withLongName && this.preferred != null
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,114,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,115,"his.defaultOptionBuilder.withLongName(""apples"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,117,/ withShortName && this.preferred != null
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,119,"his.defaultOptionBuilder.withLongName(""apples"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,120,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,122,/ withShortName && this.preferred != null
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,124,"his.defaultOptionBuilder.withLongName(""apples"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,125,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,129,ublic void testWithDescription() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,130,"tring description = ""desc"";"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,131,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,132,his.defaultOptionBuilder.withDescription(description);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,134,efaultOption opt = this.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,135,"ssertEquals(""wrong description found"", description, opt.getDescription());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,138,ublic void testWithRequired() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,140,oolean required = false;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,141,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,142,his.defaultOptionBuilder.withRequired(required);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,144,efaultOption opt = this.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,145,"ssertEquals(""wrong required found"", required, opt.isRequired());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,149,oolean required = true;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,150,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,151,his.defaultOptionBuilder.withRequired(required);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,153,efaultOption opt = this.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,154,"ssertEquals(""wrong required found"", required, opt.isRequired());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,158,ublic void testWithChildren() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,159,roupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,161,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,162,his.defaultOptionBuilder.withRequired(true);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,164,efaultOption opt = this.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,166,"roup group = gbuilder.withName(""withchildren"").withOption(opt).create();"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,169,"his.defaultOptionBuilder.withShortName(""b"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,170,his.defaultOptionBuilder.withChildren(group);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,172,efaultOption option = this.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,173,"ssertEquals(""wrong children found"", group, option.getChildren());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,177,ublic void testWithArgument() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,178,rgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,179,"builder.withName(""myarg"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,181,rgument arg = abuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,183,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,184,his.defaultOptionBuilder.withRequired(true);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,185,his.defaultOptionBuilder.withArgument(arg);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,187,efaultOption opt = this.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,189,"ssertEquals(""wrong argument found"", arg, opt.getArgument());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,192,ublic void testWithId() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,193,"his.defaultOptionBuilder.withShortName(""a"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,194,his.defaultOptionBuilder.withId(0);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,196,efaultOption opt = this.defaultOptionBuilder.create();
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,198,"ssertEquals(""wrong id found"", 0, opt.getId());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,17,ackage org.apache.commons.cli2.commandline;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,19,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,20,mport java.util.Collections;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,21,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,22,mport java.util.Set;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,24,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,25,mport org.apache.commons.cli2.CommandLineTestCase;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,26,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,27,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,28,mport org.apache.commons.cli2.option.PropertyOption;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,29,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,32, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,34,ublic class DefaultingCommandLineTest
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,35,xtends CommandLineTestCase {
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,36,rivate CommandLine first;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,37,rivate CommandLine second;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,38,"rivate Option inFirst = new DefaultOptionBuilder().withLongName(""infirst"").create();"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,39,"rivate Option inBoth = new DefaultOptionBuilder().withLongName(""inboth"").create();"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,40,"rivate Option inSecond = new DefaultOptionBuilder().withLongName(""insecond"").create();"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,42,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,43, @see org.apache.commons.cli2.CommandLineTest#createCommandLine()
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,45,rotected final CommandLine createCommandLine() {
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,46,"inal WriteableCommandLine writeable = new WriteableCommandLineImpl(root, new ArrayList());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,47,riteable.addOption(present);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,48,"riteable.addProperty(new PropertyOption(), ""present"", ""present property"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,49,"riteable.addSwitch(bool, true);"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,50,"riteable.addValue(present, ""present value"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,51,riteable.addOption(multiple);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,52,"riteable.addValue(multiple, ""value 1"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,53,"riteable.addValue(multiple, ""value 2"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,54,"riteable.addValue(multiple, ""value 3"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,56,inal DefaultingCommandLine defaults = new DefaultingCommandLine();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,57,efaults.appendCommandLine(writeable);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,59,eturn defaults;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,62,ublic void setUp()
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,63,hrows Exception {
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,64,uper.setUp();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,66,riteableCommandLine writeable;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,68,"riteable = new WriteableCommandLineImpl(root, new ArrayList());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,69,riteable.addOption(inFirst);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,70,riteable.addOption(inBoth);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,71,"riteable.addProperty(""infirst"", ""infirst first value"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,72,"riteable.addProperty(""inboth"", ""inboth first value"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,73,"riteable.addSwitch(inFirst, true);"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,74,"riteable.addSwitch(inBoth, true);"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,75,"riteable.addValue(inFirst, ""infirst first value 1"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,76,"riteable.addValue(inFirst, ""infirst first value 2"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,77,"riteable.addValue(inBoth, ""inboth first value 1"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,78,"riteable.addValue(inBoth, ""inboth first value 2"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,79,irst = writeable;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,81,"riteable = new WriteableCommandLineImpl(root, new ArrayList());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,82,riteable.addOption(inSecond);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,83,riteable.addOption(inBoth);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,84,"riteable.addProperty(""insecond"", ""insecond second value"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,85,"riteable.addProperty(""inboth"", ""inboth second value"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,86,"riteable.addSwitch(inSecond, true);"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,87,"riteable.addSwitch(inBoth, true);"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,88,"riteable.addValue(inSecond, ""insecond second value 1"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,89,"riteable.addValue(inSecond, ""insecond second value 2"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,90,"riteable.addValue(inBoth, ""inboth second value 1"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,91,"riteable.addValue(inBoth, ""inboth second value 2"");"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,92,econd = writeable;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,95,ublic final void testAppendCommandLine() {
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,96,inal DefaultingCommandLine defaults = new DefaultingCommandLine();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,97,terator i;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,99, = defaults.commandLines();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,100,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,102,efaults.appendCommandLine(first);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,103, = defaults.commandLines();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,104,"ssertSame(first, i.next());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,105,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,107,efaults.appendCommandLine(second);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,108, = defaults.commandLines();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,109,"ssertSame(first, i.next());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,110,"ssertSame(second, i.next());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,111,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,114,ublic final void testInsertCommandLine() {
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,115,inal DefaultingCommandLine defaults = new DefaultingCommandLine();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,116,terator i;
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,118, = defaults.commandLines();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,119,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,121,"efaults.insertCommandLine(0, first);"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,122, = defaults.commandLines();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,123,"ssertSame(first, i.next());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,124,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,126,"efaults.insertCommandLine(0, second);"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,127, = defaults.commandLines();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,128,"ssertSame(second, i.next());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,129,"ssertSame(first, i.next());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,130,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,133,ublic void testTriggers() {
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,134,inal DefaultingCommandLine defaults = new DefaultingCommandLine();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,135,efaults.appendCommandLine(first);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,136,efaults.appendCommandLine(second);
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,138,et set = defaults.getOptionTriggers();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,139,terator iter = set.iterator();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,140,"ssertEquals(""wrong # of triggers"", 3, set.size());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,141,"ssertTrue(""cannot find trigger"", set.contains(""--insecond""));"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,142,"ssertTrue(""cannot find trigger"", set.contains(""--inboth""));"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,143,"ssertTrue(""cannot find trigger"", set.contains(""--infirst""));"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,146,ublic void testDefaults() {
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,147,inal DefaultingCommandLine defaults = new DefaultingCommandLine();
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,149,"ssertEquals(""wrong # of defaults"", 0, defaults.getValues(""--insecond"").size());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,150,"ssertEquals(""wrong Set of defaults"", Collections.EMPTY_LIST, defaults.getValues(""--insecond"", null));"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,17,ackage org.apache.commons.cli2.commandline;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,19,mport java.io.BufferedReader;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,20,mport java.io.IOException;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,21,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,22,mport java.io.StringReader;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,23,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,25,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,26,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,27,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,28,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,29,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,30,mport org.apache.commons.cli2.option.DefaultOption;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,31,mport org.apache.commons.cli2.util.HelpFormatter;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,33,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,35,ublic class ParserTest extends TestCase {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,37,rivate Parser parser;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,38,rivate DefaultOption verboseOption;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,39,rivate DefaultOption helpOption;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,40,rivate Group options;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,41,rivate HelpFormatter helpFormatter;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,42,rivate StringWriter out;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,43,rivate BufferedReader in;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,45,ublic void setUp() {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,46,arser = new Parser();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,48,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,49,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,51,"elpOption = oBuilder.withLongName(""help"").withShortName(""h"").create();"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,52,"erboseOption = oBuilder.withLongName(""verbose"").withShortName(""v"").create();"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,53,ptions = gBuilder.withOption(helpOption).withOption(verboseOption).create();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,54,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,56,elpFormatter = new HelpFormatter();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,57,ut = new StringWriter();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,58,elpFormatter.setPrintWriter(new PrintWriter(out));
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,59,arser.setHelpFormatter(helpFormatter);
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,62,ublic void testParse_Successful() throws OptionException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,63,"inal CommandLine cl = parser.parse(new String[]{""-hv""});"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,65,ssertTrue(cl.hasOption(helpOption));
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,66,ssertTrue(cl.hasOption(verboseOption));
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,68,"ssertEquals(""--help --verbose"",cl.toString());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,70,inal WriteableCommandLineImpl wcli = (WriteableCommandLineImpl)cl;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,71,"ssertEquals(""[--help, --verbose]"",wcli.getNormalised().toString());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,74,ublic void testParse_WithUnexpectedOption() {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,75,ry {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,76,"arser.parse(new String[]{""--unexpected""});"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,77,"ail(""OptionException"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,79,atch(OptionException e) {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,80,"ssertEquals(options,e.getOption());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,81,"ssertEquals(""Unexpected --unexpected while processing --help|--verbose"",e.getMessage());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,85,ublic void testParse_WithUnexpectedShortOption() {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,86,ry {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,87,"arser.parse(new String[]{""-vx""});"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,88,"ail(""OptionException"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,90,atch(OptionException e) {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,91,"ssertEquals(options,e.getOption());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,92,"ssertEquals(""Unexpected -x while processing --help|--verbose"",e.getMessage());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,96,ublic void testParseAndHelp_Successful() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,97,"inal CommandLine cl = parser.parseAndHelp(new String[]{""-v""});"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,99,ssertTrue(cl.hasOption(verboseOption));
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,100,"ssertEquals("""",out.getBuffer().toString());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,103,ublic void testParseAndHelp_ByHelpOption() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,104,arser.setHelpOption(helpOption);
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,106,"ssertNull(parser.parseAndHelp(new String[]{""-hv""}));"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,108,nReader();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,109,ssertInReaderUsage();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,110,ssertInReaderEOF();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,113,ublic void testParseAndHelp_ByHelpTrigger() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,114,"arser.setHelpTrigger(""--help"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,116,"ssertNull(parser.parseAndHelp(new String[]{""-hv""}));"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,118,nReader();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,119,ssertInReaderUsage();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,120,ssertInReaderEOF();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,123,ublic void testParseAndHelp_WithUnexpectedOption() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,124,"ssertNull(parser.parseAndHelp(new String[]{""--unexpected""}));"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,126,nReader();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,127,"ssertInReaderLine(""Unexpected --unexpected while processing --help|--verbose"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,128,ssertInReaderUsage();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,129,ssertInReaderEOF();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,132,rivate void assertInReaderUsage() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,133,"ssertInReaderLine(""Usage:"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,134,"ssertInReaderLine(""[--help --verbose]"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,135,"ssertInReaderLine(""--help|--verbose"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,136,"ssertInReaderLine(""--help (-h)"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,137,"ssertInReaderLine(""--verbose (-v)"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,140,rivate void assertInReaderLine(final String string) throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,141,"ssertEquals(string,in.readLine().trim());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,144,rivate void assertInReaderEOF() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,145,ssertNull(in.readLine());
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,148,rivate void inReader() {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,149,n = new BufferedReader(new StringReader(out.getBuffer().toString()));
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,17,ackage org.apache.commons.cli2.commandline;
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,20,mport java.util.Set;
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,21,mport java.util.prefs.Preferences;
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,23,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,24,mport org.apache.commons.cli2.CommandLineTestCase;
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,27, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,29,ublic class PreferencesCommandLineTest extends CommandLineTestCase {
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,31,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,32, @see org.apache.commons.cli2.CommandLineTest#createCommandLine()
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,34,rotected CommandLine createCommandLine() {
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,35,/ TODO Auto-generated method stub
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,36,inal Preferences props = Preferences.userNodeForPackage(PreferencesCommandLineTest.class);
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,37,"rops.put(""--present"",""present value"");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,38,"rops.put(""--alsopresent"","""");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,39,"rops.put(""--multiple"",""value 1|value 2|value 3"");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,40,"rops.put(""--bool"",""true"");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,42,"rops.put(""present"",""present property"");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,44,"eturn new PreferencesCommandLine(root,props,'|');"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,47,rotected CommandLine createCommandLineNoSep() {
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,48,/ TODO Auto-generated method stub
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,49,inal Preferences props = Preferences.userNodeForPackage(PreferencesCommandLineTest.class);
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,50,"rops.put(""--present"",""present value"");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,51,"rops.put(""--alsopresent"","""");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,52,"rops.put(""--multiple"",""value 1|value 2|value 3"");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,53,"rops.put(""--bool"",""false"");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,55,"rops.put(""present"",""present property"");"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,57,"eturn new PreferencesCommandLine(root,props);"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,60,ublic void testPropertyValues() {
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,61,/ nothing to test
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,62,ommandLine cmdline = createCommandLine();
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,64,"ssertEquals(""wrong value"", ""present value"", cmdline.getValue(""--present""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,65,"ssertEquals(""wrong value"", ""present value"", cmdline.getValue(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,66,"ssertEquals(""wrong # of values"", 3, cmdline.getValues(""--multiple"").size());"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,67,"ssertEquals(""wrong value 1"", ""value 1"", cmdline.getValues(""--multiple"").get(0));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,68,"ssertEquals(""wrong value 2"", ""value 2"", cmdline.getValues(""--multiple"").get(1));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,69,"ssertEquals(""wrong value 3"", ""value 3"", cmdline.getValues(""--multiple"").get(2));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,72,ublic void testNoSeparator() {
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,73,/ nothing to test
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,74,ommandLine cmdline = createCommandLineNoSep();
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,76,"ssertEquals(""wrong value"", ""present value"", cmdline.getValue(""--present""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,77,"ssertEquals(""wrong value"", ""present value"", cmdline.getValue(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,78,"ssertEquals(""wrong # of values"", 1, cmdline.getValues(""--multiple"").size());"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,79,"ssertEquals(""wrong value"", ""value 1|value 2|value 3"", cmdline.getValue(""--multiple""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,80,"ssertFalse(""expected a false"", cmdline.getSwitch(""--bool"").booleanValue());"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,83,ublic void testNullOption() {
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,84,/ nothing to test
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,85,ommandLine cmdline = createCommandLine();
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,87,"ssertFalse(""should not find null option"", cmdline.hasOption((String) null));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,88,"ssertTrue(""expected a true"", cmdline.getSwitch(""--bool"").booleanValue());"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,91,ublic void testPreferenceTriggers() {
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,92,/ nothing to test
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,93,ommandLine cmdline = createCommandLine();
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,95,et triggers = cmdline.getOptionTriggers();
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,96,terator iter = triggers.iterator();
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,97,"ssertEquals(""wrong # of triggers"", 4, triggers.size());"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,98,"ssertTrue(""cannot find trigger"", triggers.contains(""--bool""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,99,"ssertTrue(""cannot find trigger"", triggers.contains(""--present""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,100,"ssertTrue(""cannot find trigger"", triggers.contains(""--multiple""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,101,"ssertTrue(""cannot find trigger"", triggers.contains(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,103,"ssertFalse(""should not find null option"", cmdline.hasOption((String) null));"
False,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,104,"ssertTrue(""expected a true"", cmdline.getSwitch(""--bool"").booleanValue());"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,17,ackage org.apache.commons.cli2.commandline;
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,20,mport java.util.Properties;
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,21,mport java.util.Set;
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,23,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,24,mport org.apache.commons.cli2.CommandLineTestCase;
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,27, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,29,ublic class PropertiesCommandLineTest
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,30,xtends CommandLineTestCase {
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,31,rivate Properties props = null;
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,33,rotected CommandLine createCommandLine() {
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,34,rops = new Properties();
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,35,"rops.setProperty(""--present"", ""present value"");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,36,"rops.setProperty(""--alsopresent"", """");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,37,"rops.setProperty(""--multiple"", ""value 1|value 2|value 3"");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,38,"rops.setProperty(""--bool"", ""true"");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,40,"rops.setProperty(""present"", ""present property"");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,41,"eturn new PropertiesCommandLine(root, props, '|');"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,44,rotected CommandLine createCommandLineNoSep() {
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,45,rops = new Properties();
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,46,"rops.setProperty(""--present"", ""present value"");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,47,"rops.setProperty(""--alsopresent"", """");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,48,"rops.setProperty(""--multiple"", ""value 1|value 2|value 3"");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,49,"rops.setProperty(""--bool"", ""false"");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,51,"rops.setProperty(""present"", ""present property"");"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,52,"eturn new PropertiesCommandLine(root, props);"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,55,ublic void testPropertyValues() {
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,56,/ nothing to test
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,57,ommandLine cmdline = createCommandLine();
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,59,"ssertEquals(""wrong value"", ""present value"", cmdline.getValue(""--present""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,60,"ssertEquals(""wrong value"", ""present value"", cmdline.getValue(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,61,"ssertEquals(""wrong # of values"", 3, cmdline.getValues(""--multiple"").size());"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,62,"ssertEquals(""wrong value 1"", ""value 1"", cmdline.getValues(""--multiple"").get(0));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,63,"ssertEquals(""wrong value 2"", ""value 2"", cmdline.getValues(""--multiple"").get(1));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,64,"ssertEquals(""wrong value 3"", ""value 3"", cmdline.getValues(""--multiple"").get(2));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,67,ublic void testNoSeparator() {
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,68,/ nothing to test
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,69,ommandLine cmdline = createCommandLineNoSep();
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,71,"ssertEquals(""wrong value"", ""present value"", cmdline.getValue(""--present""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,72,"ssertEquals(""wrong value"", ""present value"", cmdline.getValue(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,73,"ssertEquals(""wrong # of values"", 1, cmdline.getValues(""--multiple"").size());"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,74,"ssertEquals(""wrong value"", ""value 1|value 2|value 3"", cmdline.getValue(""--multiple""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,75,"ssertFalse(""expected a false"", cmdline.getSwitch(""--bool"").booleanValue());"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,78,ublic void testNullOption() {
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,79,/ nothing to test
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,80,ommandLine cmdline = createCommandLine();
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,82,"ssertFalse(""should not find null option"", cmdline.hasOption((String) null));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,83,"ssertTrue(""expected a true"", cmdline.getSwitch(""--bool"").booleanValue());"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,86,ublic void testPropertyTriggers() {
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,87,/ nothing to test
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,88,ommandLine cmdline = createCommandLine();
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,90,et triggers = cmdline.getOptionTriggers();
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,91,terator iter = triggers.iterator();
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,92,"ssertEquals(""wrong # of triggers"", 4, triggers.size());"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,93,"ssertTrue(""cannot find trigger"", triggers.contains(""--bool""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,94,"ssertTrue(""cannot find trigger"", triggers.contains(""--present""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,95,"ssertTrue(""cannot find trigger"", triggers.contains(""--multiple""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,96,"ssertTrue(""cannot find trigger"", triggers.contains(""--alsopresent""));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,98,"ssertFalse(""should not find null option"", cmdline.hasOption((String) null));"
False,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,99,"ssertTrue(""expected a true"", cmdline.getSwitch(""--bool"").booleanValue());"
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,17,ackage org.apache.commons.cli2.commandline;
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,19,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,21,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,22,mport org.apache.commons.cli2.WriteableCommandLineTestCase;
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,24,ublic class WriteableCommandLineImplTest
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,25,xtends WriteableCommandLineTestCase {
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,26,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,27, @see org.apache.commons.cli2.WriteableCommandLineTest#createWriteableCommandLine()
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,29,rotected WriteableCommandLine createWriteableCommandLine() {
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,30,"eturn new WriteableCommandLineImpl(root, new ArrayList());"
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,33,ublic void testToMakeEclipseSpotTheTestCase() {
False,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,34,/ nothing to test
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,17,ackage org.apache.commons.cli2.jdepend;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,19,mport java.io.IOException;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,20,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,21,mport java.util.Collection;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,22,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,24,mport jdepend.framework.JDepend;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,25,mport jdepend.framework.JavaPackage;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,26,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,29, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,31,ublic class JDependTest extends TestCase {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,33,rivate JDepend dependancies = null;
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,35,ublic void setUp() throws IOException {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,36,ependancies = new JDepend();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,37,"ependancies.addDirectory(""target/classes"");"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,38,ependancies.analyze();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,41,ublic void testJUnitNotPresent() {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,42,/ if junit dependancy is found then jdepend has been poluted
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,43,/ with test classes and all tests are meaningless
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,44,ssertNull(
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,45,"JUnit dependancy found"","
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,46,"ependancies.getPackage(""junit.framework""));"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,48,/ the same applies to jdepend
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,49,ssertNull(
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,50,"JDepend dependancy found"","
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,51,"ependancies.getPackage(""jdepend.framework""));"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,54,ublic void testAcceptableDistance() {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,55,ollection packages = dependancies.getPackages();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,56,/ only interested in cli2
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,57,ackages = cli2Packages(packages);
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,58,/ resources is well off the line
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,59,ackages =
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,60,"amedPackages(packages, ""org.apache.commons.cli2.resource"", false);"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,62,or (final Iterator i = packages.iterator(); i.hasNext();) {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,63,inal JavaPackage pkg = (JavaPackage)i.next();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,64,inal float distance = pkg.distance();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,65,"inal String message = pkg.getName() + "" too far from line: "" + distance;"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,66,ssertTrue(
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,67,"essage,"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,68,istance < 0.21d);
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,72,ublic void testNoCyclesPresent() {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,73,"ssertEquals(""Cycles exist"", false, dependancies.containsCycles());"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,76,ublic void testApiIndependance() {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,77,ependancies.analyze();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,79,inal JavaPackage apiPackage =
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,80,"ependancies.getPackage(""org.apache.commons.cli2"");"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,81,inal Collection dependsUpon = cli2Packages(apiPackage.getEfferents());
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,83,"ssertEquals(""Api should depend on one package"", 1, dependsUpon.size());"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,85,avaPackage pkg = (JavaPackage) dependsUpon.iterator().next();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,86,ssertEquals(
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,87,"Wrong package name"","
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,88,"org.apache.commons.cli2.resource"","
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,89,kg.getName());
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,92,rivate Collection cli2Packages(final Collection incoming) {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,93,"eturn namedPackages(incoming, ""org.apache.commons.cli2"", true);"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,96,rivate Collection namedPackages(
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,97,"inal Collection incoming,"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,98,"inal String name,"
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,99,inal boolean include) {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,100,inal Collection outgoing = new ArrayList();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,101,or (final Iterator i = incoming.iterator(); i.hasNext();) {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,102,inal JavaPackage pkg = (JavaPackage)i.next();
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,103,f (include ^ !pkg.getName().startsWith(name)) {
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,104,utgoing.add(pkg);
False,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,107,eturn outgoing;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,19,mport java.text.ParseException;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,21,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,22,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,23,mport java.util.Collections;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,24,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,25,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,26,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,27,mport java.util.ListIterator;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,28,mport java.util.Set;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,30,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,31,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,32,mport org.apache.commons.cli2.HelpLine;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,33,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,34,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,35,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,36,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,37,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,38,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,39,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,40,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,41,mport org.apache.commons.cli2.validation.DateValidator;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,42,mport org.apache.commons.cli2.validation.DateValidatorTest;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,45, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,47,ublic class ArgumentTest
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,48,xtends ArgumentTestCase {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,49,rivate ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,51,ublic static Argument buildUsernameArgument() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,52,"eturn new ArgumentImpl(""username"", ""The user to connect as"", 1, 1, '\0', '\0', null,"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,53,"rgumentImpl.DEFAULT_CONSUME_REMAINING, null, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,56,ublic static Argument buildHostArgument() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,57,"eturn new ArgumentImpl(""host"", ""The host name"", 2, 3, '\0', ',', null, null, null, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,60,ublic static Argument buildPathArgument() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,61,"eturn new ArgumentImpl(""path"", ""The place to look for files"", 1, Integer.MAX_VALUE, '=',"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,62,";', null, ArgumentImpl.DEFAULT_CONSUME_REMAINING, null, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,65,ublic static Argument buildDateLimitArgument() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,66,"eturn new ArgumentImpl(""limit"", ""the last acceptable date"", 0, 1, '=', '\0',"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,67,"ew DateValidator(DateValidatorTest.YYYY_MM_DD), null, null, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,70,ublic static Argument buildTargetsArgument() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,71,"eturn new ArgumentImpl(""target"", ""The targets ant should build"", 0, Integer.MAX_VALUE,"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,72,"\0', ',', null, null, null, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,75,ublic static Argument buildSizeArgument() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,76,ist defaults = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,77,"efaults.add(""10"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,79,"eturn new ArgumentImpl(""size"", ""The number of units"", 1, 1, '\0', '\0', null,"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,80,"rgumentImpl.DEFAULT_CONSUME_REMAINING, defaults, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,83,ublic static Argument buildBoundsArgument() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,84,ist defaults = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,85,"efaults.add(""5"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,86,"efaults.add(""10"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,88,"eturn new ArgumentImpl(""size"", ""The number of units"", 2, 2, '\0', '\0', null,"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,89,"rgumentImpl.DEFAULT_CONSUME_REMAINING, defaults, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,92,ublic void testNew() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,93,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,94,"ew ArgumentImpl(""limit"", ""the last acceptable date"", 10, 5, '=', '\0',"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,95,"ew DateValidator(DateValidatorTest.YYYY_MM_DD), null, null, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,96, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,97,"ssertEquals(resources.getMessage(""Argument.minimum.exceeds.maximum""), e.getMessage());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,101,rgumentImpl arg =
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,102,"ew ArgumentImpl(null, ""the last acceptable date"", 5, 5, '=', '\0',"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,103,"ew DateValidator(DateValidatorTest.YYYY_MM_DD), null, null, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,104,"ssertEquals(""wrong arg name"", ""arg"", arg.getPreferredName());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,108,ist defaults = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,110,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,111,"ew ArgumentImpl(null, ""the last acceptable date"", 1, 1, '=', '\0',"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,112,"ew DateValidator(DateValidatorTest.YYYY_MM_DD), null, defaults, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,113, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,114,"ssertEquals(resources.getMessage(""Argument.too.few.defaults""), exp.getMessage());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,118,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,119,ist defaults = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,120,"efaults.add(""1"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,121,"efaults.add(""2"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,123,"ew ArgumentImpl(null, ""the last acceptable date"", 1, 1, '=', '\0',"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,124,"ew DateValidator(DateValidatorTest.YYYY_MM_DD), null, defaults, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,125, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,126,"ssertEquals(resources.getMessage(""Argument.too.many.defaults""), exp.getMessage());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,131, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,133, @see org.apache.commons.cli2.ArgumentTestCase#testProcessValues()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,135,ublic void testProcessValues()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,136,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,137,inal Argument option = buildUsernameArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,138,"inal List args = list(""rob"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,139,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,140,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,141,"ption.processValues(commandLine, iterator, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,143,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,144,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,145,"ssertTrue(commandLine.hasOption(""username""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,146,"ssertEquals(""rob"", commandLine.getValue(option));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,149,ublic void testProcessValues_BoundaryQuotes()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,150,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,151,inal Argument option = buildUsernameArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,152,"inal List args = list(""\""rob\"""");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,153,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,154,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,155,"ption.processValues(commandLine, iterator, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,157,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,158,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,159,"ssertTrue(commandLine.hasOption(""username""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,160,"ssertEquals(""rob"", commandLine.getValue(option));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,163,ublic void testProcessValues_SpareValues()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,164,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,165,inal Argument option = buildUsernameArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,166,"inal List args = list(""rob"", ""secret"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,167,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,168,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,169,"ption.processValues(commandLine, iterator, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,171,ssertTrue(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,172,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,173,"ssertTrue(commandLine.hasOption(""username""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,174,"ssertEquals(""rob"", commandLine.getValue(option));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,177,ublic void testProcessValues_Optional() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,178,inal Argument option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,179,inal List args = list();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,180,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,181,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,183,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,184,"ption.processValues(commandLine, iterator, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,185, catch (final OptionException mve) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,186,"ssertEquals(option, mve.getOption());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,187,"ssertEquals(""Missing value(s) target [target ...]"", mve.getMessage());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,190,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,191,ssertFalse(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,192,"ssertFalse(commandLine.hasOption(""username""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,193,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,196,ublic void testProcessValues_Multiple()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,197,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,198,inal Argument option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,199,"inal List args = list(""compile"", ""test"", ""docs"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,200,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,201,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,202,"ption.processValues(commandLine, iterator, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,204,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,205,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,206,"ssertTrue(commandLine.hasOption(""target""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,207,ssertFalse(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,208,"ssertListContentsEqual(args, commandLine.getValues(option));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,211,ublic void testProcessValues_Contracted()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,212,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,213,inal Argument option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,214,"inal List args = list(""compile,test,javadoc"", ""checkstyle,jdepend"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,215,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,216,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,217,"ption.processValues(commandLine, iterator, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,219,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,220,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,221,"ssertTrue(commandLine.hasOption(""target""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,222,"ssertListContentsEqual(list(""compile"", ""test"", ""javadoc"", ""checkstyle"", ""jdepend""),"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,223,ommandLine.getValues(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,226,ublic void testProcessValues_ContractedTooFew() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,227,inal Argument option = buildHostArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,228,"inal List args = list(""box1"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,229,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,230,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,232,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,233,"ption.processValues(commandLine, iterator, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,234,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,235,"ail(""Expected MissingValueException"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,236, catch (OptionException mve) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,237,"ssertSame(option, mve.getOption());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,241,ublic void testProcessValues_ContractedTooMany() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,242,inal Argument option = buildHostArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,243,"inal List args = list(""box1,box2,box3,box4"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,244,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,245,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,247,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,248,"ption.processValues(commandLine, iterator, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,249,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,250,"ail(""Expected MissingValueException"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,251, catch (OptionException mve) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,252,"ssertSame(option, mve.getOption());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,257, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,259, @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,261,ublic void testCanProcess() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,262,inal Argument option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,263,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option, null), ""any value""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,267, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,269, @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,271,ublic void testPrefixes() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,272,inal Argument option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,273,ssertTrue(option.getPrefixes().isEmpty());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,277, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,279, @see org.apache.commons.cli2.OptionTestCase#testProcess()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,281,ublic void testProcess()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,282,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,283,inal Argument option = buildPathArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,284,"inal List args = list(""-path=/lib;/usr/lib;/usr/local/lib"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,285,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,286,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,287,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,289,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,290,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,291,"ssertTrue(commandLine.hasOption(""path""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,292,"ssertListContentsEqual(list(""-path=/lib"", ""/usr/lib"", ""/usr/local/lib""),"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,293,ommandLine.getValues(option));
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,297, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,299, @see org.apache.commons.cli2.OptionTestCase#testTriggers()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,301,ublic void testTriggers() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,302,inal Argument option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,303,ssertTrue(option.getTriggers().isEmpty());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,307, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,309, @see org.apache.commons.cli2.OptionTestCase#testValidate()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,311,ublic void testValidate()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,312,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,313,inal Argument option = buildUsernameArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,314,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,316,"ommandLine.addValue(option, ""rob"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,318,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,321,ublic void testValidate_Minimum() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,322,inal Argument option = buildUsernameArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,323,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,325,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,326,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,327,"ail(""UnexpectedValue"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,328, catch (OptionException mve) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,329,"ssertEquals(option, mve.getOption());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,333,ublic void testRequired() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,335,inal Argument arg = buildBoundsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,337,"ssertTrue(""not required"", arg.isRequired());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,341,inal Argument arg = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,343,"ssertFalse(""should not be required"", arg.isRequired());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,347,ublic void testValidate_Maximum() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,348,inal Argument option = buildUsernameArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,349,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,351,"ommandLine.addValue(option, ""rob"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,352,"ommandLine.addValue(option, ""oxspring"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,354,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,355,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,356,"ail(""UnexpectedValue"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,357, catch (OptionException uve) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,358,"ssertEquals(option, uve.getOption());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,362,ublic void testValidate_Validator()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,363,"hrows OptionException, ParseException {"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,364,inal Argument option = buildDateLimitArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,365,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,367,"ommandLine.addValue(option, ""2004-01-01"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,369,"ption.validate(commandLine, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,370,ssertContentsEqual(Arrays.asList(new Object[] {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,371,"ateValidatorTest.YYYY_MM_DD.parse(""2004-01-01"")"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,372,"), commandLine.getValues(option));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,375,ublic void testValidate_ValidatorInvalidDate()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,376,"hrows OptionException, ParseException {"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,377,inal Argument option = buildDateLimitArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,378,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,380,"ommandLine.addValue(option, ""12-12-2004"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,382,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,383,"ption.validate(commandLine, option);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,384, catch (OptionException exp) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,385,ptionException e =
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,386,"ew OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,387,"12-12-2004"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,388,"ssertEquals(""wrong exception message"", e.getMessage(), exp.getMessage());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,393, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,395, @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,397,ublic void testAppendUsage() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,398,inal Option option = buildUsernameArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,399,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,400,"ption.appendUsage(buffer, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,402,"ssertEquals(""<username>"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,405,ublic void testAppendUsage_Infinite() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,406,inal Option option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,407,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,408,"ption.appendUsage(buffer, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,410,"ssertEquals(""[<target1> [<target2> ...]]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,413,ublic void testAppendUsage_InfiniteNoOptional() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,414,inal Option option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,415,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,416,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,417,ettings.remove(DisplaySetting.DISPLAY_OPTIONAL);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,418,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,420,"ssertEquals(""<target1> [<target2> ...]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,423,ublic void testAppendUsage_InfiniteNoNumbering() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,424,inal Option option = buildTargetsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,425,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,426,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,427,ettings.remove(DisplaySetting.DISPLAY_ARGUMENT_NUMBERED);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,428,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,430,"ssertEquals(""[<target> [<target> ...]]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,433,ublic void testAppendUsage_Minimum() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,434,inal Option option = buildHostArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,435,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,436,"ption.appendUsage(buffer, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,438,"ssertEquals(""<host1> <host2> [<host3>]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,442, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,444, @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,446,ublic void testGetPreferredName() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,447,inal Option option = buildPathArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,448,"ssertEquals(""path"", option.getPreferredName());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,452, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,454, @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,456,ublic void testGetDescription() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,457,inal Option option = buildHostArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,458,"ssertEquals(""The host name"", option.getDescription());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,462, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,464, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,466,ublic void testHelpLines() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,467,inal Option option = buildHostArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,468,"inal List lines = option.helpLines(0, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,469,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,471,inal HelpLine line1 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,472,"ssertEquals(0, line1.getIndent());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,473,"ssertEquals(option, line1.getOption());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,475,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,478,ublic void testCanProcess_ConsumeRemaining() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,479,inal Option option = buildUsernameArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,481,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option, null), ""--""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,484,ublic void testProcess_ConsumeRemaining()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,485,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,486,inal Option option = buildPathArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,487,"inal List args = list(""options"", ""--"", ""--ignored"", ""-Dprop=val"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,488,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,489,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,491,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,493,inal List values = commandLine.getValues(option);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,494,"ssertTrue(values.contains(""options""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,495,"ssertTrue(values.contains(""--ignored""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,496,"ssertTrue(values.contains(""-Dprop=val""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,497,"ssertEquals(3, values.size());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,498,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,501,ublic void testProcess_ConsumeNothing() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,502,inal Option option = buildPathArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,503,"inal List args = list(""--"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,504,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,505,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,507,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,508,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,509,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,510,"ail(""Missing Value!"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,511, catch (OptionException mve) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,512,"ssertEquals(option, mve.getOption());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,513,"ssertEquals(""Missing value(s) path [path ...]"", mve.getMessage());"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,516,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,517,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,520,/    public void testProcess_DefinedDefaultValue() throws OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,521,/        final Option size = buildSizeArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,522,/        final List args = list();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,523,"/        final WriteableCommandLine commandLine = commandLine(size, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,524,/        final ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,526,"/        size.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,528,"/        assertEquals(""10"", commandLine.getValue(size));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,531,/    public void testProcess_DefinedDefaultValues() throws OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,532,/        final Option bounds = buildBoundsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,533,/        final List args = list();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,534,"/        final WriteableCommandLine commandLine = commandLine(bounds, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,535,/        final ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,537,"/        bounds.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,539,/        List values = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,540,"/        values.add(""5"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,541,"/        values.add(""10"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,542,"/        assertEquals(values, commandLine.getValues(bounds));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,544,ublic void testProcess_InterrogatedDefaultValue()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,545,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,546,inal Option size = buildSizeArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,547,inal List args = list();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,548,"inal WriteableCommandLine commandLine = commandLine(size, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,549,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,551,"ize.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,553,"ssertEquals(new Integer(20), commandLine.getValue(size, new Integer(20)));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,556,ublic void testTooFewDefaults() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,557,ist defaults = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,558,"efaults.add(""5"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,560,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,561,"ew ArgumentImpl(""size"", ""The number of units"", 2, 2, '\0', '\0', null,"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,562,"rgumentImpl.DEFAULT_CONSUME_REMAINING, defaults, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,563, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,564,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,565,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.ARGUMENT_TOO_FEW_DEFAULTS),"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,566,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,570,ublic void testTooManyDefaults() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,571,ist defaults = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,572,"efaults.add(""5"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,573,"efaults.add(""10"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,574,"efaults.add(""15"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,576,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,577,"ew ArgumentImpl(""size"", ""The number of units"", 2, 2, '\0', '\0', null,"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,578,"rgumentImpl.DEFAULT_CONSUME_REMAINING, defaults, 0);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,579, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,580,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,581,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.ARGUMENT_TOO_MANY_DEFAULTS),"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,582,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,586,ublic void testProcess_InterrogatedDefaultValues()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,587,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,588,inal Option bounds = buildBoundsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,589,inal List args = list();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,590,"inal WriteableCommandLine commandLine = commandLine(bounds, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,591,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,593,"ounds.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,595,/ test with values
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,596,ist values = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,597,"alues.add(""50"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,598,"alues.add(""100"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,599,"ssertEquals(values, commandLine.getValues(bounds, values));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,601,/ test without values
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,602,"ssertEquals(Collections.EMPTY_LIST, commandLine.getValues(bounds, null));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,605,ublic void testProcess_StripBoundaryQuotes()
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,606,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,607,inal Option bounds = buildBoundsArgument();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,608,inal List args = list();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,609,"inal WriteableCommandLine commandLine = commandLine(bounds, args);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,610,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,612,"ounds.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,614,ist values = new ArrayList();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,615,"alues.add(""50\"""");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,616,"alues.add(""\""100"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,617,"ssertEquals(values, commandLine.getValues(bounds, values));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,620,ublic void testSourceDestArgument() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,621,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,622,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,623,inal Argument inputfiles =
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,624,"builder.withName(""input"").withMinimum(0).withMaximum(0).create();"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,625,inal Argument bad_outputfile =
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,626,"builder.withName(""output"").withMinimum(1).withMaximum(2).create();"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,628,ry {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,629,"inal Argument targets = new SourceDestArgument(inputfiles, bad_outputfile);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,630, catch (final IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,631,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,632,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.SOURCE_DEST_MUST_ENFORCE_VALUES),"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,633,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,636,inal Argument outputfile =
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,637,"builder.withName(""output"").withMinimum(1).withMaximum(1).create();"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,639,"inal Argument targets = new SourceDestArgument(inputfiles, outputfile);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,640,"inal StringBuffer buffer = new StringBuffer(""test content"");"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,641,"argets.appendUsage(buffer, Collections.EMPTY_SET, null);"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,643,"ssertTrue(""buffer not added"", buffer.toString().startsWith(""test content""));"
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,644,"ssertFalse(""space added"", buffer.charAt(12) == ' ');"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,19,mport java.util.Collections;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,20,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,21,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,22,mport java.util.ListIterator;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,23,mport java.util.Set;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,25,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,26,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,27,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,28,mport org.apache.commons.cli2.Parent;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,29,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,30,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,31,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,32,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,35, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,37, To change the template for this generated type comment go to
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,38, Window>Preferences>Java>Code Generation>Code and Comments
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,40,ublic class CommandTest
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,41,xtends ParentTestCase {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,42,ublic static Command buildStartCommand() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,43,"eturn new Command(""start"", ""Begins the process"", Collections.singleton(""go""), false, null,"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,44,"ull, 0);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,47,ublic static Command buildCommitCommand() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,48,"eturn new Command(""commit"", ""Commit the changes to the database"", null, true, null, null, 0);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,51,ublic static Command buildLoginCommand() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,52,"eturn new Command(""login"", ""Initiates a session for the user"", null, false,"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,53,"rgumentTest.buildUsernameArgument(), null, 0);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,57, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,59, @see org.apache.commons.cli2.ParentTestCase#testProcessParent()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,61,ublic void testProcessParent()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,62,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,63,inal Command option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,64,"inal List args = list(""go"");"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,65,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,66,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,67,"ption.processParent(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,69,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,70,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,71,"ssertTrue(commandLine.hasOption(""start""));"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,72,"ssertTrue(commandLine.hasOption(""go""));"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,73,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,76,ublic void testProcessParent_Spare()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,77,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,78,inal Command option = buildLoginCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,79,"inal List args = list(""login"", ""rob"");"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,80,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,81,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,82,"ption.processParent(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,84,"ssertEquals(""rob"", iterator.next());"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,85,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,86,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,87,"ssertTrue(commandLine.hasOption(""login""));"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,88,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,92, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,94, @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,96,ublic void testCanProcess() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,97,inal Command option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,98,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option, null), ""start""));"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,101,ublic void testCanProcess_BadMatch() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,102,inal Command option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,103,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option, null), ""stop""));"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,106,ublic void testCanProcess_Alias() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,107,inal Command option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,108,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option, null), ""go""));"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,112, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,114, @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,116,ublic void testPrefixes() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,117,inal Command option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,118,ssertTrue(option.getPrefixes().isEmpty());
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,122, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,124, @see org.apache.commons.cli2.OptionTestCase#testProcess()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,126,ublic void testProcess()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,127,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,128,inal Command option = buildLoginCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,129,"inal List args = list(""login"", ""rob"");"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,130,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,131,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,132,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,134,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,135,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,136,"ssertTrue(commandLine.hasOption(""login""));"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,137,"ssertEquals(""rob"", commandLine.getValue(option));"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,141, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,143, @see org.apache.commons.cli2.OptionTestCase#testTriggers()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,145,ublic void testTriggers() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,146,inal Command option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,147,inal Set triggers = option.getTriggers();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,148,"ssertContentsEqual(list(""start"", ""go""), triggers);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,152, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,154, @see org.apache.commons.cli2.OptionTestCase#testValidate()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,156,ublic void testValidate() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,157,inal Parent option = buildCommitCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,158,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,160,ry {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,161,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,162,"ail(""Missing an option"");"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,163, catch (OptionException moe) {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,164,"ssertSame(option, moe.getOption());"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,169, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,171, @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,173,ublic void testAppendUsage() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,174,inal Option option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,175,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,176,"ption.appendUsage(buffer, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,178,"ssertEquals(""[start (go)]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,181,ublic void testNullPreferredName() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,182,ry {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,183,"ew Command(null, """", Collections.singleton(""go""), false, null, null, 0);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,184, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,185,"ssertEquals(""wrong exception name"","
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,186,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.COMMAND_PREFERRED_NAME_TOO_SHORT),"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,187,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,191,ublic void testEmotyPreferredName() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,192,ry {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,193,"ew Command("""", """", Collections.singleton(""go""), false, null, null, 0);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,194, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,195,"ssertEquals(""wrong exception name"","
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,196,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.COMMAND_PREFERRED_NAME_TOO_SHORT),"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,197,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,201,ublic void testAppendUsage_NoOptional() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,202,inal Option option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,203,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,204,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,205,ettings.remove(DisplaySetting.DISPLAY_OPTIONAL);
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,206,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,208,"ssertEquals(""start (go)"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,211,ublic void testAppendUsage_NoAlias() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,212,inal Option option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,213,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,214,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,215,ettings.remove(DisplaySetting.DISPLAY_ALIASES);
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,216,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,218,"ssertEquals(""[start]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,222, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,224, @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,226,ublic void testGetPreferredName() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,227,inal Option option = buildStartCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,228,"ssertEquals(""start"", option.getPreferredName());"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,232, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,234, @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,236,ublic void testGetDescription() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,237,inal Option option = buildLoginCommand();
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,238,"ssertEquals(""Initiates a session for the user"", option.getDescription());"
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,242, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,244, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,246,ublic void testHelpLines() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,247,/ TODO Auto-generated method stub
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,19,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,20,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,21,mport java.util.ListIterator;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,22,mport java.util.Set;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,24,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,25,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,26,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,27,mport org.apache.commons.cli2.Parent;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,28,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,29,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,32, @author roberto
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,34, To change the template for this generated type comment go to
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,35, Window>Preferences>Java>Code Generation>Code and Comments
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,37,ublic class DefaultOptionTest extends ParentTestCase {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,39,ublic static DefaultOption buildHelpOption() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,40,"inal Set aliases = new HashSet(list(""-h"", ""-?""));"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,41,eturn new DefaultOption(
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,44,"rue,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,45,"--help"","
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,46,"Displays the help"","
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,47,"liases,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,48,"liases,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,49,"alse,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,50,"ull,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,51,"ull,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,52,h');
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,55,ublic static DefaultOption buildXOption() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,56,eturn new DefaultOption(
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,59,"rue,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,60,"-X"","
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,61,"This is needed"","
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,62,"ull,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,63,"ull,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,64,"rue,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,65,"ull,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,66,"ull,"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,67,X');
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,71, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,73, @see org.apache.commons.cli2.ParentTestCase#testProcessParent()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,75,ublic void testProcessParent() throws OptionException {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,76,inal DefaultOption option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,77,"inal List args = list(""--help"");"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,78,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,79,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,80,"ption.processParent(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,82,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,83,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,84,"ssertTrue(commandLine.hasOption(""--help""));"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,85,"ssertTrue(commandLine.hasOption(""-?""));"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,86,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,89,ublic void testProcessParent_Burst() throws OptionException {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,90,inal DefaultOption option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,91,"inal List args = list(""-help"");"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,92,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,93,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,94,"ption.processParent(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,96,"ssertEquals(""-elp"", iterator.next());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,97,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,98,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,99,"ssertTrue(commandLine.hasOption(""--help""));"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,100,"ssertTrue(commandLine.hasOption(""-?""));"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,101,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,105, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,107, @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,109,ublic void testCanProcess() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,110,inal DefaultOption option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,111,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option,null), ""-?""));"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,114,ublic void testCanProcess_BadMatch() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,115,inal DefaultOption option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,116,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option,null), ""-H""));"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,120, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,122, @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,124,ublic void testPrefixes() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,125,inal DefaultOption option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,126,"ssertContentsEqual(list(""-"", ""--""), option.getPrefixes());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,130, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,132, @see org.apache.commons.cli2.OptionTestCase#testProcess()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,134,ublic void testProcess() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,135,/ TODO Auto-generated method stub
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,140, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,142, @see org.apache.commons.cli2.OptionTestCase#testTriggers()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,144,ublic void testTriggers() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,145,inal DefaultOption option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,146,"ssertContentsEqual(list(""-?"", ""-h"", ""--help""), option.getTriggers());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,150, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,152, @see org.apache.commons.cli2.OptionTestCase#testValidate()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,154,ublic void testValidate() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,155,inal Parent option = buildXOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,156,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,158,ry {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,159,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,160,"ail(""Missing an option"");"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,162,atch (OptionException moe) {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,163,"ssertSame(option, moe.getOption());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,168, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,170, @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,172,ublic void testAppendUsage() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,173,inal Option option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,174,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,175,"ption.appendUsage(buffer, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,177,"ssertEquals(""[--help (-?,-h)]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,180,ublic void testAppendUsage_NoOptional() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,181,inal Option option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,182,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,183,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,184,ettings.remove(DisplaySetting.DISPLAY_OPTIONAL);
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,185,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,187,"ssertEquals(""--help (-?,-h)"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,190,ublic void testAppendUsage_NoAlias() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,191,inal Option option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,192,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,193,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,194,ettings.remove(DisplaySetting.DISPLAY_ALIASES);
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,195,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,197,"ssertEquals(""[--help]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,201, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,203, @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,205,ublic void testGetPreferredName() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,206,inal Option option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,207,"ssertEquals(""--help"", option.getPreferredName());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,211, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,213, @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,215,ublic void testGetDescription() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,216,inal Option option = buildHelpOption();
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,217,"ssertEquals(""Displays the help"", option.getDescription());"
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,220, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,222, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,224,ublic void testHelpLines() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,225,/ TODO Auto-generated method stub
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,19,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,20,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,21,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,22,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,23,mport java.util.ListIterator;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,24,mport java.util.Set;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,26,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,27,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,28,mport org.apache.commons.cli2.HelpLine;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,29,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,30,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,31,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,32,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,33,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,34,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,37, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,39,ublic class GroupTest
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,40,xtends GroupTestCase {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,41,ublic static final Command COMMAND_START =
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,42,"ew Command(""start"", ""Starts the server"", null, false, null, null, 0);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,43,ublic static final Command COMMAND_STOP =
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,44,"ew Command(""stop"", ""Stops the server"", null, false, null, null, 0);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,45,ublic static final Command COMMAND_RESTART =
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,46,"ew Command(""restart"", ""Stops and starts the server"", null, false, null, null, 0);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,47,ublic static final Command COMMAND_GRACEFUL =
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,48,"ew Command(""graceful"", ""Restarts the server without interruption"", null, false, null,"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,49,"ull, 0);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,51,ublic static Group buildApacheCommandGroup() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,52,inal List options = new ArrayList();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,53,ptions.add(COMMAND_GRACEFUL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,54,ptions.add(COMMAND_RESTART);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,55,ptions.add(COMMAND_START);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,56,ptions.add(COMMAND_STOP);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,58,"eturn new GroupImpl(options, ""httpd-cmds"", ""The command to pass to the server"", 1, 1, true);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,61,ublic static Group buildApachectlGroup() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,62,inal List options = new ArrayList();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,63,ptions.add(DefaultOptionTest.buildHelpOption());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,64,ptions.add(ParentTest.buildKParent());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,66,"eturn new GroupImpl(options, ""apachectl"", ""Controls the apache http deamon"", 0,"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,67,"nteger.MAX_VALUE, true);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,70,ublic static Group buildAntGroup() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,71,inal List options = new ArrayList();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,72,ptions.add(DefaultOptionTest.buildHelpOption());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,73,ptions.add(ArgumentTest.buildTargetsArgument());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,75,"eturn new GroupImpl(options, ""ant"", ""The options for ant"", 0, Integer.MAX_VALUE, true);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,78,"rivate static Group buildRequiredTestGroup(final boolean required,"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,79,inal int minimum)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,81,"inal Group group = new GroupImpl(new ArrayList(), ""test"", null,"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,82,"inimum, Integer.MAX_VALUE, required);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,83,inal List options = new ArrayList(1);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,84,ptions.add(group);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,85,"ew GroupImpl(options, ""parent"", null, 0, Integer.MAX_VALUE, false);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,86,eturn group;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,90, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,92, @see org.apache.commons.cli2.GroupTestCase#testProcessAnonymousArguments()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,94,ublic void testProcessAnonymousArguments()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,95,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,96,inal Group option = buildAntGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,97,"inal List args = list(""compile,test"", ""dist"");"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,98,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,99,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,100,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,102,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,103,"ssertTrue(commandLine.hasOption(""target""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,104,"ssertListContentsEqual(commandLine.getValues(""target""), args);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,105,"ssertListContentsEqual(list(""compile"", ""test"", ""dist""), args);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,109, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,111, @see org.apache.commons.cli2.GroupTestCase#testProcessOptions()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,113,ublic void testProcessOptions()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,114,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,115,inal Group option = buildApachectlGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,116,"inal List args = list(""-?"", ""-k"");"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,117,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,118,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,119,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,121,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,122,"ssertTrue(commandLine.hasOption(""--help""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,123,"ssertTrue(commandLine.hasOption(""-k""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,124,"ssertFalse(commandLine.hasOption(""start""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,125,"ssertListContentsEqual(list(""--help"", ""-k""), args);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,129, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,131, @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,133,ublic void testCanProcess() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,134,inal Group option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,135,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option, null), ""start""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,138,ublic void testCanProcess_BadMatch() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,139,inal Group option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,140,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option, null), ""begin""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,143,ublic void testCanProcess_NullMatch() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,144,inal Group option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,145,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option, null), (String) null));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,149, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,151, @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,153,ublic void testPrefixes() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,154,inal Group option = buildApachectlGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,155,"ssertContentsEqual(list(""-"", ""--""), option.getPrefixes());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,159, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,161, @see org.apache.commons.cli2.OptionTestCase#testProcess()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,163,ublic void testProcess()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,164,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,165,inal Group option = buildAntGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,166,"inal List args = list(""--help"", ""compile,test"", ""dist"");"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,167,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,168,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,169,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,171,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,172,"ssertTrue(commandLine.hasOption(""-?""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,173,"ssertListContentsEqual(list(""compile"", ""test"", ""dist""), commandLine.getValues(""target""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,176,ublic void testProcess_Nested()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,177,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,178,inal Group option = buildApachectlGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,179,"inal List args = list(""-h"", ""-k"", ""graceful"");"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,180,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,181,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,182,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,184,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,185,"ssertTrue(commandLine.hasOption(""-?""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,186,"ssertTrue(commandLine.hasOption(""-k""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,187,"ssertTrue(commandLine.hasOption(""graceful""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,188,"ssertFalse(commandLine.hasOption(""stop""));"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,189,"ssertTrue(commandLine.getValues(""start"").isEmpty());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,190,"ssertListContentsEqual(list(""--help"", ""-k"", ""graceful""), args);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,194, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,196, @see org.apache.commons.cli2.OptionTestCase#testTriggers()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,198,ublic void testTriggers() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,199,inal Group option = buildApachectlGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,200,"ssertContentsEqual(list(""--help"", ""-?"", ""-h"", ""-k""), option.getTriggers());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,204, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,206, @see org.apache.commons.cli2.OptionTestCase#testValidate()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,208,ublic void testValidate()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,209,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,210,inal Group option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,211,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,213,ommandLine.addOption(COMMAND_RESTART);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,215,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,218,ublic void testValidate_UnexpectedOption() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,219,inal Group option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,220,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,222,ommandLine.addOption(COMMAND_RESTART);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,223,ommandLine.addOption(COMMAND_GRACEFUL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,225,ry {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,226,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,227,"ail(""Too many options"");"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,228, catch (OptionException uoe) {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,229,"ssertEquals(option, uoe.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,233,ublic void testValidate_MissingOption() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,234,inal Group option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,235,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,237,ry {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,238,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,239,"ail(""Missing an option"");"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,240, catch (OptionException moe) {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,241,"ssertEquals(option, moe.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,245,ublic void testValidate_RequiredChild()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,246,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,247,inal Option required =
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,248,"ew DefaultOptionBuilder().withLongName(""required"").withRequired(true).create();"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,249,inal Option optional =
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,250,"ew DefaultOptionBuilder().withLongName(""optional"").withRequired(false).create();"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,251,inal Group group =
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,252,ew GroupBuilder().withOption(required).withOption(optional).withMinimum(1).create();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,254,riteableCommandLine commandLine;
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,256,"ommandLine = commandLine(group, list());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,258,ry {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,259,roup.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,260,"ail(""Missing option 'required'"");"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,261, catch (OptionException moe) {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,262,"ssertEquals(required, moe.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,265,"ommandLine = commandLine(group, list());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,266,ommandLine.addOption(optional);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,268,ry {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,269,roup.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,270,"ail(""Missing option 'required'"");"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,271, catch (OptionException moe) {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,272,"ssertEquals(required, moe.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,275,"ommandLine = commandLine(group, list());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,276,ommandLine.addOption(required);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,277,roup.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,281, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,283, @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,285,ublic void testAppendUsage() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,286,inal Option option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,287,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,288,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,290,/settings.remove(DisplaySetting.DISPLAY_ARGUMENT_NUMBERED);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,291,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,293,"ssertEquals(""httpd-cmds (graceful|restart|start|stop)"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,296,ublic void testAppendUsage_NoOptional() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,297,inal Option option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,298,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,299,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,300,ettings.remove(DisplaySetting.DISPLAY_OPTIONAL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,301,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,303,"ssertEquals(""httpd-cmds (graceful|restart|start|stop)"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,306,ublic void testAppendUsage_NoExpand() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,307,inal Option option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,308,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,309,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,310,ettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,311,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,313,"ssertEquals(""httpd-cmds"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,316,ublic void testAppendUsage_NoExpandOrName() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,317,inal Option option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,318,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,319,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,320,ettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,321,ettings.remove(DisplaySetting.DISPLAY_GROUP_NAME);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,322,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,324,"ssertEquals(""httpd-cmds"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,327,ublic void testAppendUsage_NoName() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,328,inal Option option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,329,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,330,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,331,ettings.remove(DisplaySetting.DISPLAY_GROUP_NAME);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,332,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,334,"ssertEquals(""graceful|restart|start|stop"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,337,ublic void testAppendUsage_WithArgs() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,338,inal Option option = buildAntGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,339,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,340,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,341,ettings.remove(DisplaySetting.DISPLAY_GROUP_OUTER);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,342,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,344,"ssertEquals(""[ant (--help (-?,-h)) [<target1> [<target2> ...]]]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,347,ublic void testAppendUsage_OptionalChildGroup() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,348,"inal Option option = buildRequiredTestGroup(false, 2).getParent();"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,349,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,350,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,351,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,353,"ssertEquals(""[parent ([test ()])]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,356,ublic void testAppendUsage_OptionalChildGroupNoSetting() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,357,"inal Option option = buildRequiredTestGroup(false, 2).getParent();"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,358,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,359,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,360,ettings.remove(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,361,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,363,"ssertEquals(""[parent (test ())]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,366,ublic void testAppendUsage_RequiredChildGroup() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,367,"inal Option option = buildRequiredTestGroup(true, 2).getParent();"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,368,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,369,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,370,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,372,"ssertEquals(""[parent (test ())]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,376, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,378, @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,380,ublic void testGetPreferredName() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,381,inal Option option = buildAntGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,382,"ssertEquals(""ant"", option.getPreferredName());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,386, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,388, @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,390,ublic void testGetDescription() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,391,inal Option option = buildApachectlGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,392,"ssertEquals(""Controls the apache http deamon"", option.getDescription());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,396, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,398, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,400,ublic void testHelpLines() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,401,inal Option option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,402,"inal List lines = option.helpLines(0, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,403,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,405,inal HelpLine line1 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,406,"ssertEquals(0, line1.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,407,"ssertEquals(option, line1.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,409,inal HelpLine line2 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,410,"ssertEquals(1, line2.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,411,"ssertEquals(COMMAND_GRACEFUL, line2.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,413,inal HelpLine line3 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,414,"ssertEquals(1, line3.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,415,"ssertEquals(COMMAND_RESTART, line3.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,417,inal HelpLine line4 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,418,"ssertEquals(1, line4.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,419,"ssertEquals(COMMAND_START, line4.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,421,inal HelpLine line5 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,422,"ssertEquals(1, line5.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,423,"ssertEquals(COMMAND_STOP, line5.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,425,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,429, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,431, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,433,ublic void testHelpLines_NoExpanded() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,434,inal Option option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,435,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,436,ettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,438,"inal List lines = option.helpLines(0, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,439,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,441,inal HelpLine line1 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,442,"ssertEquals(0, line1.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,443,"ssertEquals(option, line1.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,445,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,449, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,451, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,453,ublic void testHelpLines_NoName() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,454,inal Option option = buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,455,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,456,ettings.remove(DisplaySetting.DISPLAY_GROUP_NAME);
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,458,"inal List lines = option.helpLines(0, settings, null);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,459,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,461,inal HelpLine line2 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,462,"ssertEquals(1, line2.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,463,"ssertEquals(COMMAND_GRACEFUL, line2.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,465,inal HelpLine line3 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,466,"ssertEquals(1, line3.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,467,"ssertEquals(COMMAND_RESTART, line3.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,469,inal HelpLine line4 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,470,"ssertEquals(1, line4.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,471,"ssertEquals(COMMAND_START, line4.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,473,inal HelpLine line5 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,474,"ssertEquals(1, line5.getIndent());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,475,"ssertEquals(COMMAND_STOP, line5.getOption());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,477,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,481, Tests isRequired() for a child group if neither the required flag nor a
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,482, minimum constraint is set.
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,484,ublic void testIsRequired_ChildNoFlagNoMinimum()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,486,"inal Group group = buildRequiredTestGroup(false, 0);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,487,"ssertFalse(""Group is required"", group.isRequired());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,491," Tests isRequired() for a child group that has a minimum constraint, but"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,492, the required flag is not set.
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,494,ublic void testIsRequired_ChildNoFlagMinimum()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,496,"inal Group group = buildRequiredTestGroup(false, 10);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,497,"ssertFalse(""Group is required"", group.isRequired());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,501," Tests isRequired() for a child group that has the required flag set, but"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,502, no minimum constraint. In this constellation the group is de facto not
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,503, required.
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,505,ublic void testIsRequired_ChildFlagNoMinimum()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,507,"inal Group group = buildRequiredTestGroup(true, 0);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,508,"ssertFalse(""Group is required"", group.isRequired());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,512, Tests isRequired() for a child group that has both the required flag and
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,513, a minimum constraint set. This is indeed a required group.
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,515,ublic void testIsRequired_ChildFlagMinimum()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,517,"inal Group group = buildRequiredTestGroup(true, 10);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,518,"ssertTrue(""Group is not required"", group.isRequired());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,522, Tests isRequired() for the root group when no minimum constraint is set.
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,524,ublic void testIsRequired_ParentNoMinimum()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,526,"inal Group parent = (Group) buildRequiredTestGroup(false, 0)"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,527,getParent();
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,528,"ssertFalse(""Group is required"", parent.isRequired());"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,532, Tests isRequired() for the root group with a minimum constraint.
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,534,ublic void testIsRequired_ParentMiminum()
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,536,"inal Group parent = new GroupImpl(new ArrayList(), ""test"", null, 10,"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,537,"nteger.MAX_VALUE, false);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,538,"ssertTrue(""Group not required"", parent.isRequired());"
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,19,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,22, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,24,ublic abstract class GroupTestCase
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,25,xtends OptionTestCase {
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,26,ublic abstract void testProcessOptions()
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,27,hrows OptionException;
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,29,ublic abstract void testProcessAnonymousArguments()
False,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,30,hrows OptionException;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,19,mport java.io.BufferedReader;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,20,mport java.io.IOException;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,21,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,22,mport java.io.StringReader;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,23,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,24,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,25,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,26,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,27,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,28,mport java.util.Set;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,30,mport org.apache.commons.cli2.CLITestCase;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,31,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,32,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,33,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,34,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,35,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,36,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,37,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,38,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,39,mport org.apache.commons.cli2.util.HelpFormatter;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,43, Test to exercise nested groups developed to demonstrate bug 32533
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,45,ublic class NestedGroupTest extends CLITestCase {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,46,rivate static final String[] EXPECTED_USAGE = new String[] {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,47,"Usage:                                                                          "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,48," [-h -k -e|-d -b|-3 -f <file>|-s <string>]                                      "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,49,"encryptionService                                                               "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,50,"  -h (--help)               Print this message                                  "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,51,"  -k (--key)                Encryption key                                      "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,52,"  Action                    Action                                              "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,53,"    -e (--encrypt)          Encrypt input                                       "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,54,"    -d (--decrypt)          Decrypt input                                       "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,55,"  Algorithm                 Encryption Algorithm                                "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,56,"    -b (--blowfish)         Blowfish                                            "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,57,"    -3 (--3DES)             Triple DES                                          "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,58,"  Input                     Input                                               "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,59,"    -f (--file) file        Input file                                          "","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,60,"    -s (--string) string    Input string                                        """
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,63,inal static DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,64,inal static ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,65,inal static GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,67,tatic Group buildActionGroup() {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,68,"eturn gbuilder.withName(""Action"").withDescription(""Action"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,69,withMinimum(1).withMaximum(1)
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,70,"withOption(obuilder.withId(5).withShortName(""e"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,71,"withLongName(""encrypt"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,72,"withDescription(""Encrypt input"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,73,create())
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,74,"withOption(obuilder.withId(6).withShortName(""d"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,75,"withLongName(""decrypt"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,76,"withDescription(""Decrypt input"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,77,create()).create();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,80,tatic Group buildAlgorithmGroup() {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,81,"eturn gbuilder.withName(""Algorithm"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,82,"withDescription(""Encryption Algorithm"").withMaximum(1)"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,83,"withOption(obuilder.withId(0).withShortName(""b"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,84,"withLongName(""blowfish"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,85,"withDescription(""Blowfish"").create())"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,86,"withOption(obuilder.withId(1).withShortName(""3"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,87,"withLongName(""3DES"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,88,"withDescription(""Triple DES"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,89,create()).create();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,92,tatic Group buildInputGroup() {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,93,"eturn gbuilder.withName(""Input"").withDescription(""Input"").withMinimum(1)"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,94,withMaximum(1)
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,95,"withOption(obuilder.withId(2).withShortName(""f"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,96,"withLongName(""file"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,97,"withDescription(""Input file"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,98,withArgument(abuilder.withName(
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,99,"file"").withMinimum(1).withMaximum(1).create()).create())"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,100,"withOption(obuilder.withId(3).withShortName(""s"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,101,"withLongName(""string"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,102,"withDescription(""Input string"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,103,withArgument(abuilder.withName(
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,104,"string"").withMinimum(1).withMaximum(1).create()).create())"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,105,create();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,108,tatic Group buildEncryptionServiceGroup(Group[] nestedGroups) {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,109,"builder.withName(""encryptionService"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,110,"withOption(obuilder.withId(4).withShortName(""h"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,111,"withLongName(""help"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,112,"withDescription(""Print this message"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,113,create()).withOption(obuilder.withShortName(
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,114,"k"").withLongName(""key"").withDescription(""Encryption key"")"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,115,create());
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,117,or (int i = 0; i < nestedGroups.length; i++) {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,118,builder.withOption(nestedGroups[i]);
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,121,eturn gbuilder.create();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,124,ublic void testNestedGroup()
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,125,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,126,inal String[] args = {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,127,"-eb"","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,128,"--file"","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,129,"/tmp/filename.txt"""
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,132,roup[] nestedGroups = {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,133,"uildActionGroup(),"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,134,"uildAlgorithmGroup(),"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,135,uildInputGroup()
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,138,arser parser = new Parser();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,139,arser.setGroup(buildEncryptionServiceGroup(nestedGroups));
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,141,ommandLine commandLine = parser.parse(args);
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,143,"ssertTrue(""/tmp/filename.txt"".equals(commandLine.getValue(""-f"")));"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,144,"ssertTrue(commandLine.hasOption(""-e""));"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,145,"ssertTrue(commandLine.hasOption(""-b""));"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,146,"ssertFalse(commandLine.hasOption(""-d""));"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,149,ublic void testNestedGroupHelp() {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,150,"heckNestedGroupHelp(new HelpFormatter(), EXPECTED_USAGE);"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,153,ublic void testNestedGroupHelpOptional()
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,155,elpFormatter helpFormatter = new HelpFormatter();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,156,et dispOptions = new HashSet(helpFormatter.getFullUsageSettings());
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,157,ispOptions.add(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP);
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,158,ist expLines = new ArrayList(Arrays.asList(EXPECTED_USAGE));
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,159,"xpLines.set(1,"" [-h -k -e|-d [-b|-3] -f <file>|-s <string>]                                    "");"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,160,elpFormatter.setFullUsageSettings(dispOptions);
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,161,"heckNestedGroupHelp(helpFormatter, (String[]) expLines"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,162,toArray(new String[expLines.size()]));
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,165,"rivate void checkNestedGroupHelp(HelpFormatter helpFormatter, String[] expected) {"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,166,roup[] nestedGroups = {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,167,"uildActionGroup(),"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,168,"uildAlgorithmGroup(),"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,169,uildInputGroup()
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,171,elpFormatter.setGroup(buildEncryptionServiceGroup(nestedGroups));
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,173,inal StringWriter out = new StringWriter();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,174,elpFormatter.setPrintWriter(new PrintWriter(out));
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,176,ry {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,177,elpFormatter.print();
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,179,inal BufferedReader bufferedReader = new BufferedReader(new StringReader(
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,180,ut.toString()));
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,182,ist actual = new ArrayList(expected.length);
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,183,tring input;
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,185,hile ((input = bufferedReader.readLine()) != null) {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,186,ctual.add(input);
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,189,/ Show they are the same number of lines
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,190,"ssertEquals(""Help text lines should be "" + expected.length,"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,191,"ctual.size(), expected.length);"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,193,or (int i = 0; i < expected.length; i++) {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,194,f (!expected[i].equals(actual.get(i))) {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,195,or (int x = 0; x < expected.length; i++) {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,196,"ystem.out.println(""   "" + expected[i]);"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,197,ystem.out.println((expected[i].equals(actual.get(i))
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,199," ""!= "") + actual.get(i));"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,203,"ssertEquals(expected[i], actual.get(i));"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,206,atch (IOException e) {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,207,ail(e.getLocalizedMessage());
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,19,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,21,mport org.apache.commons.cli2.CLITestCase;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,22,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,23,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,24,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,25,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,28, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,30,ublic abstract class OptionTestCase extends CLITestCase {
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,32,ublic static WriteableCommandLine commandLine(
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,33,"inal Option option,"
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,34,inal List args) {
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,35,"eturn new WriteableCommandLineImpl(option, args);"
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,38,ublic abstract void testTriggers();
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,40,ublic abstract void testPrefixes();
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,42,ublic abstract void testCanProcess();
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,44,ublic abstract void testProcess() throws OptionException;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,46,ublic abstract void testValidate() throws OptionException;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,48,ublic abstract void testAppendUsage() throws OptionException;
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,50,ublic abstract void testGetPreferredName();
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,52,ublic abstract void testGetDescription();
False,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,54,ublic abstract void testHelpLines();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,19,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,20,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,21,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,22,mport java.util.ListIterator;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,23,mport java.util.Set;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,25,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,26,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,27,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,28,mport org.apache.commons.cli2.HelpLine;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,29,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,30,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,31,mport org.apache.commons.cli2.Parent;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,32,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,33,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,34,mport org.apache.commons.cli2.builder.CommandBuilder;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,35,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,36,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,37,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,38,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,39,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,42, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,44,ublic class ParentTest
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,45,xtends ParentTestCase {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,46,ublic static final Argument COMPLEX_ARGUMENT =
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,47,"ew ArgumentBuilder().withName(""username"").withMinimum(1).withMaximum(1).create();"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,48,ublic static final Option COMPLEX_CHILD_SSL =
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,49,"ew DefaultOptionBuilder().withLongName(""ssl"").withShortName(""s"").create();"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,50,ublic static final Option COMPLEX_CHILD_BASIC =
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,51,"ew DefaultOptionBuilder().withLongName(""basic"").withShortName(""b"").create();"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,52,ublic static final Option COMPLEX_CHILD_DIGEST =
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,53,"ew DefaultOptionBuilder().withLongName(""digest"").withShortName(""d"").create();"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,54,ublic static final Group COMPLEX_CHILDREN =
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,55,"ew GroupBuilder().withName(""login-opts"").withOption(COMPLEX_CHILD_BASIC)"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,56,withOption(COMPLEX_CHILD_DIGEST).withOption(COMPLEX_CHILD_SSL).create();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,58,ublic static Parent buildLibParent() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,59,inal Argument argument = ArgumentTest.buildPathArgument();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,61,"eturn new DefaultOption(""-"", ""--"", false, ""--lib"", ""Specifies library search path"", null,"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,62,"ull, false, argument, null, 'l');"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,65,ublic static Parent buildKParent() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,66,inal Group children = GroupTest.buildApacheCommandGroup();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,68,"eturn new DefaultOption(""-"", ""--"", false, ""-k"", ""desc"", null, null, false, null, children,"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,69,k');
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,72,ublic static Parent buildComplexParent() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,73,"eturn new CommandBuilder().withName(""login"").withName(""lo"").withName(""l"")"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,74,withArgument(COMPLEX_ARGUMENT).withChildren(COMPLEX_CHILDREN)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,75,create();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,78,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,79, @see org.apache.commons.cli2.ParentTestCase#testProcessParent()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,81,ublic void testProcessParent()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,82,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,83,inal Parent option = buildKParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,84,"inal List args = list(""-k"", ""start"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,85,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,86,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,87,"ption.processParent(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,89,"ssertEquals(""start"", iterator.next());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,90,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,91,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,92,"ssertTrue(commandLine.hasOption(""-k""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,93,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,96,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,97, @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,99,ublic void testCanProcess() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,100,inal Parent option = buildKParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,101,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option, null), ""-k""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,104,ublic void testCanProcess_BadMatch() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,105,inal Parent option = buildKParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,106,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option, null), ""-K""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,109,ublic void testCanProcess_ContractedArgument() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,110,inal Parent option = buildLibParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,111,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option, null), ""--lib=/usr/lib""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,114,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,115, @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,117,ublic void testPrefixes() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,118,inal Parent option = buildKParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,119,"ssertContentsEqual(list(""-"", ""--""), option.getPrefixes());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,122,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,123, @see org.apache.commons.cli2.OptionTestCase#testProcess()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,125,ublic void testProcess()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,126,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,127,inal Parent option = CommandTest.buildStartCommand();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,128,"inal List args = list(""start"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,129,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,130,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,131,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,133,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,134,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,135,"ssertTrue(commandLine.hasOption(""start""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,136,"ssertFalse(commandLine.hasOption(""stop""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,137,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,140,ublic void testProcess_NoMatch()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,141,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,142,inal Parent option = CommandTest.buildStartCommand();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,143,"inal List args = list(""whatever"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,144,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,145,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,147,ry {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,148,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,149,"ail(""unexpected token not thrown"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,150, catch (OptionException exp) {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,151,ptionException e =
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,152,"ew OptionException(option, ResourceConstants.UNEXPECTED_TOKEN, ""whatever"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,153,"ssertEquals(""wrong exception message"", e.getMessage(), exp.getMessage());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,157,ublic void testProcess_Children()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,158,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,159,inal Parent option = buildKParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,160,"inal List args = list(""-k"", ""start"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,161,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,162,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,163,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,165,"ssertNull(option.findOption(""whatever""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,166,"ssertNotNull(option.findOption(""start""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,168,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,169,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,170,"ssertTrue(commandLine.hasOption(""-k""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,171,"ssertTrue(commandLine.hasOption(""start""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,172,"ssertFalse(commandLine.hasOption(""stop""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,173,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,176,ublic void testProcess_Argument()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,177,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,178,inal Parent option = buildLibParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,179,"inal List args = list(""--lib=C:\\WINDOWS;C:\\WINNT;C:\\"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,180,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,181,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,182,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,184,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,185,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,186,"ssertTrue(commandLine.hasOption(""--lib""));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,187,"ssertContentsEqual(list(""C:\\WINDOWS"", ""C:\\WINNT"", ""C:\\""), commandLine.getValues(option));"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,190,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,191, @see org.apache.commons.cli2.OptionTestCase#testTriggers()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,193,ublic void testTriggers() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,194,inal Parent option = buildKParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,195,"ssertContentsEqual(list(""-k""), option.getTriggers());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,198,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,199, @see org.apache.commons.cli2.OptionTestCase#testValidate()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,201,ublic void testValidate()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,202,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,203,inal Parent option = CommandTest.buildStartCommand();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,204,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,206,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,208,ommandLine.addOption(option);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,210,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,213,ublic void testValidate_Children()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,214,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,215,inal Parent option = buildKParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,216,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,218,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,219,ommandLine.addOption(option);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,221,ry {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,222,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,223,"ail(""Missing a command"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,224, catch (OptionException moe) {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,225,ssertNotNull(moe.getOption());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,226,"ssertNotSame(option, moe.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,230,ublic void testValidate_Argument()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,231,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,232,inal Command option = CommandTest.buildLoginCommand();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,233,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,235,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,237,ommandLine.addOption(option);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,239,ry {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,240,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,241,"ail(""Missing a value"");"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,242, catch (OptionException moe) {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,243,"ssertSame(option, moe.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,247,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,248, @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,250,ublic void testAppendUsage() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,251,inal Option option = buildComplexParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,252,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,253,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,254,ettings.remove(DisplaySetting.DISPLAY_GROUP_OUTER);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,255,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,257,"ssertEquals(""[login (l,lo) <username> [login-opts (--basic (-b)|--digest (-d)|--ssl (-s))]]"","
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,258,uffer.toString());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,261,ublic void testAppendUsage_NoArguments() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,262,inal Option option = buildComplexParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,263,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,264,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,265,ettings.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,266,ettings.remove(DisplaySetting.DISPLAY_GROUP_OUTER);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,267,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,269,"ssertEquals(""[login (l,lo) [login-opts (--basic (-b)|--digest (-d)|--ssl (-s))]]"","
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,270,uffer.toString());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,273,ublic void testAppendUsage_NoChildren() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,274,inal Option option = buildComplexParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,275,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,276,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,277,ettings.remove(DisplaySetting.DISPLAY_PARENT_CHILDREN);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,278,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,280,"ssertEquals(""[login (l,lo) <username>]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,283,ublic void testAppendUsage_NoArgumentsOrChildren() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,284,inal Option option = buildComplexParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,285,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,286,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,287,ettings.remove(DisplaySetting.DISPLAY_PARENT_CHILDREN);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,288,ettings.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,289,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,291,"ssertEquals(""[login (l,lo)]"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,294,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,295, @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,297,ublic void testGetPreferredName() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,298,inal Option option = buildLibParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,299,"ssertEquals(""--lib"", option.getPreferredName());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,302,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,303, @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,305,ublic void testGetDescription() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,306,inal Option option = buildLibParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,307,"ssertEquals(""Specifies library search path"", option.getDescription());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,310,* (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,311, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,313,ublic void testHelpLines() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,314,inal Option option = buildComplexParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,315,"inal List lines = option.helpLines(0, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,316,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,318,inal HelpLine line1 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,319,"ssertEquals(0, line1.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,320,"ssertEquals(option, line1.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,322,inal HelpLine line2 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,323,"ssertEquals(1, line2.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,324,"ssertEquals(COMPLEX_ARGUMENT, line2.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,326,inal HelpLine line3 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,327,"ssertEquals(1, line3.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,328,"ssertEquals(COMPLEX_CHILDREN, line3.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,330,inal HelpLine line4 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,331,"ssertEquals(2, line4.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,332,"ssertEquals(COMPLEX_CHILD_BASIC, line4.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,334,inal HelpLine line5 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,335,"ssertEquals(2, line5.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,336,"ssertEquals(COMPLEX_CHILD_DIGEST, line5.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,338,inal HelpLine line6 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,339,"ssertEquals(2, line6.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,340,"ssertEquals(COMPLEX_CHILD_SSL, line6.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,342,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,345,ublic void testHelpLines_NoArgument() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,346,inal Option option = buildComplexParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,347,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,348,ettings.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,350,"inal List lines = option.helpLines(0, settings, null);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,351,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,353,inal HelpLine line1 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,354,"ssertEquals(0, line1.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,355,"ssertEquals(option, line1.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,357,inal HelpLine line3 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,358,"ssertEquals(1, line3.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,359,"ssertEquals(COMPLEX_CHILDREN, line3.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,361,inal HelpLine line4 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,362,"ssertEquals(2, line4.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,363,"ssertEquals(COMPLEX_CHILD_BASIC, line4.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,365,inal HelpLine line5 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,366,"ssertEquals(2, line5.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,367,"ssertEquals(COMPLEX_CHILD_DIGEST, line5.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,369,inal HelpLine line6 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,370,"ssertEquals(2, line6.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,371,"ssertEquals(COMPLEX_CHILD_SSL, line6.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,373,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,376,ublic void testHelpLines_NoChildren() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,377,inal Option option = buildComplexParent();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,378,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,379,ettings.remove(DisplaySetting.DISPLAY_PARENT_CHILDREN);
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,381,"inal List lines = option.helpLines(0, settings, null);"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,382,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,384,inal HelpLine line1 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,385,"ssertEquals(0, line1.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,386,"ssertEquals(option, line1.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,388,inal HelpLine line2 = (HelpLine) i.next();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,389,"ssertEquals(1, line2.getIndent());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,390,"ssertEquals(COMPLEX_ARGUMENT, line2.getOption());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,392,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,395,ublic void testNullPreferredName() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,396,ry {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,397,ew CommandBuilder().create();
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,398, catch (IllegalStateException exp) {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,399,"ssertEquals(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.OPTION_NO_NAME), exp.getMessage());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,403,ublic void testRequired() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,404,"ommand cmd = new CommandBuilder().withRequired(true).withName(""blah"").create();"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,405,"ssertTrue(""cmd is not required"", cmd.isRequired());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,406,"ssertEquals(""id is incorrect"", 0, cmd.getId());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,409,ublic void testID() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,410,"ommand cmd = new CommandBuilder().withId('c').withName(""blah"").create();"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,411,"ssertEquals(""id is incorrect"", 'c', cmd.getId());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,414,ublic void testGetId() {
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,415,"ssertEquals('h', DefaultOptionTest.buildHelpOption().getId());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,416,"ssertEquals('X', DefaultOptionTest.buildXOption().getId());"
False,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,417,"ssertEquals(0, CommandTest.buildStartCommand().getId());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,19,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,20,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,21,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,22,mport java.util.ListIterator;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,23,mport java.util.Set;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,25,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,26,mport org.apache.commons.cli2.HelpLine;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,27,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,28,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,29,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,30,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,33, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,35,ublic class PropertyOptionTest extends OptionTestCase {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,38, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,40, @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,42,ublic void testCanProcess() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,43,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,44,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option,null), ""-Dmyprop=myval""));"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,47,ublic void testCanProcess_Null() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,48,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,49,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option,null), (String) null));"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,52,ublic void testCanProcess_TooShort() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,53,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,54,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option,null), ""-D""));"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,57,ublic void testCanProcess_BadMatch() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,58,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,59,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option,null),""-dump""));"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,63, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,65, @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,67,ublic void testPrefixes() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,68,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,69,"ssertContentsEqual(list(""-D""), option.getPrefixes());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,73, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,75, @see org.apache.commons.cli2.OptionTestCase#testProcess()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,77,ublic void testProcess() throws OptionException {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,78,inal PropertyOption option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,79,"inal List args = list(""-Dmyprop=myvalue"");"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,80,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,81,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,83,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,84,"ssertEquals(""myvalue"", commandLine.getProperty(option, ""myprop""));"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,85,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,86,"ssertEquals(1, commandLine.getProperties(option).size());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,89,ublic void testProcess_UnexpectedOptionException() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,90,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,91,"inal List args = list(""--help"");"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,92,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,93,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,95,ry {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,96,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,97,"ail(""UnexpectedOption"");"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,99,atch (final OptionException uoe) {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,100,"ssertEquals(option, uoe.getOption());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,101,ssertEquals(
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,102,"Unexpected --help while processing -Dproperty=value"","
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,103,oe.getMessage());
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,107,ublic void testProcess_BadPropertyException() throws OptionException {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,108,inal PropertyOption option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,109,"inal List args = list(""-Dmyprop"");"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,110,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,111,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,113,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,115,"ssertEquals(""true"", commandLine.getProperty(option, ""myprop""));"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,118,ublic void testProcess_SetToEmpty() throws OptionException {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,119,inal PropertyOption option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,120,"inal List args = list(""-Dmyprop="");"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,121,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,122,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,124,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,125,"ssertEquals("""", commandLine.getProperty(option, ""myprop""));"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,126,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,127,"ssertEquals(1, commandLine.getProperties(option).size());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,131, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,133, @see org.apache.commons.cli2.OptionTestCase#testTriggers()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,135,ublic void testTriggers() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,136,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,138,"ssertContentsEqual(list(""-D""), option.getTriggers());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,142, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,144, @see org.apache.commons.cli2.OptionTestCase#testValidate()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,146,ublic void testValidate() throws OptionException {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,147,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,148,"inal List args = list(""-Dproperty=value"");"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,149,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,150,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,152,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,154,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,158, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,160, @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,162,ublic void testAppendUsage() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,163,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,164,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,165,"ption.appendUsage(buffer, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,167,"ssertEquals(""-D<property>=<value>"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,170,ublic void testAppendUsage_Hidden() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,171,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,172,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,173,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,174,ettings.remove(DisplaySetting.DISPLAY_PROPERTY_OPTION);
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,175,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,177,"ssertEquals("""", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,181, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,183, @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,185,ublic void testGetPreferredName() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,186,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,187,"ssertEquals(""-D"", option.getPreferredName());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,191, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,193, @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,195,ublic void testGetDescription() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,196,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,197,ssertEquals(
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,198,"Passes properties and values to the application"","
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,199,ption.getDescription());
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,203, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,205, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,207,ublic void testHelpLines() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,208,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,209,"inal List lines = option.helpLines(0, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,210,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,212,inal HelpLine line1 = (HelpLine)i.next();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,213,"ssertEquals(0, line1.getIndent());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,214,"ssertEquals(option, line1.getOption());"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,216,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,220, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,222, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,224,ublic void testHelpLines_NoDisplay() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,225,inal Option option = new PropertyOption();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,226,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,227,ettings.remove(DisplaySetting.DISPLAY_PROPERTY_OPTION);
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,228,"inal List lines = option.helpLines(0, settings, null);"
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,229,inal Iterator i = lines.iterator();
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,231,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,17,ackage org.apache.commons.cli2.option;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,19,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,20,mport java.util.List;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,21,mport java.util.ListIterator;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,22,mport java.util.Set;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,24,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,25,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,26,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,27,mport org.apache.commons.cli2.Parent;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,28,mport org.apache.commons.cli2.WriteableCommandLine;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,29,mport org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,30,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,31,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,34, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,36, To change the template for this generated type comment go to
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,37, Window>Preferences>Java>Code Generation>Code and Comments
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,39,ublic class SwitchTest
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,40,xtends ParentTestCase {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,41,ublic static Switch buildDisplaySwitch() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,42,inal Set aliases = new HashSet();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,43,"liases.add(""d"");"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,44,"liases.add(""disp"");"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,46,"eturn new Switch(""+"", ""-"", ""display"", aliases, ""Sets whether to display to screen"", true,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,47,"ull, null, 'd', null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,51, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,53, @see org.apache.commons.cli2.ParentTestCase#testProcessParent()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,55,ublic void testProcessParent()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,56,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,57,inal Switch option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,58,"inal List args = list(""+d"");"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,59,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,60,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,61,"ption.processParent(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,63,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,64,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,65,"ssertTrue(commandLine.hasOption(""+d""));"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,66,"ssertTrue(commandLine.hasOption(""-display""));"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,67,"ssertEquals(Boolean.TRUE, commandLine.getSwitch(""-d""));"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,68,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,71,ublic void testProcessParent_Disabled()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,72,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,73,inal Switch option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,74,"inal List args = list(""-disp"");"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,75,"inal WriteableCommandLine commandLine = commandLine(option, args);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,76,inal ListIterator iterator = args.listIterator();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,77,"ption.process(commandLine, iterator);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,79,ssertFalse(iterator.hasNext());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,80,ssertTrue(commandLine.hasOption(option));
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,81,"ssertTrue(commandLine.hasOption(""+d""));"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,82,"ssertTrue(commandLine.hasOption(""-display""));"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,83,"ssertEquals(Boolean.FALSE, commandLine.getSwitch(""-d""));"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,84,ssertTrue(commandLine.getValues(option).isEmpty());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,88, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,90, @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,92,ublic void testCanProcess() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,93,inal Switch option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,94,"ssertTrue(option.canProcess(new WriteableCommandLineImpl(option, null), ""+d""));"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,97,ublic void testCanProcess_BadMatch() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,98,inal Switch option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,99,"ssertFalse(option.canProcess(new WriteableCommandLineImpl(option, null), ""-dont""));"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,103, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,105, @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,107,ublic void testPrefixes() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,108,inal Switch option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,109,"ssertContentsEqual(list(""-"", ""+""), option.getPrefixes());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,113, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,115, @see org.apache.commons.cli2.OptionTestCase#testProcess()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,117,ublic void testProcess() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,118,/ TODO Auto-generated method stub
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,122, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,124, @see org.apache.commons.cli2.OptionTestCase#testTriggers()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,126,ublic void testTriggers() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,127,inal Switch option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,128,"ssertContentsEqual(list(""-d"", ""+d"", ""-disp"", ""+disp"", ""+display"", ""-display""),"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,129,ption.getTriggers());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,133, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,135, @see org.apache.commons.cli2.OptionTestCase#testValidate()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,137,ublic void testValidate() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,138,inal Parent option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,139,"inal WriteableCommandLine commandLine = commandLine(option, list());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,141,ry {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,142,ption.validate(commandLine);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,143,"ail(""Missing an option"");"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,144, catch (OptionException moe) {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,145,"ssertSame(option, moe.getOption());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,150, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,152, @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,154,ublic void testAppendUsage() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,155,inal Option option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,156,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,157,"ption.appendUsage(buffer, DisplaySetting.ALL, null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,159,"ssertEquals(""+display|-display (+d|-d,+disp|-disp)"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,162,ublic void testAppendUsage_NoAlias() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,163,inal Option option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,164,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,165,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,166,ettings.remove(DisplaySetting.DISPLAY_ALIASES);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,167,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,169,"ssertEquals(""+display|-display"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,172,ublic void testAppendUsage_NoDisabled() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,173,inal Option option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,174,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,175,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,176,ettings.remove(DisplaySetting.DISPLAY_SWITCH_DISABLED);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,177,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,179,"ssertEquals(""+display (+d,+disp)"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,182,ublic void testAppendUsage_NoEnabled() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,183,inal Option option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,184,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,185,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,186,ettings.remove(DisplaySetting.DISPLAY_SWITCH_ENABLED);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,187,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,189,"ssertEquals(""-display (-d,-disp)"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,192,ublic void testAppendUsage_NoDisabledOrEnabled() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,193,inal Option option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,194,inal StringBuffer buffer = new StringBuffer();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,195,inal Set settings = new HashSet(DisplaySetting.ALL);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,196,ettings.remove(DisplaySetting.DISPLAY_SWITCH_DISABLED);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,197,ettings.remove(DisplaySetting.DISPLAY_SWITCH_ENABLED);
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,198,"ption.appendUsage(buffer, settings, null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,200,"ssertEquals(""+display (+d,+disp)"", buffer.toString());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,204, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,206, @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,208,ublic void testGetPreferredName() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,209,inal Option option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,210,"ssertEquals(""+display"", option.getPreferredName());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,214, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,216, @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,218,ublic void testGetDescription() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,219,inal Option option = buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,220,"ssertEquals(""Sets whether to display to screen"", option.getDescription());"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,223,ublic void testNullPreferredName() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,224,ry {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,225,"ew Switch(""+"", ""-"", null, null, ""Sets whether to display to screen"", true, null, null,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,226,"d', null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,227, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,228,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,229,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_PREFERRED_NAME_TOO_SHORT),"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,230,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,234,ublic void testEmptyPreferredName() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,235,ry {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,236,"ew Switch(""+"", ""-"", """", null, ""Sets whether to display to screen"", true, null, null,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,237,"d', null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,238, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,239,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,240,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_PREFERRED_NAME_TOO_SHORT),"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,241,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,245,ublic void testNullAliases() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,246,ry {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,247,"ew Switch(""+"", ""-"", ""display"", null, ""Sets whether to display to screen"", true, null,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,248,"ull, 'd', null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,249, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,250,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,251,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_PREFERRED_NAME_TOO_SHORT),"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,252,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,256,ublic void testNullEnablePrefix() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,257,ry {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,258,"ew Switch(null, ""-"", ""display"", null, ""Sets whether to display to screen"", true, null,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,259,"ull, 'd', null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,260, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,261,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,262,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_NO_ENABLED_PREFIX),"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,263,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,267,ublic void testNullDisablePrefix() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,268,ry {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,269,"ew Switch(""+"", null, ""display"", null, ""Sets whether to display to screen"", true, null,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,270,"ull, 'd', null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,271, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,272,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,273,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_NO_DISABLED_PREFIX),"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,274,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,278,ublic void testEnabledPrefixStartsWithDisabledPrefix() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,279,ry {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,280,"ew Switch(""-"", ""-"", ""display"", null, ""Sets whether to display to screen"", true, null,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,281,"ull, 'd', null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,282, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,283,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,284,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ENABLED_STARTS_WITH_DISABLED),"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,285,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,289,ublic void testDisabledPrefixStartsWithEnabledPrefix() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,290,ry {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,291,"ew Switch(""o"", ""on"", ""display"", null, ""Sets whether to display to screen"", true, null,"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,292,"ull, 'd', null);"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,293, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,294,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,295,"esourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_DISABLED_STARTWS_WITH_ENABLED),"
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,296,xp.getMessage());
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,301, (non-Javadoc)
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,303, @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,305,ublic void testHelpLines() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,306,/ TODO Auto-generated method stub
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,17, under the License.
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,19,ackage org.apache.commons.cli2.resource;
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,21,mport java.util.Locale;
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,22,mport java.util.MissingResourceException;
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,23,mport java.util.ResourceBundle;
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,25,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,28, A utility class used to provide internationalisation support.
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,30, @author John Keyes
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,32,ublic class ResourceHelperTest extends TestCase {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,33,** system property */
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,34,"rivate static final String PROP_LOCALE = ""org.apache.commons.cli2.resource.bundle"";"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,36,rivate static ResourceHelper helper;
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,38,** resource bundle */
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,39,rivate ResourceBundle bundle;
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,41,ublic void setUp() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,42,"ystem.setProperty(PROP_LOCALE, ""org.apache.commons.cli2.resource.TestBundle"");"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,43,elper = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,46,ublic void tearDown() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,47,"ystem.setProperty(PROP_LOCALE, ""org.apache.commons.cli2.resource.CLIMessageBundle_en_US.properties"");"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,51, Create a new ResourceHelper for the specified class.
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,53,ublic ResourceHelperTest() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,54,"uper(""ResourceHelperTest"");"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,57,ublic void testOverridden() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,58,"ssertEquals(""wrong message"", ""The class name \""ResourceHelper\"" is invalid."", helper.getMessage(""ClassValidator.bad.classname"", ""ResourceHelper""));"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,61,ublic void testNewMessage1Param() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,62,"ssertEquals(""wrong message"", ""Some might say we will find a brighter day."", helper.getMessage(""test.message""));"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,65,ublic void testNewMessage2Params() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,66,"ssertEquals(""wrong message"", ""Some might say we will find a brighter day."", helper.getMessage(""test.message"", ""Some""));"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,69,ublic void testNewMessage3Params() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,70,"ssertEquals(""wrong message"", ""Some might say we will find a brighter day."", helper.getMessage(""test.message"", ""Some"", ""might""));"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,73,ublic void testNewMessage4Params() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,74,"ssertEquals(""wrong message"", ""Some might say we will find a brighter day."", helper.getMessage(""test.message"", ""Some"", ""might"", ""say""));"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,77,ublic void testDefaultBundle() {
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,78,"ystem.setProperty(PROP_LOCALE, ""madeupname.properties"");"
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,79,elper = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java,80,"ssertEquals(""wrong message"", ""The class name \""ResourceHelper\"" is invalid."", helper.getMessage(""ClassValidator.bad.classname"", ""ResourceHelper""));"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,17,ackage org.apache.commons.cli2.util;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,19,mport java.util.Collections;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,20,mport java.util.List;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,24,mport org.apache.commons.cli2.CLITestCase;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,25,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,26,mport org.apache.commons.cli2.option.CommandTest;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,27,mport org.apache.commons.cli2.option.DefaultOptionTest;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,28,mport org.apache.commons.cli2.option.GroupTest;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,29,mport org.apache.commons.cli2.option.ParentTest;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,30,mport org.apache.commons.cli2.option.SwitchTest;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,33, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,35,ublic class ComparatorsTest extends TestCase {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,36,ublic void testGroupFirst() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,37,inal Option o1 = GroupTest.buildAntGroup();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,38,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,39,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,41,"ollections.sort(list, Comparators.groupFirst());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,43,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,44,"LITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,45,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,48,ublic void testGroupLast() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,49,inal Option o1 = GroupTest.buildAntGroup();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,50,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,51,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,53,"ollections.sort(list, Comparators.groupLast());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,55,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,56,"LITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,57,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,60,ublic void testSwitchFirst() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,61,inal Option o1 = SwitchTest.buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,62,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,63,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,65,"ollections.sort(list, Comparators.switchFirst());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,67,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,68,"LITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,69,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,72,ublic void testSwitchLast() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,73,inal Option o1 = SwitchTest.buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,74,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,75,"/final Option o3 = new SwitchBuilder().withName(""hidden"").create();"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,76,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,78,"ollections.sort(list, Comparators.switchLast());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,80,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,81,"LITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,82,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,85,ublic void testCommandFirst() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,86,inal Option o1 = CommandTest.buildCommitCommand();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,87,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,88,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,90,"ollections.sort(list, Comparators.commandFirst());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,92,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,93,"LITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,94,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,97,ublic void testCommandLast() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,98,inal Option o1 = CommandTest.buildCommitCommand();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,99,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,100,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,102,"ollections.sort(list, Comparators.commandLast());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,104,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,105,"LITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,106,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,109,ublic void testDefaultOptionFirst() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,110,inal Option o1 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,111,inal Option o2 = CommandTest.buildCommitCommand();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,112,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,114,"ollections.sort(list, Comparators.defaultOptionFirst());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,116,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,117,"LITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,118,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,121,ublic void testDefaultOptionLast() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,122,inal Option o1 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,123,inal Option o2 = CommandTest.buildCommitCommand();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,124,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,126,"ollections.sort(list, Comparators.defaultOptionLast());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,128,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,129,"LITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,130,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,133,ublic void testNamedFirst() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,134,inal Option o1 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,135,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,136,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,138,"ollections.sort(list, Comparators.namedFirst(""--help""));"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,140,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,141,"LITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,142,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,145,ublic void testNamedLast() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,146,inal Option o1 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,147,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,148,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,150,"ollections.sort(list, Comparators.namedLast(""--help""));"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,152,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,153,"LITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,154,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,157,ublic void testPreferredNameFirst() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,158,inal Option o1 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,159,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,160,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,162,"ollections.sort(list, Comparators.preferredNameFirst());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,164,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,165,"LITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,166,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,169,ublic void testPreferredNameLast() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,170,inal Option o1 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,171,inal Option o2 = ParentTest.buildLibParent();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,172,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,174,"ollections.sort(list, Comparators.preferredNameLast());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,176,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,177,"LITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,178,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,181,ublic void testRequiredFirst() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,182,inal Option o1 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,183,inal Option o2 = DefaultOptionTest.buildXOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,184,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,186,"ollections.sort(list, Comparators.requiredFirst());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,188,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,189,"LITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,190,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,193,ublic void testRequiredLast() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,194,inal Option o1 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,195,inal Option o2 = DefaultOptionTest.buildXOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,196,"inal List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,198,"ollections.sort(list, Comparators.requiredLast());"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,200,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,201,"LITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,202,ist);
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,205,ublic void testChained() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,206,inal Option o1 = CommandTest.buildCommitCommand();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,207,inal Option o2 = SwitchTest.buildDisplaySwitch();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,208,inal Option o3 = DefaultOptionTest.buildHelpOption();
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,209,"inal List list = CLITestCase.list(o1, o2, o3);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,211,ollections.sort(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,212,"ist,"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,213,omparators.chain(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,214,"omparators.namedFirst(""--help""),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,215,omparators.commandFirst()));
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,217,LITestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,218,"LITestCase.list(o3, o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,219,ist);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,17, under the License.
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,19,ackage org.apache.commons.cli2.util;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,21,mport java.io.BufferedReader;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,22,mport java.io.IOException;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,23,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,24,mport java.io.StringReader;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,25,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,27,mport java.util.Collections;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,28,mport java.util.Comparator;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,29,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,30,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,31,mport java.util.List;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,32,mport java.util.Set;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,34,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,36,mport org.apache.commons.cli2.DisplaySetting;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,37,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,38,mport org.apache.commons.cli2.Option;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,39,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,40,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,41,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,42,mport org.apache.commons.cli2.option.ArgumentTest;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,43,mport org.apache.commons.cli2.option.DefaultOptionTest;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,44,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,45,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,47,ublic class HelpFormatterTest
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,48,xtends TestCase {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,49,rivate ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,50,rivate HelpFormatter helpFormatter;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,51,rivate Option verbose;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,52,rivate Group options;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,54,ublic void setUp() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,55,"elpFormatter = new HelpFormatter(""|*"", ""*-*"", ""*|"", 80);"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,56,"elpFormatter.setDivider(""+------------------------------------------------------------------------------+"");"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,57,"elpFormatter.setHeader(""Apache Commons CLI"");"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,58,"elpFormatter.setFooter(""Copyright 2003\nApache Software Foundation"");"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,59,"elpFormatter.setShellCommand(""ant"");"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,61,erbose =
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,62,"ew DefaultOptionBuilder().withLongName(""verbose"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,63,"withDescription(""print the version information and exit"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,64,create();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,66,ptions =
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,67,"ew GroupBuilder().withName(""options"").withOption(DefaultOptionTest.buildHelpOption())"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,68,withOption(ArgumentTest.buildTargetsArgument())
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,69,"withOption(new DefaultOptionBuilder().withLongName(""diagnostics"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,70,"withDescription(""print information that might be helpful to diagnose or report problems."")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,71,create())
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,72,"withOption(new DefaultOptionBuilder().withLongName(""projecthelp"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,73,"withDescription(""print project help information"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,74,create()).withOption(verbose)
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,75,create();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,77,elpFormatter.setGroup(options);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,80,ublic void testPrint()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,81,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,82,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,83,inal PrintWriter pw = new PrintWriter(writer);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,84,elpFormatter.setPrintWriter(pw);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,85,elpFormatter.print();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,87,/ test shell
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,88,"ssertEquals(""incorrect shell command"", ""ant"", helpFormatter.getShellCommand());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,90,/ test group
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,91,"ssertEquals(""incorrect group"", this.options, helpFormatter.getGroup());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,93,/ test pagewidth
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,94,"ssertEquals(""incorrect page width"", 76, helpFormatter.getPageWidth());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,96,/ test pw
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,97,"ssertEquals(""incorrect print writer"", pw, helpFormatter.getPrintWriter());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,99,/ test divider
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,100,"ssertEquals(""incorrect divider"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,102,elpFormatter.getDivider());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,104,/ test header
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,105,"ssertEquals(""incorrect header"", ""Apache Commons CLI"", helpFormatter.getHeader());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,107,/ test footer
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,108,"ssertEquals(""incorrect footer"", ""Copyright 2003\nApache Software Foundation"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,109,elpFormatter.getFooter());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,111,/ test gutters
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,112,"ssertEquals(""incorrect left gutter"", ""|*"", helpFormatter.getGutterLeft());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,113,"ssertEquals(""incorrect right gutter"", ""*|"", helpFormatter.getGutterRight());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,114,"ssertEquals(""incorrect center gutter"", ""*-*"", helpFormatter.getGutterCenter());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,116,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,117,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,118,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,119,"ssertEquals(""|*Apache Commons CLI                                                          *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,120,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,121,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,122,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,123,"ssertEquals(""|*Usage:                                                                      *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,124,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,125,"ssertEquals(""|*ant [--help --diagnostics --projecthelp --verbose] [<target1> [<target2>    *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,126,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,127,"ssertEquals(""|*...]]                                                                       *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,128,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,129,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,130,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,131,"ssertEquals(""|*options              *-*                                                    *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,132,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,133,"ssertEquals(""|*  --help (-?,-h)     *-*Displays the help                                   *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,134,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,135,"ssertEquals(""|*  --diagnostics      *-*print information that might be helpful to diagnose *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,136,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,137,"ssertEquals(""|*                     *-*or report problems.                                 *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,138,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,139,"ssertEquals(""|*  --projecthelp      *-*print project help information                      *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,140,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,141,"ssertEquals(""|*  --verbose          *-*print the version information and exit              *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,142,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,143,"ssertEquals(""|*  target [target ...]*-*The targets ant should build                        *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,144,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,145,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,146,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,147,"ssertEquals(""|*Copyright 2003                                                              *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,148,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,149,"ssertEquals(""|*Apache Software Foundation                                                  *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,150,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,151,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,152,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,153,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,156,ublic void testComparator()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,157,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,158,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,159,inal PrintWriter pw = new PrintWriter(writer);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,160,elpFormatter.setPrintWriter(pw);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,162,inal Comparator comparator = new OptionComparator();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,163,elpFormatter.setComparator(comparator);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,164,elpFormatter.print();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,166,/ test comparator
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,167,"ssertEquals(""invalid comparator"", comparator, helpFormatter.getComparator());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,169,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,170,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,171,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,172,"ssertEquals(""|*Apache Commons CLI                                                          *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,173,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,174,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,175,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,176,"ssertEquals(""|*Usage:                                                                      *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,177,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,178,"ssertEquals(""|*ant [--verbose --projecthelp --help --diagnostics] [<target1> [<target2>    *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,179,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,180,"ssertEquals(""|*...]]                                                                       *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,181,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,182,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,183,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,184,"ssertEquals(""|*options              *-*                                                    *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,185,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,186,"ssertEquals(""|*  --verbose          *-*print the version information and exit              *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,187,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,188,"ssertEquals(""|*  --projecthelp      *-*print project help information                      *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,189,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,190,"ssertEquals(""|*  --help (-?,-h)     *-*Displays the help                                   *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,191,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,192,"ssertEquals(""|*  --diagnostics      *-*print information that might be helpful to diagnose *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,193,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,194,"ssertEquals(""|*                     *-*or report problems.                                 *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,195,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,196,"ssertEquals(""|*  target [target ...]*-*The targets ant should build                        *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,197,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,198,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,199,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,200,"ssertEquals(""|*Copyright 2003                                                              *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,201,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,202,"ssertEquals(""|*Apache Software Foundation                                                  *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,203,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,204,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,205,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,206,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,209,ublic void testPrintHelp()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,210,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,211,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,212,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,213,elpFormatter.printHelp();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,215,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,216,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,217,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,218,"ssertEquals(""|*options              *-*                                                    *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,219,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,220,"ssertEquals(""|*  --help (-?,-h)     *-*Displays the help                                   *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,221,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,222,"ssertEquals(""|*  --diagnostics      *-*print information that might be helpful to diagnose *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,223,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,224,"ssertEquals(""|*                     *-*or report problems.                                 *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,225,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,226,"ssertEquals(""|*  --projecthelp      *-*print project help information                      *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,227,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,228,"ssertEquals(""|*  --verbose          *-*print the version information and exit              *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,229,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,230,"ssertEquals(""|*  target [target ...]*-*The targets ant should build                        *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,231,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,232,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,233,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,234,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,237,ublic void testPrintHelp_WithException()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,238,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,239,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,240,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,241,elpFormatter.setException(new OptionException(verbose));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,242,elpFormatter.printHelp();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,244,/System.out.println(writer);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,245,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,246,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,247,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,248,"ssertEquals(""|*--verbose*-*print the version information and exit                          *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,249,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,250,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,251,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,252,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,255,ublic void testPrintHelp_TooNarrow()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,256,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,257,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,258,"elpFormatter = new HelpFormatter(""<"", ""="", "">"", 4);"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,259,elpFormatter.setGroup(options);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,260,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,261,elpFormatter.printHelp();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,263,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,264,"ssertEquals(""<options              = >"", reader.readLine());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,265,"ssertEquals(""<  --help (-?,-h)     =D>"", reader.readLine());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,266,"ssertEquals(""<                     =i>"", reader.readLine());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,268,/ lots more lines unchecked
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,271,ublic void testPrintException()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,272,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,273,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,274,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,275,"elpFormatter.setException(new OptionException(verbose, ResourceConstants.MISSING_OPTION));"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,276,elpFormatter.printException();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,278,/System.out.println(writer);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,279,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,280,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,281,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,282,"ssertEquals(""|*Missing option --verbose                                                    *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,283,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,284,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,287,ublic void testPrintUsage()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,288,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,289,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,290,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,291,elpFormatter.printUsage();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,293,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,294,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,295,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,296,"ssertEquals(""|*Usage:                                                                      *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,297,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,298,"ssertEquals(""|*ant [--help --diagnostics --projecthelp --verbose] [<target1> [<target2>    *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,299,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,300,"ssertEquals(""|*...]]                                                                       *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,301,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,302,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,305,ublic void testPrintHeader()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,306,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,307,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,308,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,309,elpFormatter.printHeader();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,311,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,312,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,313,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,314,"ssertEquals(""|*Apache Commons CLI                                                          *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,315,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,316,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,319,ublic void testPrintFooter()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,320,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,321,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,322,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,323,elpFormatter.printFooter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,325,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,326,"ssertEquals(""|*Copyright 2003                                                              *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,327,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,328,"ssertEquals(""|*Apache Software Foundation                                                  *|"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,329,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,330,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,331,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,332,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,335,ublic void testPrintDivider()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,336,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,337,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,338,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,339,elpFormatter.printDivider();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,341,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,342,"ssertEquals(""+------------------------------------------------------------------------------+"","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,343,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,344,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,347,ublic void testWrap() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,348,"inal Iterator i = HelpFormatter.wrap(""Apache Software Foundation"", 30).iterator();"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,349,"ssertEquals(""Apache Software Foundation"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,350,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,353,ublic void testWrap_WrapNeeded() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,354,"inal Iterator i = HelpFormatter.wrap(""Apache Software Foundation"", 20).iterator();"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,355,"ssertEquals(""Apache Software"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,356,"ssertEquals(""Foundation"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,357,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,360,ublic void testWrap_BeforeSpace() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,361,"inal Iterator i = HelpFormatter.wrap(""Apache Software Foundation"", 16).iterator();"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,362,"ssertEquals(""Apache Software"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,363,"ssertEquals(""Foundation"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,364,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,367,ublic void testWrap_AfterSpace() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,368,"inal Iterator i = HelpFormatter.wrap(""Apache Software Foundation"", 17).iterator();"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,369,"ssertEquals(""Apache Software"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,370,"ssertEquals(""Foundation"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,371,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,374,ublic void testWrap_InWord() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,375,"inal Iterator i = HelpFormatter.wrap(""Apache Software Foundation"", 8).iterator();"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,376,"ssertEquals(""Apache"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,377,"ssertEquals(""Software"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,378,"ssertEquals(""Foundati"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,379,"ssertEquals(""on"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,380,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,383,ublic void testWrap_NewLine() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,384,"inal Iterator i = HelpFormatter.wrap(""\nApache Software Foundation\n"", 30).iterator();"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,385,"ssertEquals("""", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,386,"ssertEquals(""Apache Software Foundation"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,387,"ssertEquals("""", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,388,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,391,ublic void testWrap_NewLine2() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,392,ist wrapped =
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,393,"elpFormatter.wrap(""A really quite long general description of the option with specific alternatives documented:\n"" +"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,394,"  Indented special case\n"" + ""  Alternative scenario"", 30);"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,396,inal Iterator i = wrapped.iterator();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,398,"ssertEquals(""A really quite long general"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,399,"ssertEquals(""description of the option"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,400,"ssertEquals(""with specific alternatives"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,401,"ssertEquals(""documented:"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,402,"ssertEquals(""  Indented special case"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,403,"ssertEquals(""  Alternative scenario"", i.next());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,404,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,407,ublic void testWrap_Below1Length() {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,408,ry {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,409,"elpFormatter.wrap(""Apache Software Foundation"", -1);"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,410,"ail(""IllegalArgumentException"");"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,411, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,412,"ssertEquals(resources.getMessage(ResourceConstants.HELPFORMATTER_WIDTH_TOO_NARROW,"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,413,"ew Object[] { new Integer(-1) }), e.getMessage());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,417,ublic void testPad()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,418,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,419,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,420,"elpFormatter.pad(""hello"", 10, new PrintWriter(writer));"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,421,"ssertEquals(""hello     "", writer.toString());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,424,ublic void testPad_Null()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,425,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,426,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,427,"elpFormatter.pad(null, 10, new PrintWriter(writer));"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,428,"ssertEquals(""          "", writer.toString());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,431,ublic void testPad_TooLong()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,432,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,433,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,434,"elpFormatter.pad(""hello world"", 10, new PrintWriter(writer));"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,435,"ssertEquals(""hello world"", writer.toString());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,438,ublic void testPad_TooShort()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,439,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,440,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,441,"elpFormatter.pad(""hello world"", -5, new PrintWriter(writer));"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,442,"ssertEquals(""hello world"", writer.toString());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,445,ublic void testGutters()
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,446,hrows IOException {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,447,"elpFormatter = new HelpFormatter(null, null, null, 80);"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,448,"elpFormatter.setShellCommand(""ant"");"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,450,inal Set lusage = new HashSet();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,451,usage.add(DisplaySetting.DISPLAY_ALIASES);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,452,usage.add(DisplaySetting.DISPLAY_GROUP_NAME);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,453,elpFormatter.setLineUsageSettings(lusage);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,455,/ test line usage
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,456,"ssertEquals(""incorrect line usage"", lusage, helpFormatter.getLineUsageSettings());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,458,inal Set fusage = new HashSet();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,459,usage.add(DisplaySetting.DISPLAY_PARENT_CHILDREN);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,460,usage.add(DisplaySetting.DISPLAY_GROUP_ARGUMENT);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,461,usage.add(DisplaySetting.DISPLAY_GROUP_OUTER);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,462,usage.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,463,usage.add(DisplaySetting.DISPLAY_ARGUMENT_BRACKETED);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,464,usage.add(DisplaySetting.DISPLAY_ARGUMENT_NUMBERED);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,465,usage.add(DisplaySetting.DISPLAY_SWITCH_ENABLED);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,466,usage.add(DisplaySetting.DISPLAY_SWITCH_DISABLED);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,467,usage.add(DisplaySetting.DISPLAY_PROPERTY_OPTION);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,468,usage.add(DisplaySetting.DISPLAY_PARENT_CHILDREN);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,469,usage.add(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,470,usage.add(DisplaySetting.DISPLAY_OPTIONAL);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,471,elpFormatter.setFullUsageSettings(fusage);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,473,/ test line usage
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,474,"ssertEquals(""incorrect full usage"", fusage, helpFormatter.getFullUsageSettings());"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,476,inal Set dsettings = new HashSet();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,477,settings.add(DisplaySetting.DISPLAY_GROUP_NAME);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,478,settings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,479,settings.add(DisplaySetting.DISPLAY_GROUP_ARGUMENT);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,481,elpFormatter.setDisplaySettings(dsettings);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,483,erbose =
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,484,"ew DefaultOptionBuilder().withLongName(""verbose"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,485,"withDescription(""print the version information and exit"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,486,create();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,488,ptions =
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,489,"ew GroupBuilder().withName(""options"").withOption(DefaultOptionTest.buildHelpOption())"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,490,withOption(ArgumentTest.buildTargetsArgument())
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,491,"withOption(new DefaultOptionBuilder().withLongName(""diagnostics"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,492,"withDescription(""print information that might be helpful to diagnose or report problems."")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,493,create())
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,494,"withOption(new DefaultOptionBuilder().withLongName(""projecthelp"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,495,"withDescription(""print project help information"")"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,496,create()).withOption(verbose)
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,497,create();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,499,elpFormatter.setGroup(options);
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,501,/ test default gutters
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,502,"ssertEquals(""incorrect left gutter"", HelpFormatter.DEFAULT_GUTTER_LEFT,"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,503,elpFormatter.getGutterLeft());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,504,"ssertEquals(""incorrect right gutter"", HelpFormatter.DEFAULT_GUTTER_RIGHT,"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,505,elpFormatter.getGutterRight());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,506,"ssertEquals(""incorrect center gutter"", HelpFormatter.DEFAULT_GUTTER_CENTER,"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,507,elpFormatter.getGutterCenter());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,509,inal StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,510,elpFormatter.setPrintWriter(new PrintWriter(writer));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,511,elpFormatter.print();
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,513,inal BufferedReader reader = new BufferedReader(new StringReader(writer.toString()));
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,514,"ssertEquals(""Usage:                                                                          "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,515,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,516,"ssertEquals(""ant [--help --diagnostics --projecthelp --verbose] [<target1> [<target2> ...]]  "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,517,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,518,"ssertEquals(""options                                                                         "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,519,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,520,"ssertEquals(""  --help (-?,-h)         Displays the help                                      "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,521,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,522,"ssertEquals(""  --diagnostics          print information that might be helpful to diagnose or "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,523,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,524,"ssertEquals(""                         report problems.                                       "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,525,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,526,"ssertEquals(""  --projecthelp          print project help information                         "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,527,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,528,"ssertEquals(""  --verbose              print the version information and exit                 "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,529,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,530,"ssertEquals(""  target [target ...]    The targets ant should build                           "","
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,531,eader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,532,ssertNull(reader.readLine());
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,537,lass OptionComparator implements Comparator {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,538,"ublic int compare(Object o1,"
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,539,bject o2) {
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,540,ption opt1 = (Option) o1;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,541,ption opt2 = (Option) o2;
False,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,543,eturn -opt1.getPreferredName().compareTo(opt2.getPreferredName());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,17,ackage org.apache.commons.cli2.validation;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,19,mport java.net.URL;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,20,mport java.net.URLClassLoader;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,21,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,22,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,23,mport java.util.List;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,25,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,27,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,29,ublic class ClassValidatorTest extends TestCase {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,31,rivate final static ResourceHelper resources =
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,32,esourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,34,rivate ClassValidator validator;
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,36,rotected void setUp() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,37,alidator = new ClassValidator();
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,40,ublic void testValidName() throws InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,41,"inal Object[] array = new Object[] { ""MyApp"", ""org.apache.ant.Main"" };"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,42,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,44,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,46,"ssertEquals(""Name is incorrect"", ""MyApp"", list.get(0));"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,47,"ssertEquals(""Name is incorrect"", ""org.apache.ant.Main"", list.get(1));"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,50,ublic void testNameBadStart() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,51,"inal String className = ""1stClass"";"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,52,inal Object[] array = new Object[] { className };
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,53,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,55,ry {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,56,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,57,"ail(""Class name cannot start with a number."");"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,58, catch (InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,59,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,60,esources.getMessage(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,61,"ClassValidator.bad.classname"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,62,"lassName),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,63,ve.getMessage());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,67,ublic void testNameBadEnd() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,68,"inal String className = ""My.Class."";"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,70,inal Object[] array = new Object[] { className };
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,71,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,73,ry {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,74,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,75,"ail(""Trailing period not permitted."");"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,76, catch (InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,77,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,78,esources.getMessage(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,79,"ClassValidator.bad.classname"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,80,"lassName),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,81,ve.getMessage());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,85,ublic void testNameBadMiddle() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,86,"inal String className = ""My..Class"";"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,88,inal Object[] array = new Object[] { className };
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,89,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,91,ry {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,92,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,93,"ail(""Two consecutive periods is not permitted."");"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,94, catch (InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,95,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,96,esources.getMessage(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,97,"ClassValidator.bad.classname"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,98,"lassName),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,99,ve.getMessage());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,103,ublic void testIllegalNameChar() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,104,"inal String className = ""My?Class"";"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,106,inal Object[] array = new Object[] { className };
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,107,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,109,ry {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,110,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,111,"ail(""Illegal character not allowed in Class name."");"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,112, catch (InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,113,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,114,esources.getMessage(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,115,"ClassValidator.bad.classname"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,116,"lassName),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,117,ve.getMessage());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,121,ublic void testLoadable() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,122,"ssertFalse(""Validator is loadable"", validator.isLoadable());"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,123,alidator.setLoadable(true);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,124,"ssertTrue(""Validator is NOT loadable"", validator.isLoadable());"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,125,alidator.setLoadable(false);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,126,"ssertFalse(""Validator is loadable"", validator.isLoadable());"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,129,ublic void testLoadValid() throws InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,130,inal Object[] array =
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,131,ew Object[] {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,132,"org.apache.commons.cli2.Option"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,133,"java.util.Vector"" };"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,134,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,136,alidator.setLoadable(true);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,137,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,139,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,140,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,141,"org.apache.commons.cli2.Option"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,142,(Class) i.next()).getName());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,143,"ssertEquals(""java.util.Vector"", ((Class) i.next()).getName());"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,144,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,147,ublic void testLoadInvalid() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,148,"inal String className = ""org.apache.commons.cli2.NonOption"";"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,150,"inal Object[] array = new Object[] { className, ""java.util.Vectors"" };"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,151,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,153,alidator.setLoadable(true);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,155,ry {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,156,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,157,"ail(""Class Not Found"");"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,158, catch (InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,159,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,160,esources.getMessage(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,161,"ClassValidator.class.notfound"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,162,"lassName),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,163,ve.getMessage());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,167,ublic void testInstantiate() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,168,"ssertFalse(""Validator creates instances"", validator.isInstance());"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,169,alidator.setInstance(true);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,170,ssertTrue(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,171,"Validator does NOT create instances"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,172,alidator.isInstance());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,173,alidator.setInstance(false);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,174,"ssertFalse(""Validator creates instances"", validator.isInstance());"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,177,ublic void testCreateClassInstance() throws InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,178,"inal Object[] array = new Object[] { ""java.util.Vector"" };"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,179,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,181,alidator.setInstance(true);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,183,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,184,ssertTrue(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,185,"Vector instance NOT found"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,186,ist.get(0) instanceof java.util.Vector);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,189,ublic void testCreateInterfaceInstance() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,190,"inal String className = ""java.util.Map"";"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,191,inal Object[] array = new Object[] { className };
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,192,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,194,alidator.setInstance(true);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,196,ry {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,197,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,198,"ail(""It's not possible to create a '"" + className + ""'"");"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,200,atch (final InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,201,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,202,esources.getMessage(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,203,"ClassValidator.class.create"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,204,"lassName),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,205,ve.getMessage());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,209,ublic void testCreateProtectedInstance() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,210,"inal String className = ""org.apache.commons.cli2.validation.protect.ProtectedClass"";"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,211,inal Object[] array = new Object[] { className };
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,212,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,214,alidator.setInstance(true);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,216,ry {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,217,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,218,"ail(""It's not possible to create a '"" + className + ""'"");"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,220,atch (final InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,221,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,222,esources.getMessage(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,223,"ClassValidator.class.access"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,224,"lassName,"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,225,"Class org.apache.commons.cli2.validation.ClassValidator "" +"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,226,"can not access a member of class "" +"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,227,"org.apache.commons.cli2.validation.protect.ProtectedClass "" +"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,228,"with modifiers \""protected\""""),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,229,ve.getMessage());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,233,ublic void testClassloader() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,234,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,235,"Wrong classloader found"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,236,"alidator.getClass().getClassLoader(),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,237,alidator.getClassLoader());
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,239,RLClassLoader classloader = new URLClassLoader(new URL[] {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,241,alidator.setClassLoader(classloader);
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,243,ssertEquals(
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,244,"Wrong classloader found"","
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,245,"lassloader,"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,246,alidator.getClassLoader());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,17,ackage org.apache.commons.cli2.validation;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,19,mport java.text.DateFormat;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,20,mport java.text.DateFormatSymbols;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,21,mport java.text.SimpleDateFormat;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,22,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,23,mport java.util.Calendar;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,24,mport java.util.Date;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,25,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,26,mport java.util.List;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,28,mport junit.framework.Test;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,29,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,30,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,32,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,33,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,36, JUnit test case for DateValidator.
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,38, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,39, @author John Keyes
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,41,ublic class DateValidatorTest
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,42,xtends TestCase {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,43,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,44,"ublic static final DateFormat D_M_YY = new SimpleDateFormat(""d/M/yy"");"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,45,"ublic static final DateFormat YYYY_MM_DD = new SimpleDateFormat(""yyyy-MM-dd"");"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,46,"rivate List formats = Arrays.asList(new Object[] { D_M_YY, YYYY_MM_DD });"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,48,ublic void testSingleFormatValidate()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,49,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,50,"inal Object[] array = new Object[] { ""23/12/03"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,51,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,52,inal Validator validator = new DateValidator(D_M_YY);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,54,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,56,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,57,"ssertEquals(""2003-12-23"", YYYY_MM_DD.format((Date) i.next()));"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,58,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,61,ublic void testDefaultDateFormatValidate()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,62,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,63,ateFormatSymbols symbols =  new DateFormatSymbols();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,64,"inal Object[] array = new Object[] { ""23-"" + symbols.getShortMonths()[11] + ""-2003"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,65,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,66,"inal Validator validator = new DateValidator( new SimpleDateFormat(""dd-MMM-yyyy"") );"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,68,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,70,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,71,"/ CLI-40: For some reason, the YYYY_MM_DD object gets quite"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,72,/ confused here and returns 2003-12-22. If we make a new one
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,73,/ there is no problem.
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,74,"ssertEquals(""2003-12-23"", new SimpleDateFormat(""yyyy-MM-dd"").format((Date) i.next()));"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,75,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,78,ublic void testDefaultTimeFormatValidate()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,79,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,80,"inal Object[] array = new Object[] { ""18:00:00"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,81,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,82,"inal Validator validator = new DateValidator( new SimpleDateFormat(""HH:mm:ss"") );"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,84,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,86,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,87,"inal DateFormat df = new SimpleDateFormat(""HH:mm:ss"");"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,88,"ssertEquals(""18:00:00"", df.format((Date) i.next()));"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,89,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,92,ublic void testDefaultDateTimeFormatValidate()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,93,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,94,ateFormatSymbols symbols =  new DateFormatSymbols();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,95,"inal Object[] array = new Object[] { ""23-"" + symbols.getShortMonths()[0] + ""-2003 18:00:00"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,96,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,97,"inal Validator validator = new DateValidator( new SimpleDateFormat(""dd-MMM-yyyy HH:mm:ss"") );"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,99,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,101,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,102,"inal DateFormat df = new SimpleDateFormat(""yyyy/M/dd HH:mm:ss"");"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,103,"ssertEquals(""2003/1/23 18:00:00"", df.format((Date) i.next()));"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,104,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,107,ublic void testDefaultValidator()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,108,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,109,"inal Object[] array = new Object[] { ""23/01/03 18:00"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,110,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,111,"inal Validator validator = new DateValidator(new SimpleDateFormat(""dd/MM/yy HH:mm""));"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,113,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,115,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,116,"inal DateFormat df = new SimpleDateFormat(""yyyy/M/dd HH:mm:ss"");"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,117,"ssertEquals(""2003/1/23 18:00:00"", df.format((Date) i.next()));"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,118,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,121,ublic void testValidate()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,122,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,123,"inal Object[] array = new Object[] { ""23/12/03"", ""2002-10-12"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,124,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,125,inal Validator validator = new DateValidator(formats);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,127,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,129,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,130,"ssertEquals(""2003-12-23"", YYYY_MM_DD.format((Date) i.next()));"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,131,"ssertEquals(""2002-10-12"", YYYY_MM_DD.format((Date) i.next()));"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,132,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,135,ublic void testMinimumBounds()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,136,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,137,inal DateValidator validator = new DateValidator(formats);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,138,inal Calendar cal = Calendar.getInstance();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,141,"inal Object[] array = new Object[] { ""23/12/03"", ""2002-10-12"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,142,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,143,"al.set(2002, 1, 12);"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,145,inal Date min = cal.getTime();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,146,alidator.setMinimum(min);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,147,"ssertTrue(""maximum bound is set"", validator.getMaximum() == null);"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,148,"ssertEquals(""minimum bound is incorrect"", min, validator.getMinimum());"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,149,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,153,"inal Object[] array = new Object[] { ""23/12/03"", ""2002-10-12"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,154,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,155,"al.set(2003, 1, 12);"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,157,inal Date min = cal.getTime();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,158,alidator.setMinimum(min);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,160,ry {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,161,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,162,"ail(""minimum out of bounds exception not caught"");"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,163, catch (final InvalidArgumentException exp) {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,164,"ssertEquals(resources.getMessage(ResourceConstants.DATEVALIDATOR_DATE_OUTOFRANGE,"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,165,"ew Object[] { ""2002-10-12"" }), exp.getMessage());"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,170,ublic void testFormats()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,171,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,172,inal DateValidator validator = new DateValidator(formats);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,173,"ssertEquals(""date format is incorrect"", ((SimpleDateFormat) formats.get(0)).toPattern(),"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,174,(SimpleDateFormat) validator.getFormats()[0]).toPattern());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,175,"ssertEquals(""date format is incorrect"", ((SimpleDateFormat) formats.get(1)).toPattern(),"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,176,(SimpleDateFormat) validator.getFormats()[1]).toPattern());
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,179,ublic void testMaximumBounds()
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,180,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,181,inal DateValidator validator = new DateValidator(formats);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,182,inal Calendar cal = Calendar.getInstance();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,185,"inal Object[] array = new Object[] { ""23/12/03"", ""2002-10-12"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,186,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,187,"al.set(2004, 1, 12);"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,189,inal Date max = cal.getTime();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,190,alidator.setMaximum(max);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,191,"ssertTrue(""minimum bound is set"", validator.getMinimum() == null);"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,192,"ssertEquals(""maximum bound is incorrect"", max, validator.getMaximum());"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,193,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,197,"inal Object[] array = new Object[] { ""23/12/03"", ""2004-10-12"" };"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,198,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,199,"al.set(2004, 1, 12);"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,201,inal Date max = cal.getTime();
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,202,alidator.setMaximum(max);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,204,ry {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,205,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,206,"ail(""maximum out of bounds exception not caught"");"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,207, catch (final InvalidArgumentException exp) {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,208,"ssertEquals(resources.getMessage(ResourceConstants.DATEVALIDATOR_DATE_OUTOFRANGE,"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,209,"ew Object[] { ""2004-10-12"" }), exp.getMessage());"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,214,ublic static Test suite() {
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,215,est result = new TestSuite(DateValidatorTest.class); // default behavior
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,216,"esult = new TimeZoneTestSuite(""EST"", result); // ensure it runs in EST timezone"
False,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,218,eturn result;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,17,ackage org.apache.commons.cli2.validation;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,19,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,20,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,21,mport java.util.List;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,22,mport java.util.Set;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,23,mport java.util.TreeSet;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,25,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,27,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,28,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,30,ublic class EnumValidatorTest
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,31,xtends TestCase {
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,32,rivate final static ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,33,"rivate final Set enumSet = new TreeSet(Arrays.asList(new Object[] { ""red"", ""green"", ""blue"" }));"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,35,ublic void testValidate()
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,36,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,37,"inal Object[] array = new Object[] { ""red"", ""green"" };"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,40,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,41,inal EnumValidator validator = new EnumValidator(enumSet);
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,42,"ssertEquals(""valid values are incorrect"", enumSet, validator.getValidValues());"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,43,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,45,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,46,"ssertEquals(""red"", i.next());"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,47,"ssertEquals(""green"", i.next());"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,48,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,52,ublic void testNonMember() {
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,53,"inal Object[] array = new Object[] { ""red"", ""pink"" };"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,54,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,55,inal EnumValidator validator = new EnumValidator(enumSet);
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,57,ry {
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,58,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,59,"ail(""InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,60, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,61,"ssertEquals(resources.getMessage(ResourceConstants.ENUM_ILLEGAL_VALUE,"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,62,"ew Object[] { ""pink"", validator.getValuesAsString() }),"
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,63,.getMessage());
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,17,ackage org.apache.commons.cli2.validation;
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,19,mport java.io.File;
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,20,mport java.io.IOException;
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,21,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,22,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,23,mport java.util.List;
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,25,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,28, JUnit test case for the FileValidator.
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,30, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,31, @author John Keyes
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,33,ublic class FileValidatorTest extends TestCase {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,35,ublic void testValidate() throws InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,36,"inal Object[] array = new Object[] { ""src"", ""pom.xml"", ""veryunlikelyfilename"" };"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,37,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,38,inal FileValidator validator = new FileValidator();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,40,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,42,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,43,"ssertEquals(new File(""src""), i.next());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,44,"ssertEquals(new File(""pom.xml""), i.next());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,45,"ssertEquals(new File(""veryunlikelyfilename""), i.next());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,46,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,49,ublic void testValidate_Directory() {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,50,"inal Object[] array = new Object[] { ""src"", ""pom.xml"" };"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,51,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,52,inal FileValidator validator = FileValidator
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,53,getExistingDirectoryInstance();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,55,"ssertTrue(""is a directory validator"", validator.isDirectory());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,56,"ssertFalse(""is not a file validator"", validator.isFile());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,57,"ssertTrue(""is an existing file validator"", validator.isExisting());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,58,"ssertFalse(""is not a hidden file validator"", validator.isHidden());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,60,ry {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,61,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,62,"ail(""InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,63, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,64,"ssertEquals(""pom.xml"", e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,68,ublic void testValidate_ReadableFile() {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,69,/ make file readonly
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,70,"ile file = new File(""src/test/data/readable.txt"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,71,ile.setReadOnly();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,73,"inal Object[] array = new Object[] { ""src/test/data/readable.txt"","
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,74,"src/test/data/notreadable.txt"" };"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,75,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,76,inal FileValidator validator = FileValidator.getExistingFileInstance();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,77,alidator.setReadable(true);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,79,"ssertFalse(""is not a directory validator"", validator.isDirectory());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,80,"ssertTrue(""is a file validator"", validator.isFile());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,81,"ssertTrue(""is an existing file validator"", validator.isExisting());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,82,"ssertFalse(""is not a hidden file validator"", validator.isHidden());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,83,"ssertTrue(""is a readable file validator"", validator.isReadable());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,84,"ssertFalse(""is not a writable file validator"", validator.isWritable());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,86,ry {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,87,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,88,"ail(""InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,89, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,90,"ssertEquals(""src/test/data/notreadable.txt"", e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,94,ublic void testValidate_WritableFile() {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,95,/ make file readonly
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,96,"ile file = new File(""src/test/data/readable.txt"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,97,ile.setReadOnly();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,99,"inal Object[] array = new Object[] { ""src/test/data/writable.txt"","
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,100,"src/test/data/readable.txt"" };"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,101,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,102,inal FileValidator validator = FileValidator.getExistingFileInstance();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,103,alidator.setWritable(true);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,105,"ssertFalse(""is not a directory validator"", validator.isDirectory());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,106,"ssertTrue(""is a file validator"", validator.isFile());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,107,"ssertTrue(""is an existing file validator"", validator.isExisting());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,108,"ssertFalse(""is not a hidden file validator"", validator.isHidden());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,109,"ssertFalse(""is not a readable file validator"", validator.isReadable());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,110,"ssertTrue(""is a writable file validator"", validator.isWritable());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,112,ry {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,113,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,114,"ail(""InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,115, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,116,"ssertEquals(""src/test/data/readable.txt"", e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,120,ublic void testValidate_HiddenFile() throws InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,121,/ make file hidden on Windows
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,122,"ttribute(""H"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,124,"inal Object[] array = new Object[] { ""src/test/data/.hidden.txt"", ""src"" };"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,125,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,126,inal FileValidator validator = FileValidator.getExistingFileInstance();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,127,alidator.setHidden(true);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,129,"ssertFalse(""is not a directory validator"", validator.isDirectory());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,130,"ssertTrue(""is a file validator"", validator.isFile());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,131,"ssertTrue(""is an existing file validator"", validator.isExisting());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,132,"ssertTrue(""is a hidden file validator"", validator.isHidden());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,134,ry {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,135,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,136,"ail(""InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,137, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,138,"ssertEquals(""src"", e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,142,rivate void attribute(String attr) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,143,"inal String os = System.getProperty(""os.name"").toLowerCase();"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,145,"/ if the test is run on windows, run the attrib program"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,146,/ to set the hidden attribute
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,147,"f (os.indexOf(""windows"") != -1) {"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,148,/ windows
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,149,ry {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,150,rocess proc = Runtime.getRuntime().exec(
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,151,"attrib.exe +"" + attr + "" src/test/data/.hidden.txt"","
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,152,"ull, new File("".""));"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,153,roc.waitFor();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,154, catch (InterruptedException e) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,155,ystem.out.println(e.getMessage());
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,156,.printStackTrace();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,157, catch (IOException e) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,158,ystem.out.println(e.getMessage());
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,159,.printStackTrace();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,164,ublic void testValidate_Existing() {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,165,"inal Object[] array = new Object[] { ""pom.xml"", ""veryunlikelyfilename"" };"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,166,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,167,inal FileValidator validator = FileValidator.getExistingInstance();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,169,"ssertFalse(""is not a directory validator"", validator.isDirectory());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,170,"ssertFalse(""is not a file validator"", validator.isFile());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,171,"ssertTrue(""is an existing file validator"", validator.isExisting());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,172,"ssertFalse(""is not a hidden file validator"", validator.isHidden());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,174,ry {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,175,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,176,"ail(""InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,177, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,178,"ssertEquals(""veryunlikelyfilename"", e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,182,ublic void testValidate_File() {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,183,"inal Object[] array = new Object[] { ""pom.xml"", ""src"" };"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,184,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,185,inal Validator validator = FileValidator.getExistingFileInstance();
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,187,ry {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,188,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,189,"ail(""InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,190, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,191,"ssertEquals(""src"", e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,17,ackage org.apache.commons.cli2.validation;
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,19,mport java.text.NumberFormat;
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,21,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,22,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,23,mport java.util.List;
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,25,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,27,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,28,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,31, JUnit test case for NumberValidator.
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,33, @author Rob Oxspring
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,34, @author John Keyes
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,36,ublic class NumberValidatorTest
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,37,xtends TestCase {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,38,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,40,ublic void testValidate_Number()
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,41,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,42,inal NumberFormat format = NumberFormat.getNumberInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,44,inal Object[] array =
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,45,"ew Object[] { format.format(1d), format.format(1.07d), format.format(-.45d) };"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,48,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,49,inal Validator validator = NumberValidator.getNumberInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,51,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,53,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,54,"ssertEquals(1d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,55,"ssertEquals(1.07d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,56,"ssertEquals(-.45d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,57,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,61,ublic void testValidate_Currency()
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,62,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,63,umberFormat format = NumberFormat.getCurrencyInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,64,inal Object[] array =
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,65,"ew Object[] { format.format(1d), format.format(1.07), format.format(-0.45) };"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,66,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,68,inal NumberValidator validator = NumberValidator.getCurrencyInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,69,"ssertEquals(""incorrect currency format"", format, validator.getFormat());"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,71,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,73,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,74,"ssertEquals(1d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,75,"ssertEquals(1.07d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,76,"ssertEquals(-.45d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,77,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,80,ublic void testValidate_Percent()
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,81,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,82,inal NumberFormat format = NumberFormat.getPercentInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,84,inal Object[] array =
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,85,ew Object[] {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,86,"ormat.format(.01), format.format(1.07), format.format(-.45),"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,87,ormat.format(0.001)
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,89,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,90,inal Validator validator = NumberValidator.getPercentInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,92,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,94,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,95,"ssertEquals(0.01d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,96,"ssertEquals(1.07d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,97,"ssertEquals(-.45d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,98,"ssertEquals(0.00001d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,99,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,102,ublic void testValidate_Integer()
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,103,hrows InvalidArgumentException {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,104,"inal Object[] array = new Object[] { ""1"", ""107"", ""-45"" };"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,105,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,106,inal Validator validator = NumberValidator.getIntegerInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,108,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,110,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,111,"ssertEquals(1d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,112,"ssertEquals(107d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,113,"ssertEquals(-45d, ((Number) i.next()).doubleValue(), 0.0001);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,114,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,117,ublic void testValidate_ExcessChars() {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,118,"inal Object[] array = new Object[] { ""10DowningStreet"" };"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,119,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,120,inal Validator validator = NumberValidator.getIntegerInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,122,ry {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,123,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,124,"ail(""InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,125, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,126,"ssertEquals(""10DowningStreet"", e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,130,ublic void testValidate_Maximum() {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,131,"inal Object[] array = new Object[] { ""1"", ""107"" };"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,132,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,133,inal NumberValidator validator = NumberValidator.getIntegerInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,134,nteger max = new Integer(100);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,136,alidator.setMaximum(max);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,138,"ssertTrue(""no minimum set"", validator.getMinimum() == null);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,139,"ssertEquals(""incorrect maximum value"", max, validator.getMaximum());"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,141,ry {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,142,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,143,"ail(""107 too big"");"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,144, catch (InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,145,"ssertEquals(resources.getMessage(ResourceConstants.NUMBERVALIDATOR_NUMBER_OUTOFRANGE,"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,146,"107""), ive.getMessage());"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,150,ublic void testValidate_Minimum() {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,151,"inal Object[] array = new Object[] { ""107"", ""1"" };"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,152,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,153,inal NumberValidator validator = NumberValidator.getIntegerInstance();
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,154,nteger min = new Integer(100);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,155,alidator.setMinimum(min);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,157,"ssertTrue(""no maximum set"", validator.getMaximum() == null);"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,158,"ssertEquals(""incorrect minimum value"", min, validator.getMinimum());"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,160,ry {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,161,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,162,"ail(""1 too small"");"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,163, catch (InvalidArgumentException ive) {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,164,"ssertEquals(resources.getMessage(ResourceConstants.NUMBERVALIDATOR_NUMBER_OUTOFRANGE,"
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,165,"1""), ive.getMessage());"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,17,ackage org.apache.commons.cli2.validation;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,19,mport java.net.MalformedURLException;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,20,mport java.net.URL;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,22,mport java.util.Arrays;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,23,mport java.util.Iterator;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,24,mport java.util.List;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,26,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,28,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,29,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,31,ublic class UrlValidatorTest
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,32,xtends TestCase {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,33,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,35,ublic void testValidate()
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,36,"hrows InvalidArgumentException, MalformedURLException {"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,37,"inal Object[] array = new Object[] { ""http://www.apache.org/"", ""file:///etc"" };"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,38,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,39,inal Validator validator = new UrlValidator();
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,41,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,43,inal Iterator i = list.iterator();
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,44,"ssertEquals(new URL(""http://www.apache.org/""), i.next());"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,45,"ssertEquals(new URL(""file:///etc""), i.next());"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,46,ssertFalse(i.hasNext());
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,49,ublic void testMalformedURL()
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,50,"hrows InvalidArgumentException, MalformedURLException {"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,51,"inal Object[] array = new Object[] { ""www.apache.org"" };"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,52,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,53,inal Validator validator = new UrlValidator();
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,55,ry {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,56,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,57, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,58,"ssertEquals(resources.getMessage(ResourceConstants.URLVALIDATOR_MALFORMED_URL,"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,59,"ew Object[] { ""www.apache.org"" }), e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,63,ublic void testBadProtocol() {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,65,"inal Object[] array = new Object[] { ""http://www.apache.org/"", ""file:///etc"" };"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,66,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,67,inal UrlValidator validator = new UrlValidator();
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,68,"alidator.setProtocol(""http"");"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,70,"ssertEquals(""incorrect protocol"", ""http"", validator.getProtocol());"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,72,ry {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,73,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,74,"ail(""Expected InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,75, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,76,"ssertEquals(""file:///etc"", e.getMessage());"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,81,"inal Object[] array = new Object[] { ""http://www.apache.org/"", ""file:///etc"" };"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,82,inal List list = Arrays.asList(array);
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,83,"inal UrlValidator validator = new UrlValidator(""http"");"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,85,ry {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,86,alidator.validate(list);
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,87,"ail(""Expected InvalidArgumentException"");"
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,88, catch (InvalidArgumentException e) {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,89,"ssertEquals(""file:///etc"", e.getMessage());"
