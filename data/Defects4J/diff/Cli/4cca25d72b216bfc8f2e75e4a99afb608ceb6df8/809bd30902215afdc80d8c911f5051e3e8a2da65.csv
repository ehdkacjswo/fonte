is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,72," <p>It allows querying of a boolean {@link #hasOption(char opt)},"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,73, in addition to retrieving the {@link #getOptionValue(char opt)}
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,72,"* <p>It allows querying of a boolean {@link #hasOption(String opt)},"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,73,* in addition to retrieving the {@link #getOptionValue(String opt)}
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,81,* @author John Keyes (jbjk at mac.com)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,105,ublic boolean hasOption(char opt) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,106,eturn options.containsKey( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,107,public boolean hasOption(String opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,108,return options.containsKey( opt );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,109,ublic Object getOptionObject(char opt) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,110,tring[] result = (String[])options.get( new Character(opt) );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,111,bject type = types.get( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,111,public Object getOptionObject(String opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,112,String[] result = (String[])options.get( opt );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,113,Object type = types.get( opt );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,124,ublic String getOptionValue(char opt) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,125,tring[] result = (String[])options.get( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,126,public String getOptionValue(String opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,127,String[] result = (String[])options.get( opt );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,134,ublic String[] getOptionValues(char opt) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,135,tring[] result = (String[])options.get( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,136,public String[] getOptionValues(String opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,137,String[] result = (String[])options.get( opt );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,145,"ublic String getOptionValue(char opt, String defaultValue) {"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,147,"public String getOptionValue(String opt, String defaultValue) {"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,199,oid setOpt(char opt) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,200,"ptions.put( new Character(opt), null );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,201,void setOpt(String opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,202,"options.put( opt, null );"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,210,"oid setOpt(char opt, String value) {"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,211,"ptions.put( new Character(opt), value );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,212,"void setOpt(String opt, String value) {"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,213,"options.put( opt, value );"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,221,haracter chr = new Character( opt.getOpt() );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,222,"ptions.put( chr, opt.getValues() );"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,223,"ypes.put( chr, opt.getType() );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,223,"options.put( opt.getOpt(), opt.getValues() );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,224,"types.put( opt.getOpt(), opt.getType() );"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/CommandLineParser.java,v 1.1 2002/06/16 23:00:57 jkeyes Exp $"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,4,* $Date: 2002/06/16 23:00:57 $
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,11,* reserved.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,15,* are met:
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,23,*    distribution.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,61,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,63,import java.util.List;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,66,* @author John Keyes (jbjk at mac.com)
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,68,public interface CommandLineParser {
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,71,* Parse the arguments according to the specified options.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,72,* @param options the specified Options
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,73,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,74,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,76,"public List parse( Options options, List arguments );"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,79,* Parse the arguments according to the specified options.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,80,* @param options the specified Options
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,81,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,82,* @param stopAtNonOption specifies whether to continue parsing the
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,83,* arguments if a non option is encountered.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,84,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,86,"public List parse( Options options, List arguments, boolean stopAtNonOption );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,202,ption = options.getOption(opt);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,202,"option = options.getOption( """" + opt);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,95,rivate Character  opt          = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,95,private String opt = null;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,122, @param opt character representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,122,* @param opt short representation of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,126,"ublic Option(char opt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,126,"public Option(String opt, boolean hasArg, String description) {"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,133, @param opt character representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,133,* @param opt short representation of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,138,"ublic Option(char opt, String longOpt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,138,"public Option(String opt, String longOpt, boolean hasArg, String description) {"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,145, @param opt character representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,145,* @param opt short representation of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,151,"ublic Option(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,151,"public Option(String opt, String longOpt, boolean hasArg, String description,"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,159, @param opt character representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,159,* @param opt short representation of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,167,"ublic Option(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,167,"public Option(String opt, String longOpt, boolean hasArg, String description,"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,171,"ublic Option(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,173,* Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,175,* @param opt short representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,176,* @param longOpt the long representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,177,* @param hasArg specifies whether the Option takes an argument or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,178,* @param description describes the function of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,179,* @param required specifies whether the option is required or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,180,* @param multipleArgs specifies whether the option has multiple argument
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,181,* values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,182,* @param type specifies the type of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,184,"public Option(String opt, String longOpt, boolean hasArg, String description,"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,173,his.opt          = new Character( opt );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,186,this.opt          = opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,185, {@link CommandLine#hasOption(char opt)} and
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,186, {@link CommandLine#getOptionValue(char opt)} to check
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,198,* {@link CommandLine#hasOption(String opt)} and
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,199,* {@link CommandLine#getOptionValue(String opt)} to check
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,191,ublic char getOpt() {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,192,eturn this.opt.charValue();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,204,public String getOpt() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,205,return this.opt;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,70,mport java.util.LinkedList;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,90,"private String defaultParserImpl = ""org.apache.commons.cli.PosixParser"";"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,91,private String parserImpl = defaultParserImpl;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,93,private CommandLineParser parser;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,113,"parserImpl = System.getProperty( ""org.apache.commons.cli.parser"" );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,114,try {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,115,parser = (CommandLineParser)Class.forName( parserImpl ).newInstance();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,117,catch( Exception exp ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,118,// could not create according to parserImpl so default to
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,119,// PosixParser
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,120,try {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,121,parser = (CommandLineParser)Class.forName( defaultParserImpl ).newInstance();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,123,catch( Exception exp2 ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,124,// this will not happen ?
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,127,System.out.println( parser.getClass().getName() );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,137,"ublic Options addOption(char opt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,156,"public Options addOption(String opt, boolean hasArg, String description) {"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,151,"ublic Options addOption(char opt, String longOpt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,170,"public Options addOption(String opt, String longOpt, boolean hasArg, String description) {"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,166,"ublic Options addOption(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,185,"public Options addOption(String opt, String longOpt, boolean hasArg, String description,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,183,"ublic Options addOption(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,202,"public Options addOption(String opt, String longOpt, boolean hasArg, String description,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,189,"ublic Options addOption(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,208,/** <p>Add an option that contains a short-name and a long-name</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,209,* <p>It may be specified as requiring an argument.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,211,* @param opt Short single-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,212,* @param longOpt Long multi-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,213,* @param hasArg flag signally if an argument is required after this option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,214,* @param description Self-documenting description
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,215,* @param required specifies if this option is required
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,216,* @param multipleArgs specifies if this option can accept multiple argument values
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,217,* @param type specifies the type for the value of the option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,218,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,220,"public Options addOption(String opt, String longOpt, boolean hasArg, String description,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,365,"ist args = burst( inArgs, stopAtNonOption );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,396,"List args = parser.parse( this, inArgs, stopAtNonOption );"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,509,/option.addValue( null );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,516, <p>Processes the argument list according to POSIX command line
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,517, processing rules.</p>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,519, @param inArgs the argument list
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,520, @param stopAtNonOption stop processing when the first non option
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,521, is encountered.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,522, @return the processed list of arguments.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,524,"rivate List burst(List inArgs, boolean stopAtNonOption) {"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,525,ist args = new LinkedList();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,527,terator argIter = inArgs.iterator();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,528,tring   eachArg = null;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,530,oolean eatTheRest = false;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,532,hile ( argIter.hasNext() ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,533,achArg = (String) argIter.next();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,535,"f ( eachArg.equals(""--"") ) {"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,536,"/ Look for -- to indicate end-of-options, and"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,537,"/ just stuff it, along with everything past it"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,538,/ into the returned list.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,540,rgs.add( eachArg );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,541,atTheRest = true;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,543,"lse if ( eachArg.startsWith(""--"") ) {"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,544,"/ It's a long-option, so doesn't need any"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,545,/ bursting applied to it.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,547,rgs.add( eachArg );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,549,"lse if ( eachArg.startsWith(""-"") ) {"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,550,/ It might be a short arg needing
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,551,/ some bursting
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,553,f ( eachArg.length() == 1) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,554,"/ It's not really an option, so"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,555,/ just drop it on the list
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,557,f ( stopAtNonOption ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,558,atTheRest = true;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,560,lse {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,561,rgs.add( eachArg );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,564,lse if ( eachArg.length() == 2 ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,565,/ No bursting required
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,567,rgs.add( eachArg );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,569,lse {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,570,/ Needs bursting.  Figure out
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,571,"/ if we have multiple options,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,572,"/ or maybe an option plus an arg,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,573,/ or some combination thereof.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,575,or ( int i = 1 ; i < eachArg.length() ; ++i ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,576,"tring optStr = ""-"" + eachArg.charAt(i);"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,577,ption opt    = (Option) shortOpts.get( optStr );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,579,f ( (opt != null) && (opt.hasArg()) ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,580,"/ If the current option has an argument,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,581,/ then consider the rest of the eachArg
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,582,/ to be that argument.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,584,rgs.add( optStr );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,586,f ( (i+1) < eachArg.length() ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,587,tring optArg = eachArg.substring(i+1);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,588,rgs.add( optArg );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,590,reak;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,592,lse {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,593,"/ No argument, so prepend the single dash,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,594,/ and then drop it into the arglist.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,596,rgs.add( optStr );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,601,lse {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,602,"/ It's just a normal non-option arg,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,603,/ so dump it into the list of returned
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,604,/ values.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,606,rgs.add( eachArg );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,608,f ( stopAtNonOption ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,609,atTheRest = true;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,613,f ( eatTheRest ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,614,hile ( argIter.hasNext() ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,615,rgs.add( argIter.next() );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,620,eturn args;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,657,ublic Option getOption(char opt) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,579,public Option getOption(String opt) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,580,"if( opt.startsWith( ""--"" ) ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,581,return (Option) longOpts.get( opt );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,666,ublic Option getOption(String longOpt) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,591,/*public Option getOption(String longOpt) {
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,147,"ptions.addOption(opt, null, (type != null), """", required, false, type);"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,147,"options.addOption("""" + opt, null, (type != null), """", required, false, type);"
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,163,"ptions.addOption(opt, null, (type != null), """", required, false, type);"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,163,"options.addOption( """" + opt, null, (type != null), """", required, false, type);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/PosixParser.java,v 1.1 2002/06/16 23:00:58 jkeyes Exp $"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,4,* $Date: 2002/06/16 23:00:58 $
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,11,* reserved.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,15,* are met:
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,23,*    distribution.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,61,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,63,import java.util.Iterator;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,64,import java.util.LinkedList;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,65,import java.util.List;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,68,* PosixParser parses the command line arguments using the Posix style.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,69,"* For example, -buildfile can only be interpreted as the option"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,70,* 'b' with value 'uildfile' or it could be interpreted as the options
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,71,"* 'b','u','i','l','d','f','i','l','e'."
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,73,* @author John Keyes (jbjk at mac.com)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,75,public class PosixParser implements CommandLineParser {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,78,* Parse the arguments according to the specified options.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,79,* @param options the specified Options
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,80,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,81,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,83,"public List parse( Options options, List arguments ) {"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,84,"return parse( options, arguments, false );"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,88,* Parse the arguments according to the specified options.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,89,* @param options the specified Options
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,90,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,91,* @param stopAtNonOption specifies whether to continue parsing the
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,92,* arguments if a non option is encountered.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,93,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,95,"public List parse( Options options, List arguments, boolean stopAtNonOption ) {"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,96,List args = new LinkedList();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,98,Iterator argIter = arguments.iterator();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,99,String   eachArg = null;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,101,boolean eatTheRest = false;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,103,while ( argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,104,eachArg = (String) argIter.next();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,106,"if ( eachArg.equals(""--"") ) {"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,107,"// Look for -- to indicate end-of-options, and"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,108,"// just stuff it, along with everything past it"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,109,// into the returned list.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,111,args.add( eachArg );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,112,eatTheRest = true;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,114,"else if ( eachArg.startsWith(""--"") ) {"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,115,"// It's a long-option, so doesn't need any"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,116,// bursting applied to it.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,118,args.add( eachArg );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,120,"else if ( eachArg.startsWith(""-"") ) {"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,121,// It might be a short arg needing
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,122,// some bursting
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,124,if ( eachArg.length() == 1) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,125,"// It's not really an option, so"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,126,// just drop it on the list
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,128,if ( stopAtNonOption ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,129,eatTheRest = true;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,131,else {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,132,args.add( eachArg );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,135,else if ( eachArg.length() == 2 ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,136,// No bursting required
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,138,args.add( eachArg );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,140,else {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,141,// Needs bursting.  Figure out
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,142,"// if we have multiple options,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,143,"// or maybe an option plus an arg,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,144,// or some combination thereof.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,146,for ( int i = 1 ; i < eachArg.length() ; ++i ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,147,"String optStr = ""-"" + eachArg.charAt(i);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,148,"Option opt    = (Option) options.getOption( """" + eachArg.charAt(i) );"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,150,if ( (opt != null) && (opt.hasArg()) ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,151,"// If the current option has an argument,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,152,// then consider the rest of the eachArg
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,153,// to be that argument.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,155,args.add( optStr );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,157,if ( (i+1) < eachArg.length() ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,158,String optArg = eachArg.substring(i+1);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,159,args.add( optArg );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,161,break;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,163,else {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,164,"// No argument, so prepend the single dash,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,165,// and then drop it into the arglist.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,167,args.add( optStr );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,172,else {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,173,"// It's just a normal non-option arg,"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,174,// so dump it into the list of returned
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,175,// values.
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,177,args.add( eachArg );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,179,if ( stopAtNonOption ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,180,eatTheRest = true;
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,184,if ( eatTheRest ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,185,while ( argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,186,args.add( argIter.next() );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,191,return args;
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,43,"pts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,43,"opts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,47,"pts.addOption('b',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,47,"opts.addOption(""b"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,71,"pts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,71,"opts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,75,"pts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,75,"opts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,79,"ssertEquals( ""last one in wins"", ""toggle -a*"", opts.getOption('a').getDescription() );"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,79,"assertEquals( ""last one in wins"", ""toggle -a*"", opts.getOption(""a"").getDescription() );"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,103,"pts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,103,"opts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,108,"pts.addOption('b',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,108,"opts.addOption(""b"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,136,"pts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,136,"opts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,141,"pts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,141,"opts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,145,"ssertEquals( ""last one in wins"", ""toggle -a*"", opts.getOption('a').getDescription() );"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,145,"assertEquals( ""last one in wins"", ""toggle -a*"", opts.getOption(""a"").getDescription() );"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,42,"ddOption('a', ""all"",            false, ""find all matching manual pages."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,43,"ddOption('d', ""debug"",          false, ""emit debugging messages."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,44,"ddOption('e', ""extension"",      false, ""limit search to extension type 'extension'."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,45,"ddOption('f', ""whatis"",         false, ""equivalent to whatis."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,46,"ddOption('k', ""apropos"",        false, ""equivalent to apropos."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,47,"ddOption('w', ""location"",       false, ""print physical location of man page(s)."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,48,"ddOption('l', ""local-file"",     false, ""interpret 'page' argument(s) as local filename(s)"")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,49,"ddOption('u', ""update"",         false, ""force a cache consistency check."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,42,"addOption(""a"", ""all"",            false, ""find all matching manual pages."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,43,"addOption(""d"", ""debug"",          false, ""emit debugging messages."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,44,"addOption(""e"", ""extension"",      false, ""limit search to extension type 'extension'."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,45,"addOption(""f"", ""whatis"",         false, ""equivalent to whatis."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,46,"addOption(""k"", ""apropos"",        false, ""equivalent to apropos."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,47,"addOption(""w"", ""location"",       false, ""print physical location of man page(s)."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,48,"addOption(""l"", ""local-file"",     false, ""interpret 'page' argument(s) as local filename(s)"")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,49,"addOption(""u"", ""update"",         false, ""force a cache consistency check."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,51,"ddOption('r', ""prompt"",         true,  ""provide 'less' pager with prompt."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,52,"ddOption('c', ""catman"",         false, ""used by catman to reformat out of date cat pages."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,53,"ddOption('7', ""ascii"",          false, ""display ASCII translation or certain latin1 chars."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,54,"ddOption('t', ""troff"",          false, ""use troff format pages."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,51,"addOption(""r"", ""prompt"",         true,  ""provide 'less' pager with prompt."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,52,"addOption(""c"", ""catman"",         false, ""used by catman to reformat out of date cat pages."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,53,"addOption(""7"", ""ascii"",          false, ""display ASCII translation or certain latin1 chars."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,54,"addOption(""t"", ""troff"",          false, ""use troff format pages."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,56,"ddOption('T', ""troff-device"",   true,  ""use groff with selected device."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,57,"ddOption('Z', ""ditroff"",        false, ""use groff with selected device."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,58,"ddOption('D', ""default"",        false, ""reset all options to their default values."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,56,"addOption(""T"", ""troff-device"",   true,  ""use groff with selected device."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,57,"addOption(""Z"", ""ditroff"",        false, ""use groff with selected device."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,58,"addOption(""D"", ""default"",        false, ""reset all options to their default values."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,60,"ddOption('M', ""manpath"",        true,  ""set search path for manual pages to 'path'."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,60,"addOption(""M"", ""manpath"",        true,  ""set search path for manual pages to 'path'."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,62,"ddOption('P', ""pager"",          true,  ""use program 'pager' to display output."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,62,"addOption(""P"", ""pager"",          true,  ""use program 'pager' to display output."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,64,"ddOption('S', ""sections"",       true,  ""use colon separated section list."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,64,"addOption(""S"", ""sections"",       true,  ""use colon separated section list."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,66,"ddOption('m', ""systems"",        true,  ""search for man pages from other unix system(s)."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,66,"addOption(""m"", ""systems"",        true,  ""search for man pages from other unix system(s)."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,68,"ddOption('L', ""locale"",         true,  ""defaine the locale for this particular man search."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,68,"addOption(""L"", ""locale"",         true,  ""defaine the locale for this particular man search."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,70,"ddOption('p', ""preprocessor"",   true,  ""string indicates which preprocessor to run.\n"" +"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,70,"addOption(""p"", ""preprocessor"",   true,  ""string indicates which preprocessor to run.\n"" +"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,73,"ddOption('V', ""version"",        false, ""show version."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,74,"ddOption('h', ""help"",           false, ""show this usage message."");"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,73,"addOption(""V"", ""version"",        false, ""show version."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,74,"addOption(""h"", ""help"",           false, ""show this usage message."");"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,38,"ption file = new Option( 'f', ""file"", false, ""file to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,39,"ption dir = new Option( 'd', ""directory"", false, ""directory to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,38,"Option file = new Option( ""f"", ""file"", false, ""file to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,39,"Option dir = new Option( ""d"", ""directory"", false, ""directory to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,45,"ption section = new Option( 's', ""section"", false, ""section to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,46,"ption chapter = new Option( 'c', ""chapter"", false, ""chapter to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,45,"Option section = new Option( ""s"", ""section"", false, ""section to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,46,"Option chapter = new Option( ""c"", ""chapter"", false, ""chapter to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,52,"options.addOption( 'r', ""revision"", false, ""revision number"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,52,"_options.addOption( ""r"", ""revision"", false, ""revision number"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,67,"ssertTrue( ""Confirm -r is NOT set"", !cl.hasOption('r') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,68,"ssertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,69,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,70,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,71,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,67,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,68,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,69,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,70,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,71,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,88,"ssertTrue( ""Confirm -r is set"", cl.hasOption('r') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,89,"ssertTrue( ""Confirm -f is NOT set"", !cl.hasOption('f') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,90,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,91,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,92,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,88,"assertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,89,"assertTrue( ""Confirm -f is NOT set"", !cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,90,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,91,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,92,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,109,"ssertTrue( ""Confirm -r is set"", cl.hasOption('r') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,110,"ssertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,111,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,112,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,113,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,109,"assertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,110,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,111,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,112,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,113,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,130,"ssertTrue( ""Confirm -r is NOT set"", !cl.hasOption('r') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,131,"ssertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,132,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,133,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,134,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,130,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,131,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,132,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,133,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,134,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,151,"ssertTrue( ""Confirm -r is set"", cl.hasOption('r') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,152,"ssertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,153,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,154,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,155,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,151,"assertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,152,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,153,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,154,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,155,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,172,"ssertTrue( ""Confirm -r is NOT set"", !cl.hasOption('r') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,173,"ssertTrue( ""Confirm -f is NOT set"", !cl.hasOption('f') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,174,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,175,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,176,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,172,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,173,"assertTrue( ""Confirm -f is NOT set"", !cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,174,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,175,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,176,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,228,"ssertTrue( ""Confirm -r is NOT set"", !cl.hasOption('r') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,229,"ssertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,230,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,231,"ssertTrue( ""Confirm -s is set"", cl.hasOption('s') );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,232,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,228,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,229,"assertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,230,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,231,"assertTrue( ""Confirm -s is set"", cl.hasOption(""s"") );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,232,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,38,"addOption('a',"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,38,".addOption(""a"","
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,42,"addOption('b',"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,42,".addOption(""b"","
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,62,"ssertTrue( ""Confirm -a is NOT set"", !cl.hasOption('a') );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,63,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,64,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""file"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,62,"assertTrue( ""Confirm -a is NOT set"", !cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,63,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,64,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,81,"ssertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,82,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,83,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""file"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,81,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,82,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,83,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,34,"addOption('a',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,34,".addOption(""a"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,38,"addOption('b',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,38,".addOption(""b"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,42,"addOption('c',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,42,".addOption(""c"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,86,"ssertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,87,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,88,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,86,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,87,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,88,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,107,"ssertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,108,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,109,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,107,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,108,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,109,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,127,"ssertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,128,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,129,"ssertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,130,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,127,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,128,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,129,"assertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,130,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,150,"ssertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,151,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,152,"ssertTrue( ""confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,150,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,151,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,152,"assertTrue( ""confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,199,"ssertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,199,"assertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,218,"ssertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,218,"assertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,223,"ssertTrue( ""Confirm -c is not set"", ! cl.hasOption('c') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,224,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,225,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,223,"assertTrue( ""Confirm -c is not set"", ! cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,224,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,225,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,245,"ssertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,245,"assertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,250,"ssertTrue( ""Confirm -c is not set"", ! cl.hasOption('c') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,251,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,252,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,250,"assertTrue( ""Confirm -c is not set"", ! cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,251,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,252,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,272,"ssertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,273,"ssertTrue( ""Confirm -b is not set"", ! cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,272,"assertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,273,"assertTrue( ""Confirm -b is not set"", ! cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,294,"ssertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,295,"ssertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,296,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""-"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,294,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,295,"assertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,296,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""-"") );"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,49,"ssertEquals(""flag a"", ""foo"", line.getOptionValue('a'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,50,"ssertEquals(""string flag a"", ""foo"", line.getOptionObject('a'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,51,"ssertEquals(""object flag b"", new java.util.Vector(), line.getOptionObject('b'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,52,"ssertEquals(""boolean true flag c"", true, line.hasOption('c'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,53,"ssertEquals(""boolean false flag d"", false, line.hasOption('d'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,54,"ssertEquals(""file flag e"", new java.io.File(""build.xml""), line.getOptionObject('e'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,55,"ssertEquals(""class flag f"", java.util.Calendar.class, line.getOptionObject('f'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,56,"ssertEquals(""number flag n"", new Float(4.5), line.getOptionObject('n'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,57,"ssertEquals(""url flag t"", new java.net.URL(""http://jakarta.apache.org/""), line.getOptionObject('t'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,49,"assertEquals(""flag a"", ""foo"", line.getOptionValue(""a""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,50,"assertEquals(""string flag a"", ""foo"", line.getOptionObject(""a""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,51,"assertEquals(""object flag b"", new java.util.Vector(), line.getOptionObject(""b""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,52,"assertEquals(""boolean true flag c"", true, line.hasOption(""c""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,53,"assertEquals(""boolean false flag d"", false, line.hasOption(""d""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,54,"assertEquals(""file flag e"", new java.io.File(""build.xml""), line.getOptionObject(""e""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,55,"assertEquals(""class flag f"", java.util.Calendar.class, line.getOptionObject(""f""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,56,"assertEquals(""number flag n"", new Float(4.5), line.getOptionObject(""n""));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,57,"assertEquals(""url flag t"", new java.net.URL(""http://jakarta.apache.org/""), line.getOptionObject(""t""));"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,114,"ptions = new Options().addOption('a', false, ""aaaa aaaa aaaa aaaa aaaa"");"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,114,"options = new Options().addOption(""a"", false, ""aaaa aaaa aaaa aaaa aaaa"");"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,128,"ptions = new Options().addOption('a', ""aaa"", false, ""dddd dddd dddd dddd"");"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,128,"options = new Options().addOption(""a"", ""aaa"", false, ""dddd dddd dddd dddd"");"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,143,"ddOption('a', ""aaa"", false, ""dddd dddd dddd dddd"")."
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,144,"ddOption('b', false, ""feeee eeee eeee eeee"");"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,143,"addOption(""a"", ""aaa"", false, ""dddd dddd dddd dddd"")."
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,144,"addOption(""b"", false, ""feeee eeee eeee eeee"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,42,"pts.addOption('a',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,42,"opts.addOption(""a"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,46,"pts.addOption('b',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,46,"opts.addOption(""b"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,50,"pts.addOption('c',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,50,"opts.addOption(""c"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,55,"pts.addOption('d',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,55,"opts.addOption(""d"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,109,ssertTrue( _cl.hasOption('a') );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,110,ssertNull( _cl.getOptionValue('a') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,109,"assertTrue( _cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,110,"assertNull( _cl.getOptionValue(""a"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,115,ssertTrue( _cl.hasOption('b') );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,116,ssertNotNull( _cl.getOptionValue('b') );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,117,"ssertEquals( _cl.getOptionValue('b'), ""foo"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,115,"assertTrue( _cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,116,"assertNotNull( _cl.getOptionValue(""b"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,117,"assertEquals( _cl.getOptionValue(""b""), ""foo"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,122,ssertTrue( _cl.hasOption('c') );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,123,ssertNull( _cl.getOptionValue('c') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,122,"assertTrue( _cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,123,"assertNull( _cl.getOptionValue(""c"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,128,ssertTrue( _cl.hasOption('d') );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,129,ssertNotNull( _cl.getOptionValue('d') );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,130,"ssertEquals( _cl.getOptionValue('d'), ""bar"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,128,"assertTrue( _cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,129,"assertNotNull( _cl.getOptionValue(""d"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,130,"assertEquals( _cl.getOptionValue(""d""), ""bar"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,42,"pts.addOption('a',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,42,"opts.addOption(""a"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,46,"pts.addOption('b',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,46,"opts.addOption(""b"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,50,"pts.addOption('c',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,50,"opts.addOption(""c"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,55,"pts.addOption('d',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,55,"opts.addOption(""d"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,60,"pts.addOption('e',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,60,"opts.addOption(""e"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,67,"pts.addOption('f',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,67,"opts.addOption(""f"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,97,ssertTrue( _cl.hasOption('a') );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,98,ssertTrue( _cl.hasOption('c') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,97,"assertTrue( _cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,98,"assertTrue( _cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,100,ssertNull( _cl.getOptionValues('a') );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,101,ssertNull( _cl.getOptionValues('c') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,100,"assertNull( _cl.getOptionValues(""a"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,101,"assertNull( _cl.getOptionValues(""c"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,106,ssertTrue( _cl.hasOption('b') );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,107,"ssertTrue( _cl.getOptionValue('b').equals(""foo""));"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,108,ssertTrue( _cl.getOptionValues('b').length == 1);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,106,"assertTrue( _cl.hasOption(""b"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,107,"assertTrue( _cl.getOptionValue(""b"").equals(""foo""));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,108,"assertTrue( _cl.getOptionValues(""b"").length == 1);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,110,ssertTrue( _cl.hasOption('d') );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,111,"ssertTrue( _cl.getOptionValue('d').equals(""bar""));"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,112,ssertTrue( _cl.getOptionValues('d').length == 1);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,110,"assertTrue( _cl.hasOption(""d"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,111,"assertTrue( _cl.getOptionValue(""d"").equals(""bar""));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,112,"assertTrue( _cl.getOptionValues(""d"").length == 1);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,117,tring[] result = _cl.getOptionValues('e');
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,117,"String[] result = _cl.getOptionValues(""e"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,119,ssertTrue( _cl.hasOption('e') );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,120,ssertTrue( _cl.getOptionValues('e').length == 2);
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,121,"ssertTrue( java.util.Arrays.equals( values, _cl.getOptionValues('e') ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,119,"assertTrue( _cl.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,120,"assertTrue( _cl.getOptionValues(""e"").length == 2);"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,121,"assertTrue( java.util.Arrays.equals( values, _cl.getOptionValues(""e"") ) );"
