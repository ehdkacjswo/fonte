is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,29,/** The option requiring additional arguments */
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,30,private Option option;
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,44,* Construct a new <code>MissingArgumentException</code>
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,45,* with the specified detail message.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,47,* @param option the option requiring an argument
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,48,* @since 1.2
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,50,public MissingArgumentException(Option option)
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,52,"this(""Missing argument for option: "" + option.getKey());"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,53,this.option = option;
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,57,* Return the option requiring an argument that wasn't provided
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,58,* on the command line.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,60,* @since 1.2
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,62,public Option getOption()
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,64,return option;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,358,"hrow new MissingArgumentException(""Missing argument for option:"""
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,359, opt.getKey());
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,358,throw new MissingArgumentException(opt);
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,105,"assertEquals(""option missing an argument"", ""b"", e.getOption().getOpt());"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,125,"assertEquals(""option missing an argument"", ""b"", e.getOption().getOpt());"
False,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,70, catch(MissingArgumentException mae) {
False,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,71,/ expected
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,70,} catch(MissingArgumentException e) {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,71,"assertEquals(""option missing an argument"", ""k"", e.getOption().getOpt());"
