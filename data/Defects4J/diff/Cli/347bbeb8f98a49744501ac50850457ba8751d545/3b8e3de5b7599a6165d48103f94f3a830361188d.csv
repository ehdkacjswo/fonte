is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,138,bject type = ((Option)((List)options.get(opt)).iterator().next()).getType();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,138,Object type = ((Option)options.get(opt)).getType();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,185,opt = Util.stripLeadingHyphens( opt );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,191,ist opts = (List)options.get( key );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,192,terator iter = opts.iterator();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,194,hile( iter.hasNext() ) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,195,ption optt = (Option)iter.next();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,196,alues.addAll( optt.getValuesList() );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,193,return ((Option)options.get(key)).getValues();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,199,eturn (values.size() == 0) ? null : (String[])values.toArray(new String[]{});
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,195,return null;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,297,tring key = opt.getOpt();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,298,"f( "" "".equals(key) ) {"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,293,String key = opt.getKey();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,294,if( key == null ) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,305,f( options.get( key ) != null ) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,306,(java.util.List)options.get( key )).add( opt );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,308,lse {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,309,"ptions.put( key, new java.util.ArrayList() );"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,310,(java.util.List)options.get( key ) ).add( opt );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,301,if( opt.getValues() != null ) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,302,"System.out.println( opt.getKey() + ""="" + opt.getValues().length );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,305,"options.put( key, opt );"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/CommandLineParser.java,v 1.4 2002/09/19 22:59:43 jkeyes Exp $"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,3, $Revision: 1.4 $
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,4, $Date: 2002/09/19 22:59:43 $
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/CommandLineParser.java,v 1.5 2002/11/18 08:41:26 jkeyes Exp $"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,3,* $Revision: 1.5 $
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,4,* $Date: 2002/11/18 08:41:26 $
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,63,import java.util.Properties;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,88,* Parse the arguments according to the specified options and
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,89,* properties.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,91,* @param options the specified Options
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,92,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,93,* @param properties command line option name-value pairs
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,94,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,96,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,97,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,99,"public CommandLine parse( Options options, String[] arguments, Properties props )"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,100,throws ParseException;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,118,* Parse the arguments according to the specified options and
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,119,* properties.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,121,* @param options the specified Options
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,122,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,123,* @param properties command line option name-value pairs
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,124,* @param stopAtNonOption specifies whether to continue parsing the
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,126,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,127,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,128,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,130,"public CommandLine parse( Options options, String[] arguments, Properties properties, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,131,throws ParseException;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,63, Copyright (C) The Apache Software Foundation. All rights reserved.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,65, This software is published under the terms of the Apache Software License
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,66," version 1.1, a copy of which has been included with this distribution in"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,67, the LICENSE file.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,69," $Id: Option.java,v 1.6 2002/06/06 22:50:14 bayard Exp $"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,100,** opt the single character representation of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,88,/** opt the name of the option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,133,** option char (only valid for single character options) */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,134,rivate char id;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,140, <p>Validates whether <code>opt</code> is a permissable Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,141, shortOpt.  The rules that specify if the <code>opt</code>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,142, is valid are:</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,143, <ul>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,144,  <li><code>opt</code> is not NULL</li>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,145,  <li>a single character <code>opt</code> that is either
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,146,"  ' '(special case), '?', '@' or a letter</li>"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,147,  <li>a multi character <code>opt</code> that only contains
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,148,  letters.</li>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,149, </ul>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,151, @param opt The option string to validate
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,152, @throws IllegalArgumentException if the Option is not valid.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,154,rivate void validateOption( String opt )
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,155,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,157,/ check that opt is not NULL
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,158,f( opt == null ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,159,"hrow new IllegalArgumentException( ""opt is null"" );"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,161,/ handle the single character opt
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,162,lse if( opt.length() == 1 ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,163,har ch = opt.charAt( 0 );
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,164,f ( !isValidOpt( ch ) ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,165,"hrow new IllegalArgumentException( ""illegal option value '"""
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,166," ch + ""'"" );"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,168,d = ch;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,170,/ handle the multi character opt
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,171,lse {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,172,har[] chars = opt.toCharArray();
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,173,or( int i = 0; i < chars.length; i++ ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,174,f( !isValidChar( chars[i] ) ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,175,"hrow new IllegalArgumentException( ""opt contains illegal character value '"" + chars[i] + ""'"" );"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,182, <p>Returns whether the specified character is a valid Option.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,184, @param c the option to validate
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,185," @return true if <code>c</code> is a letter, ' ', '?' or '@', otherwise false."
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,187,rivate boolean isValidOpt( char c ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,188,eturn ( isValidChar( c ) || c == ' ' || c == '?' || c == '@' );
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,192, <p>Returns whether the specified character is a valid character.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,194, @param c the character to validate
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,195, @return true if <code>c</code> is a letter.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,197,rivate boolean isValidChar( char c ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,198,eturn Character.isJavaIdentifierPart( c );
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,202, <p>Returns the id of this Option.  This is only set when the
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,203, Option shortOpt is a single character.  This is used for switch
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,204, statements.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,206, @return the id of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,208,ublic int getId( ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,209,eturn id;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,250,alidateOption( opt );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,162,OptionValidator.validateOption( opt );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,177,* <p>Returns the id of this Option.  This is only set when the
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,178,* Option shortOpt is a single character.  This is used for switch
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,179,* statements.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,181,* @return the id of this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,183,public int getId( ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,184,return getKey().charAt( 0 );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,188,* <p>Returns the 'unique' Option identifier.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,190,* @return the 'unique' Option identifier
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,192,String getKey() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,193,"// if 'opt' is null, then it is a 'long' option"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,194,if( opt == null ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,195,return this.longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,197,return this.opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,448," <p>Dump state, suitable for debugging.</p>"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,450, @return Stringified form of this object
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,452,ublic String toString() {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,453,"tringBuffer buf = new StringBuffer().append(""[ option: "");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,455,uf.append( this.opt );
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,457,f ( this.longOpt != null ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,458,"uf.append("" "")"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,459,append(this.longOpt);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,462,"uf.append("" "");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,464,f ( hasArg ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,465,"uf.append( ""+ARG"" );"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,468,"uf.append("" :: "")"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,469,append( this.description );
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,471,f ( this.type != null ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,472,"uf.append("" :: "")"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,473,append( this.type );
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,476,"uf.append("" ]"");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,477,eturn buf.toString();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,383,public void clearValues() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,384,this.values.clear();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,484,"* <p>Dump state, suitable for debugging.</p>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,486,* @return Stringified form of this object
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,488,public String toString() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,489,"StringBuffer buf = new StringBuffer().append(""[ option: "");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,491,buf.append( this.opt );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,493,if ( this.longOpt != null ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,494,"buf.append("" "")"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,495,.append(this.longOpt);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,498,"buf.append("" "");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,500,if ( hasArg ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,501,"buf.append( ""+ARG"" );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,504,"buf.append("" :: "")"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,505,.append( this.description );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,507,if ( this.type != null ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,508,"buf.append("" :: "")"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,509,.append( this.type );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,512,"buf.append("" ]"");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,513,return buf.toString();
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.12 2002/10/15 22:50:45 jkeyes Exp $"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3, $Revision: 1.12 $
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4, $Date: 2002/10/15 22:50:45 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.13 2002/11/18 08:41:26 jkeyes Exp $"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3,* $Revision: 1.13 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4,* $Date: 2002/11/18 08:41:26 $
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,335,"eturn create( "" "" );"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,335,return create( null );
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionValidator.java,v 1.1 2002/11/18 08:41:26 jkeyes Exp $"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,4,* $Date: 2002/11/18 08:41:26 $
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,11,* reserved.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,15,* are met:
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,23,*    distribution.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,61,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,64,* Validates an Option string.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,66,* @author John Keyes ( john at integralsource.com )
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,68,public class OptionValidator {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,71,* <p>Validates whether <code>opt</code> is a permissable Option
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,72,* shortOpt.  The rules that specify if the <code>opt</code>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,73,* is valid are:</p>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,74,* <ul>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,75,*  <li><code>opt</code> is not NULL</li>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,76,*  <li>a single character <code>opt</code> that is either
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,77,"*  ' '(special case), '?', '@' or a letter</li>"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,78,*  <li>a multi character <code>opt</code> that only contains
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,79,*  letters.</li>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,80,* </ul>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,82,* @param opt The option string to validate
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,83,* @throws IllegalArgumentException if the Option is not valid.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,85,static void validateOption( String opt )
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,86,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,88,// check that opt is not NULL
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,89,if( opt == null ) {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,90,return;
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,92,// handle the single character opt
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,93,else if( opt.length() == 1 ) {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,94,char ch = opt.charAt( 0 );
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,95,if ( !isValidOpt( ch ) ) {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,96,"throw new IllegalArgumentException( ""illegal option value '"""
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,97,"+ ch + ""'"" );"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,100,// handle the multi character opt
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,101,else {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,102,char[] chars = opt.toCharArray();
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,103,for( int i = 0; i < chars.length; i++ ) {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,104,if( !isValidChar( chars[i] ) ) {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,105,"throw new IllegalArgumentException( ""opt contains illegal character value '"" + chars[i] + ""'"" );"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,112,* <p>Returns whether the specified character is a valid Option.</p>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,114,* @param c the option to validate
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,115,"* @return true if <code>c</code> is a letter, ' ', '?' or '@', otherwise false."
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,117,private static boolean isValidOpt( char c ) {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,118,return ( isValidChar( c ) || c == ' ' || c == '?' || c == '@' );
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,122,* <p>Returns whether the specified character is a valid character.</p>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,124,* @param c the character to validate
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,125,* @return true if <code>c</code> is a letter.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,127,private static boolean isValidChar( char c ) {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,128,return Character.isJavaIdentifierPart( c );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,128,"ptionGroups.put( option.getOpt(), group );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,128,"optionGroups.put( option.getKey(), group );"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,168,"tring shortOpt = ""-"" + opt.getOpt();"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,168,String shortOpt = opt.getOpt();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,172,"ongOpts.put( ""--"" + opt.getLongOpt(), opt );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,172,"longOpts.put( opt.getLongOpt(), opt );"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,177,equiredOpts.add( shortOpt );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,177,requiredOpts.add( opt.getKey() );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,231,ption option = null;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,231,opt = Util.stripLeadingHyphens( opt );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,233,/ short option
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,234,f( opt.length() == 1 ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,235,"ption = (Option)shortOpts.get( ""-"" + opt );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,233,if( shortOpts.containsKey( opt ) ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,234,return (Option) shortOpts.get( opt );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,237,/ long option
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,238,"lse if( opt.startsWith( ""--"" ) ) {"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,239,ption = (Option)longOpts.get( opt );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,241,/ a just-in-case
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,242,lse {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,243,ption = (Option)shortOpts.get( opt );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,246,eturn (option == null) ? null : (Option)option.clone();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,236,return (Option) longOpts.get( opt );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,259,/ short option
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,260,f( opt.length() == 1 ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,261,"eturn shortOpts.containsKey( ""-"" + opt );"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,263,/ long option
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,264,"lse if( opt.startsWith( ""--"" ) ) {"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,265,eturn longOpts.containsKey( opt );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,267,/ a just-in-case
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,268,lse {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,269,eturn shortOpts.containsKey( opt );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,248,opt = Util.stripLeadingHyphens( opt );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,249,return shortOpts.containsKey( opt ) || longOpts.containsKey( opt );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,281,eturn (OptionGroup)optionGroups.get( opt.getOpt() );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,260,return (OptionGroup)optionGroups.get( opt.getKey() );
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.7 2002/10/24 23:17:49 jkeyes Exp $"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,3, $Revision: 1.7 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,4, $Date: 2002/10/24 23:17:49 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.8 2002/11/18 08:41:26 jkeyes Exp $"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,3,* $Revision: 1.8 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,4,* $Date: 2002/11/18 08:41:26 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,65,import java.util.Enumeration;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,70,import java.util.Properties;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75, @version $Revision: 1.7 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,77,* @version $Revision: 1.8 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,111,"ublic CommandLine parse( Options options, String[] arguments )"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,113,"public CommandLine parse( Options options,"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,114,String[] arguments )
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,114,"eturn parse( options, arguments, false );"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,117,"return parse( options, arguments, null, false );"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,121,* Parse the arguments according to the specified options and
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,122,* properties.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,124,* @param options the specified Options
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,125,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,126,* @param properties command line option name-value pairs
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,127,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,129,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,130,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,132,"public CommandLine parse( Options options,"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,133,"String[] arguments,"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,134,Properties properties )
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,135,throws ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,137,"return parse( options, arguments, properties, false );"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,155,"public CommandLine parse( Options options,"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,156,"String[] arguments,"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,157,boolean stopAtNonOption )
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,158,throws ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,160,"return parse( options, arguments, null, stopAtNonOption );"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,164,* Parse the arguments according to the specified options and
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,165,* properties.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,167,* @param options the specified Options
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,168,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,169,* @param properties command line option name-value pairs
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,170,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,172,* @throws ParseException if there are any problems encountered
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,173,* while parsing the command line tokens.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,177,"Properties properties,"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,188,if( arguments == null ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,189,arguments = new String[0];
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,241,processProperties( properties );
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,247,* <p>Sets the values of Options using the values in <code>properties</code>.</p>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,249,private void processProperties( Properties properties ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,250,if( properties == null ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,251,return;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,254,for( Enumeration e = properties.propertyNames(); e.hasMoreElements(); ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,255,String option = e.nextElement().toString();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,256,if( !cmd.hasOption( option ) ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,257,Option opt = options.getOption( option );
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,258,if( opt.getValues() == null || opt.getValues().length == 0 ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,259,opt.addValue( properties.getProperty( option ) );
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,261,cmd.addOption( opt );
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,224,tring var = (String)iter.next();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,294,String str = (String)iter.next();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,227,f( options.hasOption( var ) ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,297,if( options.hasOption( str ) ) {
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,232,lse if( !opt.addValue( var ) ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,302,else if( !opt.addValue( str ) ) {
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,239,"hrow new MissingArgumentException( ""no argument for:"" + opt.getOpt() );"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,309,"throw new MissingArgumentException( ""no argument for:"" + opt.getKey() );"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,262,"equiredOptions.remove( ""-"" + opt.getOpt() );"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,332,requiredOptions.remove( opt.getKey() );
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Util.java,v 1.1 2002/11/18 08:41:26 jkeyes Exp $"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,4,* $Date: 2002/11/18 08:41:26 $
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,11,* reserved.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,15,* are met:
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,23,*    distribution.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,61,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,64,* Contains useful helper methods for classes within this package.
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,66,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,68,class Util {
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,70,static String stripLeadingHyphens( String str ) {
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,71,"if( str.startsWith( ""--"" ) ) {"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,72,"return str.substring( 2, str.length() );"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,74,"else if ( str.startsWith( ""-"" ) ) {"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,75,"return str.substring( 1, str.length() );"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,77,return str;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8," $Id: BugsTest.java,v 1.10 2002/10/24 23:17:49 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8,"* $Id: BugsTest.java,v 1.11 2002/11/18 08:41:26 jkeyes Exp $"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,334,"ail( ""Unexpected exception: "" + exp.getMessage() );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,334,"fail( ""Unexpected exception: "" + exp.getClass().getName() + "":"" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,343,"ail( ""Unexpected exception: "" + exp.getMessage() );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,343,"fail( ""Unexpected exception: "" + exp.getClass().getName() + "":"" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,140,/ null option
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,141,ry {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,142,ption opt = OptionBuilder.create( null );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,143,"ail( ""IllegalArgumentException not caught"" );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,145,atch( IllegalArgumentException exp ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,146,/ success
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,17,import java.util.Properties;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,275,public void testPropertyValues()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,277,Properties properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,278,"properties.setProperty( ""hide"", ""seek"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,279,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,281,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,282,"CommandLine cmd = parser.parse(opts, null, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,283,"assertTrue( cmd.hasOption(""hide"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,284,"assertEquals( ""seek"", cmd.getOptionValue(""hide"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,285,"assertTrue( !cmd.hasOption(""fake"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,287,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,289,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,293,public void testPropertyOverrideValues()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,295,String[] args = new String[] {
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,296,"""-j"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,297,"""found"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,298,"""-i"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,299,"""ink"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,302,Properties properties = new Properties();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,303,"properties.setProperty( ""j"", ""seek"" );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,304,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,306,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,307,"CommandLine cmd = parser.parse(opts, args, properties);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,308,"assertTrue( cmd.hasOption(""j"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,309,"assertEquals( ""found"", cmd.getOptionValue(""j"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,310,"assertTrue( cmd.hasOption(""i"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,311,"assertEquals( ""ink"", cmd.getOptionValue(""i"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,312,"assertTrue( !cmd.hasOption(""fake"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,314,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,316,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
