is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,25, @see ParseException
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,25,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,56,"his(""The option '"" + option.getKey() + ""' was specified but an option from this group "" +"
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,57,"has already been selected: '"" + group.getSelected() + ""'"");"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,56,"this(""The option '"" + option.getKey() + ""' was specified but an option from this group """
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,57,"+ ""has already been selected: '"" + group.getSelected() + ""'"");"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,65,* @return the related option group
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,76,* @return the related option
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,24, @see Parser
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,25,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,26,ublic class BasicParser extends Parser {
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,27,public class BasicParser extends Parser
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,30," {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>"
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,31,"* {@link Parser#flatten(Options, String[], boolean) flatten} method.</p>"
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,41,"rotected String[] flatten(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,42,oolean stopAtNonOption)
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,42,"protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,28, <p>Represents list of arguments parsed against
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,29, a {@link Options} descriptor.<p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,29,* Represents list of arguments parsed against a {@link Options} descriptor.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,41,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,42,ublic class CommandLine implements Serializable {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,43,public class CommandLine implements Serializable
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,52,** Map of unique options for ease to get complete list of options */
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,53,/    private Set allOptions = new HashSet();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,71,eturn options.contains( resolveOption(opt));
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,69,return options.contains(resolveOption(opt));
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,154,or ( Iterator it = options.iterator(); it.hasNext(); )
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,152,for (Iterator it = options.iterator(); it.hasNext();)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,157,f (opt.equals(option.getOpt()) || opt.equals( option.getLongOpt()))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,155,if (opt.equals(option.getOpt()) || opt.equals(option.getLongOpt()))
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,167, <p>Retrieves the option object given the long or short option as a String</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,165,* Retrieves the option object given the long or short option as a String
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,171,rivate Option resolveOption( String opt )
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,170,private Option resolveOption(String opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,174,or ( Iterator it = options.iterator(); it.hasNext(); )
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,173,for (Iterator it = options.iterator(); it.hasNext();)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,181,f (opt.equals( option.getLongOpt()))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,181,if (opt.equals(option.getLongOpt()))
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,206, @param defaultValue is the default value to be returned if the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,206,* @param defaultValue is the default value to be returned if the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,222, @param defaultValue is the default value to be returned if the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,222,* @param defaultValue is the default value to be returned if the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,329, Add an option to the command line.  The values of
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,330, the option are stored.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,329,* Add an option to the command line.  The values of the option are stored.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,342, @return an <code>Iterator</code> over the processed {@link Option}
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,341,* @return an <code>Iterator</code> over the processed {@link Option}
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,17,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,19,mport java.util.Properties;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,18,package org.apache.commons.cli;
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,22, A class that implements the <code>CommandLineParser</code> interface
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,21,* A class that implements the <code>CommandLineParser</code> interface
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,26,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,28,ublic interface CommandLineParser {
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,28,public interface CommandLineParser
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,40,"ommandLine parse(Options options, String[] arguments)"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,41,hrows ParseException;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,40,"CommandLine parse(Options options, String[] arguments) throws ParseException;"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,55,"* To maintain binary compatibility, this is commented out."
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,56,"t is still in the abstract Parser class, so most users will"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,57,till reap the benefit.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,58,"ommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,59,roperties properties)
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,54,"/* To maintain binary compatibility, this is commented out."
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,55,"It is still in the abstract Parser class, so most users will"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,56,still reap the benefit.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,57,"CommandLine parse(Options options, String[] arguments, Properties properties)"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,75,"ommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,76,oolean stopAtNonOption)
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,77,hrows ParseException;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,73,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException;"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,92,"* To maintain binary compatibility, this is commented out."
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,93,"t is still in the abstract Parser class, so most users will"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,94,till reap the benefit.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,95,"ommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,96,"roperties properties, boolean stopAtNonOption)"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,97,hrows ParseException;
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,88,"/* To maintain binary compatibility, this is commented out."
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,89,"It is still in the abstract Parser class, so most users will"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,90,still reap the benefit.
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,91,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,92,throws ParseException;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,24, The class GnuParser provides an implementation of the
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,25," {@link Parser#flatten(Options,String[],boolean) flatten} method."
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,24,* The class GnuParser provides an implementation of the
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,25,"* {@link Parser#flatten(Options, String[], boolean) flatten} method."
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,28, @see Parser
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,29, @version $Revision$
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,28,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,31,ublic class GnuParser extends Parser {
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,30,public class GnuParser extends Parser
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,34, <p>This flatten method does so using the following rules:
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,33,* This flatten method does so using the following rules:
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,36,  <li>If an {@link Option} exists for the first character of
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,37,  the <code>arguments</code> entry <b>AND</b> an {@link Option}
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,38,  does not exist for the whole <code>argument</code> then
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,39,  add the first character as an option to the processed tokens
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,40,"  list e.g. ""-D"" and add the rest of the entry to the also.</li>"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,41,  <li>Otherwise just add the token to the processed tokens list.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,42,  </li>
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,35,*   <li>If an {@link Option} exists for the first character of
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,36,*   the <code>arguments</code> entry <b>AND</b> an {@link Option}
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,37,*   does not exist for the whole <code>argument</code> then
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,38,*   add the first character as an option to the processed tokens
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,39,"*   list e.g. ""-D"" and add the rest of the entry to the also.</li>"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,40,*   <li>Otherwise just add the token to the processed tokens list.</li>
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,44, </p>
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,46, @param options The Options to parse the arguments by.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,47, @param arguments The arguments that have to be flattened.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,48, @param stopAtNonOption specifies whether to stop
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,49, flattening when a non option has been encountered
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,43,* @param options         The Options to parse the arguments by.
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,44,* @param arguments       The arguments that have to be flattened.
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,45,* @param stopAtNonOption specifies whether to stop flattening when
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,46,*                        a non option has been encountered
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,33,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,34,ublic class HelpFormatter {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,35,public class HelpFormatter
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,152,eturn this.defaultWidth;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,154,return defaultWidth;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,172,eturn this.defaultLeftPad;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,174,return defaultLeftPad;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,192,eturn this.defaultDescPad;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,194,return defaultDescPad;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,212,eturn this.defaultSyntaxPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,214,return defaultSyntaxPrefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,232,eturn this.defaultNewLine;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,234,return defaultNewLine;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,252,eturn this.defaultOptPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,254,return defaultOptPrefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,272,eturn this.defaultLongOptPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,274,return defaultLongOptPrefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,292,eturn this.defaultArgName;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,294,return defaultArgName;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,300,ublic Comparator getOptionComparator()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,302,public Comparator getOptionComparator()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,302,eturn this.optionComparator;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,304,return optionComparator;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,310,ublic void setOptionComparator(Comparator comparator)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,312,public void setOptionComparator(Comparator comparator)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,312,f ( comparator == null )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,314,if (comparator == null)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,316,lse
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,318,else
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,323,/ ------------------------------------------------------------------ Public
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,326, <p>Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,325,* Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,328, System.out.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,327,* System.out.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,339, <p>Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,338,* Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,341, System.out.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,340,* System.out.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,345, @param autoUsage whether to print an automatically generated
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,344,* @param autoUsage whether to print an automatically generated
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,348,"ublic void printHelp(String cmdLineSyntax, Options options,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,349,oolean autoUsage)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,347,"public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,355, <p>Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,353,* Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,357, System.out.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,355,* System.out.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,364,"ublic void printHelp(String cmdLineSyntax, String header, Options options,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,365,tring footer)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,362,"public void printHelp(String cmdLineSyntax, String header, Options options, String footer)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,371, <p>Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,368,* Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,373, System.out.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,370,* System.out.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,379, @param autoUsage whether to print an automatically generated
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,376,* @param autoUsage whether to print an automatically generated
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,382,"ublic void printHelp(String cmdLineSyntax, String header, Options options,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,383,"tring footer, boolean autoUsage)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,379,"public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,385,"rintHelp(defaultWidth, cmdLineSyntax, header, options, footer,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,386,utoUsage);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,381,"printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,390, <p>Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,385,* Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,392, System.out.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,387,* System.out.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,400,"ublic void printHelp(int width, String cmdLineSyntax, String header,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,401,"ptions options, String footer)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,395,"public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,407, <p>Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,401,* Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,409, System.out.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,403,* System.out.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,419,"ublic void printHelp(int width, String cmdLineSyntax, String header,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,413,"public void printHelp(int width, String cmdLineSyntax, String header,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,424,"rintHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,425,"efaultDescPad, footer, autoUsage);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,418,"printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,430, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,431, command line syntax.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,423,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,424,* command line syntax.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,448,"rintHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,449,"ooter, false);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,441,"printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,454, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,455, command line syntax.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,446,* Print the help for <code>options</code> with the specified
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,447,* command line syntax.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,467, @param autoUsage whether to print an automatically generated
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,459,* @param autoUsage whether to print an automatically generated
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,470,"ublic void printHelp(PrintWriter pw, int width, String cmdLineSyntax,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,471,"tring header, Options options, int leftPad,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,462,"public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,463,"String header, Options options, int leftPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,510,"ublic void printUsage(PrintWriter pw, int width, String app,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,511,ptions options)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,502,"public void printUsage(PrintWriter pw, int width, String app, Options options)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,514,tringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,515,"append("" "");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,505,"StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append("" "");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,524,"ollections.sort(optList, getOptionComparator() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,514,"Collections.sort(optList, getOptionComparator());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,566,"rintWrapped(pw, width, buff.toString().indexOf(' ') + 1,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,567,uff.toString());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,556,"printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,578,"rivate void appendOptionGroup(final StringBuffer buff,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,579,inal OptionGroup group)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,567,"private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,587,"ollections.sort(optList, getOptionComparator() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,575,"Collections.sort(optList, getOptionComparator());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,613,"rivate static void appendOption(final StringBuffer buff,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,614,"inal Option option,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,615,inal boolean required)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,601,"private static void appendOption(final StringBuffer buff, final Option option, final boolean required)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,645," <p>Print the cmdLineSyntax to the specified writer, using the"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,646, specified width.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,631,"* Print the cmdLineSyntax to the specified writer, using the"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,632,* specified width.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,656,"rintWrapped(pw, width, defaultSyntaxPrefix.length() + argPos,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,657,efaultSyntaxPrefix + cmdLineSyntax);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,642,"printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,682, <p>Print the specified text to the specified PrintWriter.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,667,* Print the specified text to the specified PrintWriter.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,694, <p>Print the specified text to the specified PrintWriter.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,679,* Print the specified text to the specified PrintWriter.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,701,"ublic void printWrapped(PrintWriter pw, int width, int nextLineTabStop,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,702,tring text)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,686,"public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,713, <p>Render the specified Options and return the rendered Options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,714, in a StringBuffer.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,697,* Render the specified Options and return the rendered Options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,698,* in a StringBuffer.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,726,"rotected StringBuffer renderOptions(StringBuffer sb, int width,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,727,"ptions options, int leftPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,728,nt descPad)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,710,"protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,740,ption option;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,743,"ollections.sort(optList, getOptionComparator() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,725,"Collections.sort(optList, getOptionComparator());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,747,ption = (Option) i.next();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,729,Option option = (Option) i.next();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,752,"ptBuf.append(lpad).append(""   "" + defaultLongOptPrefix)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,753,append(option.getLongOpt());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,734,"optBuf.append(lpad).append(""   "" + defaultLongOptPrefix).append(option.getLongOpt());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,757,ptBuf.append(lpad).append(defaultOptPrefix)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,758,append(option.getOpt());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,738,optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,762,"ptBuf.append(',').append(defaultLongOptPrefix)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,763,append(option.getLongOpt());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,742,"optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,780,ax = (optBuf.length() > max)       ? optBuf.length() : max;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,759,max = (optBuf.length() > max) ? optBuf.length() : max;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,787,ption = (Option) i.next();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,766,Option option = (Option) i.next();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,816, <p>Render the specified text and return the rendered Options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,817, in a StringBuffer.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,795,* Render the specified text and return the rendered Options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,796,* in a StringBuffer.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,860, Finds the next text wrap position after <code>startPos</code> for the
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,839,* Finds the next text wrap position after <code>startPos</code> for the
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,867, @param startPos position from which to start the lookup whitespace
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,846,* @param startPos position from which to start the lookup whitespace
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,869, @return postion on which the text must be wrapped or -1 if the wrap
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,848,* @return postion on which the text must be wrapped or -1 if the wrap
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,878,"| ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,857,"|| ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,880,eturn pos+1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,859,return pos + 1;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,882,lse if ((startPos + width) >= text.length())
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,861,else if (startPos + width >= text.length())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,894,& (c != '\n') && (c != '\r'))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,873,&& (c != '\n') && (c != '\r'))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,915,eturn (pos == text.length())        ? (-1) : pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,894,return (pos == text.length()) ? (-1) : pos;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,919, <p>Return a String of padding of length <code>len</code>.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,898,* Return a String of padding of length <code>len</code>.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,938, <p>Remove the trailing whitespace from the specified String.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,917,* Remove the trailing whitespace from the specified String.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,965, <p>This class implements the <code>Comparator</code> interface
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,966, for comparing Options.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,944,* This class implements the <code>Comparator</code> interface
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,945,* for comparing Options.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,968,rivate static class OptionComparator
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,969,mplements Comparator {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,947,private static class OptionComparator implements Comparator
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,972, <p>Compares its two arguments for order. Returns a negative
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,973," integer, zero, or a positive integer as the first argument"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,974," is less than, equal to, or greater than the second.</p>"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,951,* Compares its two arguments for order. Returns a negative
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,952,"* integer, zero, or a positive integer as the first argument"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,953,"* is less than, equal to, or greater than the second."
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,979," @return a negative integer, zero, or a positive integer as"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,980," the first argument is less than, equal to, or greater than the"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,981, second.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,957,"* @return a negative integer, zero, or a positive integer as"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,958,"*         the first argument is less than, equal to, or greater than the"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,959,*         second.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,985,ption opt1 = (Option)o1;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,986,ption opt2 = (Option)o2;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,963,Option opt1 = (Option) o1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,964,Option opt2 = (Option) o2;
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,25, @see ParseException
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,25,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,60,* @return the related option
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,27, @see ParseException
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,27,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,61,* @return the missing options
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,22,import java.util.List;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,35, @version $Revision$
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,37,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,37,"ublic class Option implements Cloneable, Serializable {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,39,"public class Option implements Cloneable, Serializable"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,41,** constant that specifies the number of argument values has
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,42,ot been specified */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,43,/** constant that specifies the number of argument values has not been specified */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,48,** opt the name of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,49,/** the name of the option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,51,** longOpt is the long representation of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,52,/** the long representation of the option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,54,** argName specifies the name of the argument for this option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,55,/** the name of the argument for this option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,60,** required specifies whether this option is required to be present */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,61,/** specifies whether this option is required to be present */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,67, numberOfArgs specifies the number of argument values this option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,68, can have
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,67,/** the number of argument values this option can have */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,76,rivate ArrayList values = new ArrayList();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,74,private List values = new ArrayList();
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,90,"ublic Option(String opt, String description)"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,91,hrows IllegalArgumentException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,88,"public Option(String opt, String description) throws IllegalArgumentException"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,106,"ublic Option(String opt, boolean hasArg, String description)"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,107,hrows IllegalArgumentException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,103,"public Option(String opt, boolean hasArg, String description) throws IllegalArgumentException"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,123,"ublic Option(String opt, String longOpt, boolean hasArg,"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,124,tring description)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,119,"public Option(String opt, String longOpt, boolean hasArg, String description)"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,164,eturn this.longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,159,return longOpt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,167,eturn this.opt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,162,return opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,182,eturn this.opt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,177,return opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,192,eturn this.type;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,187,return type;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,212,eturn this.longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,207,return longOpt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,241,eturn this.optionalArg;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,236,return optionalArg;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,251,eturn (this.longOpt != null);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,246,return longOpt != null;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,261,eturn (this.numberOfArgs > 0) || (numberOfArgs == UNLIMITED_VALUES);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,256,return numberOfArgs > 0 || numberOfArgs == UNLIMITED_VALUES;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,271,eturn this.description;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,266,return description;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,292,eturn this.required;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,287,return required;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,322,eturn this.argName;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,317,return argName;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,334,eturn (this.argName != null && this.argName.length() > 0);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,329,return argName != null && argName.length() > 0;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,344,eturn (this.numberOfArgs > 1)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,345,| (this.numberOfArgs == UNLIMITED_VALUES);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,339,return numberOfArgs > 1 || numberOfArgs == UNLIMITED_VALUES;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,376,eturn this.valuesep;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,370,return valuesep;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,387,eturn (this.valuesep > 0);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,381,return valuesep > 0;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,397,eturn this.numberOfArgs;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,391,return numberOfArgs;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,409,ase UNINITIALIZED:
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,410,"hrow new RuntimeException(""NO_ARGS_ALLOWED"");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,403,case UNINITIALIZED:
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,404,"throw new RuntimeException(""NO_ARGS_ALLOWED"");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,412,efault:
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,413,rocessValue(value);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,406,default:
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,407,processValue(value);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,485,his.values.add(value);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,474,values.add(value);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,497,eturn hasNoValues() ? null : (String) this.values.get(0);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,486,return hasNoValues() ? null : (String) values.get(0);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,512,ublic String getValue(int index)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,513,hrows IndexOutOfBoundsException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,501,public String getValue(int index) throws IndexOutOfBoundsException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,515,eturn hasNoValues() ? null : (String) this.values.get(index);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,503,return hasNoValues() ? null : (String) values.get(index);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,544,eturn hasNoValues()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,545, null : (String[]) this.values.toArray(new String[this.values.size()]);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,532,return hasNoValues() ? null : (String[]) values.toArray(new String[values.size()]);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,552,ublic java.util.List getValuesList()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,539,public List getValuesList()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,554,eturn this.values;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,541,return values;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,566,uf.append(this.opt);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,553,buf.append(opt);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,568,f (this.longOpt != null)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,555,if (longOpt != null)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,570,"uf.append("" "").append(this.longOpt);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,557,"buf.append("" "").append(longOpt);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,578, else if (hasArg()) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,566,else if (hasArg())
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,582,"uf.append("" :: "").append(this.description);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,571,"buf.append("" :: "").append(description);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,584,f (this.type != null)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,573,if (type != null)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,586,"uf.append("" :: "").append(this.type);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,575,"buf.append("" :: "").append(type);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,601,eturn this.values.size() == 0;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,590,return values.isEmpty();
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,604,ublic boolean equals( Object o )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,593,public boolean equals(Object o)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,606,f ( this == o )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,595,if (this == o)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,610,f ( o == null || getClass() != o.getClass() )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,599,if (o == null || getClass() != o.getClass())
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,618,f ( opt != null ? !opt.equals( option.opt ) : option.opt != null )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,607,if (opt != null ? !opt.equals(option.opt) : option.opt != null)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,622,f ( longOpt != null ? !longOpt.equals( option.longOpt ) : option.longOpt != null )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,611,if (longOpt != null ? !longOpt.equals(option.longOpt) : option.longOpt != null)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,633,esult = ( opt != null ? opt.hashCode() : 0 );
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,634,esult = 31 * result + ( longOpt != null ? longOpt.hashCode() : 0 );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,622,result = (opt != null ? opt.hashCode() : 0);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,623,result = 31 * result + (longOpt != null ? longOpt.hashCode() : 0);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,648,ublic Object clone() {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,649,ry {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,637,public Object clone()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,639,try
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,653, catch(CloneNotSupportedException cnse) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,645,catch (CloneNotSupportedException cnse)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,659, <p>Clear the Option values. After a
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,660," parse is complete, these are left with data in them"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,661, and they need clearing if another parse is done. </p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,652,"* Clear the Option values. After a parse is complete, these are left with"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,653,* data in them and they need clearing if another parse is done.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,665,oid clearValues() {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,666,his.values.clear();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,657,void clearValues()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,659,values.clear();
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,675,ublic boolean addValue(String value) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,676,hrow new UnsupportedOperationException(
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,677,"The addValue method is not intended for client use. "" +"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,678,"Subclasses should use the addValueForProcessing method instead. """
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,668,public boolean addValue(String value)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,670,"throw new UnsupportedOperationException(""The addValue method is not intended for client use. """
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,671,"+ ""Subclasses should use the addValueForProcessing method instead. "");"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,20, <p>OptionBuilder allows the user to create Options using descriptive
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,21, methods.</p>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,22, <p>Details on the Builder pattern can be found at
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,21,* OptionBuilder allows the user to create Options using descriptive methods.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,23,* <p>Details on the Builder pattern can be found at
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,28,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,29,ublic class OptionBuilder {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,31,public final class OptionBuilder
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,118,ptionBuilder.numberOfArgs = (hasArg == true) ? 1 : Option.UNINITIALIZED;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,120,OptionBuilder.numberOfArgs = hasArg ? 1 : Option.UNINITIALIZED;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,124, The next Option created will have the specified argument value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,125, name.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,126,* The next Option created will have the specified argument value name.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,224, The next Option created can have <code>num</code>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,225, argument values.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,225,* The next Option created can have <code>num</code> argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,251, The next Option can have an unlimited number of
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,252, optional arguments.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,251,* The next Option can have an unlimited number of optional arguments.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,265, The next Option can have the specified number of
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,266, optional arguments.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,264,* The next Option can have the specified number of optional arguments.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,281, The next Option created will have a value that will be an instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,279,* The next Option created will have a value that will be an instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,308, Create an Option using the current settings and with
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,306,* Create an Option using the current settings and with
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,316,ublic static Option create(char opt)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,317,hrows IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,314,public static Option create(char opt) throws IllegalArgumentException
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,326, @throws IllegalArgumentException if <code>longOpt</code> has
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,327, not been set.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,323,* @throws IllegalArgumentException if <code>longOpt</code> has not been set.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,329,ublic static Option create()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,330,hrows IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,325,public static Option create() throws IllegalArgumentException
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,341, Create an Option using the current settings and with
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,336,* Create an Option using the current settings and with
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,344, @param opt the <code>java.lang.String</code> representation
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,339,* @param opt the <code>java.lang.String</code> representation
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,350,ublic static Option create(String opt)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,351,hrows IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,345,public static Option create(String opt) throws IllegalArgumentException
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,30, @version $Revision$
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,30,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,32,ublic class OptionGroup implements Serializable {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,32,public class OptionGroup implements Serializable
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,80, set the selected option of this group to <code>name</code>.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,80,* Set the selected option of this group to <code>name</code>.
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,90,f ((this.selected == null) || this.selected.equals(option.getOpt()))
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,91,if (selected == null || selected.equals(option.getOpt()))
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,92,his.selected = option.getOpt();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,93,selected = option.getOpt();
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,123,eturn this.required;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,124,return required;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,127, <p>Returns the stringified version of this OptionGroup.</p>
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,128,* Returns the stringified version of this OptionGroup.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,24,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,26,lass OptionValidator {
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,27,class OptionValidator
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,29, <p>Validates whether <code>opt</code> is a permissable Option
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,30,* Validates whether <code>opt</code> is a permissable Option
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,31, is valid are:</p>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,32,* is valid are:
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,78, <p>Returns whether the specified character is a valid Option.</p>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,80,* Returns whether the specified character is a valid Option.
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,81," @return true if <code>c</code> is a letter, ' ', '?' or '@',"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,82, otherwise false.
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,83,"* @return true if <code>c</code> is a letter, ' ', '?' or '@',"
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,84,*         otherwise false.
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,86,eturn (isValidChar(c) || (c == ' ') || (c == '?') || c == '@');
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,88,return isValidChar(c) || c == ' ' || c == '?' || c == '@';
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,90, <p>Returns whether the specified character is a valid character.</p>
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,92,* Returns whether the specified character is a valid character.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,30,** <p>Main entry-point into the library.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,31,* <p>Main entry-point into the library.</p>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,43, @version $Revision$
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,44,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,45,ublic class Options implements Serializable {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,46,public class Options implements Serializable
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,61,** Construct a new Options descriptor
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,63,ublic Options()
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,65,/ nothing to do
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,136,"ublic Options addOption(String opt, String longOpt, boolean hasArg,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,137,tring description)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,129,"public Options addOption(String opt, String longOpt, boolean hasArg, String description)"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,147, @param opt the option that is to be added
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,139,* @param opt the option that is to be added
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,161,f (opt.isRequired() )
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,153,if (opt.isRequired())
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,163,f( requiredOpts.contains(key) ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,164,equiredOpts.remove( requiredOpts.indexOf(key) );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,155,if (requiredOpts.contains(key))
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,157,requiredOpts.remove(requiredOpts.indexOf(key));
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,224, Returns whether the named {@link Option} is a member
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,225, of this {@link Options}.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,217,* Returns whether the named {@link Option} is a member of this {@link Options}.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,239, Returns the OptionGroup the <code>opt</code>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,240, belongs to.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,231,* Returns the OptionGroup the <code>opt</code> belongs to.
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,24, @version $Revision$
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,24,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,28, <p><code>Parser</code> creates {@link CommandLine}s.</p>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,29,* <code>Parser</code> creates {@link CommandLine}s.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,31, @see Parser
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,32, @version $Revision$
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,32,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,34,ublic abstract class Parser implements CommandLineParser {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,34,public abstract class Parser implements CommandLineParser
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,45,rotected void setOptions(final Options options) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,45,protected void setOptions(final Options options)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,50,rotected Options getOptions() {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,51,protected Options getOptions()
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,54,rotected List getRequiredOptions() {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,56,protected List getRequiredOptions()
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,60, <p>Subclasses must implement this method to reduce
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,61, the <code>arguments</code> that have been passed to the parse
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,62, method.</p>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,62,* Subclasses must implement this method to reduce
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,63,* the <code>arguments</code> that have been passed to the parse method.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,66, @param stopAtNonOption specifies whether to stop
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,67,* @param stopAtNonOption specifies whether to stop
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,70,"rotected abstract String[] flatten(Options opts, String[] arguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,71,oolean stopAtNonOption);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,71,"protected abstract String[] flatten(Options opts, String[] arguments, boolean stopAtNonOption);"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,74, <p>Parses the specified <code>arguments</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75, based on the specifed {@link Options}.</p>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,74,* Parses the specified <code>arguments</code> based
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75,* on the specifed {@link Options}.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,83,"ublic CommandLine parse(Options options, String[] arguments)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,84,hrows ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,83,"public CommandLine parse(Options options, String[] arguments) throws ParseException"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,90, Parse the arguments according to the specified options and
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,91, properties.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,89,* Parse the arguments according to the specified options and properties.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,93, @param options the specified Options
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,94, @param arguments the command line arguments
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,91,* @param options    the specified Options
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,92,* @param arguments  the command line arguments
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,99, while parsing the command line tokens.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,96,*                        while parsing the command line tokens.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,103,"ublic CommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,104,roperties properties)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,105,hrows ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,100,"public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,111, <p>Parses the specified <code>arguments</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,112, based on the specifed {@link Options}.</p>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,114, @param options the <code>Options</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,115, @param arguments the <code>arguments</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,116, @param stopAtNonOption specifies whether to stop
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,117, interpreting the arguments when a non option has
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,118, been encountered and to add them to the CommandLines
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,119, args list.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,106,* Parses the specified <code>arguments</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,107,* based on the specifed {@link Options}.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,109,* @param options         the <code>Options</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,110,* @param arguments       the <code>arguments</code>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,111,* @param stopAtNonOption specifies whether to stop interpreting the
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,112,*                        arguments when a non option has been encountered
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,113,*                        and to add them to the CommandLines args list.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,122, @throws ParseException if an error occurs when parsing the
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,123, arguments.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,115,* @throws ParseException if an error occurs when parsing the arguments.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,125,"ublic CommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,126,oolean stopAtNonOption)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,127,hrows ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,117,"public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,149,"ublic CommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,150,"roperties properties, boolean stopAtNonOption)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,151,hrows ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,139,"public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,140,throws ParseException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,154,or (Iterator it = options.helpOptions().iterator(); it.hasNext();) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,143,for (Iterator it = options.helpOptions().iterator(); it.hasNext();)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,171,"ist tokenList = Arrays.asList(flatten(getOptions(),"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,172,"rguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,173,topAtNonOption));
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,161,"List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,249, <p>Sets the values of Options using the values in
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,250, <code>properties</code>.</p>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,237,* Sets the values of Options using the values in <code>properties</code>.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,274,f ((opt.getValues() == null)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,275,| (opt.getValues().length == 0))
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,261,if (opt.getValues() == null || opt.getValues().length == 0)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,287,"lse if (!(""yes"".equalsIgnoreCase(value)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,288,"| ""true"".equalsIgnoreCase(value)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,289,"| ""1"".equalsIgnoreCase(value)))"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,273,"else if (!(""yes"".equalsIgnoreCase(value)"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,274,"|| ""true"".equalsIgnoreCase(value)"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,275,"|| ""1"".equalsIgnoreCase(value)))"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,319, <code>opt</code> using the values retrieved from the
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,305,* <code>opt</code> using the values retrieved from the
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,329,"ublic void processArgs(Option opt, ListIterator iter)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,330,hrows ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,315,"public void processArgs(Option opt, ListIterator iter) throws ParseException"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,347,pt.addValueForProcessing( Util.stripLeadingAndTrailingQuotes(str) );
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,332,opt.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(str));
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,356,f ((opt.getValues() == null) && !opt.hasOptionalArg())
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,341,if (opt.getValues() == null && !opt.hasOptionalArg())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,363, <p>Process the Option specified by <code>arg</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,364, using the values retrieved from the specfied iterator
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,365, <code>iter</code>.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,348,* Process the Option specified by <code>arg</code> using the values
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,349,* retrieved from the specfied iterator <code>iter</code>.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,368, @param iter The iterator over the flattened command
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,369, line arguments.
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,352,* @param iter The iterator over the flattened command line arguments.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,371, @throws ParseException if <code>arg</code> does not
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,372, represent an Option
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,354,* @throws ParseException if <code>arg</code> does not represent an Option
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,374,"rotected void processOption(String arg, ListIterator iter)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,375,hrows ParseException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,356,"protected void processOption(String arg, ListIterator iter) throws ParseException"
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,49, TODO These need to break out to OptionType and also
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,49,* TODO These need to break out to OptionType and also
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,54, @version $Revision$
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,54,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,56,ublic class PatternOptionBuilder {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,56,public class PatternOptionBuilder
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,73,// can we do this one??
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,73,/// can we do this one??
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,144, Returns the {@link Options} instance represented by
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,145, <code>pattern</code>.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,144,* Returns the {@link Options} instance represented by <code>pattern</code>.
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,162,/ a value code comes after an option and specifies
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,161,// a value code comes after an option and specifies
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,26, The class PosixParser provides an implementation of the
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,26,* The class PosixParser provides an implementation of the
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,30, @see Parser
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,31, @version $Revision$
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,30,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,33,ublic class PosixParser extends Parser {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,32,public class PosixParser extends Parser
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,74,"  is true, then the remaining entries are copied to the list of"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,73,"*  is true, then the remaining entries are copied to the list of"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,79,  information on the bursting algorithm see
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,78,*  information on the bursting algorithm see
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,81,  <li>if the current <code>arguments</code> entry is not handled
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,80,*  <li>if the current <code>arguments</code> entry is not handled
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,120,f (pos != -1) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,119,if (pos != -1)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,215, <p>Breaks <code>token</code> into its constituent parts
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,215,* Breaks <code>token</code> into its constituent parts
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,223,  <li>if the {@link Option} can have an argument value and there
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,224,  are remaining characters in the token then add the remaining
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,224,*  <li>if the {@link Option} can have an argument value and there
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,225,*  are remaining characters in the token then add the remaining
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,226,  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,227,*  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,228,"  ""<b>--</b>"" followed by the remaining characters and also"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,229,"*  ""<b>--</b>"" followed by the remaining characters and also"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,234, </p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,27, This is a temporary implementation. TypeHandler will handle the
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,28, pluggableness of OptionTypes and it will direct all of these types
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,29, of conversion functionalities to ConvertUtils component in Commons
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,30, alreayd. BeanUtils I think.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,28,* This is a temporary implementation. TypeHandler will handle the
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,29,* pluggableness of OptionTypes and it will direct all of these types
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,30,* of conversion functionalities to ConvertUtils component in Commons
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,31,* already. BeanUtils I think.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,33, @version $Revision$
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,34,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,35,ublic class TypeHandler {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,36,public class TypeHandler
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,108," @return the initialised object, or null if it couldn't create"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,109,"* @return the initialised object, or null if it couldn't create"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,141," Create a number from a String. If a . is present, it creates a"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,142,"* Create a number from a String. If a . is present, it creates a"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,152,f( str.indexOf('.') != -1 )
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,153,if (str.indexOf('.') != -1)
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,25, @version $Revision$
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,25,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,60,* @return the related option
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,24,"* @version $Revision$, $Date$"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,24,lass Util {
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,26,class Util
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,27, <p>Remove the hyphens from the begining of <code>str</code> and
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,28, return the new String.</p>
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,29,* Remove the hyphens from the begining of <code>str</code> and
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,30,* return the new String.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,36,f (str == null) {
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,38,if (str == null)
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,62,"f (str.startsWith(""\"""")) {"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,65,"if (str.startsWith(""\""""))"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,65,"f (str.endsWith(""\"""")) {"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,66,"tr = str.substring(0, str.length()-1);"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,69,"if (str.endsWith(""\""""))"
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,71,"str = str.substring(0, str.length() - 1);"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,45,"ssertTrue(""Confirm arg of -attr"","
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,46,"l.getOptionValue(""attr"").equals(""p""));"
True,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,45,"assertTrue(""Confirm arg of -attr"", cl.getOptionValue(""attr"").equals(""p""));"
False,src/test/org/apache/commons/cli/UtilTest.java,src/test/org/apache/commons/cli/UtilTest.java,25,ublic class UtilTest extends TestCase {
False,src/test/org/apache/commons/cli/UtilTest.java,src/test/org/apache/commons/cli/UtilTest.java,27,ublic void testStripLeadingHyphens() {
True,src/test/org/apache/commons/cli/UtilTest.java,src/test/org/apache/commons/cli/UtilTest.java,25,public class UtilTest extends TestCase
True,src/test/org/apache/commons/cli/UtilTest.java,src/test/org/apache/commons/cli/UtilTest.java,27,public void testStripLeadingHyphens()
False,src/test/org/apache/commons/cli/UtilTest.java,src/test/org/apache/commons/cli/UtilTest.java,34,ublic void testStripLeadingAndTrailingQuotes() {
True,src/test/org/apache/commons/cli/UtilTest.java,src/test/org/apache/commons/cli/UtilTest.java,35,public void testStripLeadingAndTrailingQuotes()
