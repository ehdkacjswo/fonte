is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,20,import java.util.List;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,21,import java.util.Iterator;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,31,/** The list of missing options */
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,32,private List missingOptions;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,46,* Constructs a new <code>MissingSelectedException</code> with the
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,47,* specified list of missing options.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,49,* @param missingOptions the list of missing options
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,50,* @since 1.2
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,52,public MissingOptionException(List missingOptions)
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,54,this(createMessage(missingOptions));
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,55,this.missingOptions = missingOptions;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,59,* Return the list of options (as strings) missing in the command line parsed.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,61,* @since 1.2
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,63,public List getMissingOptions()
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,65,return missingOptions;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,69,* Build the exception message from the specified list of options.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,71,* @param missingOptions
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,72,* @since 1.2
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,74,private static String createMessage(List missingOptions)
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,76,"StringBuffer buff = new StringBuffer(""Missing required option"");"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,77,"buff.append(missingOptions.size() == 1 ? """" : ""s"");"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,78,"buff.append("": "");"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,80,Iterator it = missingOptions.iterator();
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,81,while (it.hasNext())
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,83,buff.append(it.next());
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,84,if (it.hasNext())
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,86,"buff.append("", "");"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,90,return buff.toString();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,298, <p>Throws a {@link MissingOptionException} if all of the
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,299, required options are no present.</p>
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,298,* Throws a {@link MissingOptionException} if all of the required options
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,299,* are not present.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,304,rotected void checkRequiredOptions()
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,305,hrows MissingOptionException
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,304,protected void checkRequiredOptions() throws MissingOptionException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,307,/ if there are required options that have not been
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,308,/ processsed
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,309,f (getRequiredOptions().size() > 0)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,306,// if there are required options that have not been processsed
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,307,if (!getRequiredOptions().isEmpty())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,311,terator iter = getRequiredOptions().iterator();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,312,"tringBuffer buff = new StringBuffer(""Missing required option"");"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,313,"uff.append(getRequiredOptions().size() == 1 ? """" : ""s"");"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,314,"uff.append("": "");"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,317,/ loop through the required options
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,318,hile (iter.hasNext())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,320,uff.append(iter.next());
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,321,"uff.append("", "");"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,324,"hrow new MissingOptionException(buff.substring(0, buff.length() - 2));"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,309,throw new MissingOptionException(getRequiredOptions());
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,81,"assertTrue(e.getMissingOptions().contains(""b""));"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,107,"assertTrue(e.getMissingOptions().contains(""b""));"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,108,"assertTrue(e.getMissingOptions().contains(""c""));"
