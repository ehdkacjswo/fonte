is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,18,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,23, @author John Keyes (john at integralsource.com)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,24, @version $Revision$
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,26,ublic class ParseRequiredTest extends TestCase
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,28,rivate Options _options = null;
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,29,rivate CommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,31,ublic void setUp()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,33,options = new Options()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,34,"addOption(""a"","
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,35,"enable-a"","
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,36,"alse,"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,37,"turn [a] on or off"")"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,38,"addOption( OptionBuilder.withLongOpt( ""bfile"" )"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,39,hasArg()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,40,isRequired()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,41,"withDescription( ""set the value of [b]"" )"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,42,create( 'b' ) );
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,45,ublic void testWithRequiredOption() throws Exception
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,47,"tring[] args = new String[] {  ""-b"", ""file"" };"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,49,"ommandLine cl = parser.parse(_options,args);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,51,"ssertTrue( ""Confirm -a is NOT set"", !cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,52,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,53,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,54,"ssertTrue( ""Confirm NO of extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,57,ublic void testOptionAndRequiredOption() throws Exception
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,59,"tring[] args = new String[] {  ""-a"", ""-b"", ""file"" };"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,61,"ommandLine cl = parser.parse(_options,args);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,63,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,64,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,65,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,66,"ssertTrue( ""Confirm NO of extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,69,ublic void testMissingRequiredOption()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,71,"tring[] args = new String[] { ""-a"" };"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,73,ry
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,75,"ommandLine cl = parser.parse(_options,args);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,76,"ail( ""exception should have been thrown"" );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,78,atch (MissingOptionException e)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,80,"ssertEquals( ""Incorrect exception message"", ""Missing required option: b"", e.getMessage() );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,81,"ssertTrue(e.getMissingOptions().contains(""b""));"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,83,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,85,"ail( ""expected to catch MissingOptionException"" );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,89,ublic void testMissingRequiredOptions()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,91,"tring[] args = new String[] { ""-a"" };"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,93,"options.addOption( OptionBuilder.withLongOpt( ""cfile"" )"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,94,hasArg()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,95,isRequired()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,96,"withDescription( ""set the value of [c]"" )"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,97,create( 'c' ) );
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,99,ry
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,101,"ommandLine cl = parser.parse(_options,args);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,102,"ail( ""exception should have been thrown"" );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,104,atch (MissingOptionException e)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,106,"ssertEquals( ""Incorrect exception message"", ""Missing required options: b, c"", e.getMessage() );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,107,"ssertTrue(e.getMissingOptions().contains(""b""));"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,108,"ssertTrue(e.getMissingOptions().contains(""c""));"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,110,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,112,"ail( ""expected to catch MissingOptionException"" );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,116,ublic void testReuseOptionsTwice() throws Exception
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,118,ptions opts = new Options();
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,119,pts.addOption(OptionBuilder.isRequired().create('v'));
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,121,nuParser parser = new GnuParser();
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,123,/ first parsing
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,124,"arser.parse(opts, new String[] { ""-v"" });"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,126,ry
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,128,"/ second parsing, with the same Options instance and an invalid command line"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,129,"arser.parse(opts, new String[0]);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,130,"ail(""MissingOptionException not thrown"");"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,132,atch (MissingOptionException e)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,134,/ expected
False,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,33,rotected Parser parser;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,33,protected CommandLineParser parser;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,397,public void testWithRequiredOption() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,399,"String[] args = new String[] { ""-b"", ""file"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,401,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,402,"options.addOption(""a"", ""enable-a"", false, null);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,403,"options.addOption(OptionBuilder.withLongOpt(""bfile"").hasArg().isRequired().create('b'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,405,"CommandLine cl = parser.parse(options,args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,407,"assertTrue(""Confirm -a is NOT set"", !cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,408,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,409,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,410,"assertTrue(""Confirm NO of extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,413,public void testOptionAndRequiredOption() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,415,"String[] args = new String[] { ""-a"", ""-b"", ""file"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,417,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,418,"options.addOption(""a"", ""enable-a"", false, null);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,419,"options.addOption(OptionBuilder.withLongOpt(""bfile"").hasArg().isRequired().create('b'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,421,"CommandLine cl = parser.parse(options,args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,423,"assertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,424,"assertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,425,"assertTrue(""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,426,"assertTrue(""Confirm NO of extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,429,public void testMissingRequiredOption()
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,431,"String[] args = new String[] { ""-a"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,433,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,434,"options.addOption(""a"", ""enable-a"", false, null);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,435,"options.addOption(OptionBuilder.withLongOpt(""bfile"").hasArg().isRequired().create('b'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,437,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,439,"parser.parse(options,args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,440,"fail(""exception should have been thrown"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,442,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,444,"assertEquals( ""Incorrect exception message"", ""Missing required option: b"", e.getMessage() );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,445,"assertTrue(e.getMissingOptions().contains(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,447,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,449,"fail(""expected to catch MissingOptionException"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,453,public void testMissingRequiredOptions()
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,455,"String[] args = new String[] { ""-a"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,457,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,458,"options.addOption(""a"", ""enable-a"", false, null);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,459,"options.addOption(OptionBuilder.withLongOpt(""bfile"").hasArg().isRequired().create('b'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,460,"options.addOption(OptionBuilder.withLongOpt(""cfile"").hasArg().isRequired().create('c'));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,462,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,464,"parser.parse(options,args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,465,"fail(""exception should have been thrown"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,467,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,469,"assertEquals(""Incorrect exception message"", ""Missing required options: b, c"", e.getMessage());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,470,"assertTrue(e.getMissingOptions().contains(""b""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,471,"assertTrue(e.getMissingOptions().contains(""c""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,473,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,475,"fail(""expected to catch MissingOptionException"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,479,public void testReuseOptionsTwice() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,481,Options opts = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,482,opts.addOption(OptionBuilder.isRequired().create('v'));
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,484,// first parsing
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,485,"parser.parse(opts, new String[] { ""-v"" });"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,487,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,489,"// second parsing, with the same Options instance and an invalid command line"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,490,"parser.parse(opts, new String[0]);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,491,"fail(""MissingOptionException not thrown"");"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,493,catch (MissingOptionException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,495,// expected
