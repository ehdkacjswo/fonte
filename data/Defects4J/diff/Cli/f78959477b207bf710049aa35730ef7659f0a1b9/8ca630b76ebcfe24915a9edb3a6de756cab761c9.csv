is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,298,tringBuffer buff = new StringBuffer();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,298,"StringBuffer buff = new StringBuffer(""Missing required option"");"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,299,"buff.append(requiredOptions.size() == 1 ? """" : ""s"");"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,300,"buff.append("": "");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,97,public void testMissingOptionException() throws ParseException {
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,98,Options options = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,99,"options.addOption(OptionBuilder.isRequired().create(""f""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,100,try {
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,101,"new PosixParser().parse(options, new String[0]);"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,102,"fail(""Expected MissingOptionException to be thrown"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,103,} catch (MissingOptionException e) {
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,104,"assertEquals(""Missing required option: f"", e.getMessage());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,108,public void testMissingOptionsException() throws ParseException {
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,109,Options options = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,110,"options.addOption(OptionBuilder.isRequired().create(""f""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,111,"options.addOption(OptionBuilder.isRequired().create(""x""));"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,112,try {
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,113,"new PosixParser().parse(options, new String[0]);"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,114,"fail(""Expected MissingOptionException to be thrown"");"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,115,} catch (MissingOptionException e) {
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,116,"assertEquals(""Missing required options: fx"", e.getMessage());"
