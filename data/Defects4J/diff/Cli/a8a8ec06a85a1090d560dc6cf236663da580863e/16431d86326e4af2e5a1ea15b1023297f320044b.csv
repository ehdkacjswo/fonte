is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,62,// nothing to do
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,152,ist values = new java.util.ArrayList();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,754,lse
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,756,"b.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,754,"sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,824,lse
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,826,/ must look for the first whitespace chearacter after startPos
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,827,/ + width
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,828,os = startPos + width;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,830,hile ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,831,& (c != '\n') && (c != '\r'))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,833,+pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,822,// must look for the first whitespace chearacter after startPos
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,823,// + width
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,824,pos = startPos + width;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,836,eturn (pos == text.length())        ? (-1) : pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,826,while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,827,&& (c != '\n') && (c != '\r'))
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,829,++pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,832,return (pos == text.length())        ? (-1) : pos;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,62,// hide the constructor
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,85, @param longopt the long option value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,86,* @param newLongopt the long option value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,88,ublic static OptionBuilder withLongOpt(String longopt)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,89,public static OptionBuilder withLongOpt(String newLongopt)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,90,nstance.longopt = longopt;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,91,OptionBuilder.longopt = newLongopt;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,102,nstance.numberOfArgs = 1;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,103,OptionBuilder.numberOfArgs = 1;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,116,nstance.numberOfArgs = (hasArg == true) ? 1 : Option.UNINITIALIZED;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,117,OptionBuilder.numberOfArgs = (hasArg == true) ? 1 : Option.UNINITIALIZED;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,130,nstance.argName = name;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,131,OptionBuilder.argName = name;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,142,nstance.required = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,143,OptionBuilder.required = true;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,167,nstance.valuesep = sep;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,168,OptionBuilder.valuesep = sep;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,190,nstance.valuesep = '=';
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,191,OptionBuilder.valuesep = '=';
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,199, @param required if true then the Option is required
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,200,* @param newRequired if true then the Option is required
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,202,ublic static OptionBuilder isRequired(boolean required)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,203,public static OptionBuilder isRequired(boolean newRequired)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,204,nstance.required = required;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,205,OptionBuilder.required = newRequired;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,216,nstance.numberOfArgs = Option.UNLIMITED_VALUES;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,217,OptionBuilder.numberOfArgs = Option.UNLIMITED_VALUES;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,230,nstance.numberOfArgs = num;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,231,OptionBuilder.numberOfArgs = num;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,242,nstance.numberOfArgs = 1;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,243,nstance.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,243,OptionBuilder.numberOfArgs = 1;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,244,OptionBuilder.optionalArg = true;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,256,nstance.numberOfArgs = Option.UNLIMITED_VALUES;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,257,nstance.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,257,OptionBuilder.numberOfArgs = Option.UNLIMITED_VALUES;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,258,OptionBuilder.optionalArg = true;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,272,nstance.numberOfArgs = numArgs;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,273,nstance.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,273,OptionBuilder.numberOfArgs = numArgs;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,274,OptionBuilder.optionalArg = true;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,282, @param type the type of the Options argument value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,283,* @param newType the type of the Options argument value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,285,ublic static OptionBuilder withType(Object type)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,286,public static OptionBuilder withType(Object newType)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,287,nstance.type = type;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,288,OptionBuilder.type = newType;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,295, @param description a description of the Option's purpose
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,296,* @param newDescription a description of the Option's purpose
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,298,ublic static OptionBuilder withDescription(String description)
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,299,public static OptionBuilder withDescription(String newDescription)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,300,nstance.description = description;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,301,OptionBuilder.description = newDescription;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,366,nstance.reset();
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,367,OptionBuilder.reset();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,60,// nothing to do
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,331,lse
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,330,try
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,334,ry
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,336,pt.addValue( Util.stripLeadingAndTrailingQuotes(str) );
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,338,atch (RuntimeException exp)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,340,ter.previous();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,342,reak;
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,332,opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,334,catch (RuntimeException exp)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,336,iter.previous();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,337,break;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,369,/ get the option represented by arg
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,370,ption opt = null;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,380,lse
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,382,pt = (Option) options.getOption(arg);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,372,// get the option represented by arg
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,373,final Option opt = options.getOption(arg);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,396,ptionGroup group = (OptionGroup) options.getOptionGroup(opt);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,386,OptionGroup group = options.getOptionGroup(opt);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,176,OptionBuilder.hasArg(type != null);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,177,OptionBuilder.isRequired(required);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,178,OptionBuilder.withType(type);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,177,ptions.addOption(
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,178,ptionBuilder.hasArg(type != null)
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,179,isRequired(required).withType(type)
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,180,create(opt));
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,181,options.addOption(OptionBuilder.create(opt));
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,201,OptionBuilder.hasArg(type != null);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,202,OptionBuilder.isRequired(required);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,203,OptionBuilder.withType(type);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,201,ptions.addOption(
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,202,ptionBuilder.hasArg(type != null).isRequired(required)
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,203,withType(type).create(opt));
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,206,options.addOption(OptionBuilder.create(opt));
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,148,lse {
False,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,149,eturn false;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,148,return false;
False,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,23,mport org.apache.commons.cli2.util.HelpFormatter;
False,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,36,isplaySetting.DISPLAY_PROPERTY_OPTION));;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,36,DisplaySetting.DISPLAY_PROPERTY_OPTION));
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,72,lse {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,73,his.shortPrefix = shortPrefix;
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,79,lse {
False,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,80,his.longPrefix = longPrefix;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,77,this.shortPrefix = shortPrefix;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,78,this.longPrefix = longPrefix;
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,186, @param switchDefault the default state
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,186,* @param newSwitchDefault the default state
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,189,ublic final SwitchBuilder withSwitchDefault(final Boolean switchDefault) {
False,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,190,his.switchDefault = switchDefault;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,189,public final SwitchBuilder withSwitchDefault(final Boolean newSwitchDefault) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,190,this.switchDefault = newSwitchDefault;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,150,inal int initialCount = argumentCount;
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,349,lse {
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,350,"f (token.startsWith(""\"""")) {"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,351,"oken = token.substring(1, token.length());"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,354,"f (token.endsWith(""\"""")) {"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,355,"oken = token.substring(0, token.length() - 1);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,349,"if (token.startsWith(""\"""")) {"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,350,"token = token.substring(1, token.length());"
False,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,358,eturn token;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,353,"if (token.endsWith(""\"""")) {"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,354,"token = token.substring(0, token.length() - 1);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,357,return token;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,33,// constructor hiden from potential users
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,33,// constructor hiden from potential users
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,225,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,226,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,229,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,230,eturn 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,225,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,227,return 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,264,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,265,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,268,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,269,eturn 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,260,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,262,return 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,303,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,304,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,307,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,308,eturn 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,295,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,297,return 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,342,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,343,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,346,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,347,eturn 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,330,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,332,return 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,399,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,400,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,403,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,404,eturn 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,383,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,385,return 0;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,470,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,471,eturn 1;
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,474,lse {
False,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,475,eturn 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,450,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,452,return 0;
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,94,lse {
False,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,95,xpectingStart = false;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,94,expectingStart = false;
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,77,lse {
False,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,78,.set(f);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,78,i.set(f);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,242,inal List args = OptionTestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,243,inal WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,242,final List args = CLITestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,243,final WriteableCommandLine writeable =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,246,ssertTrue(commandLine.getProperties().isEmpty());
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,246,assertTrue(writeable.getProperties().isEmpty());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,248,"ommandLine.addProperty(""myprop"", ""myval"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,249,"ssertEquals(1, commandLine.getProperties().size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,250,"ssertEquals(""myval"", commandLine.getProperty(""myprop""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,248,"writeable.addProperty(""myprop"", ""myval"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,249,"assertEquals(1, writeable.getProperties().size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,250,"assertEquals(""myval"", writeable.getProperty(""myprop""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,252,"ommandLine.addProperty(""myprop"", ""myval2"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,253,"ssertEquals(1, commandLine.getProperties().size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,254,"ssertEquals(""myval2"", commandLine.getProperty(""myprop""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,252,"writeable.addProperty(""myprop"", ""myval2"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,253,"assertEquals(1, writeable.getProperties().size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,254,"assertEquals(""myval2"", writeable.getProperty(""myprop""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,256,"ommandLine.addProperty(""myprop2"", ""myval3"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,257,"ssertEquals(2, commandLine.getProperties().size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,258,"ssertEquals(""myval3"", commandLine.getProperty(""myprop2""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,256,"writeable.addProperty(""myprop2"", ""myval3"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,257,"assertEquals(2, writeable.getProperties().size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,258,"assertEquals(""myval3"", writeable.getProperty(""myprop2""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,263,inal List args = OptionTestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,264,inal WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,263,final List args = CLITestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,264,final WriteableCommandLine writeable =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,269,ssertFalse(commandLine.hasOption(start));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,270,"ssertFalse(commandLine.hasOption(""start""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,271,"ssertFalse(commandLine.hasOption(""go""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,269,assertFalse(writeable.hasOption(start));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,270,"assertFalse(writeable.hasOption(""start""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,271,"assertFalse(writeable.hasOption(""go""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,273,ommandLine.addOption(start);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,273,writeable.addOption(start);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,275,ssertTrue(commandLine.hasOption(start));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,276,"ssertTrue(commandLine.hasOption(""start""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,277,"ssertTrue(commandLine.hasOption(""go""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,275,assertTrue(writeable.hasOption(start));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,276,"assertTrue(writeable.hasOption(""start""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,277,"assertTrue(writeable.hasOption(""go""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,282,inal List args = OptionTestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,283,inal WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,282,final List args = CLITestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,283,final WriteableCommandLine writeable =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,288,ssertNull(commandLine.getValue(start));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,289,ssertTrue(commandLine.getValues(start).isEmpty());
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,288,assertNull(writeable.getValue(start));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,289,assertTrue(writeable.getValues(start).isEmpty());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,291,ommandLine.addOption(start);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,291,writeable.addOption(start);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,293,ssertTrue(commandLine.getValues(start).isEmpty());
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,293,assertTrue(writeable.getValues(start).isEmpty());
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,295,"ommandLine.addValue(start, ""file1"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,295,"writeable.addValue(start, ""file1"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,297,"ssertEquals(""file1"", commandLine.getValue(start));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,298,"ssertEquals(""file1"", commandLine.getValue(""start""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,299,"ssertEquals(""file1"", commandLine.getValue(""go""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,300,"ssertEquals(1, commandLine.getValues(start).size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,301,"ssertEquals(1, commandLine.getValues(""start"").size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,302,"ssertEquals(1, commandLine.getValues(""go"").size());"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,303,"ssertTrue(commandLine.getValues(start).contains(""file1""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,304,"ssertTrue(commandLine.getValues(""start"").contains(""file1""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,305,"ssertTrue(commandLine.getValues(""go"").contains(""file1""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,297,"assertEquals(""file1"", writeable.getValue(start));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,298,"assertEquals(""file1"", writeable.getValue(""start""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,299,"assertEquals(""file1"", writeable.getValue(""go""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,300,"assertEquals(1, writeable.getValues(start).size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,301,"assertEquals(1, writeable.getValues(""start"").size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,302,"assertEquals(1, writeable.getValues(""go"").size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,303,"assertTrue(writeable.getValues(start).contains(""file1""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,304,"assertTrue(writeable.getValues(""start"").contains(""file1""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,305,"assertTrue(writeable.getValues(""go"").contains(""file1""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,307,"ommandLine.addValue(start, ""file2"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,307,"writeable.addValue(start, ""file2"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,310,ommandLine.getValue(start);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,310,writeable.getValue(start);
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,318,"ommandLine.getValue(""start"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,318,"writeable.getValue(""start"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,325,"ommandLine.getValues(start).add(""file3"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,325,"writeable.getValues(start).add(""file3"");"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,330,inal List args = OptionTestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,331,inal WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,330,final List args = CLITestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,331,final WriteableCommandLine writeable =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,336,ssertNull(commandLine.getSwitch(start));
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,337,"ssertNull(commandLine.getSwitch(""start""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,338,"ssertNull(commandLine.getSwitch(""go""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,336,assertNull(writeable.getSwitch(start));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,337,"assertNull(writeable.getSwitch(""start""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,338,"assertNull(writeable.getSwitch(""go""));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,340,"ommandLine.addSwitch(start, true);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,340,"writeable.addSwitch(start, true);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,342,"ommandLine.addSwitch(start, false);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,342,"writeable.addSwitch(start, false);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,352,inal List args = OptionTestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,353,inal WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,352,final List args = CLITestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,353,final WriteableCommandLine writeable =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,358,"ommandLine.addSwitch(start, true);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,359,"ssertSame(Boolean.TRUE, commandLine.getSwitch(start));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,358,"writeable.addSwitch(start, true);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,359,"assertSame(Boolean.TRUE, writeable.getSwitch(start));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,364,inal List args = OptionTestCase.list();
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,365,inal WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,364,final List args = CLITestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,365,final WriteableCommandLine writeable =
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,370,"ommandLine.addSwitch(start, false);"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,371,"ssertSame(Boolean.FALSE, commandLine.getSwitch(start));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,370,"writeable.addSwitch(start, false);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,371,"assertSame(Boolean.FALSE, writeable.getSwitch(start));"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,490,"inal Option bool = new DefaultOptionBuilder().withShortName(""p"").create();"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,490,"final Option p = new DefaultOptionBuilder().withShortName(""p"").create();"
False,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,496,withOption(bool)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,496,.withOption(p)
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,400,"ublic CommandLine buildCommandLine(final Group group, final String[] args)"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,400,"public CommandLine buildCommandLine(final Group group, final String[] arguments)"
False,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,404,eturn p.parse(args);
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,404,return p.parse(arguments);
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,36,inal WriteableCommandLine writeable = createWriteableCommandLine();
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,37,riteable.addOption(present);
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,38,"riteable.addProperty(""present"",""present property"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,39,"riteable.addSwitch(bool,true);"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,40,"riteable.addValue(present,""present value"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,41,riteable.addOption(multiple);
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,42,"riteable.addValue(multiple,""value 1"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,43,"riteable.addValue(multiple,""value 2"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,44,"riteable.addValue(multiple,""value 3"");"
False,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,45,eturn writeable;
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,36,final WriteableCommandLine cl = createWriteableCommandLine();
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,37,cl.addOption(present);
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,38,"cl.addProperty(""present"",""present property"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,39,"cl.addSwitch(bool,true);"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,40,"cl.addValue(present,""present value"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,41,cl.addOption(multiple);
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,42,"cl.addValue(multiple,""value 1"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,43,"cl.addValue(multiple,""value 2"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,44,"cl.addValue(multiple,""value 3"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,45,return cl;
False,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,337,ublic void testNoSource() throws OptionException {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,337,public void testNoSource() {
False,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,27,mport org.apache.commons.cli2.option.Command;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,18,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,src/test/org/apache/commons/cli2/bug/Bug32533Test.java,22,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,39,ublic void testCtor() {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,41,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,42,"efaultOptionBuilder builder = new DefaultOptionBuilder(null, null,"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,43,alse);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,44,"ail(""null short prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,46,atch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,39,public void testNew_NullShortPrefix() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,40,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,41,"new DefaultOptionBuilder(null, null,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,42,false);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,43,"fail(""null short prefix is not permitted"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,45,catch(IllegalArgumentException e) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,46,"assertEquals(""shortPrefix should be at least 1 character long"",e.getMessage());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,51,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,52,"efaultOptionBuilder builder = new DefaultOptionBuilder("""", null,"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,53,alse);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,54,"ail(""empty short prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,56,atch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,51,"* Class to test for void DefaultOptionBuilder(String, String, boolean)"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,53,public void testNew_EmptyShortPrefix() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,54,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,55,"new DefaultOptionBuilder("""", null,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,56,false);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,57,"fail(""empty short prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,61,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,62,"efaultOptionBuilder builder = new DefaultOptionBuilder(""-"", null,"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,63,alse);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,64,"ail(""null long prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,66,atch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,59,catch(IllegalArgumentException e) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,60,"assertEquals(""shortPrefix should be at least 1 character long"",e.getMessage());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,71,ry {
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,72,"efaultOptionBuilder builder = new DefaultOptionBuilder(""-"", """","
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,73,alse);
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,74,"ail(""empty long prefix is not permitted"");"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,76,atch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,65,"* Class to test for void DefaultOptionBuilder(String, String, boolean)"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,67,public void testNew_NullLongPrefix() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,68,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,69,"new DefaultOptionBuilder(""-"", null,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,70,false);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,71,"fail(""null long prefix is not permitted"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,73,catch(IllegalArgumentException e) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,74,"assertEquals(""longPrefix should be at least 1 character long"",e.getMessage());"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,79,"* Class to test for void DefaultOptionBuilder(String, String, boolean)"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,81,public void testNew_EmptyLongPrefix() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,82,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,83,"new DefaultOptionBuilder(""-"", """","
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,84,false);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,85,"fail(""empty long prefix is not permitted"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,87,catch(IllegalArgumentException e) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,88,"assertEquals(""longPrefix should be at least 1 character long"",e.getMessage());"
False,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,86,atch (IllegalStateException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,97,catch (IllegalStateException e) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,98,"assertEquals(""Options must have at least one name"",e.getMessage());"
False,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,35,rivate DefaultingCommandLine defaults;
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,188,rgumentImpl arg = new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,188,new ArgumentImpl(
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,213,rgumentImpl arg = new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,213,new ArgumentImpl(
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,264,ublic void testProcessValues_Optional() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,264,public void testProcessValues_Optional() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,315,ublic void testProcessValues_ContractedTooFew() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,315,public void testProcessValues_ContractedTooFew() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,394,ublic void testValidate_Minimum() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,394,public void testValidate_Minimum() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,407,ublic void testValidate_Maximum() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,407,public void testValidate_Maximum() {
False,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,545,ublic void testProcess_ConsumeNothing() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,545,public void testProcess_ConsumeNothing() {
False,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,165,ublic void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,165,public void testValidate() {
False,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,152,ublic void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,152,public void testValidate() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,223,ublic void testValidate_UnexpectedOption() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,223,public void testValidate_UnexpectedOption() {
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,239,ublic void testValidate_MissingOption() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,239,public void testValidate_MissingOption() {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,122,"ssertTrue(""/tmp/filename.txt"".equals("
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,123,"String) commandLine.getValue(""-f"")));"
True,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,122,"assertTrue(""/tmp/filename.txt"".equals(commandLine.getValue(""-f"")));"
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,129,ublic void testNestedGroupHelp()
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,130,hrows OptionException {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,131,inal String[] args = {
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,132,"-eb"","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,133,"--file"","
False,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,134,"/tmp/filename.txt"""
True,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,src/test/org/apache/commons/cli2/option/NestedGroupTest.java,128,public void testNestedGroupHelp() {
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,87,ublic void testProcess_UnexpectedOptionException()
False,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,88,hrows OptionException {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,87,public void testProcess_UnexpectedOptionException() {
False,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,141,ublic void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,141,public void testValidate() {
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,19,mport java.util.Comparator;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,23,import org.apache.commons.cli2.CLITestCase;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,25,mport org.apache.commons.cli2.builder.SwitchBuilder;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,29,mport org.apache.commons.cli2.option.OptionTestCase;
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,40,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,38,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,44,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,45,"ptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,42,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,43,"CLITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,52,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,50,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,56,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,57,"ptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,54,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,55,"CLITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,64,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,62,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,68,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,69,"ptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,66,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,67,"CLITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,76,"inal Option o3 = new SwitchBuilder().withName(""hidden"").create();"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,77,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,74,"//final Option o3 = new SwitchBuilder().withName(""hidden"").create();"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,75,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,81,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,82,"ptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,79,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,80,"CLITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,89,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,87,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,93,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,94,"ptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,91,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,92,"CLITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,101,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,99,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,105,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,106,"ptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,103,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,104,"CLITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,113,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,111,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,117,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,118,"ptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,115,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,116,"CLITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,125,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,123,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,129,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,130,"ptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,127,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,128,"CLITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,137,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,135,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,141,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,142,"ptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,139,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,140,"CLITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,149,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,147,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,153,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,154,"ptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,151,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,152,"CLITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,161,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,159,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,165,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,166,"ptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,163,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,164,"CLITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,173,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,171,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,177,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,178,"ptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,175,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,176,"CLITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,185,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,183,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,189,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,190,"ptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,187,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,188,"CLITestCase.list(o2, o1),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,197,"inal List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,195,"final List list = CLITestCase.list(o1, o2);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,201,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,202,"ptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,199,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,200,"CLITestCase.list(o1, o2),"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,210,"inal List list = OptionTestCase.list(o1, o2, o3);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,208,"final List list = CLITestCase.list(o1, o2, o3);"
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,218,ptionTestCase.assertListContentsEqual(
False,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,219,"ptionTestCase.list(o3, o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,216,CLITestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,217,"CLITestCase.list(o3, o1, o2),"
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,120,ublic void testLoadable() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,120,public void testLoadable() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,166,ublic void testInstantiate() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,166,public void testInstantiate() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,188,ublic void testCreateInterfaceInstance() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,188,public void testCreateInterfaceInstance() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,208,ublic void testCreateProtectedInstance() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,208,public void testCreateProtectedInstance() {
False,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,232,ublic void testClassloader() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,232,public void testClassloader() {
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,19,mport java.util.HashSet;
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,28,rivate final Set enum = new TreeSet(
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,27,private final Set enumSet = new TreeSet(
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,35,inal Validator validator = new EnumValidator(enum);
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,34,final Validator validator = new EnumValidator(enumSet);
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,45,ublic void testNonMember() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,44,public void testNonMember() {
False,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,48,inal Validator validator = new EnumValidator(enum);
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,47,final Validator validator = new EnumValidator(enumSet);
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,41,ublic void testValidate_Directory() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,41,public void testValidate_Directory() {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,55,ublic void testValidate_File() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,55,public void testValidate_File() {
False,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,69,ublic void testValidate_Existing() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,69,public void testValidate_Existing() {
False,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,103,ublic void testValidate_ExcessChars() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,103,public void testValidate_ExcessChars() {
False,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,41,"ublic void testBadProtocol() throws InvalidArgumentException, MalformedURLException {"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,41,public void testBadProtocol() {
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,20,// used to test something???
