is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,2,* Copyright 2002-2005 The Apache Software Foundation
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,3,"* Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,4,* you may not use  this file  except in  compliance with the License.
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,5,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,7,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,9,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,10,"* distributed  under the  License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,11,"* WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,12,* implied.
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,17,package org.apache.commons.cli.avalon;
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,18,//Renamed from org.apache.avalon.excalibur.cli
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,21,* Class to inherit from so when in future when new controls are added
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,22,* clients will no have to implement them.
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,23,* @version $Revision: 1.2 $
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,24,* @see ParserControl
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,26,public abstract class AbstractParserControl
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,27,implements ParserControl
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,30,* By default always continue parsing by returning false.
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,32,* @param lastOptionCode the code of last option parsed
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,33,"* @return return true to halt, false to continue parsing"
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,34,* @see ParserControl#isFinished(int)
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,36,public boolean isFinished( int lastOptionCode )
True,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,38,return false;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,2,* Copyright 2002-2005 The Apache Software Foundation
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,3,"* Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,4,* you may not use  this file  except in  compliance with the License.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,5,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,7,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,9,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,10,"* distributed  under the  License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,11,"* WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,12,* implied.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,17,package org.apache.commons.cli.avalon;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,18,//Renamed from org.apache.avalon.excalibur.cli
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,20,import java.text.ParseException;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,21,import java.util.Hashtable;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,22,import java.util.Vector;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,25,* Parser for command line arguments.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,27,* This parses command lines according to the standard (?) of
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,28,* GNU utilities.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,30,* Note: This is still used in 1.1 libraries so do not add 1.2+ dependencies.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,32,* Note that CLArgs uses a backing hashtable for the options index and so duplicate
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,33,* arguments are only returned by getArguments().
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,35,* @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,36,* @see ParserControl
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,37,* @see CLOption
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,38,* @see CLOptionDescriptor
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,40,public final class CLArgsParser
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,42,//cached character == Integer.MAX_VALUE when invalid
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,43,private static final int INVALID = Integer.MAX_VALUE;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,45,private static final int STATE_NORMAL = 0;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,46,private static final int STATE_REQUIRE_2ARGS = 1;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,47,private static final int STATE_REQUIRE_ARG = 2;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,48,private static final int STATE_OPTIONAL_ARG = 3;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,49,private static final int STATE_NO_OPTIONS = 4;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,50,private static final int STATE_OPTION_MODE = 5;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,52,// Values for creating tokens
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,53,private static final int TOKEN_SEPARATOR = 0;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,54,private static final int TOKEN_STRING = 1;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,56,private static final char[] ARG_SEPARATORS =
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,57,"new char[]{(char)0, '='};"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,59,private static final char[] NULL_SEPARATORS =
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,60,new char[]{(char)0};
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,62,private final CLOptionDescriptor[] m_optionDescriptors;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,63,private final Vector m_options;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,64,private Hashtable m_optionIndex;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,65,private final ParserControl m_control;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,67,private String m_errorMessage;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,68,private String[] m_unparsedArgs = new String[]{};
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,70,//variables used while parsing options.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,71,private char m_ch;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,72,private String[] m_args;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,73,private boolean m_isLong;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,74,private int m_argIndex;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,75,private int m_stringIndex;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,76,private int m_stringLength;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,78,private int m_lastChar = INVALID;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,80,private int m_lastOptionId;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,81,private CLOption m_option;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,82,private int m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,85,* Retrieve an array of arguments that have not been parsed
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,86,* due to the parser halting.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,88,* @return an array of unparsed args
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,90,public final String[] getUnparsedArgs()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,92,return m_unparsedArgs;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,96,* Retrieve a list of options that were parsed from command list.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,98,* @return the list of options
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,100,public final Vector getArguments()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,102,"//System.out.println( ""Arguments: "" + m_options );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,103,return m_options;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,107,"* Retrieve the {@link CLOption} with specified id, or"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,108,* <code>null</code> if no command line option is found.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,110,* @param id the command line option id
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,111,"* @return the {@link CLOption} with the specified id, or"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,112,*    <code>null</code> if no CLOption is found.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,113,* @see CLOption
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,115,public final CLOption getArgumentById( final int id )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,117,return (CLOption)m_optionIndex.get( new Integer( id ) );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,121,"* Retrieve the {@link CLOption} with specified name, or"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,122,* <code>null</code> if no command line option is found.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,124,* @param name the command line option name
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,125,"* @return the {@link CLOption} with the specified name, or"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,126,*    <code>null</code> if no CLOption is found.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,127,* @see CLOption
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,129,public final CLOption getArgumentByName( final String name )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,131,return (CLOption)m_optionIndex.get( name );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,135,* Get Descriptor for option id.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,137,* @param id the id
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,138,* @return the descriptor
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,140,private final CLOptionDescriptor getDescriptorFor( final int id )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,142,for( int i = 0; i < m_optionDescriptors.length; i++ )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,144,if( m_optionDescriptors[i].getId() == id )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,146,return m_optionDescriptors[i];
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,150,return null;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,154,* Retrieve a descriptor by name.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,156,* @param name the name
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,157,* @return the descriptor
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,159,private final CLOptionDescriptor getDescriptorFor( final String name )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,161,for( int i = 0; i < m_optionDescriptors.length; i++ )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,163,if( m_optionDescriptors[i].getName().equals( name ) )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,165,return m_optionDescriptors[i];
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,169,return null;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,173,* Retrieve an error message that occured during parsing if one existed.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,175,* @return the error string
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,177,public final String getErrorString()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,179,"//System.out.println( ""ErrorString: "" + m_errorMessage );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,180,return m_errorMessage;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,184,* Require state to be placed in for option.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,186,* @param descriptor the Option Descriptor
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,187,* @return the state
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,189,private final int getStateFor( final CLOptionDescriptor descriptor )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,191,final int flags = descriptor.getFlags();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,192,if( (flags & CLOptionDescriptor.ARGUMENTS_REQUIRED_2) ==
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,193,CLOptionDescriptor.ARGUMENTS_REQUIRED_2 )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,195,return STATE_REQUIRE_2ARGS;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,197,else if( (flags & CLOptionDescriptor.ARGUMENT_REQUIRED) ==
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,198,CLOptionDescriptor.ARGUMENT_REQUIRED )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,200,return STATE_REQUIRE_ARG;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,202,else if( (flags & CLOptionDescriptor.ARGUMENT_OPTIONAL) ==
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,203,CLOptionDescriptor.ARGUMENT_OPTIONAL )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,205,return STATE_OPTIONAL_ARG;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,207,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,209,return STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,214,* Create a parser that can deal with options and parses certain args.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,216,"* @param args the args, typically that passed to the"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,217,* <code>public static void main(String[] args)</code> method.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,218,* @param optionDescriptors the option descriptors
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,219,* @param control the parser control used determine behaviour of parser
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,221,"public CLArgsParser( final String[] args,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,222,"final CLOptionDescriptor[] optionDescriptors,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,223,final ParserControl control )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,225,m_optionDescriptors = optionDescriptors;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,226,m_control = control;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,227,m_options = new Vector();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,228,m_args = args;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,230,try
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,232,parse();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,233,checkIncompatibilities( m_options );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,234,buildOptionIndex();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,236,catch( final ParseException pe )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,238,m_errorMessage = pe.getMessage();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,241,"//System.out.println( ""Built : "" + m_options );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,242,"//System.out.println( ""From : "" + Arrays.asList( args ) );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,246,* Check for duplicates of an option.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,247,* It is an error to have duplicates unless appropriate flags is set in descriptor.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,249,* @param arguments the arguments
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,251,private final void checkIncompatibilities( final Vector arguments )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,252,throws ParseException
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,254,final int size = arguments.size();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,256,for( int i = 0; i < size; i++ )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,258,final CLOption option = (CLOption)arguments.elementAt( i );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,259,final int id = option.getDescriptor().getId();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,260,final CLOptionDescriptor descriptor = getDescriptorFor( id );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,262,//this occurs when id == 0 and user has not supplied a descriptor
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,263,//for arguments
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,264,if( null == descriptor )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,266,continue;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,269,final int[] incompatible = descriptor.getIncompatible();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,271,"checkIncompatible( arguments, incompatible, i );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,275,"private final void checkIncompatible( final Vector arguments,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,276,"final int[] incompatible,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,277,final int original )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,278,throws ParseException
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,280,final int size = arguments.size();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,282,for( int i = 0; i < size; i++ )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,284,if( original == i )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,286,continue;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,289,final CLOption option = (CLOption)arguments.elementAt( i );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,290,final int id = option.getDescriptor().getId();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,292,for( int j = 0; j < incompatible.length; j++ )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,294,if( id == incompatible[j] )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,296,final CLOption originalOption = (CLOption)arguments.elementAt( original );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,297,final int originalId = originalOption.getDescriptor().getId();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,299,String message = null;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,301,if( id == originalId )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,303,message =
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,304,"""Duplicate options for "" + describeDualOption( originalId ) +"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,305,""" found."";"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,307,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,309,"message = ""Incompatible options -"" +"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,310,"describeDualOption( id ) + "" and "" +"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,311,"describeDualOption( originalId ) + "" found."";"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,313,"throw new ParseException( message, 0 );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,319,private final String describeDualOption( final int id )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,321,final CLOptionDescriptor descriptor = getDescriptorFor( id );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,322,if( null == descriptor )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,324,"return ""<parameter>"";"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,326,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,328,final StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,329,boolean hasCharOption = false;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,331,if( Character.isLetter( (char)id ) )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,333,sb.append( '-' );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,334,sb.append( (char)id );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,335,hasCharOption = true;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,338,final String longOption = descriptor.getName();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,339,if( null != longOption )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,341,if( hasCharOption )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,343,sb.append( '/' );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,345,"sb.append( ""--"" );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,346,sb.append( longOption );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,349,return sb.toString();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,354,* Create a parser that deals with options and parses certain args.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,356,* @param args the args
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,357,* @param optionDescriptors the option descriptors
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,359,"public CLArgsParser( final String[] args,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,360,final CLOptionDescriptor[] optionDescriptors )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,362,"this( args, optionDescriptors, null );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,366,* Create a string array that is subset of input array.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,367,* The sub-array should start at array entry indicated by index. That array element
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,368,* should only include characters from charIndex onwards.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,370,* @param array the original array
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,371,* @param index the cut-point in array
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,372,* @param charIndex the cut-point in element of array
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,373,* @return the result array
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,375,"private final String[] subArray( final String[] array,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,376,"final int index,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,377,final int charIndex )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,379,final int remaining = array.length - index;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,380,final String[] result = new String[remaining];
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,382,if( remaining > 1 )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,384,"System.arraycopy( array, index + 1, result, 1, remaining - 1 );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,387,result[0] = array[index].substring( charIndex - 1 );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,389,return result;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,393,* Actually parse arguments
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,395,private final void parse()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,396,throws ParseException
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,398,if( 0 == m_args.length )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,400,return;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,403,m_stringLength = m_args[m_argIndex].length();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,405,//ch = peekAtChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,407,while( true )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,409,m_ch = peekAtChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,411,"//System.out.println( ""Pre State="" + m_state );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,412,"//System.out.println( ""Pre Char="" + (char)ch + ""/"" + (int)ch );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,414,if( m_argIndex >= m_args.length )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,416,break;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,419,if( null != m_control && m_control.isFinished( m_lastOptionId ) )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,421,//this may need mangling due to peeks
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,422,"m_unparsedArgs = subArray( m_args, m_argIndex, m_stringIndex );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,423,return;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,426,"//System.out.println( ""State="" + m_state );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,427,"//System.out.println( ""Char="" + (char)ch + ""/"" + (int)ch );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,429,if( STATE_OPTION_MODE == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,431,//if get to an arg barrier then return to normal mode
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,432,//else continue accumulating options
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,433,if( 0 == m_ch )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,435,getChar(); //strip the null
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,436,m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,438,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,440,parseShortOption();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,443,else if( STATE_NORMAL == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,445,parseNormal();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,447,else if( STATE_NO_OPTIONS == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,449,//should never get to here when stringIndex != 0
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,450,addOption( new CLOption( m_args[m_argIndex++] ) );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,452,else if( STATE_OPTIONAL_ARG == m_state && m_isLong && m_ch != 0)
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,454,m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,455,addOption( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,457,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,459,parseArguments();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,463,if( m_option != null )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,465,if( STATE_OPTIONAL_ARG == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,467,m_options.addElement( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,469,else if( STATE_REQUIRE_ARG == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,471,final CLOptionDescriptor descriptor = getDescriptorFor(
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,472,m_option.getDescriptor().getId() );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,473,final String message =
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,474,"""Missing argument to option "" + getOptionDescription( descriptor );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,475,"throw new ParseException( message, 0 );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,477,else if( STATE_REQUIRE_2ARGS == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,479,if( 1 == m_option.getArgumentCount() )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,481,"m_option.addArgument( """" );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,482,m_options.addElement( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,484,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,486,final CLOptionDescriptor descriptor = getDescriptorFor(
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,487,m_option.getDescriptor().getId() );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,488,final String message =
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,489,"""Missing argument to option "" + getOptionDescription( descriptor );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,490,"throw new ParseException( message, 0 );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,493,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,495,"throw new ParseException( ""IllegalState "" + m_state + "": "" + m_option, 0 );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,500,private final String getOptionDescription( final CLOptionDescriptor descriptor )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,502,if( m_isLong )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,504,"return ""--"" + descriptor.getName();"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,506,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,508,"return ""-"" + (char)descriptor.getId();"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,512,private final char peekAtChar()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,514,if( INVALID == m_lastChar )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,516,m_lastChar = readChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,518,return (char)m_lastChar;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,521,private final char getChar()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,523,if( INVALID != m_lastChar )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,525,final char result = (char)m_lastChar;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,526,m_lastChar = INVALID;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,527,return result;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,529,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,531,return readChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,535,private final char readChar()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,537,if( m_stringIndex >= m_stringLength )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,539,m_argIndex++;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,540,m_stringIndex = 0;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,542,if( m_argIndex < m_args.length )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,544,m_stringLength = m_args[m_argIndex].length();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,546,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,548,m_stringLength = 0;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,551,return 0;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,554,if( m_argIndex >= m_args.length )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,556,return 0;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,559,return m_args[m_argIndex].charAt( m_stringIndex++ );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,562,private final Token nextToken( final char[] separators )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,564,m_ch = getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,566,"if( isSeparator( m_ch, separators ) )"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,568,m_ch = getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,569,"return new Token( TOKEN_SEPARATOR, null );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,572,final StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,574,do
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,576,sb.append( m_ch );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,577,m_ch = getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,579,"while( !isSeparator( m_ch, separators ) );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,581,"return new Token( TOKEN_STRING, sb.toString() );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,584,"private final boolean isSeparator( final char ch, final char[] separators )"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,586,for( int i = 0; i < separators.length; i++ )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,588,if( ch == separators[i] )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,590,return true;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,594,return false;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,597,private final void addOption( final CLOption option )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,599,m_options.addElement( option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,600,m_lastOptionId = option.getDescriptor().getId();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,601,m_option = null;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,604,"private final void parseOption( final CLOptionDescriptor descriptor,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,605,final String optionString )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,606,throws ParseException
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,608,if( null == descriptor )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,610,"throw new ParseException( ""Unknown option "" + optionString, 0 );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,613,m_state = getStateFor( descriptor );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,614,m_option = new CLOption( descriptor );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,616,if( STATE_NORMAL == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,618,addOption( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,622,private final void parseShortOption()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,623,throws ParseException
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,625,m_ch = getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,626,final CLOptionDescriptor descriptor = getDescriptorFor( m_ch );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,627,m_isLong = false;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,628,"parseOption( descriptor, ""-"" + m_ch );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,630,if( STATE_NORMAL == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,632,m_state = STATE_OPTION_MODE;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,636,private final void parseArguments()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,637,throws ParseException
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,639,if( STATE_REQUIRE_ARG == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,641,if( '=' == m_ch || 0 == m_ch )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,643,getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,646,final Token token = nextToken( NULL_SEPARATORS );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,647,m_option.addArgument( token.getValue() );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,649,addOption( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,650,m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,652,else if( STATE_OPTIONAL_ARG == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,654,if( '-' == m_ch || 0 == m_ch )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,656,getChar(); //consume stray character
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,657,addOption( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,658,m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,659,return;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,662,if( '=' == m_ch )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,664,getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,667,final Token token = nextToken( NULL_SEPARATORS );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,668,m_option.addArgument( token.getValue() );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,670,addOption( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,671,m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,673,else if( STATE_REQUIRE_2ARGS == m_state )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,675,if( 0 == m_option.getArgumentCount() )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,678,* Fix bug: -D arg1=arg2 was causing parse error; however --define arg1=arg2 is OK
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,679,"* This seems to be because the parser skips the terminator for the long options,"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,680,* but was not doing so for the short options.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,682,if (!m_isLong){
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,683,if (0 == peekAtChar()){
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,684,getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,687,final Token token = nextToken( ARG_SEPARATORS );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,689,if( TOKEN_SEPARATOR == token.getType() )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,691,final CLOptionDescriptor descriptor = getDescriptorFor(
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,692,m_option.getDescriptor().getId() );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,693,final String message =
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,694,"""Unable to parse first argument for option "" +"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,695,getOptionDescription( descriptor );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,696,"throw new ParseException( message, 0 );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,698,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,700,m_option.addArgument( token.getValue() );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,702,// Are we about to start a new option?
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,703,if (0 == m_ch && '-' == peekAtChar()){
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,704,"// Yes, so the second argument is missing"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,705,"m_option.addArgument( """" );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,706,m_options.addElement( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,707,m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,710,else //2nd argument
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,712,final StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,714,m_ch = getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,715,"while( !isSeparator( m_ch, NULL_SEPARATORS ) )"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,717,sb.append( m_ch );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,718,m_ch = getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,721,final String argument = sb.toString();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,723,"//System.out.println( ""Arguement:"" + argument );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,725,m_option.addArgument( argument );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,726,addOption( m_option );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,727,m_option = null;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,728,m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,734,* Parse Options from Normal mode.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,736,private final void parseNormal()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,737,throws ParseException
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,739,if( '-' != m_ch )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,741,//Parse the arguments that are not options
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,742,final String argument = nextToken( NULL_SEPARATORS ).getValue();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,743,addOption( new CLOption( argument ) );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,744,m_state = STATE_NORMAL;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,746,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,748,getChar(); // strip the -
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,750,if( 0 == peekAtChar() )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,752,"throw new ParseException( ""Malformed option -"", 0 );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,754,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,756,m_ch = peekAtChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,758,//if it is a short option then parse it else ...
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,759,if( '-' != m_ch )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,761,parseShortOption();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,763,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,765,getChar(); // strip the -
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,766,//-- sequence .. it can either mean a change of state
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,767,//to STATE_NO_OPTIONS or else a long option
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,769,if( 0 == peekAtChar() )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,771,getChar();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,772,m_state = STATE_NO_OPTIONS;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,774,else
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,776,//its a long option
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,777,final String optionName = nextToken( ARG_SEPARATORS ).getValue();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,778,final CLOptionDescriptor descriptor = getDescriptorFor( optionName );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,779,m_isLong = true;
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,780,"parseOption( descriptor, ""--"" + optionName );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,788,* Build the m_optionIndex lookup map for the parsed options.
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,790,private final void buildOptionIndex()
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,792,final int size = m_options.size();
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,793,m_optionIndex = new Hashtable( size * 2 );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,795,for( int i = 0; i < size; i++ )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,797,final CLOption option = (CLOption)m_options.get( i );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,798,final CLOptionDescriptor optionDescriptor =
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,799,getDescriptorFor( option.getDescriptor().getId() );
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,801,"m_optionIndex.put( new Integer( option.getDescriptor().getId() ), option );"
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,803,if( null != optionDescriptor &&
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,804,null != optionDescriptor.getName() )
True,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,806,"m_optionIndex.put( optionDescriptor.getName(), option );"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,2,* Copyright 2002-2005 The Apache Software Foundation
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,3,"* Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,4,* you may not use  this file  except in  compliance with the License.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,5,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,7,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,9,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,10,"* distributed  under the  License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,11,"* WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,12,* implied.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,17,package org.apache.commons.cli.avalon;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,18,// Renamed from org.apache.avalon.excalibur.cli
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,20,import java.util.Arrays;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,23,* Basic class describing an instance of option.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,25,* @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,27,public final class CLOption
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,30,* Value of {@link #getId} when the option is a text argument.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,32,public static final int TEXT_ARGUMENT = 0;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,35,"* Default descriptor. Required, since code assumes that getDescriptor will never return null."
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,37,private static final CLOptionDescriptor TEXT_ARGUMENT_DESCRIPTOR =
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,38,"new CLOptionDescriptor( null, CLOptionDescriptor.ARGUMENT_OPTIONAL, TEXT_ARGUMENT,"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,39,null );
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,41,private String[] m_arguments;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,42,private CLOptionDescriptor m_descriptor = TEXT_ARGUMENT_DESCRIPTOR;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,45,* Retrieve argument to option if it takes arguments.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,47,* @return the (first) argument
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,49,public final String getArgument()
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,51,return getArgument( 0 );
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,55,* Retrieve indexed argument to option if it takes arguments.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,57,"* @param index The argument index, from 0 to"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,58,* {@link #getArgumentCount()}-1.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,59,* @return the argument
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,61,public final String getArgument( final int index )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,63,if( null == m_arguments || index < 0 || index >= m_arguments.length )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,65,return null;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,67,else
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,69,return m_arguments[index];
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,74,* Retrieve id of option.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,76,* The id is eqivalent to character code if it can be a single letter option.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,78,* @return the id
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,79,* @deprecated use <code>getDescriptor().getId()</code> instead
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,81,public final int getId()
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,83,return m_descriptor == null ? TEXT_ARGUMENT : m_descriptor.getId();
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,86,public final CLOptionDescriptor getDescriptor()
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,88,return m_descriptor;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,92,* Constructor taking an descriptor
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,94,"* @param descriptor the descriptor iff null, will default to a ""text argument"" descriptor."
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,96,public CLOption( final CLOptionDescriptor descriptor )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,98,if( descriptor != null )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,100,m_descriptor = descriptor;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,105,* Constructor taking argument for option.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,107,* @param argument the argument
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,109,public CLOption( final String argument )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,111,this( (CLOptionDescriptor)null );
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,112,addArgument( argument );
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,116,* Mutator of Argument property.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,118,* @param argument the argument
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,120,public final void addArgument( final String argument )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,122,if( null == m_arguments )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,124,m_arguments = new String[]{argument};
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,126,else
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,128,final String[] arguments = new String[m_arguments.length + 1];
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,129,"System.arraycopy( m_arguments, 0, arguments, 0, m_arguments.length );"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,130,arguments[m_arguments.length] = argument;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,131,m_arguments = arguments;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,136,* Get number of arguments.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,138,* @return the number of arguments
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,140,public final int getArgumentCount()
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,142,if( null == m_arguments )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,144,return 0;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,146,else
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,148,return m_arguments.length;
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,153,* Convert to String.
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,155,* @return the string value
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,157,public final String toString()
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,159,final StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,160,"sb.append( ""[Option "" );"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,161,sb.append( (char)m_descriptor.getId() );
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,163,if( null != m_arguments )
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,165,"sb.append( "", "" );"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,166,sb.append( Arrays.asList( m_arguments ) );
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,169,"sb.append( "" ]"" );"
True,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,171,return sb.toString();
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,2,* Copyright 2002-2005 The Apache Software Foundation
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,3,"* Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,4,* you may not use  this file  except in  compliance with the License.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,5,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,7,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,9,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,10,"* distributed  under the  License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,11,"* WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,12,* implied.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,17,package org.apache.commons.cli.avalon;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,18,//Renamed from org.apache.avalon.excalibur.cli
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,21,* Basic class describing an type of option.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,22,"* Typically, one creates a static array of <code>CLOptionDescriptor</code>s,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,23,"* and passes it to {@link CLArgsParser#CLArgsParser(String[], CLOptionDescriptor[])}."
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,25,* @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,26,* @see CLArgsParser
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,27,* @see CLUtil
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,29,public final class CLOptionDescriptor
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,31,/** Flag to say that one argument is required */
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,32,public static final int ARGUMENT_REQUIRED = 1 << 1;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,33,/** Flag to say that the argument is optional */
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,34,public static final int ARGUMENT_OPTIONAL = 1 << 2;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,35,/** Flag to say this option does not take arguments */
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,36,public static final int ARGUMENT_DISALLOWED = 1 << 3;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,37,/** Flag to say this option requires 2 arguments */
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,38,public static final int ARGUMENTS_REQUIRED_2 = 1 << 4;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,39,/** Flag to say this option may be repeated on the command line */
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,40,public static final int DUPLICATES_ALLOWED = 1 << 5;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,42,private final int m_id;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,43,private final int m_flags;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,44,private final String m_name;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,45,private final String m_description;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,46,private final int[] m_incompatible;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,49,* Constructor.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,51,* @param name the name/long option
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,52,* @param flags the flags
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,53,* @param id the id/character option
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,54,* @param description description of option usage
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,56,"public CLOptionDescriptor( final String name,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,57,"final int flags,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,58,"final int id,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,59,final String description )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,61,"this( name, flags, id, description,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,62,((flags & CLOptionDescriptor.DUPLICATES_ALLOWED) > 0)
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,63,? new int[0] : new int[]{id} );
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,67,* Constructor.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,69,* @param name the name/long option
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,70,* @param flags the flags
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,71,* @param id the id/character option
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,72,* @param description description of option usage
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,73,* @param incompatible an array listing the ids of all incompatible options
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,74,* @deprecated use the version with the array of CLOptionDescriptor's
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,76,"public CLOptionDescriptor( final String name,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,77,"final int flags,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,78,"final int id,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,79,"final String description,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,80,final int[] incompatible )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,82,m_id = id;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,83,m_name = name;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,84,m_flags = flags;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,85,m_description = description;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,86,m_incompatible = incompatible;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,88,int modeCount = 0;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,89,if( (ARGUMENT_REQUIRED & flags) == ARGUMENT_REQUIRED )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,91,modeCount++;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,93,if( (ARGUMENT_OPTIONAL & flags) == ARGUMENT_OPTIONAL )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,95,modeCount++;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,97,if( (ARGUMENT_DISALLOWED & flags) == ARGUMENT_DISALLOWED )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,99,modeCount++;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,101,if( (ARGUMENTS_REQUIRED_2 & flags) == ARGUMENTS_REQUIRED_2 )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,103,modeCount++;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,106,if( 0 == modeCount )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,108,"final String message = ""No mode specified for option "" + this;"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,109,throw new IllegalStateException( message );
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,111,else if( 1 != modeCount )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,113,"final String message = ""Multiple modes specified for option "" + this;"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,114,throw new IllegalStateException( message );
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,119,* Constructor.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,121,* @param name the name/long option
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,122,* @param flags the flags
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,123,* @param id the id/character option
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,124,* @param description description of option usage
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,126,"public CLOptionDescriptor( final String name,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,127,"final int flags,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,128,"final int id,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,129,"final String description,"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,130,final CLOptionDescriptor[] incompatible )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,132,m_id = id;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,133,m_name = name;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,134,m_flags = flags;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,135,m_description = description;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,137,m_incompatible = new int[incompatible.length];
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,138,for( int i = 0; i < incompatible.length; i++ )
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,140,m_incompatible[i] = incompatible[i].getId();
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,145,* @deprecated Use the correctly spelled {@link #getIncompatible} instead.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,146,* @return the array of incompatible option ids
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,148,protected final int[] getIncompatble()
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,150,return getIncompatible();
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,154,* Get the array of incompatible option ids.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,156,* @return the array of incompatible option ids
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,158,protected final int[] getIncompatible()
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,160,return m_incompatible;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,164,* Retrieve textual description.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,166,* @return the description
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,168,public final String getDescription()
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,170,return m_description;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,174,* Retrieve flags about option.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,175,* Flags include details such as whether it allows parameters etc.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,177,* @return the flags
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,179,public final int getFlags()
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,181,return m_flags;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,185,* Retrieve the id for option.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,186,* The id is also the character if using single character options.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,188,* @return the id
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,190,public final int getId()
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,192,return m_id;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,196,* Retrieve name of option which is also text for long option.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,198,* @return name/long option
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,200,public final String getName()
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,202,return m_name;
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,206,* Convert to String.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,208,* @return the converted value to string.
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,210,public final String toString()
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,212,final StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,213,"sb.append( ""[OptionDescriptor "" );"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,214,sb.append( m_name );
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,215,"sb.append( ""[OptionDescriptor "" );"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,216,sb.append( m_name );
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,217,"sb.append( "", "" );"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,218,sb.append( m_id );
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,219,"sb.append( "", "" );"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,220,sb.append( m_flags );
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,221,"sb.append( "", "" );"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,222,sb.append( m_description );
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,223,"sb.append( "" ]"" );"
True,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,224,return sb.toString();
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,2,* Copyright 2002-2005 The Apache Software Foundation
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,3,"* Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,4,* you may not use  this file  except in  compliance with the License.
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,5,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,7,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,9,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,10,"* distributed  under the  License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,11,"* WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,12,* implied.
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,17,package org.apache.commons.cli.avalon;
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,18,//Renamed from org.apache.avalon.excalibur.cli
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,21,* CLUtil offers basic utility operations for use both internal and external to package.
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,23,* @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,24,* @see CLOptionDescriptor
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,26,public final class CLUtil
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,28,private static final int MAX_DESCRIPTION_COLUMN_LENGTH = 60;
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,31,* Format options into StringBuffer and return. This is typically used to
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,32,"* print ""Usage"" text in response to a ""--help"" or invalid option."
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,34,* @param options the option descriptors
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,35,* @return the formatted description/help for options
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,37,public static final StringBuffer describeOptions( final CLOptionDescriptor[] options )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,39,"final String lSep = System.getProperty( ""line.separator"" );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,40,final StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,42,for( int i = 0; i < options.length; i++ )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,44,final char ch = (char)options[i].getId();
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,45,final String name = options[i].getName();
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,46,String description = options[i].getDescription();
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,47,int flags = options[i].getFlags();
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,48,boolean argumentRequired =
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,49,((flags & CLOptionDescriptor.ARGUMENT_REQUIRED) ==
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,50,CLOptionDescriptor.ARGUMENT_REQUIRED);
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,51,boolean twoArgumentsRequired =
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,52,((flags & CLOptionDescriptor.ARGUMENTS_REQUIRED_2) ==
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,53,CLOptionDescriptor.ARGUMENTS_REQUIRED_2);
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,54,boolean needComma = false;
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,55,if( twoArgumentsRequired )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,57,argumentRequired = true;
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,60,sb.append( '\t' );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,62,if( Character.isLetter( ch ) )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,64,"sb.append( ""-"" );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,65,sb.append( ch );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,66,needComma = true;
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,69,if( null != name )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,71,if( needComma )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,73,"sb.append( "", "" );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,76,"sb.append( ""--"" );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,77,sb.append( name );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,80,if( argumentRequired )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,82,"sb.append( "" <argument>"" );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,84,if( twoArgumentsRequired )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,86,"sb.append( ""=<value>"" );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,88,sb.append( lSep );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,90,if( null != description )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,92,while( description.length() > MAX_DESCRIPTION_COLUMN_LENGTH )
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,94,final String descriptionPart =
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,95,"description.substring( 0, MAX_DESCRIPTION_COLUMN_LENGTH );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,96,description =
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,97,description.substring( MAX_DESCRIPTION_COLUMN_LENGTH );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,98,"sb.append( ""\t\t"" );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,99,sb.append( descriptionPart );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,100,sb.append( lSep );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,103,"sb.append( ""\t\t"" );"
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,104,sb.append( description );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,105,sb.append( lSep );
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,108,return sb;
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,112,* Private Constructor so that no instance can ever be created.
True,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,115,private CLUtil()
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,2,* Copyright 2002-2005 The Apache Software Foundation
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,3,"* Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,4,* you may not use  this file  except in  compliance with the License.
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,5,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,7,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,9,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,10,"* distributed  under the  License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,11,"* WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,12,* implied.
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,17,package org.apache.commons.cli.avalon;
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,18,//Renamed from org.apache.avalon.excalibur.cli
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,21,* ParserControl is used to control particular behaviour of the parser.
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,23,* @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,24,* @see AbstractParserControl
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,26,public interface ParserControl
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,29,* Called by the parser to determine whether it should stop
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,30,* after last option parsed.
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,32,* @param lastOptionCode the code of last option parsed
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,33,"* @return return true to halt, false to continue parsing"
True,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,35,boolean isFinished( int lastOptionCode );
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,2,* Copyright 2002-2005 The Apache Software Foundation
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,3,"* Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,4,* you may not use  this file  except in  compliance with the License.
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,5,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,7,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,9,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,10,"* distributed  under the  License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,11,"* WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,12,* implied.
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,17,package org.apache.commons.cli.avalon;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,18,//Renamed from org.apache.avalon.excalibur.cli
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,21,* Token handles tokenizing the CLI arguments
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,23,* @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,24,* @since 4.0
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,26,class Token
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,28,/** Type for a separator token */
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,29,public static final int TOKEN_SEPARATOR = 0;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,30,/** Type for a text token */
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,31,public static final int TOKEN_STRING = 1;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,33,private final int m_type;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,34,private final String m_value;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,37,* New Token object with a type and value
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,39,"Token( final int type, final String value )"
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,41,m_type = type;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,42,m_value = value;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,46,* Get the value of the token
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,48,final String getValue()
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,50,return m_value;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,54,* Get the type of the token
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,56,final int getType()
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,58,return m_type;
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,62,* Convert to a string
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,64,public final String toString()
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,66,final StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,67,sb.append( m_type );
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,68,"sb.append( "":"" );"
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,69,sb.append( m_value );
True,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,70,return sb.toString();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,2,* Copyright 2002-2005 The Apache Software Foundation
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,3,"* Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,4,* you may not use  this file  except in  compliance with the License.
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,5,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,7,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,9,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,10,"* distributed  under the  License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,11,"* WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,12,* implied.
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,17,package org.apache.commons.cli.avalon;
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,18,//Renamed from org.apache.avalon.excalibur.cli
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,20,import java.util.List;
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,27,public final class ClutilTestCase
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,28,extends TestCase
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,30,private static final String[] ARGLIST1 = new String[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,32,"""--you"", ""are"", ""--all"", ""-cler"", ""kid"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,35,private static final String[] ARGLIST2 = new String[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,37,"""-Dstupid=idiot"", ""are"", ""--all"", ""here"", ""-d"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,40,private static final String[] ARGLIST3 = new String[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,42,//duplicates
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,43,"""-Dstupid=idiot"", ""are"", ""--all"", ""--all"", ""here"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,46,private static final String[] ARGLIST4 = new String[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,48,//incompatable (blee/all)
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,49,"""-Dstupid"",""idiot"", ""are"", ""--all"", ""--blee"", ""here"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,52,private static final String[] ARGLIST5 = new String[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,54,"""-f"", ""myfile.txt"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,57,private static final int DEFINE_OPT = 'D';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,58,private static final int CASE_CHECK_OPT = 'd';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,59,private static final int YOU_OPT = 'y';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,60,private static final int ALL_OPT = 'a';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,61,private static final int CLEAR1_OPT = 'c';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,62,private static final int CLEAR2_OPT = 'l';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,63,private static final int CLEAR3_OPT = 'e';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,64,private static final int CLEAR5_OPT = 'r';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,65,private static final int BLEE_OPT = 'b';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,66,private static final int FILE_OPT = 'f';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,67,private static final int TAINT_OPT = 'T';
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,69,private static final CLOptionDescriptor DEFINE =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,70,"new CLOptionDescriptor( ""define"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,71,"CLOptionDescriptor.ARGUMENTS_REQUIRED_2,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,72,"DEFINE_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,73,"""define"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,74,private static final CLOptionDescriptor DEFINE_MANY =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,75,"new CLOptionDescriptor( ""define"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,76,"CLOptionDescriptor.ARGUMENTS_REQUIRED_2|CLOptionDescriptor.DUPLICATES_ALLOWED,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,77,"DEFINE_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,78,"""define"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,80,private static final CLOptionDescriptor CASE_CHECK =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,81,"new CLOptionDescriptor( ""charCheck"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,82,"CLOptionDescriptor.ARGUMENT_DISALLOWED,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,83,"CASE_CHECK_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,84,"""check character case sensitivity"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,85,private static final CLOptionDescriptor YOU =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,86,"new CLOptionDescriptor( ""you"", CLOptionDescriptor.ARGUMENT_DISALLOWED, YOU_OPT, ""you"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,88,private static final CLOptionDescriptor CLEAR1 =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,89,"new CLOptionDescriptor( ""c"", CLOptionDescriptor.ARGUMENT_DISALLOWED, CLEAR1_OPT, ""c"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,90,private static final CLOptionDescriptor CLEAR2 =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,91,"new CLOptionDescriptor( ""l"", CLOptionDescriptor.ARGUMENT_DISALLOWED, CLEAR2_OPT, ""l"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,92,private static final CLOptionDescriptor CLEAR3 =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,93,"new CLOptionDescriptor( ""e"", CLOptionDescriptor.ARGUMENT_DISALLOWED, CLEAR3_OPT, ""e"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,94,private static final CLOptionDescriptor CLEAR5 =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,95,"new CLOptionDescriptor( ""r"", CLOptionDescriptor.ARGUMENT_DISALLOWED, CLEAR5_OPT, ""r"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,96,private static final CLOptionDescriptor BLEE =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,97,"new CLOptionDescriptor( ""blee"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,98,"CLOptionDescriptor.ARGUMENT_DISALLOWED,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,99,"BLEE_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,100,"""blee"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,102,private static final CLOptionDescriptor ALL =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,103,"new CLOptionDescriptor( ""all"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,104,"CLOptionDescriptor.ARGUMENT_DISALLOWED,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,105,"ALL_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,106,"""all"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,107,new CLOptionDescriptor[]{BLEE} );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,109,private static final CLOptionDescriptor FILE =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,110,"new CLOptionDescriptor( ""file"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,111,"CLOptionDescriptor.ARGUMENT_REQUIRED,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,112,"FILE_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,113,"""the build file."" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,114,private static final CLOptionDescriptor TAINT =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,115,"new CLOptionDescriptor( ""taint"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,116,"CLOptionDescriptor.ARGUMENT_OPTIONAL,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,117,"TAINT_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,118,"""turn on tainting checks (optional level)."" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,120,public ClutilTestCase()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,122,"this( ""Command Line Interpreter Test Case"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,125,public ClutilTestCase( String name )
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,127,super( name );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,130,public void testOptionalArgWithSpace()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,132,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,134,"ALL, TAINT"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,137,"final String[] args = new String[]{""-T"", ""param"", ""-a""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,139,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,141,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,143,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,144,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,146,"assertEquals( ""Option count"", 3, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,148,final CLOption option0 = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,149,"assertEquals( ""Option Code: "" + option0.getDescriptor().getId(), TAINT_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,150,option0.getDescriptor().getId() );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,151,"assertEquals( ""Option Arg: "" + option0.getArgument( 0 ),"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,152,"null, option0.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,154,final CLOption option1 = (CLOption)clOptions.get( 1 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,155,"assertEquals( option1.getDescriptor().getId(), CLOption.TEXT_ARGUMENT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,156,"assertEquals( option1.getArgument( 0 ), ""param"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,158,final CLOption option2 = (CLOption)clOptions.get( 2 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,159,"assertEquals( option2.getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,160,"assertEquals( option2.getArgument( 0 ), null );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,163,public void testOptionalArgLong()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,165,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,167,"ALL, TAINT"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,170,// Check that optional args work woth long options
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,171,"final String[] args = new String[]{""--taint"", ""param"", ""-a""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,173,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,175,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,177,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,178,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,180,"assertEquals( ""Option count"", 3, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,182,final CLOption option0 = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,183,"assertEquals( ""Option Code: "" + option0.getDescriptor().getId(), TAINT_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,184,option0.getDescriptor().getId() );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,185,"assertEquals( ""Option Arg: "" + option0.getArgument( 0 ),"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,186,"null, option0.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,188,final CLOption option1 = (CLOption)clOptions.get( 1 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,189,"assertEquals( CLOption.TEXT_ARGUMENT , option1.getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,190,"assertEquals( ""param"" , option1.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,192,final CLOption option2 = (CLOption)clOptions.get( 2 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,193,"assertEquals( option2.getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,194,"assertEquals( option2.getArgument( 0 ), null );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,197,public void testShortOptArgUnenteredBeforeOtherOpt()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,199,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,201,"ALL, TAINT"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,204,"final String[] args = new String[]{""-T"", ""-a""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,206,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,208,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,210,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,211,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,213,"assertEquals( ""Option count"", 2, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,215,final CLOption option0 = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,216,"assertEquals( ""Option Code: "" + option0.getDescriptor().getId(), TAINT_OPT,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,217,option0.getDescriptor().getId() );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,218,"assertEquals( ""Option Arg: "" + option0.getArgument( 0 ), null, option0.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,220,final CLOption option1 = (CLOption)clOptions.get( 1 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,221,"assertEquals( option1.getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,222,"assertEquals( option1.getArgument( 0 ), null );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,225,public void testOptionalArgsWithArgShortBeforeOtherOpt()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,227,"//""-T3"",""-a"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,228,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,230,"ALL, TAINT"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,233,"final String[] args = new String[]{""-T3"", ""-a""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,235,"//System.out.println(""[before parsing]"");"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,237,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,239,"//System.out.println(""[after parsing]"");"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,241,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,243,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,244,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,246,"assertEquals( size, 2 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,247,final CLOption option0 = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,248,"assertEquals( option0.getDescriptor().getId(), TAINT_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,249,"assertEquals( option0.getArgument( 0 ), ""3"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,251,final CLOption option1 = (CLOption)clOptions.get( 1 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,252,"assertEquals( ALL_OPT, option1.getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,253,"assertEquals( null, option1.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,256,public void testOptionalArgsNoArgShortBeforeOtherOpt()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,258,"//""-T"",""-a"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,259,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,261,"ALL, TAINT"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,264,"final String[] args = new String[]{""-T"", ""-a""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,266,"//System.out.println(""[before parsing]"");"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,267,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,269,"//System.out.println(""[after parsing]"");"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,271,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,273,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,274,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,276,"assertEquals( size, 2 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,277,final CLOption option0 = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,278,"assertEquals( TAINT_OPT, option0.getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,279,"assertEquals( null, option0.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,281,final CLOption option1 = (CLOption)clOptions.get( 1 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,282,"assertEquals( ALL_OPT, option1.getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,283,"assertEquals( null, option1.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,286,public void testFullParse()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,288,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,290,"YOU, ALL, CLEAR1, CLEAR2, CLEAR3, CLEAR5"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,293,"final CLArgsParser parser = new CLArgsParser( ARGLIST1, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,295,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,297,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,298,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,300,"assertEquals( size, 8 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,301,"assertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), YOU_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,302,"assertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,303,"assertEquals( ((CLOption)clOptions.get( 2 )).getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,304,"assertEquals( ((CLOption)clOptions.get( 3 )).getDescriptor().getId(), CLEAR1_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,305,"assertEquals( ((CLOption)clOptions.get( 4 )).getDescriptor().getId(), CLEAR2_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,306,"assertEquals( ((CLOption)clOptions.get( 5 )).getDescriptor().getId(), CLEAR3_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,307,"assertEquals( ((CLOption)clOptions.get( 6 )).getDescriptor().getId(), CLEAR5_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,308,"assertEquals( ((CLOption)clOptions.get( 7 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,311,public void testDuplicateOptions()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,313,"//""-Dstupid=idiot"",""are"",""--all"",""--all"",""here"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,314,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,316,"DEFINE, ALL, CLEAR1"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,319,"final CLArgsParser parser = new CLArgsParser( ARGLIST3, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,321,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,323,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,324,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,326,"assertEquals( size, 5 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,327,"assertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), DEFINE_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,328,"assertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,329,"assertEquals( ((CLOption)clOptions.get( 2 )).getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,330,"assertEquals( ((CLOption)clOptions.get( 3 )).getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,331,"assertEquals( ((CLOption)clOptions.get( 4 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,334,public void testIncompatableOptions()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,336,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,338,"DEFINE, ALL, CLEAR1, BLEE"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,341,"final CLArgsParser parser = new CLArgsParser( ARGLIST4, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,343,assertNotNull( parser.getErrorString() );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,345,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,346,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,348,"assertEquals( size, 5 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,349,"assertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), DEFINE_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,350,"assertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,351,"assertEquals( ((CLOption)clOptions.get( 2 )).getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,352,"assertEquals( ((CLOption)clOptions.get( 3 )).getDescriptor().getId(), BLEE_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,353,"assertEquals( ((CLOption)clOptions.get( 4 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,356,public void testSingleArg()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,358,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,360,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,363,"final CLArgsParser parser = new CLArgsParser( ARGLIST5, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,365,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,367,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,368,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,370,"assertEquals( size, 1 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,371,"assertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), FILE_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,372,"assertEquals( ((CLOption)clOptions.get( 0 )).getArgument(), ""myfile.txt"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,374,public void testSingleArg2()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,376,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,378,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,381,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,382,"new String[]{""-f-=,=-""} // Check delimiters are allowed"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,383,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,385,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,387,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,388,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,390,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,391,"assertEquals( FILE_OPT ,((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,392,"assertEquals( ""-=,=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,395,public void testSingleArg3()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,397,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,399,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,402,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,403,"new String[]{""--file=-=,-""} // Check delimiters are allowed"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,404,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,406,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,408,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,409,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,411,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,412,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,413,"assertEquals( ""-=,-"" , ((CLOption)clOptions.get( 0 )).getArgument() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,416,public void testSingleArg4()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,418,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,420,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,423,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,424,"new String[]{""--file"",""myfile.txt""}"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,425,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,427,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,429,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,430,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,432,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,433,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,434,"assertEquals( ""myfile.txt"", ((CLOption)clOptions.get( 0 )).getArgument() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,437,public void testSingleArg5()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,439,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,441,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,444,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,445,"new String[]{""-f"",""myfile.txt""}"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,446,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,448,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,450,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,451,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,453,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,454,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,455,"assertEquals( ""myfile.txt"", ((CLOption)clOptions.get( 0 )).getArgument() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,458,public void testSingleArg6()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,460,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,462,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,465,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,466,"new String[]{""-f"",""-=-""}"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,467,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,469,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,471,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,472,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,474,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,475,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,476,"assertEquals( ""-=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,479,public void testSingleArg7()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,481,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,483,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,486,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,487,"new String[]{""--file=-=-""}"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,488,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,490,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,492,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,493,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,495,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,496,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,497,"assertEquals( ""-=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,500,public void testSingleArg8()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,502,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,504,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,507,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,508,"new String[]{""--file"",""-=-""}"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,509,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,511,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,513,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,514,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,516,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,517,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,518,"assertEquals( ""-=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,521,public void testSingleArg9()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,523,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,525,FILE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,528,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,529,"new String[]{""--file"",""-=-""}"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,530,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,532,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,534,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,535,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,537,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,538,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,539,"assertEquals( ""-=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,542,public void testCombinedArgs1()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,544,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,546,"BLEE, TAINT"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,549,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,550,"new String[]{""-bT"",""rest""}"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,551,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,553,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,555,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,556,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,557,"assertEquals( 3, size);"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,558,"assertEquals( BLEE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,559,"assertEquals( TAINT_OPT, ((CLOption)clOptions.get( 1 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,560,"assertEquals( 0, ((CLOption)clOptions.get( 2 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,561,"assertEquals( ""rest"", ((CLOption)clOptions.get( 2 )).getArgument());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,564,public void testCombinedArgs2()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,566,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,568,"BLEE, TAINT, FILE"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,571,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,572,"new String[]{""-bT"",""-fa""}"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,573,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,575,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,577,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,578,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,579,"assertEquals( 3, size);"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,580,"assertEquals( BLEE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,581,"assertEquals( TAINT_OPT, ((CLOption)clOptions.get( 1 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,582,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 2 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,583,"assertEquals( ""a"", ((CLOption)clOptions.get( 2 )).getArgument());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,586,public void testCombinedArgs3()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,588,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,590,"BLEE, TAINT, FILE"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,593,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,594,"new String[]{""-bT"",""--"",""-fa""}// Should not detect trailing option"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,595,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,597,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,599,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,600,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,601,"assertEquals( 3, size);"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,602,"assertEquals( BLEE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,603,"assertEquals( TAINT_OPT, ((CLOption)clOptions.get( 1 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,604,"assertEquals( 0, ((CLOption)clOptions.get( 2 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,605,"assertEquals( ""-fa"", ((CLOption)clOptions.get( 2 )).getArgument());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,608,public void testCombinedArgs4()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,610,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,612,"BLEE, TAINT, FILE"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,615,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,616,"new String[]{""-bT"",""rest"",""-fa""} // should detect trailing option"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,617,", options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,619,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,621,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,622,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,623,"assertEquals( 4, size);"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,624,"assertEquals( BLEE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,625,"assertEquals( TAINT_OPT, ((CLOption)clOptions.get( 1 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,626,"assertEquals( 0, ((CLOption)clOptions.get( 2 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,627,"assertEquals( ""rest"", ((CLOption)clOptions.get( 2 )).getArgument());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,628,"assertEquals( FILE_OPT, ((CLOption)clOptions.get( 3 )).getDescriptor().getId());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,629,"assertEquals( ""a"", ((CLOption)clOptions.get( 3 )).getArgument());"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,632,public void test2ArgsParse()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,634,"//""-Dstupid=idiot"",""are"",""--all"",""here"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,635,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,637,"DEFINE, ALL, CLEAR1, CASE_CHECK"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,640,"final CLArgsParser parser = new CLArgsParser( ARGLIST2, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,642,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,644,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,645,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,647,"assertEquals( size, 5 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,648,"assertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), DEFINE_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,649,"assertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,650,"assertEquals( ((CLOption)clOptions.get( 2 )).getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,651,"assertEquals( ((CLOption)clOptions.get( 3 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,652,"assertEquals( ((CLOption)clOptions.get( 4 )).getDescriptor().getId(), CASE_CHECK_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,654,final CLOption option = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,655,"assertEquals( ""stupid"", option.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,656,"assertEquals( ""idiot"", option.getArgument( 1 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,659,public void test2ArgsParse2()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,661,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,663,DEFINE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,666,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,667,"new String[] {""--define"",""a-b,c=d-e,f""}, // Check ""-"" is allowed in arg2"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,668,options );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,670,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,672,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,673,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,675,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,676,"assertEquals( DEFINE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,678,final CLOption option = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,679,"assertEquals( ""a-b,c"", option.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,680,"assertEquals( ""d-e,f"", option.getArgument( 1 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,683,public void test2ArgsParse3()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,685,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,687,DEFINE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,690,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,691,"new String[] {""-D"",""A-b,c"",""G-e,f""},"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,692,options );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,694,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,696,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,697,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,699,"assertEquals( 1, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,700,"assertEquals( DEFINE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,702,final CLOption option = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,703,"assertEquals( ""A-b,c"", option.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,704,"assertEquals( ""G-e,f"", option.getArgument( 1 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,707,public void test2ArgsParse4()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,709,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,711,DEFINE_MANY
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,714,final CLArgsParser parser = new CLArgsParser(
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,715,"new String[] {""-Dval1=-1"",""-D"",""val2=-2"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,716,"""--define=val-3=-3"",""--define"",""val4-=-4""},"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,717,options );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,719,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,721,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,722,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,724,"assertEquals( 4, size );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,725,for (int i=0;i<size;i++){
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,726,"assertEquals( DEFINE_OPT, ((CLOption)clOptions.get( i )).getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,729,CLOption option;
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,730,option = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,731,"assertEquals( ""val1"", option.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,732,"assertEquals( ""-1"", option.getArgument( 1 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,734,option = (CLOption)clOptions.get( 1 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,735,"assertEquals( ""val2"", option.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,736,"assertEquals( ""-2"", option.getArgument( 1 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,738,option = (CLOption)clOptions.get( 2 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,739,"assertEquals( ""val-3"", option.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,740,"assertEquals( ""-3"", option.getArgument( 1 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,742,option = (CLOption)clOptions.get( 3 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,743,"assertEquals( ""val4-"", option.getArgument( 0 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,744,"assertEquals( ""-4"", option.getArgument( 1 ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,747,public void testPartParse()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,749,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,751,YOU
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,754,final ParserControl control = new AbstractParserControl()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,756,public boolean isFinished( int lastOptionCode )
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,758,return (lastOptionCode == YOU_OPT);
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,762,"final CLArgsParser parser = new CLArgsParser( ARGLIST1, options, control );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,764,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,766,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,767,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,769,"assertEquals( size, 1 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,770,"assertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), YOU_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,773,public void test2PartParse()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,775,final CLOptionDescriptor[] options1 = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,777,YOU
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,780,final CLOptionDescriptor[] options2 = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,782,"ALL, CLEAR1, CLEAR2, CLEAR3, CLEAR5"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,785,final ParserControl control1 = new AbstractParserControl()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,787,public boolean isFinished( int lastOptionCode )
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,789,return (lastOptionCode == YOU_OPT);
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,793,"final CLArgsParser parser1 = new CLArgsParser( ARGLIST1, options1, control1 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,795,"assertNull( parser1.getErrorString(), parser1.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,797,final List clOptions1 = parser1.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,798,final int size1 = clOptions1.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,800,"assertEquals( size1, 1 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,801,"assertEquals( ((CLOption)clOptions1.get( 0 )).getDescriptor().getId(), YOU_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,803,final CLArgsParser parser2 =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,804,"new CLArgsParser( parser1.getUnparsedArgs(), options2 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,806,"assertNull( parser2.getErrorString(), parser2.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,808,final List clOptions2 = parser2.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,809,final int size2 = clOptions2.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,811,"assertEquals( size2, 7 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,812,"assertEquals( ((CLOption)clOptions2.get( 0 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,813,"assertEquals( ((CLOption)clOptions2.get( 1 )).getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,814,"assertEquals( ((CLOption)clOptions2.get( 2 )).getDescriptor().getId(), CLEAR1_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,815,"assertEquals( ((CLOption)clOptions2.get( 3 )).getDescriptor().getId(), CLEAR2_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,816,"assertEquals( ((CLOption)clOptions2.get( 4 )).getDescriptor().getId(), CLEAR3_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,817,"assertEquals( ((CLOption)clOptions2.get( 5 )).getDescriptor().getId(), CLEAR5_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,818,"assertEquals( ((CLOption)clOptions2.get( 6 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,821,public void test2PartPartialParse()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,823,final CLOptionDescriptor[] options1 = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,825,"YOU, ALL, CLEAR1"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,828,final CLOptionDescriptor[] options2 = new CLOptionDescriptor[]{};
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,830,final ParserControl control1 = new AbstractParserControl()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,832,public boolean isFinished( final int lastOptionCode )
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,834,return (lastOptionCode == CLEAR1_OPT);
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,838,"final CLArgsParser parser1 = new CLArgsParser( ARGLIST1, options1, control1 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,840,"assertNull( parser1.getErrorString(), parser1.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,842,final List clOptions1 = parser1.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,843,final int size1 = clOptions1.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,845,"assertEquals( size1, 4 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,846,"assertEquals( ((CLOption)clOptions1.get( 0 )).getDescriptor().getId(), YOU_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,847,"assertEquals( ((CLOption)clOptions1.get( 1 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,848,"assertEquals( ((CLOption)clOptions1.get( 2 )).getDescriptor().getId(), ALL_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,849,"assertEquals( ((CLOption)clOptions1.get( 3 )).getDescriptor().getId(), CLEAR1_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,851,"assertTrue( parser1.getUnparsedArgs()[0].equals( ""ler"" ) );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,853,final CLArgsParser parser2 =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,854,"new CLArgsParser( parser1.getUnparsedArgs(), options2 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,856,"assertNull( parser2.getErrorString(), parser2.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,858,final List clOptions2 = parser2.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,859,final int size2 = clOptions2.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,861,"assertEquals( size2, 2 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,862,"assertEquals( ((CLOption)clOptions2.get( 0 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,863,"assertEquals( ((CLOption)clOptions2.get( 1 )).getDescriptor().getId(), 0 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,866,public void testDuplicatesFail()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,868,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,870,"YOU, ALL, CLEAR1, CLEAR2, CLEAR3, CLEAR5"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,873,"final CLArgsParser parser = new CLArgsParser( ARGLIST1, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,875,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,878,public void testIncomplete2Args()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,880,"//""-Dstupid="""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,881,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,883,DEFINE
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,886,"final CLArgsParser parser = new CLArgsParser( new String[]{""-Dstupid=""}, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,888,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,890,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,891,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,893,"assertEquals( size, 1 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,894,final CLOption option = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,895,"assertEquals( option.getDescriptor().getId(), DEFINE_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,896,"assertEquals( option.getArgument( 0 ), ""stupid"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,897,"assertEquals( option.getArgument( 1 ), """" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,900,public void testIncomplete2ArgsMixed()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,902,"//""-Dstupid="",""-c"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,903,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,905,"DEFINE, CLEAR1"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,908,"final String[] args = new String[]{""-Dstupid="", ""-c""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,910,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,912,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,914,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,915,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,917,"assertEquals( size, 2 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,918,"assertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), CLEAR1_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,919,final CLOption option = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,920,"assertEquals( option.getDescriptor().getId(), DEFINE_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,921,"assertEquals( option.getArgument( 0 ), ""stupid"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,922,"assertEquals( option.getArgument( 1 ), """" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,925,public void testIncomplete2ArgsMixedNoEq()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,927,"//""-Dstupid"",""-c"""
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,928,final CLOptionDescriptor[] options = new CLOptionDescriptor[]
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,930,"DEFINE, CLEAR1"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,933,"final String[] args = new String[]{""-DStupid"", ""-c""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,935,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,937,"assertNull( parser.getErrorString(), parser.getErrorString() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,939,final List clOptions = parser.getArguments();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,940,final int size = clOptions.size();
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,942,"assertEquals( size, 2 );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,943,"assertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), CLEAR1_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,944,final CLOption option = (CLOption)clOptions.get( 0 );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,945,"assertEquals( option.getDescriptor().getId(), DEFINE_OPT );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,946,"assertEquals( option.getArgument( 0 ), ""Stupid"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,947,"assertEquals( option.getArgument( 1 ), """" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,951,* Test the getArgumentById and getArgumentByName lookup methods.
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,953,public void testArgumentLookup()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,955,"final String[] args = {""-f"", ""testarg""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,956,final CLOptionDescriptor[] options = {FILE};
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,957,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,959,CLOption optionById = parser.getArgumentById( FILE_OPT );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,960,assertNotNull( optionById );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,961,"assertEquals( FILE_OPT, optionById.getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,963,CLOption optionByName = parser.getArgumentByName( FILE.getName() );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,964,assertNotNull( optionByName );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,965,"assertEquals( FILE_OPT, optionByName.getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,969,* Test that you can have null long forms.
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,971,public void testNullLongForm()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,973,final CLOptionDescriptor test =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,974,"new CLOptionDescriptor( null,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,975,"CLOptionDescriptor.ARGUMENT_DISALLOWED,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,976,"'n',"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,977,"""test null long form"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,979,"final String[] args = {""-n"", ""testarg""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,980,final CLOptionDescriptor[] options = {test};
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,981,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,983,final CLOption optionByID = parser.getArgumentById( 'n' );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,984,assertNotNull( optionByID );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,985,"assertEquals( 'n', optionByID.getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,987,final CLOption optionByName = parser.getArgumentByName( FILE.getName() );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,988,"assertNull( ""Looking for non-existent option by name"", optionByName );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,992,* Test that you can have null descriptions.
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,994,public void testNullDescription()
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,996,final CLOptionDescriptor test =
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,997,"new CLOptionDescriptor( ""nulltest"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,998,"CLOptionDescriptor.ARGUMENT_DISALLOWED,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,999,"'n',"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1000,null );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1002,"final String[] args = {""-n"", ""testarg""};"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1003,final CLOptionDescriptor[] options = {test};
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1004,"final CLArgsParser parser = new CLArgsParser( args, options );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1006,final CLOption optionByID = parser.getArgumentById( 'n' );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1007,assertNotNull( optionByID );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1008,"assertEquals( 'n', optionByID.getDescriptor().getId() );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1010,final StringBuffer sb = CLUtil.describeOptions( options );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1011,"final String lineSeparator = System.getProperty( ""line.separator"" );"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1012,"assertEquals( ""Testing display of null description"","
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1013,"""\t-n, --nulltest"" + lineSeparator,"
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1014,sb.toString() );
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1017,*  TODO add tests to check for:
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1018,*  - name clash
True,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1019,*  - long option abbreviations (match shortest unique abbreviation)
