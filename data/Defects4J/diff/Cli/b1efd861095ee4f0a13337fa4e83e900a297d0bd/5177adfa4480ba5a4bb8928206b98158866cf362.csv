is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,317,f( optionalArg ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,318,his.numberOfArgs = 1;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.8 2002/09/09 19:48:13 jkeyes Exp $"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3, $Revision: 1.8 $
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4, $Date: 2002/09/09 19:48:13 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.9 2002/09/10 21:35:57 jkeyes Exp $"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3,* $Revision: 1.9 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4,* $Date: 2002/09/10 21:35:57 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,237,instance.numberOfArgs = 1;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,238,instance.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,239,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,243,* <p>The next Option can have an unlimited number of
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,244,* optional arguments.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,246,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,248,public static OptionBuilder hasOptionalArgs( ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,249,instance.numberOfArgs = Option.UNLIMITED_VALUES;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,250,instance.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,251,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,255,* <p>The next Option can have the specified number of
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,256,* optional arguments.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,258,* @param numArgs - the maximum number of optional arguments
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,259,* the next Option created can have.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,260,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,262,public static OptionBuilder hasOptionalArgs( int numArgs ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,263,instance.numberOfArgs = numArgs;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,307,* <p>Create an Option using the current settings</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,309,* @return the Option instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,310,* @throws IllegalArgumentException if <code>longOpt</code> has
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,311,* not been set.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,312,* @see Option.
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,314,public static Option create()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,315,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,317,if( longopt == null ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,318,"throw new IllegalArgumentException( ""must specify longopt"" );"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,321,"return create( "" "" );"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,310, <p>Create an Option using the current settings</p>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,312, @return the Option instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,313, @throws IllegalArgumentException if <code>longOpt</code> has
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,314, not been set.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,315, @see Option.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,317,ublic static Option create()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,318,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,320,f( longopt == null ) {
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,321,"hrow new IllegalArgumentException( ""must specify longopt"" );"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,324,"eturn create( "" "" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,23,estSuite suite = new TestSuite();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,25,"uite.addTest( new ValueTest(""testLongNoArg"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,27,eturn suite;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,25,private CommandLine _clOptional = null;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,26,private Options opts = new Options();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,41,ptions opts = new Options();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,53,opts.addOption( OptionBuilder.hasOptionalArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,54,.create( 'e') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,56,opts.addOption( OptionBuilder.hasOptionalArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,57,".withLongOpt( ""fish"" )"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,58,.create( ) );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,60,opts.addOption( OptionBuilder.hasOptionalArgs()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,61,".withLongOpt( ""gravy"" )"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,62,.create( ) );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,64,opts.addOption( OptionBuilder.hasOptionalArgs( 2 )
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,65,".withLongOpt( ""hide"" )"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,66,.create( ) );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,68,opts.addOption( OptionBuilder.hasOptionalArgs( 2 )
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,69,.create( 'i' ) );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,71,opts.addOption( OptionBuilder.hasOptionalArgs( )
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,72,.create( 'j' ) );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,61,"-b"", ""foo"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,62,"--c"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,63,"--d"", ""bar"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,75,"""-b"", ""foo"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,76,"""--c"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,77,"""--d"", ""bar"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,122,public void testShortOptionalArgNoValue()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,124,"String[] args = new String[] { ""-e"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,126,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,128,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,129,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,130,"assertTrue( cmd.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,131,"assertNull( cmd.getOptionValue(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,133,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,135,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,139,public void testShortOptionalArgValue()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,141,"String[] args = new String[] { ""-e"", ""everything"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,143,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,145,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,146,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,147,"assertTrue( cmd.hasOption(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,148,"assertEquals( ""everything"", cmd.getOptionValue(""e"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,150,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,152,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,156,public void testLongOptionalNoValue()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,158,"String[] args = new String[] { ""--fish"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,160,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,162,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,163,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,164,"assertTrue( cmd.hasOption(""fish"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,165,"assertNull( cmd.getOptionValue(""fish"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,167,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,169,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,173,public void testLongOptionalArgValue()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,175,"String[] args = new String[] { ""--fish"", ""face"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,177,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,179,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,180,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,181,"assertTrue( cmd.hasOption(""fish"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,182,"assertEquals( ""face"", cmd.getOptionValue(""fish"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,184,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,186,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,190,public void testShortOptionalArgValues()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,192,"String[] args = new String[] { ""-j"", ""ink"", ""idea"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,194,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,196,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,197,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,198,"assertTrue( cmd.hasOption(""j"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,199,"assertEquals( ""ink"", cmd.getOptionValue(""j"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,200,"assertEquals( ""ink"", cmd.getOptionValues(""j"")[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,201,"assertEquals( ""idea"", cmd.getOptionValues(""j"")[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,202,"assertEquals( cmd.getArgs().length, 0 );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,204,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,206,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,210,public void testLongOptionalArgValues()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,212,"String[] args = new String[] { ""--gravy"", ""gold"", ""garden"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,214,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,216,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,217,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,218,"assertTrue( cmd.hasOption(""gravy"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,219,"assertEquals( ""gold"", cmd.getOptionValue(""gravy"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,220,"assertEquals( ""gold"", cmd.getOptionValues(""gravy"")[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,221,"assertEquals( ""garden"", cmd.getOptionValues(""gravy"")[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,222,"assertEquals( cmd.getArgs().length, 0 );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,224,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,226,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,230,public void testShortOptionalNArgValues()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,232,"String[] args = new String[] { ""-i"", ""ink"", ""idea"", ""isotope"", ""ice"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,234,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,236,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,237,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,238,"assertTrue( cmd.hasOption(""i"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,239,"assertEquals( ""ink"", cmd.getOptionValue(""i"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,240,"assertEquals( ""ink"", cmd.getOptionValues(""i"")[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,241,"assertEquals( ""idea"", cmd.getOptionValues(""i"")[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,242,"assertEquals( cmd.getArgs().length, 2 );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,243,"assertEquals( ""isotope"", cmd.getArgs()[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,244,"assertEquals( ""ice"", cmd.getArgs()[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,246,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,248,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,252,public void testLongOptionalNArgValues()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,254,"String[] args = new String[] { ""--hide"", ""house"", ""hair"", ""head"""
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,256,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,258,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,259,"CommandLine cmd = parser.parse(opts,args);"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,260,"assertTrue( cmd.hasOption(""hide"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,261,"assertEquals( ""house"", cmd.getOptionValue(""hide"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,262,"assertEquals( ""house"", cmd.getOptionValues(""hide"")[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,263,"assertEquals( ""hair"", cmd.getOptionValues(""hide"")[1] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,264,"assertEquals( cmd.getArgs().length, 1 );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,265,"assertEquals( ""head"", cmd.getArgs()[0] );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,267,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,269,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
