is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,270,f( options.get( opt.getOpt() ) != null ) {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,271,(java.util.List)options.get( opt.getOpt() )).add( opt );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,270,String key = opt.getOpt();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,271,"if( "" "".equals(key) ) {"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,272,key = opt.getLongOpt();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,274,if( options.get( key ) != null ) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,275,((java.util.List)options.get( key )).add( opt );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,274,"ptions.put( opt.getOpt(), new java.util.ArrayList() );"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,275,(java.util.List)options.get( opt.getOpt() ) ).add( opt );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,278,"options.put( key, new java.util.ArrayList() );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,279,((java.util.List)options.get( key ) ).add( opt );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,94,/** constant that specifies the number of argument values has not been specified */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,95,public final static int UNINITIALIZED = -1;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,97,/** constant that specifies the number of argument values is infinite */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,98,public final static int UNLIMITED_VALUES = -2;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,95,rivate String opt = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,101,private String opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,98,rivate String     longOpt      = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,104,private String longOpt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,101,rivate boolean    hasArg       = false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,107,private boolean hasArg;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,104,rivate String     description  = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,110,private String description;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,107,rivate boolean    required     = false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,113,private boolean required;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,109,rivate boolean optionalArg = false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,115,/** specifies whether the argument value of this Option is optional */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,116,private boolean optionalArg;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,115,rivate int    numberOfArgs = UNINITIALIZED;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,117,** number of arguments constants */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,118,ublic final static int UNINITIALIZED = -1;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,119,ublic final static int UNLIMITED_VALUES = -2;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,122,private int numberOfArgs = UNINITIALIZED;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,122,rivate Object     type         = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,125,private Object type;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,125,rivate ArrayList  values       = new ArrayList();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,127,/** the list of argument values **/
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,128,private ArrayList values = new ArrayList();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,133,/** the character that is the value separator */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,134,private char valuesep;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,137,* <p>Validates whether <code>opt</code> is a permissable Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,138,* shortOpt.  The rules that specify if the <code>opt</code>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,139,* is valid are:</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,140,* <ul>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,141,*  <li><code>opt</code> is not NULL</li>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,142,*  <li>a single character <code>opt</code> that is either
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,143,"*  ' '(special case), '?', '@' or a letter</li>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,144,*  <li>a multi character <code>opt</code> that only contains
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,145,*  letters.</li>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,146,* </ul>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,148,* @param opt The option string to validate
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,149,* @throws IllegalArgumentException if the Option is not valid.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,154,// check that opt is not NULL
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,158,// handle the single character opt
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,137,f ( !isValidOpt( opt.charAt( 0 ) ) ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,160,char ch = opt.charAt( 0 );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,161,if ( !isValidOpt( ch ) ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,139," opt.charAt( 0 ) + ""'"" );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,163,"+ ch + ""'"" );"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,141,d = opt.charAt( 0 );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,165,id = ch;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,167,// handle the multi character opt
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,153,rivate boolean isValidOpt( char c )
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,155,f ( ! ( isValidChar( c ) || c == '?' || c == '@') ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,156,eturn false;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,158,eturn true;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,179,* <p>Returns whether the specified character is a valid Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,181,* @param c the option to validate
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,182,"* @return true if <code>c</code> is a letter, ' ', '?' or '@', otherwise false."
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,184,private boolean isValidOpt( char c ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,185,return ( isValidChar( c ) || c == ' ' || c == '?' || c == '@' );
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,161,rivate boolean isValidChar( char c )
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,163,f ( ! ( Character.isLetter( c ) ) ) {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,164,eturn false;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,166,eturn true;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,189,* <p>Returns whether the specified character is a valid character.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,191,* @param c the character to validate
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,192,* @return true if <code>c</code> is a letter.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,194,private boolean isValidChar( char c ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,195,return Character.isLetter( c );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,199,* <p>Returns the id of this Option.  This is only set when the
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,200,* Option shortOpt is a single character.  This is used for switch
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,201,* statements.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,203,* @return the id of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,180,"ublic Option(String opt, String description)"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,216,"public Option( String opt, String description )"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,183,"his(opt, null, false, description);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,219,"this( opt, null, false, description );"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,193,"ublic Option(String opt, boolean hasArg, String description)"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,229,"public Option( String opt, boolean hasArg, String description )"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,196,"his(opt, null, hasArg, description);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,232,"this( opt, null, hasArg, description );"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,200, Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,236,* <p>Creates an Option using the specified parameters.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,207,"ublic Option(String opt, String longOpt, boolean hasArg, String description)"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,243,"public Option( String opt, String longOpt, boolean hasArg, String description )"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,246,// ensure that the option is valid
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,252,// if hasArg is set then the number of arguments is 1
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,222,** <p>Retrieve the name of this Option</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,261,/** <p>Retrieve the name of this Option.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,224, <p>It is this character which can be used with
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,263,* <p>It is this String which can be used with
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,236, <p>Retrieve the type of this Option</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,275,* <p>Retrieve the type of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,284,* <p>Sets the type of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,286,* @param type the type of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,248,** <p>Retrieve the long name of this Option</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,293,* <p>Retrieve the long name of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,302,* <p>Sets the long name of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,304,* @param longOpt the long name of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,261, Sets whether this Option can have an optional argument.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,311,* <p>Sets whether this Option can have an optional argument.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,304,** <p>Query to see if this Option requires an argument</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,355,* <p>Query to see if this Option requires an argument</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,364,* <p>Sets whether this Option is mandatory.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,366,* @param required specifies whether this Option is mandatory
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,316,** <p>Query to see if this Option can take many values</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,373,* <p>Query to see if this Option can take many values</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,324,** <p>Sets the number of argument values this Option can take.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,382,* <p>Sets the number of argument values this Option can take.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,332,rivate char valuesep;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,391,* <p>Sets the value separator.  For example if the argument value
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,392,"* was a Java property, the value separator would be '='.</p>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,394,* @param sep The value separator.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,401,* <p>Returns the value separator character.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,403,* @return the value separator character.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,342,** <p>Returns the number of argument values this Option can take.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,410,* <p>Returns the number of argument values this Option can take.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,350,"** <p>Dump state, suitable for debugging.</p>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,419,"* <p>Dump state, suitable for debugging.</p>"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,383, Adds the specified value to this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,452,* <p>Adds the specified value to this Option.</p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,423, null if there are no values.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,492,* <code>null</code> if there are no values.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,431, null if there are no values.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,500,* <code>null</code> if there are no values.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,449, @return the values of this Option or null if there are no
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,450, values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,518,* @return the values of this Option as a String array
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,519,* or null if there are no values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,526,* @return the values of this Option as a List
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,527,* or null if there are no values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,534,* @return a copy of this Option
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.5 2002/08/15 22:05:18 jkeyes Exp $"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3, $Revision: 1.5 $
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4, $Date: 2002/08/15 22:05:18 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.6 2002/08/18 19:07:42 jkeyes Exp $"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3,* $Revision: 1.6 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4,* $Date: 2002/08/18 19:07:42 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,304,public static Option create()
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,305,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,307,if( longopt == null ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,308,"throw new IllegalArgumentException( ""must specify longopt"" );"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,311,"return create( "" "" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8," $Id: BugsTest.java,v 1.3 2002/08/18 15:52:23 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8,"* $Id: BugsTest.java,v 1.4 2002/08/18 19:07:42 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,40,public void test11457() {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,41,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,42,"options.addOption( OptionBuilder.withLongOpt( ""verbose"" )"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,43,.create() );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,44,"String[] args = new String[] { ""--verbose"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,46,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,48,try {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,49,"CommandLine cmd = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,50,"assertTrue( cmd.hasOption( ""verbose"" ) );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,52,catch( ParseException exp ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,53,exp.printStackTrace();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,54,"fail( ""Unexpected Exception: "" + exp.getMessage() );"
