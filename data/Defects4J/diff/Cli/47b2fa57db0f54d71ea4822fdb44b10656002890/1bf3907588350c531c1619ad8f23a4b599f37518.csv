is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,17, under the License.
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,19,ackage org.apache.commons.cli2.resource;
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,21,ublic abstract class ResourceConstants {
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,22,"ublic static final String CLASSVALIDATOR_BAD_CLASSNAME = ""ClassValidator.bad.classname"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,23,"ublic static final String CLASSVALIDATOR_CLASS_NOTFOUND = ""ClassValidator.class.notfound"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,24,"ublic static final String CLASSVALIDATOR_CLASS_ACCESS = ""ClassValidator.class.access"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,25,"ublic static final String CLASSVALIDATOR_CLASS_CREATE = ""ClassValidator.class.create"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,26,"ublic static final String DATEVALIDATOR_DATE_OUTOFRANGE = ""DateValidator.date.OutOfRange"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,27,"ublic static final String URLVALIDATOR_MALFORMED_URL = ""URLValidator.malformed.URL"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,28,ublic static final String NUMBERVALIDATOR_NUMBER_OUTOFRANGE =
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,29,"NumberValidator.number.OutOfRange"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,30,"ublic static final String ARGUMENT_UNEXPECTED_VALUE = ""Argument.unexpected.value"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,31,"ublic static final String ARGUMENT_MIN_EXCEEDS_MAX = ""Argument.minimum.exceeds.maximum"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,32,"ublic static final String ARGUMENT_TOO_FEW_DEFAULTS = ""Argument.too.few.defaults"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,33,"ublic static final String ARGUMENT_TOO_MANY_DEFAULTS = ""Argument.too.many.defaults"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,34,"ublic static final String ARGUMENT_MISSING_VALUES = ""Argument.missing.values"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,35,"ublic static final String ARGUMENT_TOO_MANY_VALUES = ""Argument.too.many.values"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,36,"ublic static final String OPTION_TRIGGER_NEEDS_PREFIX = ""Option.trigger.needs.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,37,"ublic static final String OPTION_MISSING_REQUIRED = ""Option.missing.required"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,38,"ublic static final String OPTION_NO_NAME = ""Option.no.name"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,39,"ublic static final String OPTION_ILLEGAL_LONG_PREFIX = ""Option.illegal.long.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,40,"ublic static final String OPTION_ILLEGAL_SHORT_PREFIX = ""Option.illegal.short.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,41,"ublic static final String UNEXPECTED_TOKEN = ""Unexpected.token"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,42,"ublic static final String MISSING_OPTION = ""Missing.option"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,43,"ublic static final String CANNOT_BURST = ""Cannot.burst"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,44,"ublic static final String COMMAND_PREFERRED_NAME_TOO_SHORT = ""Command.preferredName.too.short"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,45,"ublic static final String SWITCH_ILLEGAL_ENABLED_PREFIX = ""Option.illegal.enabled.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,46,"ublic static final String SWITCH_ILLEGAL_DISABLED_PREFIX = ""Option.illegal.disabled.prefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,47,"ublic static final String SWITCH_IDENTICAL_PREFIXES = ""Option.identical.prefixes"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,48,"ublic static final String SWITCH_ALREADY_SET = ""Switch.already.set"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,49,"ublic static final String SWITCH_NO_ENABLED_PREFIX = ""Switch.no.enabledPrefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,50,"ublic static final String SWITCH_NO_DISABLED_PREFIX = ""Switch.no.disabledPrefix"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,51,ublic static final String SWITCH_ENABLED_STARTS_WITH_DISABLED =
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,52,"Switch.enabled.startsWith.disabled"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,53,ublic static final String SWITCH_DISABLED_STARTWS_WITH_ENABLED =
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,54,"Switch.disabled.startsWith.enabled"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,55,"ublic static final String SWITCH_PREFERRED_NAME_TOO_SHORT = ""Switch.preferredName.too.short"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,56,"ublic static final String SOURCE_DEST_MUST_ENFORCE_VALUES = ""SourceDest.must.enforce.values"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,57,"ublic static final String HELPFORMATTER_GUTTER_TOO_LONG = ""HelpFormatter.gutter.too.long"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,58,"ublic static final String HELPFORMATTER_WIDTH_TOO_NARROW = ""HelpFormatter.width.too.narrow"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,59,"ublic static final String ENUM_ILLEGAL_VALUE = ""Enum.illegal.value"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,60,"ublic static final String ARGUMENT_BUILDER_NULL_CONSUME_REMAINING = ""ArgumentBuilder.null.consume.remaining"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,61,"ublic static final String ARGUMENT_BUILDER_EMPTY_CONSUME_REMAINING = ""ArgumentBuilder.empty.consume.remaining"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,62,"ublic static final String ARGUMENT_BUILDER_NULL_DEFAULT = ""ArgumentBuilder.null.default"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,63,"ublic static final String ARGUMENT_BUILDER_NULL_DEFAULTS = ""ArgumentBuilder.null.defaults"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,64,"ublic static final String ARGUMENT_BUILDER_NEGATIVE_MAXIMUM = ""ArgumentBuilder.negative.maximum"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,65,"ublic static final String ARGUMENT_BUILDER_NEGATIVE_MINIMUM = ""ArgumentBuilder.negative.minimum"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,66,"ublic static final String ARGUMENT_BUILDER_NULL_NAME = ""ArgumentBuilder.null.name"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,67,"ublic static final String ARGUMENT_BUILDER_EMPTY_NAME = ""ArgumentBuilder.empty.name"";"
False,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,68,"ublic static final String ARGUMENT_BUILDER_NULL_VALIDATOR = ""ArgumentBuilder.null.validator"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,4,* distributed with this work for additional information
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,7,"* ""License""); you may not use this file except in compliance"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,8,* with the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,13,* software distributed under the License is distributed on an
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,15,"* KIND, either express or implied.  See the License for the"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,16,* specific language governing permissions and limitations
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,17,* under the License.
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,19,package org.apache.commons.cli2.resource;
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,21,public abstract class ResourceConstants {
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,22,"public static final String CLASSVALIDATOR_BAD_CLASSNAME = ""ClassValidator.bad.classname"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,23,"public static final String CLASSVALIDATOR_CLASS_NOTFOUND = ""ClassValidator.class.notfound"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,24,"public static final String CLASSVALIDATOR_CLASS_ACCESS = ""ClassValidator.class.access"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,25,"public static final String CLASSVALIDATOR_CLASS_CREATE = ""ClassValidator.class.create"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,26,"public static final String DATEVALIDATOR_DATE_OUTOFRANGE = ""DateValidator.date.OutOfRange"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,27,"public static final String URLVALIDATOR_MALFORMED_URL = ""URLValidator.malformed.URL"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,28,public static final String NUMBERVALIDATOR_NUMBER_OUTOFRANGE =
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,29,"""NumberValidator.number.OutOfRange"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,30,"public static final String ARGUMENT_UNEXPECTED_VALUE = ""Argument.unexpected.value"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,31,"public static final String ARGUMENT_MIN_EXCEEDS_MAX = ""Argument.minimum.exceeds.maximum"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,32,"public static final String ARGUMENT_TOO_FEW_DEFAULTS = ""Argument.too.few.defaults"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,33,"public static final String ARGUMENT_TOO_MANY_DEFAULTS = ""Argument.too.many.defaults"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,34,"public static final String ARGUMENT_MISSING_VALUES = ""Argument.missing.values"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,35,"public static final String ARGUMENT_TOO_MANY_VALUES = ""Argument.too.many.values"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,36,"public static final String OPTION_TRIGGER_NEEDS_PREFIX = ""Option.trigger.needs.prefix"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,37,"public static final String OPTION_MISSING_REQUIRED = ""Option.missing.required"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,38,"public static final String OPTION_NO_NAME = ""Option.no.name"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,39,"public static final String OPTION_ILLEGAL_LONG_PREFIX = ""Option.illegal.long.prefix"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,40,"public static final String OPTION_ILLEGAL_SHORT_PREFIX = ""Option.illegal.short.prefix"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,41,"public static final String UNEXPECTED_TOKEN = ""Unexpected.token"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,42,"public static final String MISSING_OPTION = ""Missing.option"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,43,"public static final String CANNOT_BURST = ""Cannot.burst"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,44,"public static final String COMMAND_PREFERRED_NAME_TOO_SHORT = ""Command.preferredName.too.short"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,45,"public static final String SWITCH_ILLEGAL_ENABLED_PREFIX = ""Option.illegal.enabled.prefix"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,46,"public static final String SWITCH_ILLEGAL_DISABLED_PREFIX = ""Option.illegal.disabled.prefix"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,47,"public static final String SWITCH_IDENTICAL_PREFIXES = ""Option.identical.prefixes"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,48,"public static final String SWITCH_ALREADY_SET = ""Switch.already.set"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,49,"public static final String SWITCH_NO_ENABLED_PREFIX = ""Switch.no.enabledPrefix"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,50,"public static final String SWITCH_NO_DISABLED_PREFIX = ""Switch.no.disabledPrefix"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,51,public static final String SWITCH_ENABLED_STARTS_WITH_DISABLED =
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,52,"""Switch.enabled.startsWith.disabled"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,53,public static final String SWITCH_DISABLED_STARTWS_WITH_ENABLED =
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,54,"""Switch.disabled.startsWith.enabled"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,55,"public static final String SWITCH_PREFERRED_NAME_TOO_SHORT = ""Switch.preferredName.too.short"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,56,"public static final String SOURCE_DEST_MUST_ENFORCE_VALUES = ""SourceDest.must.enforce.values"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,57,"public static final String HELPFORMATTER_GUTTER_TOO_LONG = ""HelpFormatter.gutter.too.long"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,58,"public static final String HELPFORMATTER_WIDTH_TOO_NARROW = ""HelpFormatter.width.too.narrow"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,59,"public static final String ENUM_ILLEGAL_VALUE = ""Enum.illegal.value"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,60,"public static final String ARGUMENT_BUILDER_NULL_CONSUME_REMAINING = ""ArgumentBuilder.null.consume.remaining"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,61,"public static final String ARGUMENT_BUILDER_EMPTY_CONSUME_REMAINING = ""ArgumentBuilder.empty.consume.remaining"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,62,"public static final String ARGUMENT_BUILDER_NULL_DEFAULT = ""ArgumentBuilder.null.default"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,63,"public static final String ARGUMENT_BUILDER_NULL_DEFAULTS = ""ArgumentBuilder.null.defaults"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,64,"public static final String ARGUMENT_BUILDER_NEGATIVE_MAXIMUM = ""ArgumentBuilder.negative.maximum"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,65,"public static final String ARGUMENT_BUILDER_NEGATIVE_MINIMUM = ""ArgumentBuilder.negative.minimum"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,66,"public static final String ARGUMENT_BUILDER_NULL_NAME = ""ArgumentBuilder.null.name"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,67,"public static final String ARGUMENT_BUILDER_EMPTY_NAME = ""ArgumentBuilder.empty.name"";"
True,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,src/java/org/apache/commons/cli2/resource/ResourceConstants.java,68,"public static final String ARGUMENT_BUILDER_NULL_VALIDATOR = ""ArgumentBuilder.null.validator"";"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,17, under the License.
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,19,ackage org.apache.commons.cli2.bug;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,21,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,23,mport org.apache.commons.cli2.Argument;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,24,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,25,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,26,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,27,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,28,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,29,mport org.apache.commons.cli2.commandline.Parser;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,30,mport org.apache.commons.cli2.option.SourceDestArgument;
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,33, The first is a loop in Parser.parse() if I set a non-declared option. This
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,34, code goes into a loop in Parser.java method parse this while loop runs
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,35, endless
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,37, @author Steve Alberty
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,39,ublic class BugLoopingOptionLookAlikeTest extends TestCase {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,41,ublic void testLoopingOptionLookAlike() {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,42,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,43,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,44,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,45,inal Group options = gbuilder
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,46,"withName(""ant"")"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,47,"withOption(obuilder.withShortName(""help"").withDescription(""print this message"").create())"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,48,"withOption(obuilder.withShortName(""projecthelp"").withDescription(""print project help information"").create())"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,49,"withOption(abuilder.withName(""target"").create())"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,50,create();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,52,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,53,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,54,ry {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,55,"arser.parse(new String[] { ""-abcdef"","
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,56,"testfile.txt "", });"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,57,"ail(""OptionException"");"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,58, catch (OptionException e) {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,59,"ssertEquals(""Unexpected -abcdef while processing ant"",e.getMessage());"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,63,ublic void testLoopingOptionLookAlike2() {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,64,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,65,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,66,"inal Argument inputfile_opt = abuilder.withName(""input"").withMinimum(1).withMaximum(1).create();"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,67,"inal Argument outputfile_opt = abuilder.withName(""output"").withMinimum(1).withMaximum(1).create();"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,68,"inal Argument targets = new SourceDestArgument(inputfile_opt, outputfile_opt);"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,69,inal Group options = gbuilder.withOption(targets).create();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,70,inal Parser parser = new Parser();
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,71,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,72,ry {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,73,"arser.parse(new String[] { ""testfile.txt"", ""testfile.txt"", ""testfile.txt"", ""testfile.txt"" });"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,74,"ail(""OptionException"");"
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,75, catch (OptionException e) {
False,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,76,"ssertEquals(""Unexpected testfile.txt while processing "", e.getMessage());"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,4,* distributed with this work for additional information
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,13,* software distributed under the License is distributed on an
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,16,* specific language governing permissions and limitations
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,17,* under the License.
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,19,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,21,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,23,import org.apache.commons.cli2.Argument;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,24,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,25,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,26,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,27,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,28,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,29,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,30,import org.apache.commons.cli2.option.SourceDestArgument;
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,33,* The first is a loop in Parser.parse() if I set a non-declared option. This
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,34, code goes into a loop in Parser.java method parse this while loop runs
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,35,* endless
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,37,* @author Steve Alberty
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,39,public class BugLoopingOptionLookAlikeTest extends TestCase {
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,41,public void testLoopingOptionLookAlike() {
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,42,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,43,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,44,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,45,final Group options = gbuilder
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,46,".withName(""ant"")"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,47,".withOption(obuilder.withShortName(""help"").withDescription(""print this message"").create())"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,48,".withOption(obuilder.withShortName(""projecthelp"").withDescription(""print project help information"").create())"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,49,".withOption(abuilder.withName(""target"").create())"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,50,.create();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,52,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,53,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,54,try {
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,55,"parser.parse(new String[] { ""-abcdef"","
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,56,"""testfile.txt "", });"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,57,"fail(""OptionException"");"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,58,} catch (OptionException e) {
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,59,"assertEquals(""Unexpected -abcdef while processing ant"",e.getMessage());"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,63,public void testLoopingOptionLookAlike2() {
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,64,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,65,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,66,"final Argument inputfile_opt = abuilder.withName(""input"").withMinimum(1).withMaximum(1).create();"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,67,"final Argument outputfile_opt = abuilder.withName(""output"").withMinimum(1).withMaximum(1).create();"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,68,"final Argument targets = new SourceDestArgument(inputfile_opt, outputfile_opt);"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,69,final Group options = gbuilder.withOption(targets).create();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,70,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,71,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,72,try {
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,73,"parser.parse(new String[] { ""testfile.txt"", ""testfile.txt"", ""testfile.txt"", ""testfile.txt"" });"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,74,"fail(""OptionException"");"
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,75,} catch (OptionException e) {
True,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,src/test/org/apache/commons/cli2/bug/BugLoopingOptionLookAlikeTest.java,76,"assertEquals(""Unexpected testfile.txt while processing "", e.getMessage());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,17, under the License.
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,19,ackage org.apache.commons.cli2.builder;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,21,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,22,mport java.util.List;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,24,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,26,mport org.apache.commons.cli2.option.ArgumentImpl;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,27,mport org.apache.commons.cli2.resource.ResourceConstants;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,28,mport org.apache.commons.cli2.resource.ResourceHelper;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,29,mport org.apache.commons.cli2.validation.DateValidator;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,30,mport org.apache.commons.cli2.validation.Validator;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,32,ublic class ArgumentBuilderTest
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,33,xtends TestCase {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,34,rivate static final ResourceHelper resources = ResourceHelper.getResourceHelper();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,35,rivate ArgumentBuilder argumentBuilder;
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,38, @see TestCase#setUp()
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,40,rotected void setUp()
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,41,hrows Exception {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,42,his.argumentBuilder = new ArgumentBuilder();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,45,ublic void testConsumeRemaining() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,46,"his.argumentBuilder.withConsumeRemaining(""--"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,47,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,49,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,51,"ssertEquals(""incorrect consume remaining token"", ""--"", arg.getConsumeRemaining());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,54,ublic void testNullConsumeRemaining() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,55,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,56,his.argumentBuilder.withConsumeRemaining(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,57,"ail(""cannot use null consume remaining token"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,58, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,59,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,60,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_CONSUME_REMAINING),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,61,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,65,ublic void testEmptyConsumeRemaining() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,66,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,67,"his.argumentBuilder.withConsumeRemaining("""");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,68,"ail(""cannot use empty string consume remaining token"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,69, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,70,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,71,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_EMPTY_CONSUME_REMAINING),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,72,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,76,ublic void testDefault() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,77,"his.argumentBuilder.withDefault(""defaultString"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,78,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,80,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,82,"ssertEquals(""incorrect number of default values"", 1, arg.getDefaultValues().size());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,83,"ssertEquals(""incorrect default value"", ""defaultString"", arg.getDefaultValues().get(0));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,86,ublic void testDefaultX2() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,87,"his.argumentBuilder.withDefault(""defaultString1"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,88,"his.argumentBuilder.withDefault(""defaultString2"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,89,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,91,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,93,"ssertEquals(""incorrect number of default values"", 2, arg.getDefaultValues().size());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,94,"ssertEquals(""incorrect default value-1"", ""defaultString1"", arg.getDefaultValues().get(0));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,95,"ssertEquals(""incorrect default value-2"", ""defaultString2"", arg.getDefaultValues().get(1));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,98,ublic void testNullDefault() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,99,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,100,his.argumentBuilder.withDefault(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,101,"ail(""cannot use null default"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,102, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,103,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,104,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_DEFAULT),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,105,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,109,ublic void testDefaults() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,110,inal List defaults = new ArrayList();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,111,"efaults.add(""one"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,112,"efaults.add(""two"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,114,his.argumentBuilder.withDefaults(defaults);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,115,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,117,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,119,"ssertEquals(""incorrect number of default values"", 2, arg.getDefaultValues().size());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,120,"ssertEquals(""incorrect default value-1"", ""one"", arg.getDefaultValues().get(0));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,121,"ssertEquals(""incorrect default value-2"", ""two"", arg.getDefaultValues().get(1));"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,122,"ssertEquals(""incorrect default values list"", defaults, arg.getDefaultValues());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,126,ublic void testNullDefaults() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,127,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,128,his.argumentBuilder.withDefaults(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,129,"ail(""cannot use null defaults"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,130, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,131,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,132,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_DEFAULTS),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,133,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,137,ublic void testId() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,138,his.argumentBuilder.withId(1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,139,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,141,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,143,"ssertEquals(""incorrect id"", 1, arg.getId());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,146,ublic void testInitialSeparator() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,147,"his.argumentBuilder.withInitialSeparator(',');"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,148,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,150,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,152,"ssertEquals(""incorrect initial separator"", ',', arg.getInitialSeparator());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,155,ublic void testMaximum() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,156,his.argumentBuilder.withMaximum(1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,157,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,159,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,161,"ssertEquals(""incorrect maximum"", 1, arg.getMaximum());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,164,ublic void testNegativeMaximum() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,165,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,166,his.argumentBuilder.withMaximum(-1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,167,"ail(""cannot use negative maximum"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,168, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,169,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,170,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NEGATIVE_MAXIMUM),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,171,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,175,ublic void testMinimum() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,176,his.argumentBuilder.withMinimum(1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,177,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,179,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,181,"ssertEquals(""incorrect maximum"", 1, arg.getMinimum());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,184,ublic void testNegativeMinimum() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,185,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,186,his.argumentBuilder.withMinimum(-1);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,187,"ail(""cannot use negative minimum"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,188, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,189,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,190,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NEGATIVE_MINIMUM),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,191,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,195,ublic void testName() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,196,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,198,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,200,"ssertEquals(""incorrect preferred name"", ""arg"", arg.getPreferredName());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,203,ublic void testNullName() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,204,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,205,his.argumentBuilder.withName(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,206,"ail(""cannot use null name"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,207, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,208,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,209,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_NAME),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,210,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,214,ublic void testEmptyName() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,215,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,216,"his.argumentBuilder.withName("""");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,217,"ail(""cannot use empty name"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,218, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,219,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,220,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_EMPTY_NAME),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,221,xp.getMessage());
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,225,ublic void testSubsequentSeparator() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,226,his.argumentBuilder.withSubsequentSeparator(':');
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,227,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,229,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,231,"ssertEquals(""incorrect subsequent separator"", ':', arg.getSubsequentSeparator());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,234,ublic void testValidator() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,235,alidator validator = DateValidator.getDateInstance();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,236,his.argumentBuilder.withValidator(validator);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,237,"his.argumentBuilder.withName(""arg"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,239,rgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,241,"ssertEquals(""incorrect validator"", validator, arg.getValidator());"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,244,ublic void testNullValidator() {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,245,ry {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,246,his.argumentBuilder.withValidator(null);
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,247,"ail(""cannot use null validator"");"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,248, catch (IllegalArgumentException exp) {
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,249,"ssertEquals(""wrong exception message"","
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,250,"esources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_VALIDATOR),"
False,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,251,xp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,4,* distributed with this work for additional information
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,13,* software distributed under the License is distributed on an
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,16,* specific language governing permissions and limitations
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,17,* under the License.
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,19,package org.apache.commons.cli2.builder;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,21,import java.util.ArrayList;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,22,import java.util.List;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,24,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,26,import org.apache.commons.cli2.option.ArgumentImpl;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,27,import org.apache.commons.cli2.resource.ResourceConstants;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,28,import org.apache.commons.cli2.resource.ResourceHelper;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,29,import org.apache.commons.cli2.validation.DateValidator;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,30,import org.apache.commons.cli2.validation.Validator;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,32,public class ArgumentBuilderTest
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,33,extends TestCase {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,34,private static final ResourceHelper resources = ResourceHelper.getResourceHelper();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,35,private ArgumentBuilder argumentBuilder;
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,38,* @see TestCase#setUp()
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,40,protected void setUp()
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,41,throws Exception {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,42,this.argumentBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,45,public void testConsumeRemaining() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,46,"this.argumentBuilder.withConsumeRemaining(""--"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,47,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,49,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,51,"assertEquals(""incorrect consume remaining token"", ""--"", arg.getConsumeRemaining());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,54,public void testNullConsumeRemaining() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,55,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,56,this.argumentBuilder.withConsumeRemaining(null);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,57,"fail(""cannot use null consume remaining token"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,58,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,59,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,60,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_CONSUME_REMAINING),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,61,exp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,65,public void testEmptyConsumeRemaining() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,66,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,67,"this.argumentBuilder.withConsumeRemaining("""");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,68,"fail(""cannot use empty string consume remaining token"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,69,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,70,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,71,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_EMPTY_CONSUME_REMAINING),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,72,exp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,76,public void testDefault() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,77,"this.argumentBuilder.withDefault(""defaultString"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,78,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,80,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,82,"assertEquals(""incorrect number of default values"", 1, arg.getDefaultValues().size());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,83,"assertEquals(""incorrect default value"", ""defaultString"", arg.getDefaultValues().get(0));"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,86,public void testDefaultX2() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,87,"this.argumentBuilder.withDefault(""defaultString1"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,88,"this.argumentBuilder.withDefault(""defaultString2"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,89,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,91,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,93,"assertEquals(""incorrect number of default values"", 2, arg.getDefaultValues().size());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,94,"assertEquals(""incorrect default value-1"", ""defaultString1"", arg.getDefaultValues().get(0));"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,95,"assertEquals(""incorrect default value-2"", ""defaultString2"", arg.getDefaultValues().get(1));"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,98,public void testNullDefault() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,99,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,100,this.argumentBuilder.withDefault(null);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,101,"fail(""cannot use null default"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,102,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,103,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,104,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_DEFAULT),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,105,exp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,109,public void testDefaults() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,110,final List defaults = new ArrayList();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,111,"defaults.add(""one"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,112,"defaults.add(""two"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,114,this.argumentBuilder.withDefaults(defaults);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,115,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,117,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,119,"assertEquals(""incorrect number of default values"", 2, arg.getDefaultValues().size());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,120,"assertEquals(""incorrect default value-1"", ""one"", arg.getDefaultValues().get(0));"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,121,"assertEquals(""incorrect default value-2"", ""two"", arg.getDefaultValues().get(1));"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,122,"assertEquals(""incorrect default values list"", defaults, arg.getDefaultValues());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,126,public void testNullDefaults() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,127,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,128,this.argumentBuilder.withDefaults(null);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,129,"fail(""cannot use null defaults"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,130,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,131,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,132,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_DEFAULTS),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,133,exp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,137,public void testId() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,138,this.argumentBuilder.withId(1);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,139,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,141,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,143,"assertEquals(""incorrect id"", 1, arg.getId());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,146,public void testInitialSeparator() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,147,"this.argumentBuilder.withInitialSeparator(',');"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,148,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,150,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,152,"assertEquals(""incorrect initial separator"", ',', arg.getInitialSeparator());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,155,public void testMaximum() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,156,this.argumentBuilder.withMaximum(1);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,157,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,159,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,161,"assertEquals(""incorrect maximum"", 1, arg.getMaximum());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,164,public void testNegativeMaximum() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,165,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,166,this.argumentBuilder.withMaximum(-1);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,167,"fail(""cannot use negative maximum"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,168,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,169,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,170,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NEGATIVE_MAXIMUM),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,171,exp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,175,public void testMinimum() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,176,this.argumentBuilder.withMinimum(1);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,177,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,179,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,181,"assertEquals(""incorrect maximum"", 1, arg.getMinimum());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,184,public void testNegativeMinimum() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,185,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,186,this.argumentBuilder.withMinimum(-1);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,187,"fail(""cannot use negative minimum"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,188,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,189,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,190,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NEGATIVE_MINIMUM),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,191,exp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,195,public void testName() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,196,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,198,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,200,"assertEquals(""incorrect preferred name"", ""arg"", arg.getPreferredName());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,203,public void testNullName() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,204,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,205,this.argumentBuilder.withName(null);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,206,"fail(""cannot use null name"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,207,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,208,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,209,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_NAME),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,210,exp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,214,public void testEmptyName() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,215,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,216,"this.argumentBuilder.withName("""");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,217,"fail(""cannot use empty name"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,218,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,219,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,220,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_EMPTY_NAME),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,221,exp.getMessage());
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,225,public void testSubsequentSeparator() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,226,this.argumentBuilder.withSubsequentSeparator(':');
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,227,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,229,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,231,"assertEquals(""incorrect subsequent separator"", ':', arg.getSubsequentSeparator());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,234,public void testValidator() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,235,Validator validator = DateValidator.getDateInstance();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,236,this.argumentBuilder.withValidator(validator);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,237,"this.argumentBuilder.withName(""arg"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,239,ArgumentImpl arg = (ArgumentImpl) this.argumentBuilder.create();
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,241,"assertEquals(""incorrect validator"", validator, arg.getValidator());"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,244,public void testNullValidator() {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,245,try {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,246,this.argumentBuilder.withValidator(null);
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,247,"fail(""cannot use null validator"");"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,248,} catch (IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,249,"assertEquals(""wrong exception message"","
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,250,"resources.getMessage(ResourceConstants.ARGUMENT_BUILDER_NULL_VALIDATOR),"
True,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,src/test/org/apache/commons/cli2/builder/ArgumentBuilderTest.java,251,exp.getMessage());
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,9,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,17,ackage org.apache.commons.cli2.commandline;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,19,mport java.io.BufferedReader;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,20,mport java.io.IOException;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,21,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,22,mport java.io.StringReader;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,23,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,25,mport org.apache.commons.cli2.CommandLine;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,26,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,27,mport org.apache.commons.cli2.OptionException;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,28,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,29,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,30,mport org.apache.commons.cli2.option.DefaultOption;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,31,mport org.apache.commons.cli2.util.HelpFormatter;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,33,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,35,ublic class ParserTest extends TestCase {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,37,rivate Parser parser;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,38,rivate DefaultOption verboseOption;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,39,rivate DefaultOption helpOption;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,40,rivate Group options;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,41,rivate HelpFormatter helpFormatter;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,42,rivate StringWriter out;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,43,rivate BufferedReader in;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,45,ublic void setUp() {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,46,arser = new Parser();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,48,inal GroupBuilder gBuilder = new GroupBuilder();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,49,inal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,51,"elpOption = oBuilder.withLongName(""help"").withShortName(""h"").create();"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,52,"erboseOption = oBuilder.withLongName(""verbose"").withShortName(""v"").create();"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,53,ptions = gBuilder.withOption(helpOption).withOption(verboseOption).create();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,54,arser.setGroup(options);
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,56,elpFormatter = new HelpFormatter();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,57,ut = new StringWriter();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,58,elpFormatter.setPrintWriter(new PrintWriter(out));
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,59,arser.setHelpFormatter(helpFormatter);
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,62,ublic void testParse_Successful() throws OptionException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,63,"inal CommandLine cl = parser.parse(new String[]{""-hv""});"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,65,ssertTrue(cl.hasOption(helpOption));
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,66,ssertTrue(cl.hasOption(verboseOption));
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,68,"ssertEquals(""--help --verbose"",cl.toString());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,70,inal WriteableCommandLineImpl wcli = (WriteableCommandLineImpl)cl;
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,71,"ssertEquals(""[--help, --verbose]"",wcli.getNormalised().toString());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,74,ublic void testParse_WithUnexpectedOption() {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,75,ry {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,76,"arser.parse(new String[]{""--unexpected""});"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,77,"ail(""OptionException"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,79,atch(OptionException e) {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,80,"ssertEquals(options,e.getOption());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,81,"ssertEquals(""Unexpected --unexpected while processing --help|--verbose"",e.getMessage());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,85,ublic void testParseAndHelp_Successful() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,86,"inal CommandLine cl = parser.parseAndHelp(new String[]{""-v""});"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,88,ssertTrue(cl.hasOption(verboseOption));
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,89,"ssertEquals("""",out.getBuffer().toString());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,92,ublic void testParseAndHelp_ByHelpOption() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,93,arser.setHelpOption(helpOption);
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,95,"ssertNull(parser.parseAndHelp(new String[]{""-hv""}));"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,97,nReader();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,98,ssertInReaderUsage();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,99,ssertInReaderEOF();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,102,ublic void testParseAndHelp_ByHelpTrigger() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,103,"arser.setHelpTrigger(""--help"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,105,"ssertNull(parser.parseAndHelp(new String[]{""-hv""}));"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,107,nReader();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,108,ssertInReaderUsage();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,109,ssertInReaderEOF();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,112,ublic void testParseAndHelp_WithUnexpectedOption() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,113,"ssertNull(parser.parseAndHelp(new String[]{""--unexpected""}));"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,115,nReader();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,116,"ssertInReaderLine(""Unexpected --unexpected while processing --help|--verbose"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,117,ssertInReaderUsage();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,118,ssertInReaderEOF();
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,121,rivate void assertInReaderUsage() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,122,"ssertInReaderLine(""Usage:"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,123,"ssertInReaderLine(""[--help --verbose]"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,124,"ssertInReaderLine(""--help|--verbose"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,125,"ssertInReaderLine(""--help (-h)"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,126,"ssertInReaderLine(""--verbose (-v)"");"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,129,rivate void assertInReaderLine(final String string) throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,130,"ssertEquals(string,in.readLine().trim());"
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,133,rivate void assertInReaderEOF() throws IOException {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,134,ssertNull(in.readLine());
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,137,rivate void inReader() {
False,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,138,n = new BufferedReader(new StringReader(out.getBuffer().toString()));
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,17,package org.apache.commons.cli2.commandline;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,19,import java.io.BufferedReader;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,20,import java.io.IOException;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,21,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,22,import java.io.StringReader;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,23,import java.io.StringWriter;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,25,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,26,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,27,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,28,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,29,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,30,import org.apache.commons.cli2.option.DefaultOption;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,31,import org.apache.commons.cli2.util.HelpFormatter;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,33,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,35,public class ParserTest extends TestCase {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,37,private Parser parser;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,38,private DefaultOption verboseOption;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,39,private DefaultOption helpOption;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,40,private Group options;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,41,private HelpFormatter helpFormatter;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,42,private StringWriter out;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,43,private BufferedReader in;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,45,public void setUp() {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,46,parser = new Parser();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,48,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,49,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,51,"helpOption = oBuilder.withLongName(""help"").withShortName(""h"").create();"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,52,"verboseOption = oBuilder.withLongName(""verbose"").withShortName(""v"").create();"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,53,options = gBuilder.withOption(helpOption).withOption(verboseOption).create();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,54,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,56,helpFormatter = new HelpFormatter();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,57,out = new StringWriter();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,58,helpFormatter.setPrintWriter(new PrintWriter(out));
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,59,parser.setHelpFormatter(helpFormatter);
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,62,public void testParse_Successful() throws OptionException {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,63,"final CommandLine cl = parser.parse(new String[]{""-hv""});"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,65,assertTrue(cl.hasOption(helpOption));
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,66,assertTrue(cl.hasOption(verboseOption));
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,68,"assertEquals(""--help --verbose"",cl.toString());"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,70,final WriteableCommandLineImpl wcli = (WriteableCommandLineImpl)cl;
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,71,"assertEquals(""[--help, --verbose]"",wcli.getNormalised().toString());"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,74,public void testParse_WithUnexpectedOption() {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,75,try {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,76,"parser.parse(new String[]{""--unexpected""});"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,77,"fail(""OptionException"");"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,79,catch(OptionException e) {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,80,"assertEquals(options,e.getOption());"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,81,"assertEquals(""Unexpected --unexpected while processing --help|--verbose"",e.getMessage());"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,85,public void testParseAndHelp_Successful() throws IOException {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,86,"final CommandLine cl = parser.parseAndHelp(new String[]{""-v""});"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,88,assertTrue(cl.hasOption(verboseOption));
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,89,"assertEquals("""",out.getBuffer().toString());"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,92,public void testParseAndHelp_ByHelpOption() throws IOException {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,93,parser.setHelpOption(helpOption);
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,95,"assertNull(parser.parseAndHelp(new String[]{""-hv""}));"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,97,inReader();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,98,assertInReaderUsage();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,99,assertInReaderEOF();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,102,public void testParseAndHelp_ByHelpTrigger() throws IOException {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,103,"parser.setHelpTrigger(""--help"");"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,105,"assertNull(parser.parseAndHelp(new String[]{""-hv""}));"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,107,inReader();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,108,assertInReaderUsage();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,109,assertInReaderEOF();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,112,public void testParseAndHelp_WithUnexpectedOption() throws IOException {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,113,"assertNull(parser.parseAndHelp(new String[]{""--unexpected""}));"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,115,inReader();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,116,"assertInReaderLine(""Unexpected --unexpected while processing --help|--verbose"");"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,117,assertInReaderUsage();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,118,assertInReaderEOF();
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,121,private void assertInReaderUsage() throws IOException {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,122,"assertInReaderLine(""Usage:"");"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,123,"assertInReaderLine(""[--help --verbose]"");"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,124,"assertInReaderLine(""--help|--verbose"");"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,125,"assertInReaderLine(""--help (-h)"");"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,126,"assertInReaderLine(""--verbose (-v)"");"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,129,private void assertInReaderLine(final String string) throws IOException {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,130,"assertEquals(string,in.readLine().trim());"
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,133,private void assertInReaderEOF() throws IOException {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,134,assertNull(in.readLine());
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,137,private void inReader() {
True,src/test/org/apache/commons/cli2/commandline/ParserTest.java,src/test/org/apache/commons/cli2/commandline/ParserTest.java,138,in = new BufferedReader(new StringReader(out.getBuffer().toString()));
