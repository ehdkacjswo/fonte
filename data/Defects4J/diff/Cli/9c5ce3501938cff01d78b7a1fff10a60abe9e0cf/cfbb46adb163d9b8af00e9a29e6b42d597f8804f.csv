is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,23,import java.util.List;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,34,rivate ArrayList tokens = new ArrayList();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,36,private List tokens = new ArrayList();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,46, <p>Resets the members to their original state i.e. remove
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,48,* Resets the members to their original state i.e. remove
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,48, to false and set <code>currentOption</code> to null.</p>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,50,* to false and set <code>currentOption</code> to null.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,95,"rotected String[] flatten(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,96,oolean stopAtNonOption)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,97,"protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,103,tring token;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,109,oken = (String) iter.next();
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,109,String token = (String) iter.next();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,117,"okens.add(token.substring(token.indexOf('=') + 1,"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,118,oken.length()));
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,117,"tokens.add(token.substring(token.indexOf('=') + 1, token.length()));"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,139,lse if (options.hasOption(token)) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,140,okens.add(token);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,138,else if (options.hasOption(token))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,140,tokens.add(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,167, <p>Adds the remaining tokens to the processed tokens list.</p>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,167,* Adds the remaining tokens to the processed tokens list.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,197,f ((currentOption != null) && currentOption.hasArg())
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,199,if (currentOption != null && currentOption.hasArg())
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,218, <p>If it is a hyphen then add the hyphen directly to
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,219, the processed tokens list.</p>
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,220,* If it is a hyphen then add the hyphen directly to
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,221,* the processed tokens list.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,281,nt tokenLength = token.length();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,283,or (int i = 1; i < tokenLength; i++)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,284,for (int i = 1; i < token.length(); i++)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,286,oolean hasOption = options.hasOption(ch);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,288,f (hasOption)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,288,if (options.hasOption(ch))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,303,break;
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,133,public void testStopBursting() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,135,"String[] args = new String[] { ""-azc"" };"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,137,"CommandLine cl = parser.parse(options, args, true);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,138,"assertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,139,"assertFalse( ""Confirm -c is not set"", cl.hasOption(""c"") );"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,141,"assertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,142,"assertTrue(cl.getArgList().contains(""zc""));"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,158,"ommandLine cl = parser.parse(options,args,"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,159,rue);
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,170,"CommandLine cl = parser.parse(options,args, true);"
